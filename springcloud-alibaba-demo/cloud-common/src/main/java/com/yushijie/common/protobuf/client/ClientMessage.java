// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: client/ClientMessage.proto

package com.yushijie.common.protobuf.client;

public final class ClientMessage {
    private ClientMessage() {}
    public static void registerAllExtensions(
            com.google.protobuf.ExtensionRegistryLite registry) {
    }

    public static void registerAllExtensions(
            com.google.protobuf.ExtensionRegistry registry) {
        registerAllExtensions(
                (com.google.protobuf.ExtensionRegistryLite) registry);
    }
    /**
     * <pre>
     *块设备类型枚举
     * </pre>
     *
     * Protobuf enum {@code one2data.rbtmqmsgcli.client.BlockDeviceType}
     */
    public enum BlockDeviceType
            implements com.google.protobuf.ProtocolMessageEnum {
        /**
         * <code>BDT_HARDDISK = 0;</code>
         */
        BDT_HARDDISK(0),
        /**
         * <code>BDT_PARTITION = 1;</code>
         */
        BDT_PARTITION(1),
        /**
         * <code>BDT_LV = 2;</code>
         */
        BDT_LV(2),
        UNRECOGNIZED(-1),
        ;

        /**
         * <code>BDT_HARDDISK = 0;</code>
         */
        public static final int BDT_HARDDISK_VALUE = 0;
        /**
         * <code>BDT_PARTITION = 1;</code>
         */
        public static final int BDT_PARTITION_VALUE = 1;
        /**
         * <code>BDT_LV = 2;</code>
         */
        public static final int BDT_LV_VALUE = 2;


        public final int getNumber() {
            if (this == UNRECOGNIZED) {
                throw new IllegalArgumentException(
                        "Can't get the number of an unknown enum value.");
            }
            return value;
        }

        /**
         * @deprecated Use {@link #forNumber(int)} instead.
         */
        @Deprecated
        public static BlockDeviceType valueOf(int value) {
            return forNumber(value);
        }

        public static BlockDeviceType forNumber(int value) {
            switch (value) {
                case 0: return BDT_HARDDISK;
                case 1: return BDT_PARTITION;
                case 2: return BDT_LV;
                default: return null;
            }
        }

        public static com.google.protobuf.Internal.EnumLiteMap<BlockDeviceType>
        internalGetValueMap() {
            return internalValueMap;
        }
        private static final com.google.protobuf.Internal.EnumLiteMap<
                BlockDeviceType> internalValueMap =
                new com.google.protobuf.Internal.EnumLiteMap<BlockDeviceType>() {
                    public BlockDeviceType findValueByNumber(int number) {
                        return BlockDeviceType.forNumber(number);
                    }
                };

        public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
            return getDescriptor().getValues().get(ordinal());
        }
        public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
            return getDescriptor();
        }
        public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
            return cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.getDescriptor().getEnumTypes().get(0);
        }

        private static final BlockDeviceType[] VALUES = values();

        public static BlockDeviceType valueOf(
                com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
            if (desc.getType() != getDescriptor()) {
                throw new IllegalArgumentException(
                        "EnumValueDescriptor is not for this type.");
            }
            if (desc.getIndex() == -1) {
                return UNRECOGNIZED;
            }
            return VALUES[desc.getIndex()];
        }

        private final int value;

        private BlockDeviceType(int value) {
            this.value = value;
        }

        // @@protoc_insertion_point(enum_scope:one2data.rbtmqmsgcli.client.BlockDeviceType)
    }

    /**
     * <pre>
     *分区表类型枚举
     * </pre>
     *
     * Protobuf enum {@code one2data.rbtmqmsgcli.client.PartTableType}
     */
    public enum PartTableType
            implements com.google.protobuf.ProtocolMessageEnum {
        /**
         * <code>PTT_UNKNOWN = 0;</code>
         */
        PTT_UNKNOWN(0),
        /**
         * <pre>
         *即MBR
         * </pre>
         *
         * <code>PTT_DOS = 1;</code>
         */
        PTT_DOS(1),
        /**
         * <code>PTT_GPT = 2;</code>
         */
        PTT_GPT(2),
        UNRECOGNIZED(-1),
        ;

        /**
         * <code>PTT_UNKNOWN = 0;</code>
         */
        public static final int PTT_UNKNOWN_VALUE = 0;
        /**
         * <pre>
         *即MBR
         * </pre>
         *
         * <code>PTT_DOS = 1;</code>
         */
        public static final int PTT_DOS_VALUE = 1;
        /**
         * <code>PTT_GPT = 2;</code>
         */
        public static final int PTT_GPT_VALUE = 2;


        public final int getNumber() {
            if (this == UNRECOGNIZED) {
                throw new IllegalArgumentException(
                        "Can't get the number of an unknown enum value.");
            }
            return value;
        }

        /**
         * @deprecated Use {@link #forNumber(int)} instead.
         */
        @Deprecated
        public static PartTableType valueOf(int value) {
            return forNumber(value);
        }

        public static PartTableType forNumber(int value) {
            switch (value) {
                case 0: return PTT_UNKNOWN;
                case 1: return PTT_DOS;
                case 2: return PTT_GPT;
                default: return null;
            }
        }

        public static com.google.protobuf.Internal.EnumLiteMap<PartTableType>
        internalGetValueMap() {
            return internalValueMap;
        }
        private static final com.google.protobuf.Internal.EnumLiteMap<
                PartTableType> internalValueMap =
                new com.google.protobuf.Internal.EnumLiteMap<PartTableType>() {
                    public PartTableType findValueByNumber(int number) {
                        return PartTableType.forNumber(number);
                    }
                };

        public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
            return getDescriptor().getValues().get(ordinal());
        }
        public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
            return getDescriptor();
        }
        public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
            return cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.getDescriptor().getEnumTypes().get(1);
        }

        private static final PartTableType[] VALUES = values();

        public static PartTableType valueOf(
                com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
            if (desc.getType() != getDescriptor()) {
                throw new IllegalArgumentException(
                        "EnumValueDescriptor is not for this type.");
            }
            if (desc.getIndex() == -1) {
                return UNRECOGNIZED;
            }
            return VALUES[desc.getIndex()];
        }

        private final int value;

        private PartTableType(int value) {
            this.value = value;
        }

        // @@protoc_insertion_point(enum_scope:one2data.rbtmqmsgcli.client.PartTableType)
    }

    /**
     * <pre>
     *设备分区和磁盘的备份状态
     * </pre>
     *
     * Protobuf enum {@code one2data.rbtmqmsgcli.client.BackupState}
     */
    public enum BackupState
            implements com.google.protobuf.ProtocolMessageEnum {
        /**
         * <pre>
         *初始状态
         * </pre>
         *
         * <code>BS_INITIAL = 0;</code>
         */
        BS_INITIAL(0),
        /**
         * <pre>
         *空闲状态
         * </pre>
         *
         * <code>BS_IDLE = 1;</code>
         */
        BS_IDLE(1),
        /**
         * <pre>
         *全盘镜像中
         * </pre>
         *
         * <code>BS_FULL_MIRRORING = 2;</code>
         */
        BS_FULL_MIRRORING(2),
        /**
         * <pre>
         *数据同步中
         * </pre>
         *
         * <code>BS_SYNCHRONIZING = 3;</code>
         */
        BS_SYNCHRONIZING(3),
        /**
         * <pre>
         *数据校验中
         * </pre>
         *
         * <code>BS_CHECKING = 4;</code>
         */
        BS_CHECKING(4),
        /**
         * <pre>
         *等待备份(全盘镜像,数据校验,数据同步)中
         * </pre>
         *
         * <code>BS_QUEUE = 5;</code>
         */
        BS_QUEUE(5),
        UNRECOGNIZED(-1),
        ;

        /**
         * <pre>
         *初始状态
         * </pre>
         *
         * <code>BS_INITIAL = 0;</code>
         */
        public static final int BS_INITIAL_VALUE = 0;
        /**
         * <pre>
         *空闲状态
         * </pre>
         *
         * <code>BS_IDLE = 1;</code>
         */
        public static final int BS_IDLE_VALUE = 1;
        /**
         * <pre>
         *全盘镜像中
         * </pre>
         *
         * <code>BS_FULL_MIRRORING = 2;</code>
         */
        public static final int BS_FULL_MIRRORING_VALUE = 2;
        /**
         * <pre>
         *数据同步中
         * </pre>
         *
         * <code>BS_SYNCHRONIZING = 3;</code>
         */
        public static final int BS_SYNCHRONIZING_VALUE = 3;
        /**
         * <pre>
         *数据校验中
         * </pre>
         *
         * <code>BS_CHECKING = 4;</code>
         */
        public static final int BS_CHECKING_VALUE = 4;
        /**
         * <pre>
         *等待备份(全盘镜像,数据校验,数据同步)中
         * </pre>
         *
         * <code>BS_QUEUE = 5;</code>
         */
        public static final int BS_QUEUE_VALUE = 5;


        public final int getNumber() {
            if (this == UNRECOGNIZED) {
                throw new IllegalArgumentException(
                        "Can't get the number of an unknown enum value.");
            }
            return value;
        }

        /**
         * @deprecated Use {@link #forNumber(int)} instead.
         */
        @Deprecated
        public static BackupState valueOf(int value) {
            return forNumber(value);
        }

        public static BackupState forNumber(int value) {
            switch (value) {
                case 0: return BS_INITIAL;
                case 1: return BS_IDLE;
                case 2: return BS_FULL_MIRRORING;
                case 3: return BS_SYNCHRONIZING;
                case 4: return BS_CHECKING;
                case 5: return BS_QUEUE;
                default: return null;
            }
        }

        public static com.google.protobuf.Internal.EnumLiteMap<BackupState>
        internalGetValueMap() {
            return internalValueMap;
        }
        private static final com.google.protobuf.Internal.EnumLiteMap<
                BackupState> internalValueMap =
                new com.google.protobuf.Internal.EnumLiteMap<BackupState>() {
                    public BackupState findValueByNumber(int number) {
                        return BackupState.forNumber(number);
                    }
                };

        public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
            return getDescriptor().getValues().get(ordinal());
        }
        public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
            return getDescriptor();
        }
        public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
            return cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.getDescriptor().getEnumTypes().get(2);
        }

        private static final BackupState[] VALUES = values();

        public static BackupState valueOf(
                com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
            if (desc.getType() != getDescriptor()) {
                throw new IllegalArgumentException(
                        "EnumValueDescriptor is not for this type.");
            }
            if (desc.getIndex() == -1) {
                return UNRECOGNIZED;
            }
            return VALUES[desc.getIndex()];
        }

        private final int value;

        private BackupState(int value) {
            this.value = value;
        }

        // @@protoc_insertion_point(enum_scope:one2data.rbtmqmsgcli.client.BackupState)
    }

    /**
     * Protobuf enum {@code one2data.rbtmqmsgcli.client.ClusterType}
     */
    public enum ClusterType
            implements com.google.protobuf.ProtocolMessageEnum {
        /**
         * <pre>
         *普通设备,非集群
         * </pre>
         *
         * <code>CT_NORMAL = 0;</code>
         */
        CT_NORMAL(0),
        /**
         * <pre>
         *RAC
         * </pre>
         *
         * <code>CT_ORACLE_RAC = 1;</code>
         */
        CT_ORACLE_RAC(1),
        /**
         * <pre>
         *MSCS 集群
         * </pre>
         *
         * <code>CT_MSCS = 2;</code>
         */
        CT_MSCS(2),
        UNRECOGNIZED(-1),
        ;

        /**
         * <pre>
         *普通设备,非集群
         * </pre>
         *
         * <code>CT_NORMAL = 0;</code>
         */
        public static final int CT_NORMAL_VALUE = 0;
        /**
         * <pre>
         *RAC
         * </pre>
         *
         * <code>CT_ORACLE_RAC = 1;</code>
         */
        public static final int CT_ORACLE_RAC_VALUE = 1;
        /**
         * <pre>
         *MSCS 集群
         * </pre>
         *
         * <code>CT_MSCS = 2;</code>
         */
        public static final int CT_MSCS_VALUE = 2;


        public final int getNumber() {
            if (this == UNRECOGNIZED) {
                throw new IllegalArgumentException(
                        "Can't get the number of an unknown enum value.");
            }
            return value;
        }

        /**
         * @deprecated Use {@link #forNumber(int)} instead.
         */
        @Deprecated
        public static ClusterType valueOf(int value) {
            return forNumber(value);
        }

        public static ClusterType forNumber(int value) {
            switch (value) {
                case 0: return CT_NORMAL;
                case 1: return CT_ORACLE_RAC;
                case 2: return CT_MSCS;
                default: return null;
            }
        }

        public static com.google.protobuf.Internal.EnumLiteMap<ClusterType>
        internalGetValueMap() {
            return internalValueMap;
        }
        private static final com.google.protobuf.Internal.EnumLiteMap<
                ClusterType> internalValueMap =
                new com.google.protobuf.Internal.EnumLiteMap<ClusterType>() {
                    public ClusterType findValueByNumber(int number) {
                        return ClusterType.forNumber(number);
                    }
                };

        public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
            return getDescriptor().getValues().get(ordinal());
        }
        public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
            return getDescriptor();
        }
        public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
            return cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.getDescriptor().getEnumTypes().get(3);
        }

        private static final ClusterType[] VALUES = values();

        public static ClusterType valueOf(
                com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
            if (desc.getType() != getDescriptor()) {
                throw new IllegalArgumentException(
                        "EnumValueDescriptor is not for this type.");
            }
            if (desc.getIndex() == -1) {
                return UNRECOGNIZED;
            }
            return VALUES[desc.getIndex()];
        }

        private final int value;

        private ClusterType(int value) {
            this.value = value;
        }

        // @@protoc_insertion_point(enum_scope:one2data.rbtmqmsgcli.client.ClusterType)
    }

    public interface VerifyNodeInfoReportOrBuilder extends
            // @@protoc_insertion_point(interface_extends:one2data.rbtmqmsgcli.client.VerifyNodeInfoReport)
            com.google.protobuf.MessageOrBuilder {

        /**
         * <pre>
         * 验证机唯一 uuid
         * </pre>
         *
         * <code>optional string device_uuid_key = 1;</code>
         */
        String getDeviceUuidKey();
        /**
         * <pre>
         * 验证机唯一 uuid
         * </pre>
         *
         * <code>optional string device_uuid_key = 1;</code>
         */
        com.google.protobuf.ByteString
        getDeviceUuidKeyBytes();

        /**
         * <pre>
         *设备网卡信息
         * </pre>
         *
         * <code>repeated .one2data.rbtmqmsgcli.common.NetCardInfo net_card = 2;</code>
         */
        java.util.List<cn.keptdata.one2data.header.message.protobuf.common.Node.NetCardInfo>
        getNetCardList();
        /**
         * <pre>
         *设备网卡信息
         * </pre>
         *
         * <code>repeated .one2data.rbtmqmsgcli.common.NetCardInfo net_card = 2;</code>
         */
        cn.keptdata.one2data.header.message.protobuf.common.Node.NetCardInfo getNetCard(int index);
        /**
         * <pre>
         *设备网卡信息
         * </pre>
         *
         * <code>repeated .one2data.rbtmqmsgcli.common.NetCardInfo net_card = 2;</code>
         */
        int getNetCardCount();
        /**
         * <pre>
         *设备网卡信息
         * </pre>
         *
         * <code>repeated .one2data.rbtmqmsgcli.common.NetCardInfo net_card = 2;</code>
         */
        java.util.List<? extends cn.keptdata.one2data.header.message.protobuf.common.Node.NetCardInfoOrBuilder>
        getNetCardOrBuilderList();
        /**
         * <pre>
         *设备网卡信息
         * </pre>
         *
         * <code>repeated .one2data.rbtmqmsgcli.common.NetCardInfo net_card = 2;</code>
         */
        cn.keptdata.one2data.header.message.protobuf.common.Node.NetCardInfoOrBuilder getNetCardOrBuilder(
                int index);
    }
    /**
     * <pre>
     *************验证机客户端节点信息上报******************
     * </pre>
     *
     * Protobuf type {@code one2data.rbtmqmsgcli.client.VerifyNodeInfoReport}
     */
    public  static final class VerifyNodeInfoReport extends
            com.google.protobuf.GeneratedMessageV3 implements
            // @@protoc_insertion_point(message_implements:one2data.rbtmqmsgcli.client.VerifyNodeInfoReport)
            VerifyNodeInfoReportOrBuilder {
        // Use VerifyNodeInfoReport.newBuilder() to construct.
        private VerifyNodeInfoReport(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
            super(builder);
        }
        private VerifyNodeInfoReport() {
            deviceUuidKey_ = "";
            netCard_ = java.util.Collections.emptyList();
        }

        @Override
        public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
            return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
        }
        private VerifyNodeInfoReport(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            this();
            int mutable_bitField0_ = 0;
            try {
                boolean done = false;
                while (!done) {
                    int tag = input.readTag();
                    switch (tag) {
                        case 0:
                            done = true;
                            break;
                        default: {
                            if (!input.skipField(tag)) {
                                done = true;
                            }
                            break;
                        }
                        case 10: {
                            String s = input.readStringRequireUtf8();

                            deviceUuidKey_ = s;
                            break;
                        }
                        case 18: {
                            if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                                netCard_ = new java.util.ArrayList<cn.keptdata.one2data.header.message.protobuf.common.Node.NetCardInfo>();
                                mutable_bitField0_ |= 0x00000002;
                            }
                            netCard_.add(
                                    input.readMessage(cn.keptdata.one2data.header.message.protobuf.common.Node.NetCardInfo.parser(), extensionRegistry));
                            break;
                        }
                    }
                }
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(this);
            } catch (java.io.IOException e) {
                throw new com.google.protobuf.InvalidProtocolBufferException(
                        e).setUnfinishedMessage(this);
            } finally {
                if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                    netCard_ = java.util.Collections.unmodifiableList(netCard_);
                }
                makeExtensionsImmutable();
            }
        }
        public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
            return cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.internal_static_one2data_rbtmqmsgcli_client_VerifyNodeInfoReport_descriptor;
        }

        protected FieldAccessorTable
        internalGetFieldAccessorTable() {
            return cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.internal_static_one2data_rbtmqmsgcli_client_VerifyNodeInfoReport_fieldAccessorTable
                    .ensureFieldAccessorsInitialized(
                            cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.VerifyNodeInfoReport.class, cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.VerifyNodeInfoReport.Builder.class);
        }

        private int bitField0_;
        public static final int DEVICE_UUID_KEY_FIELD_NUMBER = 1;
        private volatile Object deviceUuidKey_;
        /**
         * <pre>
         * 验证机唯一 uuid
         * </pre>
         *
         * <code>optional string device_uuid_key = 1;</code>
         */
        public String getDeviceUuidKey() {
            Object ref = deviceUuidKey_;
            if (ref instanceof String) {
                return (String) ref;
            } else {
                com.google.protobuf.ByteString bs =
                        (com.google.protobuf.ByteString) ref;
                String s = bs.toStringUtf8();
                deviceUuidKey_ = s;
                return s;
            }
        }
        /**
         * <pre>
         * 验证机唯一 uuid
         * </pre>
         *
         * <code>optional string device_uuid_key = 1;</code>
         */
        public com.google.protobuf.ByteString
        getDeviceUuidKeyBytes() {
            Object ref = deviceUuidKey_;
            if (ref instanceof String) {
                com.google.protobuf.ByteString b =
                        com.google.protobuf.ByteString.copyFromUtf8(
                                (String) ref);
                deviceUuidKey_ = b;
                return b;
            } else {
                return (com.google.protobuf.ByteString) ref;
            }
        }

        public static final int NET_CARD_FIELD_NUMBER = 2;
        private java.util.List<cn.keptdata.one2data.header.message.protobuf.common.Node.NetCardInfo> netCard_;
        /**
         * <pre>
         *设备网卡信息
         * </pre>
         *
         * <code>repeated .one2data.rbtmqmsgcli.common.NetCardInfo net_card = 2;</code>
         */
        public java.util.List<cn.keptdata.one2data.header.message.protobuf.common.Node.NetCardInfo> getNetCardList() {
            return netCard_;
        }
        /**
         * <pre>
         *设备网卡信息
         * </pre>
         *
         * <code>repeated .one2data.rbtmqmsgcli.common.NetCardInfo net_card = 2;</code>
         */
        public java.util.List<? extends cn.keptdata.one2data.header.message.protobuf.common.Node.NetCardInfoOrBuilder>
        getNetCardOrBuilderList() {
            return netCard_;
        }
        /**
         * <pre>
         *设备网卡信息
         * </pre>
         *
         * <code>repeated .one2data.rbtmqmsgcli.common.NetCardInfo net_card = 2;</code>
         */
        public int getNetCardCount() {
            return netCard_.size();
        }
        /**
         * <pre>
         *设备网卡信息
         * </pre>
         *
         * <code>repeated .one2data.rbtmqmsgcli.common.NetCardInfo net_card = 2;</code>
         */
        public cn.keptdata.one2data.header.message.protobuf.common.Node.NetCardInfo getNetCard(int index) {
            return netCard_.get(index);
        }
        /**
         * <pre>
         *设备网卡信息
         * </pre>
         *
         * <code>repeated .one2data.rbtmqmsgcli.common.NetCardInfo net_card = 2;</code>
         */
        public cn.keptdata.one2data.header.message.protobuf.common.Node.NetCardInfoOrBuilder getNetCardOrBuilder(
                int index) {
            return netCard_.get(index);
        }

        private byte memoizedIsInitialized = -1;
        public final boolean isInitialized() {
            byte isInitialized = memoizedIsInitialized;
            if (isInitialized == 1) return true;
            if (isInitialized == 0) return false;

            memoizedIsInitialized = 1;
            return true;
        }

        public void writeTo(com.google.protobuf.CodedOutputStream output)
                throws java.io.IOException {
            if (!getDeviceUuidKeyBytes().isEmpty()) {
                com.google.protobuf.GeneratedMessageV3.writeString(output, 1, deviceUuidKey_);
            }
            for (int i = 0; i < netCard_.size(); i++) {
                output.writeMessage(2, netCard_.get(i));
            }
        }

        public int getSerializedSize() {
            int size = memoizedSize;
            if (size != -1) return size;

            size = 0;
            if (!getDeviceUuidKeyBytes().isEmpty()) {
                size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, deviceUuidKey_);
            }
            for (int i = 0; i < netCard_.size(); i++) {
                size += com.google.protobuf.CodedOutputStream
                        .computeMessageSize(2, netCard_.get(i));
            }
            memoizedSize = size;
            return size;
        }

        private static final long serialVersionUID = 0L;
        @Override
        public boolean equals(final Object obj) {
            if (obj == this) {
                return true;
            }
            if (!(obj instanceof cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.VerifyNodeInfoReport)) {
                return super.equals(obj);
            }
            cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.VerifyNodeInfoReport other = (cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.VerifyNodeInfoReport) obj;

            boolean result = true;
            result = result && getDeviceUuidKey()
                    .equals(other.getDeviceUuidKey());
            result = result && getNetCardList()
                    .equals(other.getNetCardList());
            return result;
        }

        @Override
        public int hashCode() {
            if (memoizedHashCode != 0) {
                return memoizedHashCode;
            }
            int hash = 41;
            hash = (19 * hash) + getDescriptorForType().hashCode();
            hash = (37 * hash) + DEVICE_UUID_KEY_FIELD_NUMBER;
            hash = (53 * hash) + getDeviceUuidKey().hashCode();
            if (getNetCardCount() > 0) {
                hash = (37 * hash) + NET_CARD_FIELD_NUMBER;
                hash = (53 * hash) + getNetCardList().hashCode();
            }
            hash = (29 * hash) + unknownFields.hashCode();
            memoizedHashCode = hash;
            return hash;
        }

        public static cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.VerifyNodeInfoReport parseFrom(
                com.google.protobuf.ByteString data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }
        public static cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.VerifyNodeInfoReport parseFrom(
                com.google.protobuf.ByteString data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }
        public static cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.VerifyNodeInfoReport parseFrom(byte[] data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }
        public static cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.VerifyNodeInfoReport parseFrom(
                byte[] data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }
        public static cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.VerifyNodeInfoReport parseFrom(java.io.InputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input);
        }
        public static cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.VerifyNodeInfoReport parseFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input, extensionRegistry);
        }
        public static cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.VerifyNodeInfoReport parseDelimitedFrom(java.io.InputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseDelimitedWithIOException(PARSER, input);
        }
        public static cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.VerifyNodeInfoReport parseDelimitedFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
        }
        public static cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.VerifyNodeInfoReport parseFrom(
                com.google.protobuf.CodedInputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input);
        }
        public static cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.VerifyNodeInfoReport parseFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input, extensionRegistry);
        }

        public Builder newBuilderForType() { return newBuilder(); }
        public static Builder newBuilder() {
            return DEFAULT_INSTANCE.toBuilder();
        }
        public static Builder newBuilder(cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.VerifyNodeInfoReport prototype) {
            return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }
        public Builder toBuilder() {
            return this == DEFAULT_INSTANCE
                    ? new Builder() : new Builder().mergeFrom(this);
        }

        @Override
        protected Builder newBuilderForType(
                BuilderParent parent) {
            Builder builder = new Builder(parent);
            return builder;
        }
        /**
         * <pre>
         *************验证机客户端节点信息上报******************
         * </pre>
         *
         * Protobuf type {@code one2data.rbtmqmsgcli.client.VerifyNodeInfoReport}
         */
        public static final class Builder extends
                com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
                // @@protoc_insertion_point(builder_implements:one2data.rbtmqmsgcli.client.VerifyNodeInfoReport)
                cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.VerifyNodeInfoReportOrBuilder {
            public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
                return cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.internal_static_one2data_rbtmqmsgcli_client_VerifyNodeInfoReport_descriptor;
            }

            protected FieldAccessorTable
            internalGetFieldAccessorTable() {
                return cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.internal_static_one2data_rbtmqmsgcli_client_VerifyNodeInfoReport_fieldAccessorTable
                        .ensureFieldAccessorsInitialized(
                                cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.VerifyNodeInfoReport.class, cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.VerifyNodeInfoReport.Builder.class);
            }

            // Construct using cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.VerifyNodeInfoReport.newBuilder()
            private Builder() {
                maybeForceBuilderInitialization();
            }

            private Builder(
                    BuilderParent parent) {
                super(parent);
                maybeForceBuilderInitialization();
            }
            private void maybeForceBuilderInitialization() {
                if (com.google.protobuf.GeneratedMessageV3
                        .alwaysUseFieldBuilders) {
                    getNetCardFieldBuilder();
                }
            }
            public Builder clear() {
                super.clear();
                deviceUuidKey_ = "";

                if (netCardBuilder_ == null) {
                    netCard_ = java.util.Collections.emptyList();
                    bitField0_ = (bitField0_ & ~0x00000002);
                } else {
                    netCardBuilder_.clear();
                }
                return this;
            }

            public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
                return cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.internal_static_one2data_rbtmqmsgcli_client_VerifyNodeInfoReport_descriptor;
            }

            public cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.VerifyNodeInfoReport getDefaultInstanceForType() {
                return cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.VerifyNodeInfoReport.getDefaultInstance();
            }

            public cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.VerifyNodeInfoReport build() {
                cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.VerifyNodeInfoReport result = buildPartial();
                if (!result.isInitialized()) {
                    throw newUninitializedMessageException(result);
                }
                return result;
            }

            public cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.VerifyNodeInfoReport buildPartial() {
                cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.VerifyNodeInfoReport result = new cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.VerifyNodeInfoReport(this);
                int from_bitField0_ = bitField0_;
                int to_bitField0_ = 0;
                result.deviceUuidKey_ = deviceUuidKey_;
                if (netCardBuilder_ == null) {
                    if (((bitField0_ & 0x00000002) == 0x00000002)) {
                        netCard_ = java.util.Collections.unmodifiableList(netCard_);
                        bitField0_ = (bitField0_ & ~0x00000002);
                    }
                    result.netCard_ = netCard_;
                } else {
                    result.netCard_ = netCardBuilder_.build();
                }
                result.bitField0_ = to_bitField0_;
                onBuilt();
                return result;
            }

            public Builder clone() {
                return (Builder) super.clone();
            }
            public Builder setField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    Object value) {
                return (Builder) super.setField(field, value);
            }
            public Builder clearField(
                    com.google.protobuf.Descriptors.FieldDescriptor field) {
                return (Builder) super.clearField(field);
            }
            public Builder clearOneof(
                    com.google.protobuf.Descriptors.OneofDescriptor oneof) {
                return (Builder) super.clearOneof(oneof);
            }
            public Builder setRepeatedField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    int index, Object value) {
                return (Builder) super.setRepeatedField(field, index, value);
            }
            public Builder addRepeatedField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    Object value) {
                return (Builder) super.addRepeatedField(field, value);
            }
            public Builder mergeFrom(com.google.protobuf.Message other) {
                if (other instanceof cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.VerifyNodeInfoReport) {
                    return mergeFrom((cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.VerifyNodeInfoReport)other);
                } else {
                    super.mergeFrom(other);
                    return this;
                }
            }

            public Builder mergeFrom(cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.VerifyNodeInfoReport other) {
                if (other == cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.VerifyNodeInfoReport.getDefaultInstance()) return this;
                if (!other.getDeviceUuidKey().isEmpty()) {
                    deviceUuidKey_ = other.deviceUuidKey_;
                    onChanged();
                }
                if (netCardBuilder_ == null) {
                    if (!other.netCard_.isEmpty()) {
                        if (netCard_.isEmpty()) {
                            netCard_ = other.netCard_;
                            bitField0_ = (bitField0_ & ~0x00000002);
                        } else {
                            ensureNetCardIsMutable();
                            netCard_.addAll(other.netCard_);
                        }
                        onChanged();
                    }
                } else {
                    if (!other.netCard_.isEmpty()) {
                        if (netCardBuilder_.isEmpty()) {
                            netCardBuilder_.dispose();
                            netCardBuilder_ = null;
                            netCard_ = other.netCard_;
                            bitField0_ = (bitField0_ & ~0x00000002);
                            netCardBuilder_ =
                                    com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                                            getNetCardFieldBuilder() : null;
                        } else {
                            netCardBuilder_.addAllMessages(other.netCard_);
                        }
                    }
                }
                onChanged();
                return this;
            }

            public final boolean isInitialized() {
                return true;
            }

            public Builder mergeFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws java.io.IOException {
                cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.VerifyNodeInfoReport parsedMessage = null;
                try {
                    parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
                } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                    parsedMessage = (cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.VerifyNodeInfoReport) e.getUnfinishedMessage();
                    throw e.unwrapIOException();
                } finally {
                    if (parsedMessage != null) {
                        mergeFrom(parsedMessage);
                    }
                }
                return this;
            }
            private int bitField0_;

            private Object deviceUuidKey_ = "";
            /**
             * <pre>
             * 验证机唯一 uuid
             * </pre>
             *
             * <code>optional string device_uuid_key = 1;</code>
             */
            public String getDeviceUuidKey() {
                Object ref = deviceUuidKey_;
                if (!(ref instanceof String)) {
                    com.google.protobuf.ByteString bs =
                            (com.google.protobuf.ByteString) ref;
                    String s = bs.toStringUtf8();
                    deviceUuidKey_ = s;
                    return s;
                } else {
                    return (String) ref;
                }
            }
            /**
             * <pre>
             * 验证机唯一 uuid
             * </pre>
             *
             * <code>optional string device_uuid_key = 1;</code>
             */
            public com.google.protobuf.ByteString
            getDeviceUuidKeyBytes() {
                Object ref = deviceUuidKey_;
                if (ref instanceof String) {
                    com.google.protobuf.ByteString b =
                            com.google.protobuf.ByteString.copyFromUtf8(
                                    (String) ref);
                    deviceUuidKey_ = b;
                    return b;
                } else {
                    return (com.google.protobuf.ByteString) ref;
                }
            }
            /**
             * <pre>
             * 验证机唯一 uuid
             * </pre>
             *
             * <code>optional string device_uuid_key = 1;</code>
             */
            public Builder setDeviceUuidKey(
                    String value) {
                if (value == null) {
                    throw new NullPointerException();
                }

                deviceUuidKey_ = value;
                onChanged();
                return this;
            }
            /**
             * <pre>
             * 验证机唯一 uuid
             * </pre>
             *
             * <code>optional string device_uuid_key = 1;</code>
             */
            public Builder clearDeviceUuidKey() {

                deviceUuidKey_ = getDefaultInstance().getDeviceUuidKey();
                onChanged();
                return this;
            }
            /**
             * <pre>
             * 验证机唯一 uuid
             * </pre>
             *
             * <code>optional string device_uuid_key = 1;</code>
             */
            public Builder setDeviceUuidKeyBytes(
                    com.google.protobuf.ByteString value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                checkByteStringIsUtf8(value);

                deviceUuidKey_ = value;
                onChanged();
                return this;
            }

            private java.util.List<cn.keptdata.one2data.header.message.protobuf.common.Node.NetCardInfo> netCard_ =
                    java.util.Collections.emptyList();
            private void ensureNetCardIsMutable() {
                if (!((bitField0_ & 0x00000002) == 0x00000002)) {
                    netCard_ = new java.util.ArrayList<cn.keptdata.one2data.header.message.protobuf.common.Node.NetCardInfo>(netCard_);
                    bitField0_ |= 0x00000002;
                }
            }

            private com.google.protobuf.RepeatedFieldBuilderV3<
                    cn.keptdata.one2data.header.message.protobuf.common.Node.NetCardInfo, cn.keptdata.one2data.header.message.protobuf.common.Node.NetCardInfo.Builder, cn.keptdata.one2data.header.message.protobuf.common.Node.NetCardInfoOrBuilder> netCardBuilder_;

            /**
             * <pre>
             *设备网卡信息
             * </pre>
             *
             * <code>repeated .one2data.rbtmqmsgcli.common.NetCardInfo net_card = 2;</code>
             */
            public java.util.List<cn.keptdata.one2data.header.message.protobuf.common.Node.NetCardInfo> getNetCardList() {
                if (netCardBuilder_ == null) {
                    return java.util.Collections.unmodifiableList(netCard_);
                } else {
                    return netCardBuilder_.getMessageList();
                }
            }
            /**
             * <pre>
             *设备网卡信息
             * </pre>
             *
             * <code>repeated .one2data.rbtmqmsgcli.common.NetCardInfo net_card = 2;</code>
             */
            public int getNetCardCount() {
                if (netCardBuilder_ == null) {
                    return netCard_.size();
                } else {
                    return netCardBuilder_.getCount();
                }
            }
            /**
             * <pre>
             *设备网卡信息
             * </pre>
             *
             * <code>repeated .one2data.rbtmqmsgcli.common.NetCardInfo net_card = 2;</code>
             */
            public cn.keptdata.one2data.header.message.protobuf.common.Node.NetCardInfo getNetCard(int index) {
                if (netCardBuilder_ == null) {
                    return netCard_.get(index);
                } else {
                    return netCardBuilder_.getMessage(index);
                }
            }
            /**
             * <pre>
             *设备网卡信息
             * </pre>
             *
             * <code>repeated .one2data.rbtmqmsgcli.common.NetCardInfo net_card = 2;</code>
             */
            public Builder setNetCard(
                    int index, cn.keptdata.one2data.header.message.protobuf.common.Node.NetCardInfo value) {
                if (netCardBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    ensureNetCardIsMutable();
                    netCard_.set(index, value);
                    onChanged();
                } else {
                    netCardBuilder_.setMessage(index, value);
                }
                return this;
            }
            /**
             * <pre>
             *设备网卡信息
             * </pre>
             *
             * <code>repeated .one2data.rbtmqmsgcli.common.NetCardInfo net_card = 2;</code>
             */
            public Builder setNetCard(
                    int index, cn.keptdata.one2data.header.message.protobuf.common.Node.NetCardInfo.Builder builderForValue) {
                if (netCardBuilder_ == null) {
                    ensureNetCardIsMutable();
                    netCard_.set(index, builderForValue.build());
                    onChanged();
                } else {
                    netCardBuilder_.setMessage(index, builderForValue.build());
                }
                return this;
            }
            /**
             * <pre>
             *设备网卡信息
             * </pre>
             *
             * <code>repeated .one2data.rbtmqmsgcli.common.NetCardInfo net_card = 2;</code>
             */
            public Builder addNetCard(cn.keptdata.one2data.header.message.protobuf.common.Node.NetCardInfo value) {
                if (netCardBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    ensureNetCardIsMutable();
                    netCard_.add(value);
                    onChanged();
                } else {
                    netCardBuilder_.addMessage(value);
                }
                return this;
            }
            /**
             * <pre>
             *设备网卡信息
             * </pre>
             *
             * <code>repeated .one2data.rbtmqmsgcli.common.NetCardInfo net_card = 2;</code>
             */
            public Builder addNetCard(
                    int index, cn.keptdata.one2data.header.message.protobuf.common.Node.NetCardInfo value) {
                if (netCardBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    ensureNetCardIsMutable();
                    netCard_.add(index, value);
                    onChanged();
                } else {
                    netCardBuilder_.addMessage(index, value);
                }
                return this;
            }
            /**
             * <pre>
             *设备网卡信息
             * </pre>
             *
             * <code>repeated .one2data.rbtmqmsgcli.common.NetCardInfo net_card = 2;</code>
             */
            public Builder addNetCard(
                    cn.keptdata.one2data.header.message.protobuf.common.Node.NetCardInfo.Builder builderForValue) {
                if (netCardBuilder_ == null) {
                    ensureNetCardIsMutable();
                    netCard_.add(builderForValue.build());
                    onChanged();
                } else {
                    netCardBuilder_.addMessage(builderForValue.build());
                }
                return this;
            }
            /**
             * <pre>
             *设备网卡信息
             * </pre>
             *
             * <code>repeated .one2data.rbtmqmsgcli.common.NetCardInfo net_card = 2;</code>
             */
            public Builder addNetCard(
                    int index, cn.keptdata.one2data.header.message.protobuf.common.Node.NetCardInfo.Builder builderForValue) {
                if (netCardBuilder_ == null) {
                    ensureNetCardIsMutable();
                    netCard_.add(index, builderForValue.build());
                    onChanged();
                } else {
                    netCardBuilder_.addMessage(index, builderForValue.build());
                }
                return this;
            }
            /**
             * <pre>
             *设备网卡信息
             * </pre>
             *
             * <code>repeated .one2data.rbtmqmsgcli.common.NetCardInfo net_card = 2;</code>
             */
            public Builder addAllNetCard(
                    Iterable<? extends cn.keptdata.one2data.header.message.protobuf.common.Node.NetCardInfo> values) {
                if (netCardBuilder_ == null) {
                    ensureNetCardIsMutable();
                    com.google.protobuf.AbstractMessageLite.Builder.addAll(
                            values, netCard_);
                    onChanged();
                } else {
                    netCardBuilder_.addAllMessages(values);
                }
                return this;
            }
            /**
             * <pre>
             *设备网卡信息
             * </pre>
             *
             * <code>repeated .one2data.rbtmqmsgcli.common.NetCardInfo net_card = 2;</code>
             */
            public Builder clearNetCard() {
                if (netCardBuilder_ == null) {
                    netCard_ = java.util.Collections.emptyList();
                    bitField0_ = (bitField0_ & ~0x00000002);
                    onChanged();
                } else {
                    netCardBuilder_.clear();
                }
                return this;
            }
            /**
             * <pre>
             *设备网卡信息
             * </pre>
             *
             * <code>repeated .one2data.rbtmqmsgcli.common.NetCardInfo net_card = 2;</code>
             */
            public Builder removeNetCard(int index) {
                if (netCardBuilder_ == null) {
                    ensureNetCardIsMutable();
                    netCard_.remove(index);
                    onChanged();
                } else {
                    netCardBuilder_.remove(index);
                }
                return this;
            }
            /**
             * <pre>
             *设备网卡信息
             * </pre>
             *
             * <code>repeated .one2data.rbtmqmsgcli.common.NetCardInfo net_card = 2;</code>
             */
            public cn.keptdata.one2data.header.message.protobuf.common.Node.NetCardInfo.Builder getNetCardBuilder(
                    int index) {
                return getNetCardFieldBuilder().getBuilder(index);
            }
            /**
             * <pre>
             *设备网卡信息
             * </pre>
             *
             * <code>repeated .one2data.rbtmqmsgcli.common.NetCardInfo net_card = 2;</code>
             */
            public cn.keptdata.one2data.header.message.protobuf.common.Node.NetCardInfoOrBuilder getNetCardOrBuilder(
                    int index) {
                if (netCardBuilder_ == null) {
                    return netCard_.get(index);  } else {
                    return netCardBuilder_.getMessageOrBuilder(index);
                }
            }
            /**
             * <pre>
             *设备网卡信息
             * </pre>
             *
             * <code>repeated .one2data.rbtmqmsgcli.common.NetCardInfo net_card = 2;</code>
             */
            public java.util.List<? extends cn.keptdata.one2data.header.message.protobuf.common.Node.NetCardInfoOrBuilder>
            getNetCardOrBuilderList() {
                if (netCardBuilder_ != null) {
                    return netCardBuilder_.getMessageOrBuilderList();
                } else {
                    return java.util.Collections.unmodifiableList(netCard_);
                }
            }
            /**
             * <pre>
             *设备网卡信息
             * </pre>
             *
             * <code>repeated .one2data.rbtmqmsgcli.common.NetCardInfo net_card = 2;</code>
             */
            public cn.keptdata.one2data.header.message.protobuf.common.Node.NetCardInfo.Builder addNetCardBuilder() {
                return getNetCardFieldBuilder().addBuilder(
                        cn.keptdata.one2data.header.message.protobuf.common.Node.NetCardInfo.getDefaultInstance());
            }
            /**
             * <pre>
             *设备网卡信息
             * </pre>
             *
             * <code>repeated .one2data.rbtmqmsgcli.common.NetCardInfo net_card = 2;</code>
             */
            public cn.keptdata.one2data.header.message.protobuf.common.Node.NetCardInfo.Builder addNetCardBuilder(
                    int index) {
                return getNetCardFieldBuilder().addBuilder(
                        index, cn.keptdata.one2data.header.message.protobuf.common.Node.NetCardInfo.getDefaultInstance());
            }
            /**
             * <pre>
             *设备网卡信息
             * </pre>
             *
             * <code>repeated .one2data.rbtmqmsgcli.common.NetCardInfo net_card = 2;</code>
             */
            public java.util.List<cn.keptdata.one2data.header.message.protobuf.common.Node.NetCardInfo.Builder>
            getNetCardBuilderList() {
                return getNetCardFieldBuilder().getBuilderList();
            }
            private com.google.protobuf.RepeatedFieldBuilderV3<
                    cn.keptdata.one2data.header.message.protobuf.common.Node.NetCardInfo, cn.keptdata.one2data.header.message.protobuf.common.Node.NetCardInfo.Builder, cn.keptdata.one2data.header.message.protobuf.common.Node.NetCardInfoOrBuilder>
            getNetCardFieldBuilder() {
                if (netCardBuilder_ == null) {
                    netCardBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
                            cn.keptdata.one2data.header.message.protobuf.common.Node.NetCardInfo, cn.keptdata.one2data.header.message.protobuf.common.Node.NetCardInfo.Builder, cn.keptdata.one2data.header.message.protobuf.common.Node.NetCardInfoOrBuilder>(
                            netCard_,
                            ((bitField0_ & 0x00000002) == 0x00000002),
                            getParentForChildren(),
                            isClean());
                    netCard_ = null;
                }
                return netCardBuilder_;
            }
            public final Builder setUnknownFields(
                    final com.google.protobuf.UnknownFieldSet unknownFields) {
                return this;
            }

            public final Builder mergeUnknownFields(
                    final com.google.protobuf.UnknownFieldSet unknownFields) {
                return this;
            }


            // @@protoc_insertion_point(builder_scope:one2data.rbtmqmsgcli.client.VerifyNodeInfoReport)
        }

        // @@protoc_insertion_point(class_scope:one2data.rbtmqmsgcli.client.VerifyNodeInfoReport)
        private static final cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.VerifyNodeInfoReport DEFAULT_INSTANCE;
        static {
            DEFAULT_INSTANCE = new cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.VerifyNodeInfoReport();
        }

        public static cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.VerifyNodeInfoReport getDefaultInstance() {
            return DEFAULT_INSTANCE;
        }

        private static final com.google.protobuf.Parser<VerifyNodeInfoReport>
                PARSER = new com.google.protobuf.AbstractParser<VerifyNodeInfoReport>() {
            public VerifyNodeInfoReport parsePartialFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws com.google.protobuf.InvalidProtocolBufferException {
                return new VerifyNodeInfoReport(input, extensionRegistry);
            }
        };

        public static com.google.protobuf.Parser<VerifyNodeInfoReport> parser() {
            return PARSER;
        }

        @Override
        public com.google.protobuf.Parser<VerifyNodeInfoReport> getParserForType() {
            return PARSER;
        }

        public cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.VerifyNodeInfoReport getDefaultInstanceForType() {
            return DEFAULT_INSTANCE;
        }

    }

    public interface VerifyNodeInfoReportAckOrBuilder extends
            // @@protoc_insertion_point(interface_extends:one2data.rbtmqmsgcli.client.VerifyNodeInfoReportAck)
            com.google.protobuf.MessageOrBuilder {

        /**
         * <pre>
         *web 返回操作结果
         * </pre>
         *
         * <code>optional .one2data.rbtmqmsgcli.common.BaseAck base_ack = 1;</code>
         */
        boolean hasBaseAck();
        /**
         * <pre>
         *web 返回操作结果
         * </pre>
         *
         * <code>optional .one2data.rbtmqmsgcli.common.BaseAck base_ack = 1;</code>
         */
        cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck getBaseAck();
        /**
         * <pre>
         *web 返回操作结果
         * </pre>
         *
         * <code>optional .one2data.rbtmqmsgcli.common.BaseAck base_ack = 1;</code>
         */
        cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAckOrBuilder getBaseAckOrBuilder();
    }
    /**
     * Protobuf type {@code one2data.rbtmqmsgcli.client.VerifyNodeInfoReportAck}
     */
    public  static final class VerifyNodeInfoReportAck extends
            com.google.protobuf.GeneratedMessageV3 implements
            // @@protoc_insertion_point(message_implements:one2data.rbtmqmsgcli.client.VerifyNodeInfoReportAck)
            VerifyNodeInfoReportAckOrBuilder {
        // Use VerifyNodeInfoReportAck.newBuilder() to construct.
        private VerifyNodeInfoReportAck(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
            super(builder);
        }
        private VerifyNodeInfoReportAck() {
        }

        @Override
        public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
            return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
        }
        private VerifyNodeInfoReportAck(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            this();
            int mutable_bitField0_ = 0;
            try {
                boolean done = false;
                while (!done) {
                    int tag = input.readTag();
                    switch (tag) {
                        case 0:
                            done = true;
                            break;
                        default: {
                            if (!input.skipField(tag)) {
                                done = true;
                            }
                            break;
                        }
                        case 10: {
                            cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck.Builder subBuilder = null;
                            if (baseAck_ != null) {
                                subBuilder = baseAck_.toBuilder();
                            }
                            baseAck_ = input.readMessage(cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck.parser(), extensionRegistry);
                            if (subBuilder != null) {
                                subBuilder.mergeFrom(baseAck_);
                                baseAck_ = subBuilder.buildPartial();
                            }

                            break;
                        }
                    }
                }
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(this);
            } catch (java.io.IOException e) {
                throw new com.google.protobuf.InvalidProtocolBufferException(
                        e).setUnfinishedMessage(this);
            } finally {
                makeExtensionsImmutable();
            }
        }
        public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
            return cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.internal_static_one2data_rbtmqmsgcli_client_VerifyNodeInfoReportAck_descriptor;
        }

        protected FieldAccessorTable
        internalGetFieldAccessorTable() {
            return cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.internal_static_one2data_rbtmqmsgcli_client_VerifyNodeInfoReportAck_fieldAccessorTable
                    .ensureFieldAccessorsInitialized(
                            cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.VerifyNodeInfoReportAck.class, cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.VerifyNodeInfoReportAck.Builder.class);
        }

        public static final int BASE_ACK_FIELD_NUMBER = 1;
        private cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck baseAck_;
        /**
         * <pre>
         *web 返回操作结果
         * </pre>
         *
         * <code>optional .one2data.rbtmqmsgcli.common.BaseAck base_ack = 1;</code>
         */
        public boolean hasBaseAck() {
            return baseAck_ != null;
        }
        /**
         * <pre>
         *web 返回操作结果
         * </pre>
         *
         * <code>optional .one2data.rbtmqmsgcli.common.BaseAck base_ack = 1;</code>
         */
        public cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck getBaseAck() {
            return baseAck_ == null ? cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck.getDefaultInstance() : baseAck_;
        }
        /**
         * <pre>
         *web 返回操作结果
         * </pre>
         *
         * <code>optional .one2data.rbtmqmsgcli.common.BaseAck base_ack = 1;</code>
         */
        public cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAckOrBuilder getBaseAckOrBuilder() {
            return getBaseAck();
        }

        private byte memoizedIsInitialized = -1;
        public final boolean isInitialized() {
            byte isInitialized = memoizedIsInitialized;
            if (isInitialized == 1) return true;
            if (isInitialized == 0) return false;

            memoizedIsInitialized = 1;
            return true;
        }

        public void writeTo(com.google.protobuf.CodedOutputStream output)
                throws java.io.IOException {
            if (baseAck_ != null) {
                output.writeMessage(1, getBaseAck());
            }
        }

        public int getSerializedSize() {
            int size = memoizedSize;
            if (size != -1) return size;

            size = 0;
            if (baseAck_ != null) {
                size += com.google.protobuf.CodedOutputStream
                        .computeMessageSize(1, getBaseAck());
            }
            memoizedSize = size;
            return size;
        }

        private static final long serialVersionUID = 0L;
        @Override
        public boolean equals(final Object obj) {
            if (obj == this) {
                return true;
            }
            if (!(obj instanceof cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.VerifyNodeInfoReportAck)) {
                return super.equals(obj);
            }
            cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.VerifyNodeInfoReportAck other = (cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.VerifyNodeInfoReportAck) obj;

            boolean result = true;
            result = result && (hasBaseAck() == other.hasBaseAck());
            if (hasBaseAck()) {
                result = result && getBaseAck()
                        .equals(other.getBaseAck());
            }
            return result;
        }

        @Override
        public int hashCode() {
            if (memoizedHashCode != 0) {
                return memoizedHashCode;
            }
            int hash = 41;
            hash = (19 * hash) + getDescriptorForType().hashCode();
            if (hasBaseAck()) {
                hash = (37 * hash) + BASE_ACK_FIELD_NUMBER;
                hash = (53 * hash) + getBaseAck().hashCode();
            }
            hash = (29 * hash) + unknownFields.hashCode();
            memoizedHashCode = hash;
            return hash;
        }

        public static cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.VerifyNodeInfoReportAck parseFrom(
                com.google.protobuf.ByteString data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }
        public static cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.VerifyNodeInfoReportAck parseFrom(
                com.google.protobuf.ByteString data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }
        public static cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.VerifyNodeInfoReportAck parseFrom(byte[] data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }
        public static cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.VerifyNodeInfoReportAck parseFrom(
                byte[] data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }
        public static cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.VerifyNodeInfoReportAck parseFrom(java.io.InputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input);
        }
        public static cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.VerifyNodeInfoReportAck parseFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input, extensionRegistry);
        }
        public static cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.VerifyNodeInfoReportAck parseDelimitedFrom(java.io.InputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseDelimitedWithIOException(PARSER, input);
        }
        public static cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.VerifyNodeInfoReportAck parseDelimitedFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
        }
        public static cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.VerifyNodeInfoReportAck parseFrom(
                com.google.protobuf.CodedInputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input);
        }
        public static cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.VerifyNodeInfoReportAck parseFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input, extensionRegistry);
        }

        public Builder newBuilderForType() { return newBuilder(); }
        public static Builder newBuilder() {
            return DEFAULT_INSTANCE.toBuilder();
        }
        public static Builder newBuilder(cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.VerifyNodeInfoReportAck prototype) {
            return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }
        public Builder toBuilder() {
            return this == DEFAULT_INSTANCE
                    ? new Builder() : new Builder().mergeFrom(this);
        }

        @Override
        protected Builder newBuilderForType(
                BuilderParent parent) {
            Builder builder = new Builder(parent);
            return builder;
        }
        /**
         * Protobuf type {@code one2data.rbtmqmsgcli.client.VerifyNodeInfoReportAck}
         */
        public static final class Builder extends
                com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
                // @@protoc_insertion_point(builder_implements:one2data.rbtmqmsgcli.client.VerifyNodeInfoReportAck)
                cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.VerifyNodeInfoReportAckOrBuilder {
            public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
                return cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.internal_static_one2data_rbtmqmsgcli_client_VerifyNodeInfoReportAck_descriptor;
            }

            protected FieldAccessorTable
            internalGetFieldAccessorTable() {
                return cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.internal_static_one2data_rbtmqmsgcli_client_VerifyNodeInfoReportAck_fieldAccessorTable
                        .ensureFieldAccessorsInitialized(
                                cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.VerifyNodeInfoReportAck.class, cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.VerifyNodeInfoReportAck.Builder.class);
            }

            // Construct using cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.VerifyNodeInfoReportAck.newBuilder()
            private Builder() {
                maybeForceBuilderInitialization();
            }

            private Builder(
                    BuilderParent parent) {
                super(parent);
                maybeForceBuilderInitialization();
            }
            private void maybeForceBuilderInitialization() {
                if (com.google.protobuf.GeneratedMessageV3
                        .alwaysUseFieldBuilders) {
                }
            }
            public Builder clear() {
                super.clear();
                if (baseAckBuilder_ == null) {
                    baseAck_ = null;
                } else {
                    baseAck_ = null;
                    baseAckBuilder_ = null;
                }
                return this;
            }

            public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
                return cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.internal_static_one2data_rbtmqmsgcli_client_VerifyNodeInfoReportAck_descriptor;
            }

            public cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.VerifyNodeInfoReportAck getDefaultInstanceForType() {
                return cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.VerifyNodeInfoReportAck.getDefaultInstance();
            }

            public cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.VerifyNodeInfoReportAck build() {
                cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.VerifyNodeInfoReportAck result = buildPartial();
                if (!result.isInitialized()) {
                    throw newUninitializedMessageException(result);
                }
                return result;
            }

            public cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.VerifyNodeInfoReportAck buildPartial() {
                cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.VerifyNodeInfoReportAck result = new cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.VerifyNodeInfoReportAck(this);
                if (baseAckBuilder_ == null) {
                    result.baseAck_ = baseAck_;
                } else {
                    result.baseAck_ = baseAckBuilder_.build();
                }
                onBuilt();
                return result;
            }

            public Builder clone() {
                return (Builder) super.clone();
            }
            public Builder setField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    Object value) {
                return (Builder) super.setField(field, value);
            }
            public Builder clearField(
                    com.google.protobuf.Descriptors.FieldDescriptor field) {
                return (Builder) super.clearField(field);
            }
            public Builder clearOneof(
                    com.google.protobuf.Descriptors.OneofDescriptor oneof) {
                return (Builder) super.clearOneof(oneof);
            }
            public Builder setRepeatedField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    int index, Object value) {
                return (Builder) super.setRepeatedField(field, index, value);
            }
            public Builder addRepeatedField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    Object value) {
                return (Builder) super.addRepeatedField(field, value);
            }
            public Builder mergeFrom(com.google.protobuf.Message other) {
                if (other instanceof cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.VerifyNodeInfoReportAck) {
                    return mergeFrom((cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.VerifyNodeInfoReportAck)other);
                } else {
                    super.mergeFrom(other);
                    return this;
                }
            }

            public Builder mergeFrom(cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.VerifyNodeInfoReportAck other) {
                if (other == cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.VerifyNodeInfoReportAck.getDefaultInstance()) return this;
                if (other.hasBaseAck()) {
                    mergeBaseAck(other.getBaseAck());
                }
                onChanged();
                return this;
            }

            public final boolean isInitialized() {
                return true;
            }

            public Builder mergeFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws java.io.IOException {
                cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.VerifyNodeInfoReportAck parsedMessage = null;
                try {
                    parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
                } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                    parsedMessage = (cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.VerifyNodeInfoReportAck) e.getUnfinishedMessage();
                    throw e.unwrapIOException();
                } finally {
                    if (parsedMessage != null) {
                        mergeFrom(parsedMessage);
                    }
                }
                return this;
            }

            private cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck baseAck_ = null;
            private com.google.protobuf.SingleFieldBuilderV3<
                    cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck, cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck.Builder, cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAckOrBuilder> baseAckBuilder_;
            /**
             * <pre>
             *web 返回操作结果
             * </pre>
             *
             * <code>optional .one2data.rbtmqmsgcli.common.BaseAck base_ack = 1;</code>
             */
            public boolean hasBaseAck() {
                return baseAckBuilder_ != null || baseAck_ != null;
            }
            /**
             * <pre>
             *web 返回操作结果
             * </pre>
             *
             * <code>optional .one2data.rbtmqmsgcli.common.BaseAck base_ack = 1;</code>
             */
            public cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck getBaseAck() {
                if (baseAckBuilder_ == null) {
                    return baseAck_ == null ? cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck.getDefaultInstance() : baseAck_;
                } else {
                    return baseAckBuilder_.getMessage();
                }
            }
            /**
             * <pre>
             *web 返回操作结果
             * </pre>
             *
             * <code>optional .one2data.rbtmqmsgcli.common.BaseAck base_ack = 1;</code>
             */
            public Builder setBaseAck(cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck value) {
                if (baseAckBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    baseAck_ = value;
                    onChanged();
                } else {
                    baseAckBuilder_.setMessage(value);
                }

                return this;
            }
            /**
             * <pre>
             *web 返回操作结果
             * </pre>
             *
             * <code>optional .one2data.rbtmqmsgcli.common.BaseAck base_ack = 1;</code>
             */
            public Builder setBaseAck(
                    cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck.Builder builderForValue) {
                if (baseAckBuilder_ == null) {
                    baseAck_ = builderForValue.build();
                    onChanged();
                } else {
                    baseAckBuilder_.setMessage(builderForValue.build());
                }

                return this;
            }
            /**
             * <pre>
             *web 返回操作结果
             * </pre>
             *
             * <code>optional .one2data.rbtmqmsgcli.common.BaseAck base_ack = 1;</code>
             */
            public Builder mergeBaseAck(cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck value) {
                if (baseAckBuilder_ == null) {
                    if (baseAck_ != null) {
                        baseAck_ =
                                cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck.newBuilder(baseAck_).mergeFrom(value).buildPartial();
                    } else {
                        baseAck_ = value;
                    }
                    onChanged();
                } else {
                    baseAckBuilder_.mergeFrom(value);
                }

                return this;
            }
            /**
             * <pre>
             *web 返回操作结果
             * </pre>
             *
             * <code>optional .one2data.rbtmqmsgcli.common.BaseAck base_ack = 1;</code>
             */
            public Builder clearBaseAck() {
                if (baseAckBuilder_ == null) {
                    baseAck_ = null;
                    onChanged();
                } else {
                    baseAck_ = null;
                    baseAckBuilder_ = null;
                }

                return this;
            }
            /**
             * <pre>
             *web 返回操作结果
             * </pre>
             *
             * <code>optional .one2data.rbtmqmsgcli.common.BaseAck base_ack = 1;</code>
             */
            public cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck.Builder getBaseAckBuilder() {

                onChanged();
                return getBaseAckFieldBuilder().getBuilder();
            }
            /**
             * <pre>
             *web 返回操作结果
             * </pre>
             *
             * <code>optional .one2data.rbtmqmsgcli.common.BaseAck base_ack = 1;</code>
             */
            public cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAckOrBuilder getBaseAckOrBuilder() {
                if (baseAckBuilder_ != null) {
                    return baseAckBuilder_.getMessageOrBuilder();
                } else {
                    return baseAck_ == null ?
                            cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck.getDefaultInstance() : baseAck_;
                }
            }
            /**
             * <pre>
             *web 返回操作结果
             * </pre>
             *
             * <code>optional .one2data.rbtmqmsgcli.common.BaseAck base_ack = 1;</code>
             */
            private com.google.protobuf.SingleFieldBuilderV3<
                    cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck, cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck.Builder, cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAckOrBuilder>
            getBaseAckFieldBuilder() {
                if (baseAckBuilder_ == null) {
                    baseAckBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                            cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck, cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck.Builder, cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAckOrBuilder>(
                            getBaseAck(),
                            getParentForChildren(),
                            isClean());
                    baseAck_ = null;
                }
                return baseAckBuilder_;
            }
            public final Builder setUnknownFields(
                    final com.google.protobuf.UnknownFieldSet unknownFields) {
                return this;
            }

            public final Builder mergeUnknownFields(
                    final com.google.protobuf.UnknownFieldSet unknownFields) {
                return this;
            }


            // @@protoc_insertion_point(builder_scope:one2data.rbtmqmsgcli.client.VerifyNodeInfoReportAck)
        }

        // @@protoc_insertion_point(class_scope:one2data.rbtmqmsgcli.client.VerifyNodeInfoReportAck)
        private static final cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.VerifyNodeInfoReportAck DEFAULT_INSTANCE;
        static {
            DEFAULT_INSTANCE = new cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.VerifyNodeInfoReportAck();
        }

        public static cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.VerifyNodeInfoReportAck getDefaultInstance() {
            return DEFAULT_INSTANCE;
        }

        private static final com.google.protobuf.Parser<VerifyNodeInfoReportAck>
                PARSER = new com.google.protobuf.AbstractParser<VerifyNodeInfoReportAck>() {
            public VerifyNodeInfoReportAck parsePartialFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws com.google.protobuf.InvalidProtocolBufferException {
                return new VerifyNodeInfoReportAck(input, extensionRegistry);
            }
        };

        public static com.google.protobuf.Parser<VerifyNodeInfoReportAck> parser() {
            return PARSER;
        }

        @Override
        public com.google.protobuf.Parser<VerifyNodeInfoReportAck> getParserForType() {
            return PARSER;
        }

        public cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.VerifyNodeInfoReportAck getDefaultInstanceForType() {
            return DEFAULT_INSTANCE;
        }

    }

    public interface RequestDeviceMetadataOrBuilder extends
            // @@protoc_insertion_point(interface_extends:one2data.rbtmqmsgcli.client.RequestDeviceMetadata)
            com.google.protobuf.MessageOrBuilder {

        /**
         * <pre>
         *设备内部唯一ID
         * </pre>
         *
         * <code>optional string device_uuid_key = 1;</code>
         */
        String getDeviceUuidKey();
        /**
         * <pre>
         *设备内部唯一ID
         * </pre>
         *
         * <code>optional string device_uuid_key = 1;</code>
         */
        com.google.protobuf.ByteString
        getDeviceUuidKeyBytes();
    }
    /**
     * <pre>
     *请求设备元数据
     * </pre>
     *
     * Protobuf type {@code one2data.rbtmqmsgcli.client.RequestDeviceMetadata}
     */
    public  static final class RequestDeviceMetadata extends
            com.google.protobuf.GeneratedMessageV3 implements
            // @@protoc_insertion_point(message_implements:one2data.rbtmqmsgcli.client.RequestDeviceMetadata)
            RequestDeviceMetadataOrBuilder {
        // Use RequestDeviceMetadata.newBuilder() to construct.
        private RequestDeviceMetadata(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
            super(builder);
        }
        private RequestDeviceMetadata() {
            deviceUuidKey_ = "";
        }

        @Override
        public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
            return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
        }
        private RequestDeviceMetadata(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            this();
            int mutable_bitField0_ = 0;
            try {
                boolean done = false;
                while (!done) {
                    int tag = input.readTag();
                    switch (tag) {
                        case 0:
                            done = true;
                            break;
                        default: {
                            if (!input.skipField(tag)) {
                                done = true;
                            }
                            break;
                        }
                        case 10: {
                            String s = input.readStringRequireUtf8();

                            deviceUuidKey_ = s;
                            break;
                        }
                    }
                }
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(this);
            } catch (java.io.IOException e) {
                throw new com.google.protobuf.InvalidProtocolBufferException(
                        e).setUnfinishedMessage(this);
            } finally {
                makeExtensionsImmutable();
            }
        }
        public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
            return cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.internal_static_one2data_rbtmqmsgcli_client_RequestDeviceMetadata_descriptor;
        }

        protected FieldAccessorTable
        internalGetFieldAccessorTable() {
            return cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.internal_static_one2data_rbtmqmsgcli_client_RequestDeviceMetadata_fieldAccessorTable
                    .ensureFieldAccessorsInitialized(
                            cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.RequestDeviceMetadata.class, cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.RequestDeviceMetadata.Builder.class);
        }

        public static final int DEVICE_UUID_KEY_FIELD_NUMBER = 1;
        private volatile Object deviceUuidKey_;
        /**
         * <pre>
         *设备内部唯一ID
         * </pre>
         *
         * <code>optional string device_uuid_key = 1;</code>
         */
        public String getDeviceUuidKey() {
            Object ref = deviceUuidKey_;
            if (ref instanceof String) {
                return (String) ref;
            } else {
                com.google.protobuf.ByteString bs =
                        (com.google.protobuf.ByteString) ref;
                String s = bs.toStringUtf8();
                deviceUuidKey_ = s;
                return s;
            }
        }
        /**
         * <pre>
         *设备内部唯一ID
         * </pre>
         *
         * <code>optional string device_uuid_key = 1;</code>
         */
        public com.google.protobuf.ByteString
        getDeviceUuidKeyBytes() {
            Object ref = deviceUuidKey_;
            if (ref instanceof String) {
                com.google.protobuf.ByteString b =
                        com.google.protobuf.ByteString.copyFromUtf8(
                                (String) ref);
                deviceUuidKey_ = b;
                return b;
            } else {
                return (com.google.protobuf.ByteString) ref;
            }
        }

        private byte memoizedIsInitialized = -1;
        public final boolean isInitialized() {
            byte isInitialized = memoizedIsInitialized;
            if (isInitialized == 1) return true;
            if (isInitialized == 0) return false;

            memoizedIsInitialized = 1;
            return true;
        }

        public void writeTo(com.google.protobuf.CodedOutputStream output)
                throws java.io.IOException {
            if (!getDeviceUuidKeyBytes().isEmpty()) {
                com.google.protobuf.GeneratedMessageV3.writeString(output, 1, deviceUuidKey_);
            }
        }

        public int getSerializedSize() {
            int size = memoizedSize;
            if (size != -1) return size;

            size = 0;
            if (!getDeviceUuidKeyBytes().isEmpty()) {
                size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, deviceUuidKey_);
            }
            memoizedSize = size;
            return size;
        }

        private static final long serialVersionUID = 0L;
        @Override
        public boolean equals(final Object obj) {
            if (obj == this) {
                return true;
            }
            if (!(obj instanceof cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.RequestDeviceMetadata)) {
                return super.equals(obj);
            }
            cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.RequestDeviceMetadata other = (cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.RequestDeviceMetadata) obj;

            boolean result = true;
            result = result && getDeviceUuidKey()
                    .equals(other.getDeviceUuidKey());
            return result;
        }

        @Override
        public int hashCode() {
            if (memoizedHashCode != 0) {
                return memoizedHashCode;
            }
            int hash = 41;
            hash = (19 * hash) + getDescriptorForType().hashCode();
            hash = (37 * hash) + DEVICE_UUID_KEY_FIELD_NUMBER;
            hash = (53 * hash) + getDeviceUuidKey().hashCode();
            hash = (29 * hash) + unknownFields.hashCode();
            memoizedHashCode = hash;
            return hash;
        }

        public static cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.RequestDeviceMetadata parseFrom(
                com.google.protobuf.ByteString data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }
        public static cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.RequestDeviceMetadata parseFrom(
                com.google.protobuf.ByteString data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }
        public static cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.RequestDeviceMetadata parseFrom(byte[] data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }
        public static cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.RequestDeviceMetadata parseFrom(
                byte[] data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }
        public static cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.RequestDeviceMetadata parseFrom(java.io.InputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input);
        }
        public static cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.RequestDeviceMetadata parseFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input, extensionRegistry);
        }
        public static cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.RequestDeviceMetadata parseDelimitedFrom(java.io.InputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseDelimitedWithIOException(PARSER, input);
        }
        public static cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.RequestDeviceMetadata parseDelimitedFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
        }
        public static cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.RequestDeviceMetadata parseFrom(
                com.google.protobuf.CodedInputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input);
        }
        public static cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.RequestDeviceMetadata parseFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input, extensionRegistry);
        }

        public Builder newBuilderForType() { return newBuilder(); }
        public static Builder newBuilder() {
            return DEFAULT_INSTANCE.toBuilder();
        }
        public static Builder newBuilder(cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.RequestDeviceMetadata prototype) {
            return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }
        public Builder toBuilder() {
            return this == DEFAULT_INSTANCE
                    ? new Builder() : new Builder().mergeFrom(this);
        }

        @Override
        protected Builder newBuilderForType(
                BuilderParent parent) {
            Builder builder = new Builder(parent);
            return builder;
        }
        /**
         * <pre>
         *请求设备元数据
         * </pre>
         *
         * Protobuf type {@code one2data.rbtmqmsgcli.client.RequestDeviceMetadata}
         */
        public static final class Builder extends
                com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
                // @@protoc_insertion_point(builder_implements:one2data.rbtmqmsgcli.client.RequestDeviceMetadata)
                cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.RequestDeviceMetadataOrBuilder {
            public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
                return cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.internal_static_one2data_rbtmqmsgcli_client_RequestDeviceMetadata_descriptor;
            }

            protected FieldAccessorTable
            internalGetFieldAccessorTable() {
                return cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.internal_static_one2data_rbtmqmsgcli_client_RequestDeviceMetadata_fieldAccessorTable
                        .ensureFieldAccessorsInitialized(
                                cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.RequestDeviceMetadata.class, cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.RequestDeviceMetadata.Builder.class);
            }

            // Construct using cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.RequestDeviceMetadata.newBuilder()
            private Builder() {
                maybeForceBuilderInitialization();
            }

            private Builder(
                    BuilderParent parent) {
                super(parent);
                maybeForceBuilderInitialization();
            }
            private void maybeForceBuilderInitialization() {
                if (com.google.protobuf.GeneratedMessageV3
                        .alwaysUseFieldBuilders) {
                }
            }
            public Builder clear() {
                super.clear();
                deviceUuidKey_ = "";

                return this;
            }

            public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
                return cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.internal_static_one2data_rbtmqmsgcli_client_RequestDeviceMetadata_descriptor;
            }

            public cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.RequestDeviceMetadata getDefaultInstanceForType() {
                return cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.RequestDeviceMetadata.getDefaultInstance();
            }

            public cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.RequestDeviceMetadata build() {
                cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.RequestDeviceMetadata result = buildPartial();
                if (!result.isInitialized()) {
                    throw newUninitializedMessageException(result);
                }
                return result;
            }

            public cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.RequestDeviceMetadata buildPartial() {
                cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.RequestDeviceMetadata result = new cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.RequestDeviceMetadata(this);
                result.deviceUuidKey_ = deviceUuidKey_;
                onBuilt();
                return result;
            }

            public Builder clone() {
                return (Builder) super.clone();
            }
            public Builder setField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    Object value) {
                return (Builder) super.setField(field, value);
            }
            public Builder clearField(
                    com.google.protobuf.Descriptors.FieldDescriptor field) {
                return (Builder) super.clearField(field);
            }
            public Builder clearOneof(
                    com.google.protobuf.Descriptors.OneofDescriptor oneof) {
                return (Builder) super.clearOneof(oneof);
            }
            public Builder setRepeatedField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    int index, Object value) {
                return (Builder) super.setRepeatedField(field, index, value);
            }
            public Builder addRepeatedField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    Object value) {
                return (Builder) super.addRepeatedField(field, value);
            }
            public Builder mergeFrom(com.google.protobuf.Message other) {
                if (other instanceof cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.RequestDeviceMetadata) {
                    return mergeFrom((cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.RequestDeviceMetadata)other);
                } else {
                    super.mergeFrom(other);
                    return this;
                }
            }

            public Builder mergeFrom(cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.RequestDeviceMetadata other) {
                if (other == cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.RequestDeviceMetadata.getDefaultInstance()) return this;
                if (!other.getDeviceUuidKey().isEmpty()) {
                    deviceUuidKey_ = other.deviceUuidKey_;
                    onChanged();
                }
                onChanged();
                return this;
            }

            public final boolean isInitialized() {
                return true;
            }

            public Builder mergeFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws java.io.IOException {
                cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.RequestDeviceMetadata parsedMessage = null;
                try {
                    parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
                } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                    parsedMessage = (cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.RequestDeviceMetadata) e.getUnfinishedMessage();
                    throw e.unwrapIOException();
                } finally {
                    if (parsedMessage != null) {
                        mergeFrom(parsedMessage);
                    }
                }
                return this;
            }

            private Object deviceUuidKey_ = "";
            /**
             * <pre>
             *设备内部唯一ID
             * </pre>
             *
             * <code>optional string device_uuid_key = 1;</code>
             */
            public String getDeviceUuidKey() {
                Object ref = deviceUuidKey_;
                if (!(ref instanceof String)) {
                    com.google.protobuf.ByteString bs =
                            (com.google.protobuf.ByteString) ref;
                    String s = bs.toStringUtf8();
                    deviceUuidKey_ = s;
                    return s;
                } else {
                    return (String) ref;
                }
            }
            /**
             * <pre>
             *设备内部唯一ID
             * </pre>
             *
             * <code>optional string device_uuid_key = 1;</code>
             */
            public com.google.protobuf.ByteString
            getDeviceUuidKeyBytes() {
                Object ref = deviceUuidKey_;
                if (ref instanceof String) {
                    com.google.protobuf.ByteString b =
                            com.google.protobuf.ByteString.copyFromUtf8(
                                    (String) ref);
                    deviceUuidKey_ = b;
                    return b;
                } else {
                    return (com.google.protobuf.ByteString) ref;
                }
            }
            /**
             * <pre>
             *设备内部唯一ID
             * </pre>
             *
             * <code>optional string device_uuid_key = 1;</code>
             */
            public Builder setDeviceUuidKey(
                    String value) {
                if (value == null) {
                    throw new NullPointerException();
                }

                deviceUuidKey_ = value;
                onChanged();
                return this;
            }
            /**
             * <pre>
             *设备内部唯一ID
             * </pre>
             *
             * <code>optional string device_uuid_key = 1;</code>
             */
            public Builder clearDeviceUuidKey() {

                deviceUuidKey_ = getDefaultInstance().getDeviceUuidKey();
                onChanged();
                return this;
            }
            /**
             * <pre>
             *设备内部唯一ID
             * </pre>
             *
             * <code>optional string device_uuid_key = 1;</code>
             */
            public Builder setDeviceUuidKeyBytes(
                    com.google.protobuf.ByteString value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                checkByteStringIsUtf8(value);

                deviceUuidKey_ = value;
                onChanged();
                return this;
            }
            public final Builder setUnknownFields(
                    final com.google.protobuf.UnknownFieldSet unknownFields) {
                return this;
            }

            public final Builder mergeUnknownFields(
                    final com.google.protobuf.UnknownFieldSet unknownFields) {
                return this;
            }


            // @@protoc_insertion_point(builder_scope:one2data.rbtmqmsgcli.client.RequestDeviceMetadata)
        }

        // @@protoc_insertion_point(class_scope:one2data.rbtmqmsgcli.client.RequestDeviceMetadata)
        private static final cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.RequestDeviceMetadata DEFAULT_INSTANCE;
        static {
            DEFAULT_INSTANCE = new cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.RequestDeviceMetadata();
        }

        public static cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.RequestDeviceMetadata getDefaultInstance() {
            return DEFAULT_INSTANCE;
        }

        private static final com.google.protobuf.Parser<RequestDeviceMetadata>
                PARSER = new com.google.protobuf.AbstractParser<RequestDeviceMetadata>() {
            public RequestDeviceMetadata parsePartialFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws com.google.protobuf.InvalidProtocolBufferException {
                return new RequestDeviceMetadata(input, extensionRegistry);
            }
        };

        public static com.google.protobuf.Parser<RequestDeviceMetadata> parser() {
            return PARSER;
        }

        @Override
        public com.google.protobuf.Parser<RequestDeviceMetadata> getParserForType() {
            return PARSER;
        }

        public cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.RequestDeviceMetadata getDefaultInstanceForType() {
            return DEFAULT_INSTANCE;
        }

    }

    public interface RequestDeviceMetadataAckOrBuilder extends
            // @@protoc_insertion_point(interface_extends:one2data.rbtmqmsgcli.client.RequestDeviceMetadataAck)
            com.google.protobuf.MessageOrBuilder {

        /**
         * <code>optional .one2data.rbtmqmsgcli.common.BaseAck base_ack = 1;</code>
         */
        boolean hasBaseAck();
        /**
         * <code>optional .one2data.rbtmqmsgcli.common.BaseAck base_ack = 1;</code>
         */
        cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck getBaseAck();
        /**
         * <code>optional .one2data.rbtmqmsgcli.common.BaseAck base_ack = 1;</code>
         */
        cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAckOrBuilder getBaseAckOrBuilder();

        /**
         * <pre>
         *由web生成的设备uuid，后续所有操作使用该uuid
         * </pre>
         *
         * <code>optional string device_uuid_key = 2;</code>
         */
        String getDeviceUuidKey();
        /**
         * <pre>
         *由web生成的设备uuid，后续所有操作使用该uuid
         * </pre>
         *
         * <code>optional string device_uuid_key = 2;</code>
         */
        com.google.protobuf.ByteString
        getDeviceUuidKeyBytes();
    }
    /**
     * <pre>
     *请求设备元数据回复
     * </pre>
     *
     * Protobuf type {@code one2data.rbtmqmsgcli.client.RequestDeviceMetadataAck}
     */
    public  static final class RequestDeviceMetadataAck extends
            com.google.protobuf.GeneratedMessageV3 implements
            // @@protoc_insertion_point(message_implements:one2data.rbtmqmsgcli.client.RequestDeviceMetadataAck)
            RequestDeviceMetadataAckOrBuilder {
        // Use RequestDeviceMetadataAck.newBuilder() to construct.
        private RequestDeviceMetadataAck(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
            super(builder);
        }
        private RequestDeviceMetadataAck() {
            deviceUuidKey_ = "";
        }

        @Override
        public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
            return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
        }
        private RequestDeviceMetadataAck(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            this();
            int mutable_bitField0_ = 0;
            try {
                boolean done = false;
                while (!done) {
                    int tag = input.readTag();
                    switch (tag) {
                        case 0:
                            done = true;
                            break;
                        default: {
                            if (!input.skipField(tag)) {
                                done = true;
                            }
                            break;
                        }
                        case 10: {
                            cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck.Builder subBuilder = null;
                            if (baseAck_ != null) {
                                subBuilder = baseAck_.toBuilder();
                            }
                            baseAck_ = input.readMessage(cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck.parser(), extensionRegistry);
                            if (subBuilder != null) {
                                subBuilder.mergeFrom(baseAck_);
                                baseAck_ = subBuilder.buildPartial();
                            }

                            break;
                        }
                        case 18: {
                            String s = input.readStringRequireUtf8();

                            deviceUuidKey_ = s;
                            break;
                        }
                    }
                }
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(this);
            } catch (java.io.IOException e) {
                throw new com.google.protobuf.InvalidProtocolBufferException(
                        e).setUnfinishedMessage(this);
            } finally {
                makeExtensionsImmutable();
            }
        }
        public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
            return cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.internal_static_one2data_rbtmqmsgcli_client_RequestDeviceMetadataAck_descriptor;
        }

        protected FieldAccessorTable
        internalGetFieldAccessorTable() {
            return cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.internal_static_one2data_rbtmqmsgcli_client_RequestDeviceMetadataAck_fieldAccessorTable
                    .ensureFieldAccessorsInitialized(
                            cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.RequestDeviceMetadataAck.class, cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.RequestDeviceMetadataAck.Builder.class);
        }

        public static final int BASE_ACK_FIELD_NUMBER = 1;
        private cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck baseAck_;
        /**
         * <code>optional .one2data.rbtmqmsgcli.common.BaseAck base_ack = 1;</code>
         */
        public boolean hasBaseAck() {
            return baseAck_ != null;
        }
        /**
         * <code>optional .one2data.rbtmqmsgcli.common.BaseAck base_ack = 1;</code>
         */
        public cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck getBaseAck() {
            return baseAck_ == null ? cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck.getDefaultInstance() : baseAck_;
        }
        /**
         * <code>optional .one2data.rbtmqmsgcli.common.BaseAck base_ack = 1;</code>
         */
        public cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAckOrBuilder getBaseAckOrBuilder() {
            return getBaseAck();
        }

        public static final int DEVICE_UUID_KEY_FIELD_NUMBER = 2;
        private volatile Object deviceUuidKey_;
        /**
         * <pre>
         *由web生成的设备uuid，后续所有操作使用该uuid
         * </pre>
         *
         * <code>optional string device_uuid_key = 2;</code>
         */
        public String getDeviceUuidKey() {
            Object ref = deviceUuidKey_;
            if (ref instanceof String) {
                return (String) ref;
            } else {
                com.google.protobuf.ByteString bs =
                        (com.google.protobuf.ByteString) ref;
                String s = bs.toStringUtf8();
                deviceUuidKey_ = s;
                return s;
            }
        }
        /**
         * <pre>
         *由web生成的设备uuid，后续所有操作使用该uuid
         * </pre>
         *
         * <code>optional string device_uuid_key = 2;</code>
         */
        public com.google.protobuf.ByteString
        getDeviceUuidKeyBytes() {
            Object ref = deviceUuidKey_;
            if (ref instanceof String) {
                com.google.protobuf.ByteString b =
                        com.google.protobuf.ByteString.copyFromUtf8(
                                (String) ref);
                deviceUuidKey_ = b;
                return b;
            } else {
                return (com.google.protobuf.ByteString) ref;
            }
        }

        private byte memoizedIsInitialized = -1;
        public final boolean isInitialized() {
            byte isInitialized = memoizedIsInitialized;
            if (isInitialized == 1) return true;
            if (isInitialized == 0) return false;

            memoizedIsInitialized = 1;
            return true;
        }

        public void writeTo(com.google.protobuf.CodedOutputStream output)
                throws java.io.IOException {
            if (baseAck_ != null) {
                output.writeMessage(1, getBaseAck());
            }
            if (!getDeviceUuidKeyBytes().isEmpty()) {
                com.google.protobuf.GeneratedMessageV3.writeString(output, 2, deviceUuidKey_);
            }
        }

        public int getSerializedSize() {
            int size = memoizedSize;
            if (size != -1) return size;

            size = 0;
            if (baseAck_ != null) {
                size += com.google.protobuf.CodedOutputStream
                        .computeMessageSize(1, getBaseAck());
            }
            if (!getDeviceUuidKeyBytes().isEmpty()) {
                size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, deviceUuidKey_);
            }
            memoizedSize = size;
            return size;
        }

        private static final long serialVersionUID = 0L;
        @Override
        public boolean equals(final Object obj) {
            if (obj == this) {
                return true;
            }
            if (!(obj instanceof cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.RequestDeviceMetadataAck)) {
                return super.equals(obj);
            }
            cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.RequestDeviceMetadataAck other = (cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.RequestDeviceMetadataAck) obj;

            boolean result = true;
            result = result && (hasBaseAck() == other.hasBaseAck());
            if (hasBaseAck()) {
                result = result && getBaseAck()
                        .equals(other.getBaseAck());
            }
            result = result && getDeviceUuidKey()
                    .equals(other.getDeviceUuidKey());
            return result;
        }

        @Override
        public int hashCode() {
            if (memoizedHashCode != 0) {
                return memoizedHashCode;
            }
            int hash = 41;
            hash = (19 * hash) + getDescriptorForType().hashCode();
            if (hasBaseAck()) {
                hash = (37 * hash) + BASE_ACK_FIELD_NUMBER;
                hash = (53 * hash) + getBaseAck().hashCode();
            }
            hash = (37 * hash) + DEVICE_UUID_KEY_FIELD_NUMBER;
            hash = (53 * hash) + getDeviceUuidKey().hashCode();
            hash = (29 * hash) + unknownFields.hashCode();
            memoizedHashCode = hash;
            return hash;
        }

        public static cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.RequestDeviceMetadataAck parseFrom(
                com.google.protobuf.ByteString data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }
        public static cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.RequestDeviceMetadataAck parseFrom(
                com.google.protobuf.ByteString data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }
        public static cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.RequestDeviceMetadataAck parseFrom(byte[] data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }
        public static cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.RequestDeviceMetadataAck parseFrom(
                byte[] data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }
        public static cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.RequestDeviceMetadataAck parseFrom(java.io.InputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input);
        }
        public static cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.RequestDeviceMetadataAck parseFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input, extensionRegistry);
        }
        public static cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.RequestDeviceMetadataAck parseDelimitedFrom(java.io.InputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseDelimitedWithIOException(PARSER, input);
        }
        public static cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.RequestDeviceMetadataAck parseDelimitedFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
        }
        public static cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.RequestDeviceMetadataAck parseFrom(
                com.google.protobuf.CodedInputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input);
        }
        public static cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.RequestDeviceMetadataAck parseFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input, extensionRegistry);
        }

        public Builder newBuilderForType() { return newBuilder(); }
        public static Builder newBuilder() {
            return DEFAULT_INSTANCE.toBuilder();
        }
        public static Builder newBuilder(cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.RequestDeviceMetadataAck prototype) {
            return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }
        public Builder toBuilder() {
            return this == DEFAULT_INSTANCE
                    ? new Builder() : new Builder().mergeFrom(this);
        }

        @Override
        protected Builder newBuilderForType(
                BuilderParent parent) {
            Builder builder = new Builder(parent);
            return builder;
        }
        /**
         * <pre>
         *请求设备元数据回复
         * </pre>
         *
         * Protobuf type {@code one2data.rbtmqmsgcli.client.RequestDeviceMetadataAck}
         */
        public static final class Builder extends
                com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
                // @@protoc_insertion_point(builder_implements:one2data.rbtmqmsgcli.client.RequestDeviceMetadataAck)
                cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.RequestDeviceMetadataAckOrBuilder {
            public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
                return cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.internal_static_one2data_rbtmqmsgcli_client_RequestDeviceMetadataAck_descriptor;
            }

            protected FieldAccessorTable
            internalGetFieldAccessorTable() {
                return cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.internal_static_one2data_rbtmqmsgcli_client_RequestDeviceMetadataAck_fieldAccessorTable
                        .ensureFieldAccessorsInitialized(
                                cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.RequestDeviceMetadataAck.class, cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.RequestDeviceMetadataAck.Builder.class);
            }

            // Construct using cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.RequestDeviceMetadataAck.newBuilder()
            private Builder() {
                maybeForceBuilderInitialization();
            }

            private Builder(
                    BuilderParent parent) {
                super(parent);
                maybeForceBuilderInitialization();
            }
            private void maybeForceBuilderInitialization() {
                if (com.google.protobuf.GeneratedMessageV3
                        .alwaysUseFieldBuilders) {
                }
            }
            public Builder clear() {
                super.clear();
                if (baseAckBuilder_ == null) {
                    baseAck_ = null;
                } else {
                    baseAck_ = null;
                    baseAckBuilder_ = null;
                }
                deviceUuidKey_ = "";

                return this;
            }

            public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
                return cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.internal_static_one2data_rbtmqmsgcli_client_RequestDeviceMetadataAck_descriptor;
            }

            public cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.RequestDeviceMetadataAck getDefaultInstanceForType() {
                return cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.RequestDeviceMetadataAck.getDefaultInstance();
            }

            public cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.RequestDeviceMetadataAck build() {
                cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.RequestDeviceMetadataAck result = buildPartial();
                if (!result.isInitialized()) {
                    throw newUninitializedMessageException(result);
                }
                return result;
            }

            public cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.RequestDeviceMetadataAck buildPartial() {
                cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.RequestDeviceMetadataAck result = new cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.RequestDeviceMetadataAck(this);
                if (baseAckBuilder_ == null) {
                    result.baseAck_ = baseAck_;
                } else {
                    result.baseAck_ = baseAckBuilder_.build();
                }
                result.deviceUuidKey_ = deviceUuidKey_;
                onBuilt();
                return result;
            }

            public Builder clone() {
                return (Builder) super.clone();
            }
            public Builder setField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    Object value) {
                return (Builder) super.setField(field, value);
            }
            public Builder clearField(
                    com.google.protobuf.Descriptors.FieldDescriptor field) {
                return (Builder) super.clearField(field);
            }
            public Builder clearOneof(
                    com.google.protobuf.Descriptors.OneofDescriptor oneof) {
                return (Builder) super.clearOneof(oneof);
            }
            public Builder setRepeatedField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    int index, Object value) {
                return (Builder) super.setRepeatedField(field, index, value);
            }
            public Builder addRepeatedField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    Object value) {
                return (Builder) super.addRepeatedField(field, value);
            }
            public Builder mergeFrom(com.google.protobuf.Message other) {
                if (other instanceof cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.RequestDeviceMetadataAck) {
                    return mergeFrom((cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.RequestDeviceMetadataAck)other);
                } else {
                    super.mergeFrom(other);
                    return this;
                }
            }

            public Builder mergeFrom(cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.RequestDeviceMetadataAck other) {
                if (other == cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.RequestDeviceMetadataAck.getDefaultInstance()) return this;
                if (other.hasBaseAck()) {
                    mergeBaseAck(other.getBaseAck());
                }
                if (!other.getDeviceUuidKey().isEmpty()) {
                    deviceUuidKey_ = other.deviceUuidKey_;
                    onChanged();
                }
                onChanged();
                return this;
            }

            public final boolean isInitialized() {
                return true;
            }

            public Builder mergeFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws java.io.IOException {
                cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.RequestDeviceMetadataAck parsedMessage = null;
                try {
                    parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
                } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                    parsedMessage = (cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.RequestDeviceMetadataAck) e.getUnfinishedMessage();
                    throw e.unwrapIOException();
                } finally {
                    if (parsedMessage != null) {
                        mergeFrom(parsedMessage);
                    }
                }
                return this;
            }

            private cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck baseAck_ = null;
            private com.google.protobuf.SingleFieldBuilderV3<
                    cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck, cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck.Builder, cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAckOrBuilder> baseAckBuilder_;
            /**
             * <code>optional .one2data.rbtmqmsgcli.common.BaseAck base_ack = 1;</code>
             */
            public boolean hasBaseAck() {
                return baseAckBuilder_ != null || baseAck_ != null;
            }
            /**
             * <code>optional .one2data.rbtmqmsgcli.common.BaseAck base_ack = 1;</code>
             */
            public cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck getBaseAck() {
                if (baseAckBuilder_ == null) {
                    return baseAck_ == null ? cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck.getDefaultInstance() : baseAck_;
                } else {
                    return baseAckBuilder_.getMessage();
                }
            }
            /**
             * <code>optional .one2data.rbtmqmsgcli.common.BaseAck base_ack = 1;</code>
             */
            public Builder setBaseAck(cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck value) {
                if (baseAckBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    baseAck_ = value;
                    onChanged();
                } else {
                    baseAckBuilder_.setMessage(value);
                }

                return this;
            }
            /**
             * <code>optional .one2data.rbtmqmsgcli.common.BaseAck base_ack = 1;</code>
             */
            public Builder setBaseAck(
                    cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck.Builder builderForValue) {
                if (baseAckBuilder_ == null) {
                    baseAck_ = builderForValue.build();
                    onChanged();
                } else {
                    baseAckBuilder_.setMessage(builderForValue.build());
                }

                return this;
            }
            /**
             * <code>optional .one2data.rbtmqmsgcli.common.BaseAck base_ack = 1;</code>
             */
            public Builder mergeBaseAck(cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck value) {
                if (baseAckBuilder_ == null) {
                    if (baseAck_ != null) {
                        baseAck_ =
                                cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck.newBuilder(baseAck_).mergeFrom(value).buildPartial();
                    } else {
                        baseAck_ = value;
                    }
                    onChanged();
                } else {
                    baseAckBuilder_.mergeFrom(value);
                }

                return this;
            }
            /**
             * <code>optional .one2data.rbtmqmsgcli.common.BaseAck base_ack = 1;</code>
             */
            public Builder clearBaseAck() {
                if (baseAckBuilder_ == null) {
                    baseAck_ = null;
                    onChanged();
                } else {
                    baseAck_ = null;
                    baseAckBuilder_ = null;
                }

                return this;
            }
            /**
             * <code>optional .one2data.rbtmqmsgcli.common.BaseAck base_ack = 1;</code>
             */
            public cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck.Builder getBaseAckBuilder() {

                onChanged();
                return getBaseAckFieldBuilder().getBuilder();
            }
            /**
             * <code>optional .one2data.rbtmqmsgcli.common.BaseAck base_ack = 1;</code>
             */
            public cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAckOrBuilder getBaseAckOrBuilder() {
                if (baseAckBuilder_ != null) {
                    return baseAckBuilder_.getMessageOrBuilder();
                } else {
                    return baseAck_ == null ?
                            cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck.getDefaultInstance() : baseAck_;
                }
            }
            /**
             * <code>optional .one2data.rbtmqmsgcli.common.BaseAck base_ack = 1;</code>
             */
            private com.google.protobuf.SingleFieldBuilderV3<
                    cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck, cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck.Builder, cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAckOrBuilder>
            getBaseAckFieldBuilder() {
                if (baseAckBuilder_ == null) {
                    baseAckBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                            cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck, cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck.Builder, cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAckOrBuilder>(
                            getBaseAck(),
                            getParentForChildren(),
                            isClean());
                    baseAck_ = null;
                }
                return baseAckBuilder_;
            }

            private Object deviceUuidKey_ = "";
            /**
             * <pre>
             *由web生成的设备uuid，后续所有操作使用该uuid
             * </pre>
             *
             * <code>optional string device_uuid_key = 2;</code>
             */
            public String getDeviceUuidKey() {
                Object ref = deviceUuidKey_;
                if (!(ref instanceof String)) {
                    com.google.protobuf.ByteString bs =
                            (com.google.protobuf.ByteString) ref;
                    String s = bs.toStringUtf8();
                    deviceUuidKey_ = s;
                    return s;
                } else {
                    return (String) ref;
                }
            }
            /**
             * <pre>
             *由web生成的设备uuid，后续所有操作使用该uuid
             * </pre>
             *
             * <code>optional string device_uuid_key = 2;</code>
             */
            public com.google.protobuf.ByteString
            getDeviceUuidKeyBytes() {
                Object ref = deviceUuidKey_;
                if (ref instanceof String) {
                    com.google.protobuf.ByteString b =
                            com.google.protobuf.ByteString.copyFromUtf8(
                                    (String) ref);
                    deviceUuidKey_ = b;
                    return b;
                } else {
                    return (com.google.protobuf.ByteString) ref;
                }
            }
            /**
             * <pre>
             *由web生成的设备uuid，后续所有操作使用该uuid
             * </pre>
             *
             * <code>optional string device_uuid_key = 2;</code>
             */
            public Builder setDeviceUuidKey(
                    String value) {
                if (value == null) {
                    throw new NullPointerException();
                }

                deviceUuidKey_ = value;
                onChanged();
                return this;
            }
            /**
             * <pre>
             *由web生成的设备uuid，后续所有操作使用该uuid
             * </pre>
             *
             * <code>optional string device_uuid_key = 2;</code>
             */
            public Builder clearDeviceUuidKey() {

                deviceUuidKey_ = getDefaultInstance().getDeviceUuidKey();
                onChanged();
                return this;
            }
            /**
             * <pre>
             *由web生成的设备uuid，后续所有操作使用该uuid
             * </pre>
             *
             * <code>optional string device_uuid_key = 2;</code>
             */
            public Builder setDeviceUuidKeyBytes(
                    com.google.protobuf.ByteString value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                checkByteStringIsUtf8(value);

                deviceUuidKey_ = value;
                onChanged();
                return this;
            }
            public final Builder setUnknownFields(
                    final com.google.protobuf.UnknownFieldSet unknownFields) {
                return this;
            }

            public final Builder mergeUnknownFields(
                    final com.google.protobuf.UnknownFieldSet unknownFields) {
                return this;
            }


            // @@protoc_insertion_point(builder_scope:one2data.rbtmqmsgcli.client.RequestDeviceMetadataAck)
        }

        // @@protoc_insertion_point(class_scope:one2data.rbtmqmsgcli.client.RequestDeviceMetadataAck)
        private static final cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.RequestDeviceMetadataAck DEFAULT_INSTANCE;
        static {
            DEFAULT_INSTANCE = new cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.RequestDeviceMetadataAck();
        }

        public static cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.RequestDeviceMetadataAck getDefaultInstance() {
            return DEFAULT_INSTANCE;
        }

        private static final com.google.protobuf.Parser<RequestDeviceMetadataAck>
                PARSER = new com.google.protobuf.AbstractParser<RequestDeviceMetadataAck>() {
            public RequestDeviceMetadataAck parsePartialFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws com.google.protobuf.InvalidProtocolBufferException {
                return new RequestDeviceMetadataAck(input, extensionRegistry);
            }
        };

        public static com.google.protobuf.Parser<RequestDeviceMetadataAck> parser() {
            return PARSER;
        }

        @Override
        public com.google.protobuf.Parser<RequestDeviceMetadataAck> getParserForType() {
            return PARSER;
        }

        public cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.RequestDeviceMetadataAck getDefaultInstanceForType() {
            return DEFAULT_INSTANCE;
        }

    }

    public interface LoginOrBuilder extends
            // @@protoc_insertion_point(interface_extends:one2data.rbtmqmsgcli.client.Login)
            com.google.protobuf.MessageOrBuilder {

        /**
         * <pre>
         *设备内部唯一ID
         * </pre>
         *
         * <code>optional string device_uuid_key = 1;</code>
         */
        String getDeviceUuidKey();
        /**
         * <pre>
         *设备内部唯一ID
         * </pre>
         *
         * <code>optional string device_uuid_key = 1;</code>
         */
        com.google.protobuf.ByteString
        getDeviceUuidKeyBytes();

        /**
         * <code>optional string device_token = 2;</code>
         */
        String getDeviceToken();
        /**
         * <code>optional string device_token = 2;</code>
         */
        com.google.protobuf.ByteString
        getDeviceTokenBytes();
    }
    /**
     * <pre>
     *************客户端登录验证******************
     * </pre>
     *
     * Protobuf type {@code one2data.rbtmqmsgcli.client.Login}
     */
    public  static final class Login extends
            com.google.protobuf.GeneratedMessageV3 implements
            // @@protoc_insertion_point(message_implements:one2data.rbtmqmsgcli.client.Login)
            LoginOrBuilder {
        // Use Login.newBuilder() to construct.
        private Login(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
            super(builder);
        }
        private Login() {
            deviceUuidKey_ = "";
            deviceToken_ = "";
        }

        @Override
        public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
            return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
        }
        private Login(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            this();
            int mutable_bitField0_ = 0;
            try {
                boolean done = false;
                while (!done) {
                    int tag = input.readTag();
                    switch (tag) {
                        case 0:
                            done = true;
                            break;
                        default: {
                            if (!input.skipField(tag)) {
                                done = true;
                            }
                            break;
                        }
                        case 10: {
                            String s = input.readStringRequireUtf8();

                            deviceUuidKey_ = s;
                            break;
                        }
                        case 18: {
                            String s = input.readStringRequireUtf8();

                            deviceToken_ = s;
                            break;
                        }
                    }
                }
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(this);
            } catch (java.io.IOException e) {
                throw new com.google.protobuf.InvalidProtocolBufferException(
                        e).setUnfinishedMessage(this);
            } finally {
                makeExtensionsImmutable();
            }
        }
        public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
            return cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.internal_static_one2data_rbtmqmsgcli_client_Login_descriptor;
        }

        protected FieldAccessorTable
        internalGetFieldAccessorTable() {
            return cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.internal_static_one2data_rbtmqmsgcli_client_Login_fieldAccessorTable
                    .ensureFieldAccessorsInitialized(
                            cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.Login.class, cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.Login.Builder.class);
        }

        public static final int DEVICE_UUID_KEY_FIELD_NUMBER = 1;
        private volatile Object deviceUuidKey_;
        /**
         * <pre>
         *设备内部唯一ID
         * </pre>
         *
         * <code>optional string device_uuid_key = 1;</code>
         */
        public String getDeviceUuidKey() {
            Object ref = deviceUuidKey_;
            if (ref instanceof String) {
                return (String) ref;
            } else {
                com.google.protobuf.ByteString bs =
                        (com.google.protobuf.ByteString) ref;
                String s = bs.toStringUtf8();
                deviceUuidKey_ = s;
                return s;
            }
        }
        /**
         * <pre>
         *设备内部唯一ID
         * </pre>
         *
         * <code>optional string device_uuid_key = 1;</code>
         */
        public com.google.protobuf.ByteString
        getDeviceUuidKeyBytes() {
            Object ref = deviceUuidKey_;
            if (ref instanceof String) {
                com.google.protobuf.ByteString b =
                        com.google.protobuf.ByteString.copyFromUtf8(
                                (String) ref);
                deviceUuidKey_ = b;
                return b;
            } else {
                return (com.google.protobuf.ByteString) ref;
            }
        }

        public static final int DEVICE_TOKEN_FIELD_NUMBER = 2;
        private volatile Object deviceToken_;
        /**
         * <code>optional string device_token = 2;</code>
         */
        public String getDeviceToken() {
            Object ref = deviceToken_;
            if (ref instanceof String) {
                return (String) ref;
            } else {
                com.google.protobuf.ByteString bs =
                        (com.google.protobuf.ByteString) ref;
                String s = bs.toStringUtf8();
                deviceToken_ = s;
                return s;
            }
        }
        /**
         * <code>optional string device_token = 2;</code>
         */
        public com.google.protobuf.ByteString
        getDeviceTokenBytes() {
            Object ref = deviceToken_;
            if (ref instanceof String) {
                com.google.protobuf.ByteString b =
                        com.google.protobuf.ByteString.copyFromUtf8(
                                (String) ref);
                deviceToken_ = b;
                return b;
            } else {
                return (com.google.protobuf.ByteString) ref;
            }
        }

        private byte memoizedIsInitialized = -1;
        public final boolean isInitialized() {
            byte isInitialized = memoizedIsInitialized;
            if (isInitialized == 1) return true;
            if (isInitialized == 0) return false;

            memoizedIsInitialized = 1;
            return true;
        }

        public void writeTo(com.google.protobuf.CodedOutputStream output)
                throws java.io.IOException {
            if (!getDeviceUuidKeyBytes().isEmpty()) {
                com.google.protobuf.GeneratedMessageV3.writeString(output, 1, deviceUuidKey_);
            }
            if (!getDeviceTokenBytes().isEmpty()) {
                com.google.protobuf.GeneratedMessageV3.writeString(output, 2, deviceToken_);
            }
        }

        public int getSerializedSize() {
            int size = memoizedSize;
            if (size != -1) return size;

            size = 0;
            if (!getDeviceUuidKeyBytes().isEmpty()) {
                size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, deviceUuidKey_);
            }
            if (!getDeviceTokenBytes().isEmpty()) {
                size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, deviceToken_);
            }
            memoizedSize = size;
            return size;
        }

        private static final long serialVersionUID = 0L;
        @Override
        public boolean equals(final Object obj) {
            if (obj == this) {
                return true;
            }
            if (!(obj instanceof cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.Login)) {
                return super.equals(obj);
            }
            cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.Login other = (cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.Login) obj;

            boolean result = true;
            result = result && getDeviceUuidKey()
                    .equals(other.getDeviceUuidKey());
            result = result && getDeviceToken()
                    .equals(other.getDeviceToken());
            return result;
        }

        @Override
        public int hashCode() {
            if (memoizedHashCode != 0) {
                return memoizedHashCode;
            }
            int hash = 41;
            hash = (19 * hash) + getDescriptorForType().hashCode();
            hash = (37 * hash) + DEVICE_UUID_KEY_FIELD_NUMBER;
            hash = (53 * hash) + getDeviceUuidKey().hashCode();
            hash = (37 * hash) + DEVICE_TOKEN_FIELD_NUMBER;
            hash = (53 * hash) + getDeviceToken().hashCode();
            hash = (29 * hash) + unknownFields.hashCode();
            memoizedHashCode = hash;
            return hash;
        }

        public static cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.Login parseFrom(
                com.google.protobuf.ByteString data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }
        public static cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.Login parseFrom(
                com.google.protobuf.ByteString data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }
        public static cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.Login parseFrom(byte[] data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }
        public static cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.Login parseFrom(
                byte[] data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }
        public static cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.Login parseFrom(java.io.InputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input);
        }
        public static cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.Login parseFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input, extensionRegistry);
        }
        public static cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.Login parseDelimitedFrom(java.io.InputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseDelimitedWithIOException(PARSER, input);
        }
        public static cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.Login parseDelimitedFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
        }
        public static cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.Login parseFrom(
                com.google.protobuf.CodedInputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input);
        }
        public static cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.Login parseFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input, extensionRegistry);
        }

        public Builder newBuilderForType() { return newBuilder(); }
        public static Builder newBuilder() {
            return DEFAULT_INSTANCE.toBuilder();
        }
        public static Builder newBuilder(cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.Login prototype) {
            return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }
        public Builder toBuilder() {
            return this == DEFAULT_INSTANCE
                    ? new Builder() : new Builder().mergeFrom(this);
        }

        @Override
        protected Builder newBuilderForType(
                BuilderParent parent) {
            Builder builder = new Builder(parent);
            return builder;
        }
        /**
         * <pre>
         *************客户端登录验证******************
         * </pre>
         *
         * Protobuf type {@code one2data.rbtmqmsgcli.client.Login}
         */
        public static final class Builder extends
                com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
                // @@protoc_insertion_point(builder_implements:one2data.rbtmqmsgcli.client.Login)
                cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.LoginOrBuilder {
            public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
                return cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.internal_static_one2data_rbtmqmsgcli_client_Login_descriptor;
            }

            protected FieldAccessorTable
            internalGetFieldAccessorTable() {
                return cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.internal_static_one2data_rbtmqmsgcli_client_Login_fieldAccessorTable
                        .ensureFieldAccessorsInitialized(
                                cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.Login.class, cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.Login.Builder.class);
            }

            // Construct using cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.Login.newBuilder()
            private Builder() {
                maybeForceBuilderInitialization();
            }

            private Builder(
                    BuilderParent parent) {
                super(parent);
                maybeForceBuilderInitialization();
            }
            private void maybeForceBuilderInitialization() {
                if (com.google.protobuf.GeneratedMessageV3
                        .alwaysUseFieldBuilders) {
                }
            }
            public Builder clear() {
                super.clear();
                deviceUuidKey_ = "";

                deviceToken_ = "";

                return this;
            }

            public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
                return cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.internal_static_one2data_rbtmqmsgcli_client_Login_descriptor;
            }

            public cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.Login getDefaultInstanceForType() {
                return cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.Login.getDefaultInstance();
            }

            public cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.Login build() {
                cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.Login result = buildPartial();
                if (!result.isInitialized()) {
                    throw newUninitializedMessageException(result);
                }
                return result;
            }

            public cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.Login buildPartial() {
                cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.Login result = new cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.Login(this);
                result.deviceUuidKey_ = deviceUuidKey_;
                result.deviceToken_ = deviceToken_;
                onBuilt();
                return result;
            }

            public Builder clone() {
                return (Builder) super.clone();
            }
            public Builder setField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    Object value) {
                return (Builder) super.setField(field, value);
            }
            public Builder clearField(
                    com.google.protobuf.Descriptors.FieldDescriptor field) {
                return (Builder) super.clearField(field);
            }
            public Builder clearOneof(
                    com.google.protobuf.Descriptors.OneofDescriptor oneof) {
                return (Builder) super.clearOneof(oneof);
            }
            public Builder setRepeatedField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    int index, Object value) {
                return (Builder) super.setRepeatedField(field, index, value);
            }
            public Builder addRepeatedField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    Object value) {
                return (Builder) super.addRepeatedField(field, value);
            }
            public Builder mergeFrom(com.google.protobuf.Message other) {
                if (other instanceof cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.Login) {
                    return mergeFrom((cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.Login)other);
                } else {
                    super.mergeFrom(other);
                    return this;
                }
            }

            public Builder mergeFrom(cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.Login other) {
                if (other == cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.Login.getDefaultInstance()) return this;
                if (!other.getDeviceUuidKey().isEmpty()) {
                    deviceUuidKey_ = other.deviceUuidKey_;
                    onChanged();
                }
                if (!other.getDeviceToken().isEmpty()) {
                    deviceToken_ = other.deviceToken_;
                    onChanged();
                }
                onChanged();
                return this;
            }

            public final boolean isInitialized() {
                return true;
            }

            public Builder mergeFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws java.io.IOException {
                cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.Login parsedMessage = null;
                try {
                    parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
                } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                    parsedMessage = (cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.Login) e.getUnfinishedMessage();
                    throw e.unwrapIOException();
                } finally {
                    if (parsedMessage != null) {
                        mergeFrom(parsedMessage);
                    }
                }
                return this;
            }

            private Object deviceUuidKey_ = "";
            /**
             * <pre>
             *设备内部唯一ID
             * </pre>
             *
             * <code>optional string device_uuid_key = 1;</code>
             */
            public String getDeviceUuidKey() {
                Object ref = deviceUuidKey_;
                if (!(ref instanceof String)) {
                    com.google.protobuf.ByteString bs =
                            (com.google.protobuf.ByteString) ref;
                    String s = bs.toStringUtf8();
                    deviceUuidKey_ = s;
                    return s;
                } else {
                    return (String) ref;
                }
            }
            /**
             * <pre>
             *设备内部唯一ID
             * </pre>
             *
             * <code>optional string device_uuid_key = 1;</code>
             */
            public com.google.protobuf.ByteString
            getDeviceUuidKeyBytes() {
                Object ref = deviceUuidKey_;
                if (ref instanceof String) {
                    com.google.protobuf.ByteString b =
                            com.google.protobuf.ByteString.copyFromUtf8(
                                    (String) ref);
                    deviceUuidKey_ = b;
                    return b;
                } else {
                    return (com.google.protobuf.ByteString) ref;
                }
            }
            /**
             * <pre>
             *设备内部唯一ID
             * </pre>
             *
             * <code>optional string device_uuid_key = 1;</code>
             */
            public Builder setDeviceUuidKey(
                    String value) {
                if (value == null) {
                    throw new NullPointerException();
                }

                deviceUuidKey_ = value;
                onChanged();
                return this;
            }
            /**
             * <pre>
             *设备内部唯一ID
             * </pre>
             *
             * <code>optional string device_uuid_key = 1;</code>
             */
            public Builder clearDeviceUuidKey() {

                deviceUuidKey_ = getDefaultInstance().getDeviceUuidKey();
                onChanged();
                return this;
            }
            /**
             * <pre>
             *设备内部唯一ID
             * </pre>
             *
             * <code>optional string device_uuid_key = 1;</code>
             */
            public Builder setDeviceUuidKeyBytes(
                    com.google.protobuf.ByteString value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                checkByteStringIsUtf8(value);

                deviceUuidKey_ = value;
                onChanged();
                return this;
            }

            private Object deviceToken_ = "";
            /**
             * <code>optional string device_token = 2;</code>
             */
            public String getDeviceToken() {
                Object ref = deviceToken_;
                if (!(ref instanceof String)) {
                    com.google.protobuf.ByteString bs =
                            (com.google.protobuf.ByteString) ref;
                    String s = bs.toStringUtf8();
                    deviceToken_ = s;
                    return s;
                } else {
                    return (String) ref;
                }
            }
            /**
             * <code>optional string device_token = 2;</code>
             */
            public com.google.protobuf.ByteString
            getDeviceTokenBytes() {
                Object ref = deviceToken_;
                if (ref instanceof String) {
                    com.google.protobuf.ByteString b =
                            com.google.protobuf.ByteString.copyFromUtf8(
                                    (String) ref);
                    deviceToken_ = b;
                    return b;
                } else {
                    return (com.google.protobuf.ByteString) ref;
                }
            }
            /**
             * <code>optional string device_token = 2;</code>
             */
            public Builder setDeviceToken(
                    String value) {
                if (value == null) {
                    throw new NullPointerException();
                }

                deviceToken_ = value;
                onChanged();
                return this;
            }
            /**
             * <code>optional string device_token = 2;</code>
             */
            public Builder clearDeviceToken() {

                deviceToken_ = getDefaultInstance().getDeviceToken();
                onChanged();
                return this;
            }
            /**
             * <code>optional string device_token = 2;</code>
             */
            public Builder setDeviceTokenBytes(
                    com.google.protobuf.ByteString value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                checkByteStringIsUtf8(value);

                deviceToken_ = value;
                onChanged();
                return this;
            }
            public final Builder setUnknownFields(
                    final com.google.protobuf.UnknownFieldSet unknownFields) {
                return this;
            }

            public final Builder mergeUnknownFields(
                    final com.google.protobuf.UnknownFieldSet unknownFields) {
                return this;
            }


            // @@protoc_insertion_point(builder_scope:one2data.rbtmqmsgcli.client.Login)
        }

        // @@protoc_insertion_point(class_scope:one2data.rbtmqmsgcli.client.Login)
        private static final cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.Login DEFAULT_INSTANCE;
        static {
            DEFAULT_INSTANCE = new cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.Login();
        }

        public static cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.Login getDefaultInstance() {
            return DEFAULT_INSTANCE;
        }

        private static final com.google.protobuf.Parser<Login>
                PARSER = new com.google.protobuf.AbstractParser<Login>() {
            public Login parsePartialFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws com.google.protobuf.InvalidProtocolBufferException {
                return new Login(input, extensionRegistry);
            }
        };

        public static com.google.protobuf.Parser<Login> parser() {
            return PARSER;
        }

        @Override
        public com.google.protobuf.Parser<Login> getParserForType() {
            return PARSER;
        }

        public cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.Login getDefaultInstanceForType() {
            return DEFAULT_INSTANCE;
        }

    }

    public interface LoginAckOrBuilder extends
            // @@protoc_insertion_point(interface_extends:one2data.rbtmqmsgcli.client.LoginAck)
            com.google.protobuf.MessageOrBuilder {

        /**
         * <pre>
         *客户端登录结果
         * </pre>
         *
         * <code>optional .one2data.rbtmqmsgcli.common.BaseAck base_ack = 1;</code>
         */
        boolean hasBaseAck();
        /**
         * <pre>
         *客户端登录结果
         * </pre>
         *
         * <code>optional .one2data.rbtmqmsgcli.common.BaseAck base_ack = 1;</code>
         */
        cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck getBaseAck();
        /**
         * <pre>
         *客户端登录结果
         * </pre>
         *
         * <code>optional .one2data.rbtmqmsgcli.common.BaseAck base_ack = 1;</code>
         */
        cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAckOrBuilder getBaseAckOrBuilder();

        /**
         * <pre>
         * Web 当前记录的磁盘扫描版本，由于客户端升级可能导致磁盘扫描程序生成的磁盘信息不兼容，
         * 因此该字段的存在是为了确保客户端升级后不会影响到旧版本的备份任务，取值如下：
         * 1. 当没有备份任务时，设为 -1, 表示磁盘扫描程序可以使用最新的策略生成磁盘信息
         * 2. 当存在备份任务，分两种情况：
         *    2.1 旧版协议没有该字段，即 Web 不知道当前任务对应的磁盘扫描版本，此时取默认值 0 即可
         *    2.2 该字段已存在，设为当前任务对应的磁盘扫描版本
         * </pre>
         *
         * <code>optional int32 diskscan_version = 2;</code>
         */
        int getDiskscanVersion();
    }
    /**
     * Protobuf type {@code one2data.rbtmqmsgcli.client.LoginAck}
     */
    public  static final class LoginAck extends
            com.google.protobuf.GeneratedMessageV3 implements
            // @@protoc_insertion_point(message_implements:one2data.rbtmqmsgcli.client.LoginAck)
            LoginAckOrBuilder {
        // Use LoginAck.newBuilder() to construct.
        private LoginAck(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
            super(builder);
        }
        private LoginAck() {
            diskscanVersion_ = 0;
        }

        @Override
        public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
            return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
        }
        private LoginAck(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            this();
            int mutable_bitField0_ = 0;
            try {
                boolean done = false;
                while (!done) {
                    int tag = input.readTag();
                    switch (tag) {
                        case 0:
                            done = true;
                            break;
                        default: {
                            if (!input.skipField(tag)) {
                                done = true;
                            }
                            break;
                        }
                        case 10: {
                            cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck.Builder subBuilder = null;
                            if (baseAck_ != null) {
                                subBuilder = baseAck_.toBuilder();
                            }
                            baseAck_ = input.readMessage(cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck.parser(), extensionRegistry);
                            if (subBuilder != null) {
                                subBuilder.mergeFrom(baseAck_);
                                baseAck_ = subBuilder.buildPartial();
                            }

                            break;
                        }
                        case 16: {

                            diskscanVersion_ = input.readInt32();
                            break;
                        }
                    }
                }
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(this);
            } catch (java.io.IOException e) {
                throw new com.google.protobuf.InvalidProtocolBufferException(
                        e).setUnfinishedMessage(this);
            } finally {
                makeExtensionsImmutable();
            }
        }
        public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
            return cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.internal_static_one2data_rbtmqmsgcli_client_LoginAck_descriptor;
        }

        protected FieldAccessorTable
        internalGetFieldAccessorTable() {
            return cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.internal_static_one2data_rbtmqmsgcli_client_LoginAck_fieldAccessorTable
                    .ensureFieldAccessorsInitialized(
                            cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.LoginAck.class, cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.LoginAck.Builder.class);
        }

        public static final int BASE_ACK_FIELD_NUMBER = 1;
        private cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck baseAck_;
        /**
         * <pre>
         *客户端登录结果
         * </pre>
         *
         * <code>optional .one2data.rbtmqmsgcli.common.BaseAck base_ack = 1;</code>
         */
        public boolean hasBaseAck() {
            return baseAck_ != null;
        }
        /**
         * <pre>
         *客户端登录结果
         * </pre>
         *
         * <code>optional .one2data.rbtmqmsgcli.common.BaseAck base_ack = 1;</code>
         */
        public cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck getBaseAck() {
            return baseAck_ == null ? cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck.getDefaultInstance() : baseAck_;
        }
        /**
         * <pre>
         *客户端登录结果
         * </pre>
         *
         * <code>optional .one2data.rbtmqmsgcli.common.BaseAck base_ack = 1;</code>
         */
        public cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAckOrBuilder getBaseAckOrBuilder() {
            return getBaseAck();
        }

        public static final int DISKSCAN_VERSION_FIELD_NUMBER = 2;
        private int diskscanVersion_;
        /**
         * <pre>
         * Web 当前记录的磁盘扫描版本，由于客户端升级可能导致磁盘扫描程序生成的磁盘信息不兼容，
         * 因此该字段的存在是为了确保客户端升级后不会影响到旧版本的备份任务，取值如下：
         * 1. 当没有备份任务时，设为 -1, 表示磁盘扫描程序可以使用最新的策略生成磁盘信息
         * 2. 当存在备份任务，分两种情况：
         *    2.1 旧版协议没有该字段，即 Web 不知道当前任务对应的磁盘扫描版本，此时取默认值 0 即可
         *    2.2 该字段已存在，设为当前任务对应的磁盘扫描版本
         * </pre>
         *
         * <code>optional int32 diskscan_version = 2;</code>
         */
        public int getDiskscanVersion() {
            return diskscanVersion_;
        }

        private byte memoizedIsInitialized = -1;
        public final boolean isInitialized() {
            byte isInitialized = memoizedIsInitialized;
            if (isInitialized == 1) return true;
            if (isInitialized == 0) return false;

            memoizedIsInitialized = 1;
            return true;
        }

        public void writeTo(com.google.protobuf.CodedOutputStream output)
                throws java.io.IOException {
            if (baseAck_ != null) {
                output.writeMessage(1, getBaseAck());
            }
            if (diskscanVersion_ != 0) {
                output.writeInt32(2, diskscanVersion_);
            }
        }

        public int getSerializedSize() {
            int size = memoizedSize;
            if (size != -1) return size;

            size = 0;
            if (baseAck_ != null) {
                size += com.google.protobuf.CodedOutputStream
                        .computeMessageSize(1, getBaseAck());
            }
            if (diskscanVersion_ != 0) {
                size += com.google.protobuf.CodedOutputStream
                        .computeInt32Size(2, diskscanVersion_);
            }
            memoizedSize = size;
            return size;
        }

        private static final long serialVersionUID = 0L;
        @Override
        public boolean equals(final Object obj) {
            if (obj == this) {
                return true;
            }
            if (!(obj instanceof cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.LoginAck)) {
                return super.equals(obj);
            }
            cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.LoginAck other = (cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.LoginAck) obj;

            boolean result = true;
            result = result && (hasBaseAck() == other.hasBaseAck());
            if (hasBaseAck()) {
                result = result && getBaseAck()
                        .equals(other.getBaseAck());
            }
            result = result && (getDiskscanVersion()
                    == other.getDiskscanVersion());
            return result;
        }

        @Override
        public int hashCode() {
            if (memoizedHashCode != 0) {
                return memoizedHashCode;
            }
            int hash = 41;
            hash = (19 * hash) + getDescriptorForType().hashCode();
            if (hasBaseAck()) {
                hash = (37 * hash) + BASE_ACK_FIELD_NUMBER;
                hash = (53 * hash) + getBaseAck().hashCode();
            }
            hash = (37 * hash) + DISKSCAN_VERSION_FIELD_NUMBER;
            hash = (53 * hash) + getDiskscanVersion();
            hash = (29 * hash) + unknownFields.hashCode();
            memoizedHashCode = hash;
            return hash;
        }

        public static cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.LoginAck parseFrom(
                com.google.protobuf.ByteString data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }
        public static cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.LoginAck parseFrom(
                com.google.protobuf.ByteString data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }
        public static cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.LoginAck parseFrom(byte[] data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }
        public static cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.LoginAck parseFrom(
                byte[] data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }
        public static cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.LoginAck parseFrom(java.io.InputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input);
        }
        public static cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.LoginAck parseFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input, extensionRegistry);
        }
        public static cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.LoginAck parseDelimitedFrom(java.io.InputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseDelimitedWithIOException(PARSER, input);
        }
        public static cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.LoginAck parseDelimitedFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
        }
        public static cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.LoginAck parseFrom(
                com.google.protobuf.CodedInputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input);
        }
        public static cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.LoginAck parseFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input, extensionRegistry);
        }

        public Builder newBuilderForType() { return newBuilder(); }
        public static Builder newBuilder() {
            return DEFAULT_INSTANCE.toBuilder();
        }
        public static Builder newBuilder(cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.LoginAck prototype) {
            return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }
        public Builder toBuilder() {
            return this == DEFAULT_INSTANCE
                    ? new Builder() : new Builder().mergeFrom(this);
        }

        @Override
        protected Builder newBuilderForType(
                BuilderParent parent) {
            Builder builder = new Builder(parent);
            return builder;
        }
        /**
         * Protobuf type {@code one2data.rbtmqmsgcli.client.LoginAck}
         */
        public static final class Builder extends
                com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
                // @@protoc_insertion_point(builder_implements:one2data.rbtmqmsgcli.client.LoginAck)
                cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.LoginAckOrBuilder {
            public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
                return cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.internal_static_one2data_rbtmqmsgcli_client_LoginAck_descriptor;
            }

            protected FieldAccessorTable
            internalGetFieldAccessorTable() {
                return cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.internal_static_one2data_rbtmqmsgcli_client_LoginAck_fieldAccessorTable
                        .ensureFieldAccessorsInitialized(
                                cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.LoginAck.class, cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.LoginAck.Builder.class);
            }

            // Construct using cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.LoginAck.newBuilder()
            private Builder() {
                maybeForceBuilderInitialization();
            }

            private Builder(
                    BuilderParent parent) {
                super(parent);
                maybeForceBuilderInitialization();
            }
            private void maybeForceBuilderInitialization() {
                if (com.google.protobuf.GeneratedMessageV3
                        .alwaysUseFieldBuilders) {
                }
            }
            public Builder clear() {
                super.clear();
                if (baseAckBuilder_ == null) {
                    baseAck_ = null;
                } else {
                    baseAck_ = null;
                    baseAckBuilder_ = null;
                }
                diskscanVersion_ = 0;

                return this;
            }

            public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
                return cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.internal_static_one2data_rbtmqmsgcli_client_LoginAck_descriptor;
            }

            public cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.LoginAck getDefaultInstanceForType() {
                return cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.LoginAck.getDefaultInstance();
            }

            public cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.LoginAck build() {
                cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.LoginAck result = buildPartial();
                if (!result.isInitialized()) {
                    throw newUninitializedMessageException(result);
                }
                return result;
            }

            public cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.LoginAck buildPartial() {
                cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.LoginAck result = new cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.LoginAck(this);
                if (baseAckBuilder_ == null) {
                    result.baseAck_ = baseAck_;
                } else {
                    result.baseAck_ = baseAckBuilder_.build();
                }
                result.diskscanVersion_ = diskscanVersion_;
                onBuilt();
                return result;
            }

            public Builder clone() {
                return (Builder) super.clone();
            }
            public Builder setField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    Object value) {
                return (Builder) super.setField(field, value);
            }
            public Builder clearField(
                    com.google.protobuf.Descriptors.FieldDescriptor field) {
                return (Builder) super.clearField(field);
            }
            public Builder clearOneof(
                    com.google.protobuf.Descriptors.OneofDescriptor oneof) {
                return (Builder) super.clearOneof(oneof);
            }
            public Builder setRepeatedField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    int index, Object value) {
                return (Builder) super.setRepeatedField(field, index, value);
            }
            public Builder addRepeatedField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    Object value) {
                return (Builder) super.addRepeatedField(field, value);
            }
            public Builder mergeFrom(com.google.protobuf.Message other) {
                if (other instanceof cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.LoginAck) {
                    return mergeFrom((cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.LoginAck)other);
                } else {
                    super.mergeFrom(other);
                    return this;
                }
            }

            public Builder mergeFrom(cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.LoginAck other) {
                if (other == cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.LoginAck.getDefaultInstance()) return this;
                if (other.hasBaseAck()) {
                    mergeBaseAck(other.getBaseAck());
                }
                if (other.getDiskscanVersion() != 0) {
                    setDiskscanVersion(other.getDiskscanVersion());
                }
                onChanged();
                return this;
            }

            public final boolean isInitialized() {
                return true;
            }

            public Builder mergeFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws java.io.IOException {
                cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.LoginAck parsedMessage = null;
                try {
                    parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
                } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                    parsedMessage = (cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.LoginAck) e.getUnfinishedMessage();
                    throw e.unwrapIOException();
                } finally {
                    if (parsedMessage != null) {
                        mergeFrom(parsedMessage);
                    }
                }
                return this;
            }

            private cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck baseAck_ = null;
            private com.google.protobuf.SingleFieldBuilderV3<
                    cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck, cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck.Builder, cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAckOrBuilder> baseAckBuilder_;
            /**
             * <pre>
             *客户端登录结果
             * </pre>
             *
             * <code>optional .one2data.rbtmqmsgcli.common.BaseAck base_ack = 1;</code>
             */
            public boolean hasBaseAck() {
                return baseAckBuilder_ != null || baseAck_ != null;
            }
            /**
             * <pre>
             *客户端登录结果
             * </pre>
             *
             * <code>optional .one2data.rbtmqmsgcli.common.BaseAck base_ack = 1;</code>
             */
            public cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck getBaseAck() {
                if (baseAckBuilder_ == null) {
                    return baseAck_ == null ? cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck.getDefaultInstance() : baseAck_;
                } else {
                    return baseAckBuilder_.getMessage();
                }
            }
            /**
             * <pre>
             *客户端登录结果
             * </pre>
             *
             * <code>optional .one2data.rbtmqmsgcli.common.BaseAck base_ack = 1;</code>
             */
            public Builder setBaseAck(cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck value) {
                if (baseAckBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    baseAck_ = value;
                    onChanged();
                } else {
                    baseAckBuilder_.setMessage(value);
                }

                return this;
            }
            /**
             * <pre>
             *客户端登录结果
             * </pre>
             *
             * <code>optional .one2data.rbtmqmsgcli.common.BaseAck base_ack = 1;</code>
             */
            public Builder setBaseAck(
                    cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck.Builder builderForValue) {
                if (baseAckBuilder_ == null) {
                    baseAck_ = builderForValue.build();
                    onChanged();
                } else {
                    baseAckBuilder_.setMessage(builderForValue.build());
                }

                return this;
            }
            /**
             * <pre>
             *客户端登录结果
             * </pre>
             *
             * <code>optional .one2data.rbtmqmsgcli.common.BaseAck base_ack = 1;</code>
             */
            public Builder mergeBaseAck(cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck value) {
                if (baseAckBuilder_ == null) {
                    if (baseAck_ != null) {
                        baseAck_ =
                                cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck.newBuilder(baseAck_).mergeFrom(value).buildPartial();
                    } else {
                        baseAck_ = value;
                    }
                    onChanged();
                } else {
                    baseAckBuilder_.mergeFrom(value);
                }

                return this;
            }
            /**
             * <pre>
             *客户端登录结果
             * </pre>
             *
             * <code>optional .one2data.rbtmqmsgcli.common.BaseAck base_ack = 1;</code>
             */
            public Builder clearBaseAck() {
                if (baseAckBuilder_ == null) {
                    baseAck_ = null;
                    onChanged();
                } else {
                    baseAck_ = null;
                    baseAckBuilder_ = null;
                }

                return this;
            }
            /**
             * <pre>
             *客户端登录结果
             * </pre>
             *
             * <code>optional .one2data.rbtmqmsgcli.common.BaseAck base_ack = 1;</code>
             */
            public cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck.Builder getBaseAckBuilder() {

                onChanged();
                return getBaseAckFieldBuilder().getBuilder();
            }
            /**
             * <pre>
             *客户端登录结果
             * </pre>
             *
             * <code>optional .one2data.rbtmqmsgcli.common.BaseAck base_ack = 1;</code>
             */
            public cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAckOrBuilder getBaseAckOrBuilder() {
                if (baseAckBuilder_ != null) {
                    return baseAckBuilder_.getMessageOrBuilder();
                } else {
                    return baseAck_ == null ?
                            cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck.getDefaultInstance() : baseAck_;
                }
            }
            /**
             * <pre>
             *客户端登录结果
             * </pre>
             *
             * <code>optional .one2data.rbtmqmsgcli.common.BaseAck base_ack = 1;</code>
             */
            private com.google.protobuf.SingleFieldBuilderV3<
                    cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck, cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck.Builder, cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAckOrBuilder>
            getBaseAckFieldBuilder() {
                if (baseAckBuilder_ == null) {
                    baseAckBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                            cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck, cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck.Builder, cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAckOrBuilder>(
                            getBaseAck(),
                            getParentForChildren(),
                            isClean());
                    baseAck_ = null;
                }
                return baseAckBuilder_;
            }

            private int diskscanVersion_ ;
            /**
             * <pre>
             * Web 当前记录的磁盘扫描版本，由于客户端升级可能导致磁盘扫描程序生成的磁盘信息不兼容，
             * 因此该字段的存在是为了确保客户端升级后不会影响到旧版本的备份任务，取值如下：
             * 1. 当没有备份任务时，设为 -1, 表示磁盘扫描程序可以使用最新的策略生成磁盘信息
             * 2. 当存在备份任务，分两种情况：
             *    2.1 旧版协议没有该字段，即 Web 不知道当前任务对应的磁盘扫描版本，此时取默认值 0 即可
             *    2.2 该字段已存在，设为当前任务对应的磁盘扫描版本
             * </pre>
             *
             * <code>optional int32 diskscan_version = 2;</code>
             */
            public int getDiskscanVersion() {
                return diskscanVersion_;
            }
            /**
             * <pre>
             * Web 当前记录的磁盘扫描版本，由于客户端升级可能导致磁盘扫描程序生成的磁盘信息不兼容，
             * 因此该字段的存在是为了确保客户端升级后不会影响到旧版本的备份任务，取值如下：
             * 1. 当没有备份任务时，设为 -1, 表示磁盘扫描程序可以使用最新的策略生成磁盘信息
             * 2. 当存在备份任务，分两种情况：
             *    2.1 旧版协议没有该字段，即 Web 不知道当前任务对应的磁盘扫描版本，此时取默认值 0 即可
             *    2.2 该字段已存在，设为当前任务对应的磁盘扫描版本
             * </pre>
             *
             * <code>optional int32 diskscan_version = 2;</code>
             */
            public Builder setDiskscanVersion(int value) {

                diskscanVersion_ = value;
                onChanged();
                return this;
            }
            /**
             * <pre>
             * Web 当前记录的磁盘扫描版本，由于客户端升级可能导致磁盘扫描程序生成的磁盘信息不兼容，
             * 因此该字段的存在是为了确保客户端升级后不会影响到旧版本的备份任务，取值如下：
             * 1. 当没有备份任务时，设为 -1, 表示磁盘扫描程序可以使用最新的策略生成磁盘信息
             * 2. 当存在备份任务，分两种情况：
             *    2.1 旧版协议没有该字段，即 Web 不知道当前任务对应的磁盘扫描版本，此时取默认值 0 即可
             *    2.2 该字段已存在，设为当前任务对应的磁盘扫描版本
             * </pre>
             *
             * <code>optional int32 diskscan_version = 2;</code>
             */
            public Builder clearDiskscanVersion() {

                diskscanVersion_ = 0;
                onChanged();
                return this;
            }
            public final Builder setUnknownFields(
                    final com.google.protobuf.UnknownFieldSet unknownFields) {
                return this;
            }

            public final Builder mergeUnknownFields(
                    final com.google.protobuf.UnknownFieldSet unknownFields) {
                return this;
            }


            // @@protoc_insertion_point(builder_scope:one2data.rbtmqmsgcli.client.LoginAck)
        }

        // @@protoc_insertion_point(class_scope:one2data.rbtmqmsgcli.client.LoginAck)
        private static final cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.LoginAck DEFAULT_INSTANCE;
        static {
            DEFAULT_INSTANCE = new cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.LoginAck();
        }

        public static cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.LoginAck getDefaultInstance() {
            return DEFAULT_INSTANCE;
        }

        private static final com.google.protobuf.Parser<LoginAck>
                PARSER = new com.google.protobuf.AbstractParser<LoginAck>() {
            public LoginAck parsePartialFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws com.google.protobuf.InvalidProtocolBufferException {
                return new LoginAck(input, extensionRegistry);
            }
        };

        public static com.google.protobuf.Parser<LoginAck> parser() {
            return PARSER;
        }

        @Override
        public com.google.protobuf.Parser<LoginAck> getParserForType() {
            return PARSER;
        }

        public cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.LoginAck getDefaultInstanceForType() {
            return DEFAULT_INSTANCE;
        }

    }

    public interface AcquireNodeAndHardwareInfoOrBuilder extends
            // @@protoc_insertion_point(interface_extends:one2data.rbtmqmsgcli.client.AcquireNodeAndHardwareInfo)
            com.google.protobuf.MessageOrBuilder {

        /**
         * <pre>
         * 同 LoginAck 中的 disk_info_version
         * </pre>
         *
         * <code>optional int32 diskscan_version = 1;</code>
         */
        int getDiskscanVersion();
    }
    /**
     * <pre>
     *************WEB主动获取设备信息******************
     * </pre>
     *
     * Protobuf type {@code one2data.rbtmqmsgcli.client.AcquireNodeAndHardwareInfo}
     */
    public  static final class AcquireNodeAndHardwareInfo extends
            com.google.protobuf.GeneratedMessageV3 implements
            // @@protoc_insertion_point(message_implements:one2data.rbtmqmsgcli.client.AcquireNodeAndHardwareInfo)
            AcquireNodeAndHardwareInfoOrBuilder {
        // Use AcquireNodeAndHardwareInfo.newBuilder() to construct.
        private AcquireNodeAndHardwareInfo(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
            super(builder);
        }
        private AcquireNodeAndHardwareInfo() {
            diskscanVersion_ = 0;
        }

        @Override
        public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
            return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
        }
        private AcquireNodeAndHardwareInfo(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            this();
            int mutable_bitField0_ = 0;
            try {
                boolean done = false;
                while (!done) {
                    int tag = input.readTag();
                    switch (tag) {
                        case 0:
                            done = true;
                            break;
                        default: {
                            if (!input.skipField(tag)) {
                                done = true;
                            }
                            break;
                        }
                        case 8: {

                            diskscanVersion_ = input.readInt32();
                            break;
                        }
                    }
                }
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(this);
            } catch (java.io.IOException e) {
                throw new com.google.protobuf.InvalidProtocolBufferException(
                        e).setUnfinishedMessage(this);
            } finally {
                makeExtensionsImmutable();
            }
        }
        public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
            return cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.internal_static_one2data_rbtmqmsgcli_client_AcquireNodeAndHardwareInfo_descriptor;
        }

        protected FieldAccessorTable
        internalGetFieldAccessorTable() {
            return cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.internal_static_one2data_rbtmqmsgcli_client_AcquireNodeAndHardwareInfo_fieldAccessorTable
                    .ensureFieldAccessorsInitialized(
                            cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.AcquireNodeAndHardwareInfo.class, cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.AcquireNodeAndHardwareInfo.Builder.class);
        }

        public static final int DISKSCAN_VERSION_FIELD_NUMBER = 1;
        private int diskscanVersion_;
        /**
         * <pre>
         * 同 LoginAck 中的 disk_info_version
         * </pre>
         *
         * <code>optional int32 diskscan_version = 1;</code>
         */
        public int getDiskscanVersion() {
            return diskscanVersion_;
        }

        private byte memoizedIsInitialized = -1;
        public final boolean isInitialized() {
            byte isInitialized = memoizedIsInitialized;
            if (isInitialized == 1) return true;
            if (isInitialized == 0) return false;

            memoizedIsInitialized = 1;
            return true;
        }

        public void writeTo(com.google.protobuf.CodedOutputStream output)
                throws java.io.IOException {
            if (diskscanVersion_ != 0) {
                output.writeInt32(1, diskscanVersion_);
            }
        }

        public int getSerializedSize() {
            int size = memoizedSize;
            if (size != -1) return size;

            size = 0;
            if (diskscanVersion_ != 0) {
                size += com.google.protobuf.CodedOutputStream
                        .computeInt32Size(1, diskscanVersion_);
            }
            memoizedSize = size;
            return size;
        }

        private static final long serialVersionUID = 0L;
        @Override
        public boolean equals(final Object obj) {
            if (obj == this) {
                return true;
            }
            if (!(obj instanceof cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.AcquireNodeAndHardwareInfo)) {
                return super.equals(obj);
            }
            cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.AcquireNodeAndHardwareInfo other = (cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.AcquireNodeAndHardwareInfo) obj;

            boolean result = true;
            result = result && (getDiskscanVersion()
                    == other.getDiskscanVersion());
            return result;
        }

        @Override
        public int hashCode() {
            if (memoizedHashCode != 0) {
                return memoizedHashCode;
            }
            int hash = 41;
            hash = (19 * hash) + getDescriptorForType().hashCode();
            hash = (37 * hash) + DISKSCAN_VERSION_FIELD_NUMBER;
            hash = (53 * hash) + getDiskscanVersion();
            hash = (29 * hash) + unknownFields.hashCode();
            memoizedHashCode = hash;
            return hash;
        }

        public static cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.AcquireNodeAndHardwareInfo parseFrom(
                com.google.protobuf.ByteString data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }
        public static cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.AcquireNodeAndHardwareInfo parseFrom(
                com.google.protobuf.ByteString data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }
        public static cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.AcquireNodeAndHardwareInfo parseFrom(byte[] data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }
        public static cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.AcquireNodeAndHardwareInfo parseFrom(
                byte[] data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }
        public static cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.AcquireNodeAndHardwareInfo parseFrom(java.io.InputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input);
        }
        public static cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.AcquireNodeAndHardwareInfo parseFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input, extensionRegistry);
        }
        public static cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.AcquireNodeAndHardwareInfo parseDelimitedFrom(java.io.InputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseDelimitedWithIOException(PARSER, input);
        }
        public static cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.AcquireNodeAndHardwareInfo parseDelimitedFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
        }
        public static cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.AcquireNodeAndHardwareInfo parseFrom(
                com.google.protobuf.CodedInputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input);
        }
        public static cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.AcquireNodeAndHardwareInfo parseFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input, extensionRegistry);
        }

        public Builder newBuilderForType() { return newBuilder(); }
        public static Builder newBuilder() {
            return DEFAULT_INSTANCE.toBuilder();
        }
        public static Builder newBuilder(cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.AcquireNodeAndHardwareInfo prototype) {
            return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }
        public Builder toBuilder() {
            return this == DEFAULT_INSTANCE
                    ? new Builder() : new Builder().mergeFrom(this);
        }

        @Override
        protected Builder newBuilderForType(
                BuilderParent parent) {
            Builder builder = new Builder(parent);
            return builder;
        }
        /**
         * <pre>
         *************WEB主动获取设备信息******************
         * </pre>
         *
         * Protobuf type {@code one2data.rbtmqmsgcli.client.AcquireNodeAndHardwareInfo}
         */
        public static final class Builder extends
                com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
                // @@protoc_insertion_point(builder_implements:one2data.rbtmqmsgcli.client.AcquireNodeAndHardwareInfo)
                cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.AcquireNodeAndHardwareInfoOrBuilder {
            public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
                return cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.internal_static_one2data_rbtmqmsgcli_client_AcquireNodeAndHardwareInfo_descriptor;
            }

            protected FieldAccessorTable
            internalGetFieldAccessorTable() {
                return cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.internal_static_one2data_rbtmqmsgcli_client_AcquireNodeAndHardwareInfo_fieldAccessorTable
                        .ensureFieldAccessorsInitialized(
                                cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.AcquireNodeAndHardwareInfo.class, cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.AcquireNodeAndHardwareInfo.Builder.class);
            }

            // Construct using cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.AcquireNodeAndHardwareInfo.newBuilder()
            private Builder() {
                maybeForceBuilderInitialization();
            }

            private Builder(
                    BuilderParent parent) {
                super(parent);
                maybeForceBuilderInitialization();
            }
            private void maybeForceBuilderInitialization() {
                if (com.google.protobuf.GeneratedMessageV3
                        .alwaysUseFieldBuilders) {
                }
            }
            public Builder clear() {
                super.clear();
                diskscanVersion_ = 0;

                return this;
            }

            public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
                return cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.internal_static_one2data_rbtmqmsgcli_client_AcquireNodeAndHardwareInfo_descriptor;
            }

            public cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.AcquireNodeAndHardwareInfo getDefaultInstanceForType() {
                return cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.AcquireNodeAndHardwareInfo.getDefaultInstance();
            }

            public cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.AcquireNodeAndHardwareInfo build() {
                cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.AcquireNodeAndHardwareInfo result = buildPartial();
                if (!result.isInitialized()) {
                    throw newUninitializedMessageException(result);
                }
                return result;
            }

            public cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.AcquireNodeAndHardwareInfo buildPartial() {
                cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.AcquireNodeAndHardwareInfo result = new cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.AcquireNodeAndHardwareInfo(this);
                result.diskscanVersion_ = diskscanVersion_;
                onBuilt();
                return result;
            }

            public Builder clone() {
                return (Builder) super.clone();
            }
            public Builder setField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    Object value) {
                return (Builder) super.setField(field, value);
            }
            public Builder clearField(
                    com.google.protobuf.Descriptors.FieldDescriptor field) {
                return (Builder) super.clearField(field);
            }
            public Builder clearOneof(
                    com.google.protobuf.Descriptors.OneofDescriptor oneof) {
                return (Builder) super.clearOneof(oneof);
            }
            public Builder setRepeatedField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    int index, Object value) {
                return (Builder) super.setRepeatedField(field, index, value);
            }
            public Builder addRepeatedField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    Object value) {
                return (Builder) super.addRepeatedField(field, value);
            }
            public Builder mergeFrom(com.google.protobuf.Message other) {
                if (other instanceof cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.AcquireNodeAndHardwareInfo) {
                    return mergeFrom((cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.AcquireNodeAndHardwareInfo)other);
                } else {
                    super.mergeFrom(other);
                    return this;
                }
            }

            public Builder mergeFrom(cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.AcquireNodeAndHardwareInfo other) {
                if (other == cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.AcquireNodeAndHardwareInfo.getDefaultInstance()) return this;
                if (other.getDiskscanVersion() != 0) {
                    setDiskscanVersion(other.getDiskscanVersion());
                }
                onChanged();
                return this;
            }

            public final boolean isInitialized() {
                return true;
            }

            public Builder mergeFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws java.io.IOException {
                cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.AcquireNodeAndHardwareInfo parsedMessage = null;
                try {
                    parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
                } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                    parsedMessage = (cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.AcquireNodeAndHardwareInfo) e.getUnfinishedMessage();
                    throw e.unwrapIOException();
                } finally {
                    if (parsedMessage != null) {
                        mergeFrom(parsedMessage);
                    }
                }
                return this;
            }

            private int diskscanVersion_ ;
            /**
             * <pre>
             * 同 LoginAck 中的 disk_info_version
             * </pre>
             *
             * <code>optional int32 diskscan_version = 1;</code>
             */
            public int getDiskscanVersion() {
                return diskscanVersion_;
            }
            /**
             * <pre>
             * 同 LoginAck 中的 disk_info_version
             * </pre>
             *
             * <code>optional int32 diskscan_version = 1;</code>
             */
            public Builder setDiskscanVersion(int value) {

                diskscanVersion_ = value;
                onChanged();
                return this;
            }
            /**
             * <pre>
             * 同 LoginAck 中的 disk_info_version
             * </pre>
             *
             * <code>optional int32 diskscan_version = 1;</code>
             */
            public Builder clearDiskscanVersion() {

                diskscanVersion_ = 0;
                onChanged();
                return this;
            }
            public final Builder setUnknownFields(
                    final com.google.protobuf.UnknownFieldSet unknownFields) {
                return this;
            }

            public final Builder mergeUnknownFields(
                    final com.google.protobuf.UnknownFieldSet unknownFields) {
                return this;
            }


            // @@protoc_insertion_point(builder_scope:one2data.rbtmqmsgcli.client.AcquireNodeAndHardwareInfo)
        }

        // @@protoc_insertion_point(class_scope:one2data.rbtmqmsgcli.client.AcquireNodeAndHardwareInfo)
        private static final cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.AcquireNodeAndHardwareInfo DEFAULT_INSTANCE;
        static {
            DEFAULT_INSTANCE = new cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.AcquireNodeAndHardwareInfo();
        }

        public static cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.AcquireNodeAndHardwareInfo getDefaultInstance() {
            return DEFAULT_INSTANCE;
        }

        private static final com.google.protobuf.Parser<AcquireNodeAndHardwareInfo>
                PARSER = new com.google.protobuf.AbstractParser<AcquireNodeAndHardwareInfo>() {
            public AcquireNodeAndHardwareInfo parsePartialFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws com.google.protobuf.InvalidProtocolBufferException {
                return new AcquireNodeAndHardwareInfo(input, extensionRegistry);
            }
        };

        public static com.google.protobuf.Parser<AcquireNodeAndHardwareInfo> parser() {
            return PARSER;
        }

        @Override
        public com.google.protobuf.Parser<AcquireNodeAndHardwareInfo> getParserForType() {
            return PARSER;
        }

        public cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.AcquireNodeAndHardwareInfo getDefaultInstanceForType() {
            return DEFAULT_INSTANCE;
        }

    }

    public interface AcquireNodeAndHardwareInfoAckOrBuilder extends
            // @@protoc_insertion_point(interface_extends:one2data.rbtmqmsgcli.client.AcquireNodeAndHardwareInfoAck)
            com.google.protobuf.MessageOrBuilder {

        /**
         * <pre>
         *节点信息
         * </pre>
         *
         * <code>optional .one2data.rbtmqmsgcli.client.NodeAndHardwareInfo node_and_hardware_info = 1;</code>
         */
        boolean hasNodeAndHardwareInfo();
        /**
         * <pre>
         *节点信息
         * </pre>
         *
         * <code>optional .one2data.rbtmqmsgcli.client.NodeAndHardwareInfo node_and_hardware_info = 1;</code>
         */
        cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.NodeAndHardwareInfo getNodeAndHardwareInfo();
        /**
         * <pre>
         *节点信息
         * </pre>
         *
         * <code>optional .one2data.rbtmqmsgcli.client.NodeAndHardwareInfo node_and_hardware_info = 1;</code>
         */
        cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.NodeAndHardwareInfoOrBuilder getNodeAndHardwareInfoOrBuilder();
    }
    /**
     * <pre>
     *************客户端响应设备信息******************
     * </pre>
     *
     * Protobuf type {@code one2data.rbtmqmsgcli.client.AcquireNodeAndHardwareInfoAck}
     */
    public  static final class AcquireNodeAndHardwareInfoAck extends
            com.google.protobuf.GeneratedMessageV3 implements
            // @@protoc_insertion_point(message_implements:one2data.rbtmqmsgcli.client.AcquireNodeAndHardwareInfoAck)
            AcquireNodeAndHardwareInfoAckOrBuilder {
        // Use AcquireNodeAndHardwareInfoAck.newBuilder() to construct.
        private AcquireNodeAndHardwareInfoAck(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
            super(builder);
        }
        private AcquireNodeAndHardwareInfoAck() {
        }

        @Override
        public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
            return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
        }
        private AcquireNodeAndHardwareInfoAck(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            this();
            int mutable_bitField0_ = 0;
            try {
                boolean done = false;
                while (!done) {
                    int tag = input.readTag();
                    switch (tag) {
                        case 0:
                            done = true;
                            break;
                        default: {
                            if (!input.skipField(tag)) {
                                done = true;
                            }
                            break;
                        }
                        case 10: {
                            cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.NodeAndHardwareInfo.Builder subBuilder = null;
                            if (nodeAndHardwareInfo_ != null) {
                                subBuilder = nodeAndHardwareInfo_.toBuilder();
                            }
                            nodeAndHardwareInfo_ = input.readMessage(cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.NodeAndHardwareInfo.parser(), extensionRegistry);
                            if (subBuilder != null) {
                                subBuilder.mergeFrom(nodeAndHardwareInfo_);
                                nodeAndHardwareInfo_ = subBuilder.buildPartial();
                            }

                            break;
                        }
                    }
                }
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(this);
            } catch (java.io.IOException e) {
                throw new com.google.protobuf.InvalidProtocolBufferException(
                        e).setUnfinishedMessage(this);
            } finally {
                makeExtensionsImmutable();
            }
        }
        public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
            return cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.internal_static_one2data_rbtmqmsgcli_client_AcquireNodeAndHardwareInfoAck_descriptor;
        }

        protected FieldAccessorTable
        internalGetFieldAccessorTable() {
            return cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.internal_static_one2data_rbtmqmsgcli_client_AcquireNodeAndHardwareInfoAck_fieldAccessorTable
                    .ensureFieldAccessorsInitialized(
                            cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.AcquireNodeAndHardwareInfoAck.class, cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.AcquireNodeAndHardwareInfoAck.Builder.class);
        }

        public static final int NODE_AND_HARDWARE_INFO_FIELD_NUMBER = 1;
        private cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.NodeAndHardwareInfo nodeAndHardwareInfo_;
        /**
         * <pre>
         *节点信息
         * </pre>
         *
         * <code>optional .one2data.rbtmqmsgcli.client.NodeAndHardwareInfo node_and_hardware_info = 1;</code>
         */
        public boolean hasNodeAndHardwareInfo() {
            return nodeAndHardwareInfo_ != null;
        }
        /**
         * <pre>
         *节点信息
         * </pre>
         *
         * <code>optional .one2data.rbtmqmsgcli.client.NodeAndHardwareInfo node_and_hardware_info = 1;</code>
         */
        public cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.NodeAndHardwareInfo getNodeAndHardwareInfo() {
            return nodeAndHardwareInfo_ == null ? cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.NodeAndHardwareInfo.getDefaultInstance() : nodeAndHardwareInfo_;
        }
        /**
         * <pre>
         *节点信息
         * </pre>
         *
         * <code>optional .one2data.rbtmqmsgcli.client.NodeAndHardwareInfo node_and_hardware_info = 1;</code>
         */
        public cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.NodeAndHardwareInfoOrBuilder getNodeAndHardwareInfoOrBuilder() {
            return getNodeAndHardwareInfo();
        }

        private byte memoizedIsInitialized = -1;
        public final boolean isInitialized() {
            byte isInitialized = memoizedIsInitialized;
            if (isInitialized == 1) return true;
            if (isInitialized == 0) return false;

            memoizedIsInitialized = 1;
            return true;
        }

        public void writeTo(com.google.protobuf.CodedOutputStream output)
                throws java.io.IOException {
            if (nodeAndHardwareInfo_ != null) {
                output.writeMessage(1, getNodeAndHardwareInfo());
            }
        }

        public int getSerializedSize() {
            int size = memoizedSize;
            if (size != -1) return size;

            size = 0;
            if (nodeAndHardwareInfo_ != null) {
                size += com.google.protobuf.CodedOutputStream
                        .computeMessageSize(1, getNodeAndHardwareInfo());
            }
            memoizedSize = size;
            return size;
        }

        private static final long serialVersionUID = 0L;
        @Override
        public boolean equals(final Object obj) {
            if (obj == this) {
                return true;
            }
            if (!(obj instanceof cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.AcquireNodeAndHardwareInfoAck)) {
                return super.equals(obj);
            }
            cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.AcquireNodeAndHardwareInfoAck other = (cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.AcquireNodeAndHardwareInfoAck) obj;

            boolean result = true;
            result = result && (hasNodeAndHardwareInfo() == other.hasNodeAndHardwareInfo());
            if (hasNodeAndHardwareInfo()) {
                result = result && getNodeAndHardwareInfo()
                        .equals(other.getNodeAndHardwareInfo());
            }
            return result;
        }

        @Override
        public int hashCode() {
            if (memoizedHashCode != 0) {
                return memoizedHashCode;
            }
            int hash = 41;
            hash = (19 * hash) + getDescriptorForType().hashCode();
            if (hasNodeAndHardwareInfo()) {
                hash = (37 * hash) + NODE_AND_HARDWARE_INFO_FIELD_NUMBER;
                hash = (53 * hash) + getNodeAndHardwareInfo().hashCode();
            }
            hash = (29 * hash) + unknownFields.hashCode();
            memoizedHashCode = hash;
            return hash;
        }

        public static cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.AcquireNodeAndHardwareInfoAck parseFrom(
                com.google.protobuf.ByteString data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }
        public static cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.AcquireNodeAndHardwareInfoAck parseFrom(
                com.google.protobuf.ByteString data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }
        public static cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.AcquireNodeAndHardwareInfoAck parseFrom(byte[] data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }
        public static cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.AcquireNodeAndHardwareInfoAck parseFrom(
                byte[] data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }
        public static cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.AcquireNodeAndHardwareInfoAck parseFrom(java.io.InputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input);
        }
        public static cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.AcquireNodeAndHardwareInfoAck parseFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input, extensionRegistry);
        }
        public static cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.AcquireNodeAndHardwareInfoAck parseDelimitedFrom(java.io.InputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseDelimitedWithIOException(PARSER, input);
        }
        public static cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.AcquireNodeAndHardwareInfoAck parseDelimitedFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
        }
        public static cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.AcquireNodeAndHardwareInfoAck parseFrom(
                com.google.protobuf.CodedInputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input);
        }
        public static cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.AcquireNodeAndHardwareInfoAck parseFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input, extensionRegistry);
        }

        public Builder newBuilderForType() { return newBuilder(); }
        public static Builder newBuilder() {
            return DEFAULT_INSTANCE.toBuilder();
        }
        public static Builder newBuilder(cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.AcquireNodeAndHardwareInfoAck prototype) {
            return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }
        public Builder toBuilder() {
            return this == DEFAULT_INSTANCE
                    ? new Builder() : new Builder().mergeFrom(this);
        }

        @Override
        protected Builder newBuilderForType(
                BuilderParent parent) {
            Builder builder = new Builder(parent);
            return builder;
        }
        /**
         * <pre>
         *************客户端响应设备信息******************
         * </pre>
         *
         * Protobuf type {@code one2data.rbtmqmsgcli.client.AcquireNodeAndHardwareInfoAck}
         */
        public static final class Builder extends
                com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
                // @@protoc_insertion_point(builder_implements:one2data.rbtmqmsgcli.client.AcquireNodeAndHardwareInfoAck)
                cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.AcquireNodeAndHardwareInfoAckOrBuilder {
            public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
                return cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.internal_static_one2data_rbtmqmsgcli_client_AcquireNodeAndHardwareInfoAck_descriptor;
            }

            protected FieldAccessorTable
            internalGetFieldAccessorTable() {
                return cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.internal_static_one2data_rbtmqmsgcli_client_AcquireNodeAndHardwareInfoAck_fieldAccessorTable
                        .ensureFieldAccessorsInitialized(
                                cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.AcquireNodeAndHardwareInfoAck.class, cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.AcquireNodeAndHardwareInfoAck.Builder.class);
            }

            // Construct using cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.AcquireNodeAndHardwareInfoAck.newBuilder()
            private Builder() {
                maybeForceBuilderInitialization();
            }

            private Builder(
                    BuilderParent parent) {
                super(parent);
                maybeForceBuilderInitialization();
            }
            private void maybeForceBuilderInitialization() {
                if (com.google.protobuf.GeneratedMessageV3
                        .alwaysUseFieldBuilders) {
                }
            }
            public Builder clear() {
                super.clear();
                if (nodeAndHardwareInfoBuilder_ == null) {
                    nodeAndHardwareInfo_ = null;
                } else {
                    nodeAndHardwareInfo_ = null;
                    nodeAndHardwareInfoBuilder_ = null;
                }
                return this;
            }

            public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
                return cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.internal_static_one2data_rbtmqmsgcli_client_AcquireNodeAndHardwareInfoAck_descriptor;
            }

            public cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.AcquireNodeAndHardwareInfoAck getDefaultInstanceForType() {
                return cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.AcquireNodeAndHardwareInfoAck.getDefaultInstance();
            }

            public cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.AcquireNodeAndHardwareInfoAck build() {
                cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.AcquireNodeAndHardwareInfoAck result = buildPartial();
                if (!result.isInitialized()) {
                    throw newUninitializedMessageException(result);
                }
                return result;
            }

            public cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.AcquireNodeAndHardwareInfoAck buildPartial() {
                cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.AcquireNodeAndHardwareInfoAck result = new cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.AcquireNodeAndHardwareInfoAck(this);
                if (nodeAndHardwareInfoBuilder_ == null) {
                    result.nodeAndHardwareInfo_ = nodeAndHardwareInfo_;
                } else {
                    result.nodeAndHardwareInfo_ = nodeAndHardwareInfoBuilder_.build();
                }
                onBuilt();
                return result;
            }

            public Builder clone() {
                return (Builder) super.clone();
            }
            public Builder setField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    Object value) {
                return (Builder) super.setField(field, value);
            }
            public Builder clearField(
                    com.google.protobuf.Descriptors.FieldDescriptor field) {
                return (Builder) super.clearField(field);
            }
            public Builder clearOneof(
                    com.google.protobuf.Descriptors.OneofDescriptor oneof) {
                return (Builder) super.clearOneof(oneof);
            }
            public Builder setRepeatedField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    int index, Object value) {
                return (Builder) super.setRepeatedField(field, index, value);
            }
            public Builder addRepeatedField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    Object value) {
                return (Builder) super.addRepeatedField(field, value);
            }
            public Builder mergeFrom(com.google.protobuf.Message other) {
                if (other instanceof cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.AcquireNodeAndHardwareInfoAck) {
                    return mergeFrom((cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.AcquireNodeAndHardwareInfoAck)other);
                } else {
                    super.mergeFrom(other);
                    return this;
                }
            }

            public Builder mergeFrom(cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.AcquireNodeAndHardwareInfoAck other) {
                if (other == cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.AcquireNodeAndHardwareInfoAck.getDefaultInstance()) return this;
                if (other.hasNodeAndHardwareInfo()) {
                    mergeNodeAndHardwareInfo(other.getNodeAndHardwareInfo());
                }
                onChanged();
                return this;
            }

            public final boolean isInitialized() {
                return true;
            }

            public Builder mergeFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws java.io.IOException {
                cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.AcquireNodeAndHardwareInfoAck parsedMessage = null;
                try {
                    parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
                } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                    parsedMessage = (cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.AcquireNodeAndHardwareInfoAck) e.getUnfinishedMessage();
                    throw e.unwrapIOException();
                } finally {
                    if (parsedMessage != null) {
                        mergeFrom(parsedMessage);
                    }
                }
                return this;
            }

            private cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.NodeAndHardwareInfo nodeAndHardwareInfo_ = null;
            private com.google.protobuf.SingleFieldBuilderV3<
                    cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.NodeAndHardwareInfo, cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.NodeAndHardwareInfo.Builder, cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.NodeAndHardwareInfoOrBuilder> nodeAndHardwareInfoBuilder_;
            /**
             * <pre>
             *节点信息
             * </pre>
             *
             * <code>optional .one2data.rbtmqmsgcli.client.NodeAndHardwareInfo node_and_hardware_info = 1;</code>
             */
            public boolean hasNodeAndHardwareInfo() {
                return nodeAndHardwareInfoBuilder_ != null || nodeAndHardwareInfo_ != null;
            }
            /**
             * <pre>
             *节点信息
             * </pre>
             *
             * <code>optional .one2data.rbtmqmsgcli.client.NodeAndHardwareInfo node_and_hardware_info = 1;</code>
             */
            public cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.NodeAndHardwareInfo getNodeAndHardwareInfo() {
                if (nodeAndHardwareInfoBuilder_ == null) {
                    return nodeAndHardwareInfo_ == null ? cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.NodeAndHardwareInfo.getDefaultInstance() : nodeAndHardwareInfo_;
                } else {
                    return nodeAndHardwareInfoBuilder_.getMessage();
                }
            }
            /**
             * <pre>
             *节点信息
             * </pre>
             *
             * <code>optional .one2data.rbtmqmsgcli.client.NodeAndHardwareInfo node_and_hardware_info = 1;</code>
             */
            public Builder setNodeAndHardwareInfo(cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.NodeAndHardwareInfo value) {
                if (nodeAndHardwareInfoBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    nodeAndHardwareInfo_ = value;
                    onChanged();
                } else {
                    nodeAndHardwareInfoBuilder_.setMessage(value);
                }

                return this;
            }
            /**
             * <pre>
             *节点信息
             * </pre>
             *
             * <code>optional .one2data.rbtmqmsgcli.client.NodeAndHardwareInfo node_and_hardware_info = 1;</code>
             */
            public Builder setNodeAndHardwareInfo(
                    cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.NodeAndHardwareInfo.Builder builderForValue) {
                if (nodeAndHardwareInfoBuilder_ == null) {
                    nodeAndHardwareInfo_ = builderForValue.build();
                    onChanged();
                } else {
                    nodeAndHardwareInfoBuilder_.setMessage(builderForValue.build());
                }

                return this;
            }
            /**
             * <pre>
             *节点信息
             * </pre>
             *
             * <code>optional .one2data.rbtmqmsgcli.client.NodeAndHardwareInfo node_and_hardware_info = 1;</code>
             */
            public Builder mergeNodeAndHardwareInfo(cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.NodeAndHardwareInfo value) {
                if (nodeAndHardwareInfoBuilder_ == null) {
                    if (nodeAndHardwareInfo_ != null) {
                        nodeAndHardwareInfo_ =
                                cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.NodeAndHardwareInfo.newBuilder(nodeAndHardwareInfo_).mergeFrom(value).buildPartial();
                    } else {
                        nodeAndHardwareInfo_ = value;
                    }
                    onChanged();
                } else {
                    nodeAndHardwareInfoBuilder_.mergeFrom(value);
                }

                return this;
            }
            /**
             * <pre>
             *节点信息
             * </pre>
             *
             * <code>optional .one2data.rbtmqmsgcli.client.NodeAndHardwareInfo node_and_hardware_info = 1;</code>
             */
            public Builder clearNodeAndHardwareInfo() {
                if (nodeAndHardwareInfoBuilder_ == null) {
                    nodeAndHardwareInfo_ = null;
                    onChanged();
                } else {
                    nodeAndHardwareInfo_ = null;
                    nodeAndHardwareInfoBuilder_ = null;
                }

                return this;
            }
            /**
             * <pre>
             *节点信息
             * </pre>
             *
             * <code>optional .one2data.rbtmqmsgcli.client.NodeAndHardwareInfo node_and_hardware_info = 1;</code>
             */
            public cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.NodeAndHardwareInfo.Builder getNodeAndHardwareInfoBuilder() {

                onChanged();
                return getNodeAndHardwareInfoFieldBuilder().getBuilder();
            }
            /**
             * <pre>
             *节点信息
             * </pre>
             *
             * <code>optional .one2data.rbtmqmsgcli.client.NodeAndHardwareInfo node_and_hardware_info = 1;</code>
             */
            public cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.NodeAndHardwareInfoOrBuilder getNodeAndHardwareInfoOrBuilder() {
                if (nodeAndHardwareInfoBuilder_ != null) {
                    return nodeAndHardwareInfoBuilder_.getMessageOrBuilder();
                } else {
                    return nodeAndHardwareInfo_ == null ?
                            cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.NodeAndHardwareInfo.getDefaultInstance() : nodeAndHardwareInfo_;
                }
            }
            /**
             * <pre>
             *节点信息
             * </pre>
             *
             * <code>optional .one2data.rbtmqmsgcli.client.NodeAndHardwareInfo node_and_hardware_info = 1;</code>
             */
            private com.google.protobuf.SingleFieldBuilderV3<
                    cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.NodeAndHardwareInfo, cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.NodeAndHardwareInfo.Builder, cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.NodeAndHardwareInfoOrBuilder>
            getNodeAndHardwareInfoFieldBuilder() {
                if (nodeAndHardwareInfoBuilder_ == null) {
                    nodeAndHardwareInfoBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                            cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.NodeAndHardwareInfo, cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.NodeAndHardwareInfo.Builder, cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.NodeAndHardwareInfoOrBuilder>(
                            getNodeAndHardwareInfo(),
                            getParentForChildren(),
                            isClean());
                    nodeAndHardwareInfo_ = null;
                }
                return nodeAndHardwareInfoBuilder_;
            }
            public final Builder setUnknownFields(
                    final com.google.protobuf.UnknownFieldSet unknownFields) {
                return this;
            }

            public final Builder mergeUnknownFields(
                    final com.google.protobuf.UnknownFieldSet unknownFields) {
                return this;
            }


            // @@protoc_insertion_point(builder_scope:one2data.rbtmqmsgcli.client.AcquireNodeAndHardwareInfoAck)
        }

        // @@protoc_insertion_point(class_scope:one2data.rbtmqmsgcli.client.AcquireNodeAndHardwareInfoAck)
        private static final cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.AcquireNodeAndHardwareInfoAck DEFAULT_INSTANCE;
        static {
            DEFAULT_INSTANCE = new cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.AcquireNodeAndHardwareInfoAck();
        }

        public static cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.AcquireNodeAndHardwareInfoAck getDefaultInstance() {
            return DEFAULT_INSTANCE;
        }

        private static final com.google.protobuf.Parser<AcquireNodeAndHardwareInfoAck>
                PARSER = new com.google.protobuf.AbstractParser<AcquireNodeAndHardwareInfoAck>() {
            public AcquireNodeAndHardwareInfoAck parsePartialFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws com.google.protobuf.InvalidProtocolBufferException {
                return new AcquireNodeAndHardwareInfoAck(input, extensionRegistry);
            }
        };

        public static com.google.protobuf.Parser<AcquireNodeAndHardwareInfoAck> parser() {
            return PARSER;
        }

        @Override
        public com.google.protobuf.Parser<AcquireNodeAndHardwareInfoAck> getParserForType() {
            return PARSER;
        }

        public cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.AcquireNodeAndHardwareInfoAck getDefaultInstanceForType() {
            return DEFAULT_INSTANCE;
        }

    }

    public interface HardwareInfoOrBuilder extends
            // @@protoc_insertion_point(interface_extends:one2data.rbtmqmsgcli.client.HardwareInfo)
            com.google.protobuf.MessageOrBuilder {

        /**
         * <pre>
         *磁盘信息
         * </pre>
         *
         * <code>repeated .one2data.rbtmqmsgcli.client.HarddiskInfo harddisk_info = 1;</code>
         */
        java.util.List<cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.HarddiskInfo>
        getHarddiskInfoList();
        /**
         * <pre>
         *磁盘信息
         * </pre>
         *
         * <code>repeated .one2data.rbtmqmsgcli.client.HarddiskInfo harddisk_info = 1;</code>
         */
        cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.HarddiskInfo getHarddiskInfo(int index);
        /**
         * <pre>
         *磁盘信息
         * </pre>
         *
         * <code>repeated .one2data.rbtmqmsgcli.client.HarddiskInfo harddisk_info = 1;</code>
         */
        int getHarddiskInfoCount();
        /**
         * <pre>
         *磁盘信息
         * </pre>
         *
         * <code>repeated .one2data.rbtmqmsgcli.client.HarddiskInfo harddisk_info = 1;</code>
         */
        java.util.List<? extends cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.HarddiskInfoOrBuilder>
        getHarddiskInfoOrBuilderList();
        /**
         * <pre>
         *磁盘信息
         * </pre>
         *
         * <code>repeated .one2data.rbtmqmsgcli.client.HarddiskInfo harddisk_info = 1;</code>
         */
        cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.HarddiskInfoOrBuilder getHarddiskInfoOrBuilder(
                int index);

        /**
         * <pre>
         *分区信息
         * </pre>
         *
         * <code>repeated .one2data.rbtmqmsgcli.client.PartitionInfo partition_info = 2;</code>
         */
        java.util.List<cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.PartitionInfo>
        getPartitionInfoList();
        /**
         * <pre>
         *分区信息
         * </pre>
         *
         * <code>repeated .one2data.rbtmqmsgcli.client.PartitionInfo partition_info = 2;</code>
         */
        cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.PartitionInfo getPartitionInfo(int index);
        /**
         * <pre>
         *分区信息
         * </pre>
         *
         * <code>repeated .one2data.rbtmqmsgcli.client.PartitionInfo partition_info = 2;</code>
         */
        int getPartitionInfoCount();
        /**
         * <pre>
         *分区信息
         * </pre>
         *
         * <code>repeated .one2data.rbtmqmsgcli.client.PartitionInfo partition_info = 2;</code>
         */
        java.util.List<? extends cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.PartitionInfoOrBuilder>
        getPartitionInfoOrBuilderList();
        /**
         * <pre>
         *分区信息
         * </pre>
         *
         * <code>repeated .one2data.rbtmqmsgcli.client.PartitionInfo partition_info = 2;</code>
         */
        cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.PartitionInfoOrBuilder getPartitionInfoOrBuilder(
                int index);

        /**
         * <pre>
         *逻辑卷信息
         * </pre>
         *
         * <code>repeated .one2data.rbtmqmsgcli.client.LVInfo lv_info = 3;</code>
         */
        java.util.List<cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.LVInfo>
        getLvInfoList();
        /**
         * <pre>
         *逻辑卷信息
         * </pre>
         *
         * <code>repeated .one2data.rbtmqmsgcli.client.LVInfo lv_info = 3;</code>
         */
        cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.LVInfo getLvInfo(int index);
        /**
         * <pre>
         *逻辑卷信息
         * </pre>
         *
         * <code>repeated .one2data.rbtmqmsgcli.client.LVInfo lv_info = 3;</code>
         */
        int getLvInfoCount();
        /**
         * <pre>
         *逻辑卷信息
         * </pre>
         *
         * <code>repeated .one2data.rbtmqmsgcli.client.LVInfo lv_info = 3;</code>
         */
        java.util.List<? extends cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.LVInfoOrBuilder>
        getLvInfoOrBuilderList();
        /**
         * <pre>
         *逻辑卷信息
         * </pre>
         *
         * <code>repeated .one2data.rbtmqmsgcli.client.LVInfo lv_info = 3;</code>
         */
        cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.LVInfoOrBuilder getLvInfoOrBuilder(
                int index);

        /**
         * <pre>
         * 磁盘扫描生成的原始 json 字符串
         * </pre>
         *
         * <code>optional string disk_info_json = 4;</code>
         */
        String getDiskInfoJson();
        /**
         * <pre>
         * 磁盘扫描生成的原始 json 字符串
         * </pre>
         *
         * <code>optional string disk_info_json = 4;</code>
         */
        com.google.protobuf.ByteString
        getDiskInfoJsonBytes();

        /**
         * <code>optional string volume_info_json = 5;</code>
         */
        String getVolumeInfoJson();
        /**
         * <code>optional string volume_info_json = 5;</code>
         */
        com.google.protobuf.ByteString
        getVolumeInfoJsonBytes();

        /**
         * <pre>
         * 磁盘扫描版本，不同的版本生成的磁盘信息会有差异
         * </pre>
         *
         * <code>optional int32 diskscan_version = 6;</code>
         */
        int getDiskscanVersion();

        /**
         * <pre>
         * LanFree 信息
         * </pre>
         *
         * <code>repeated .one2data.rbtmqmsgcli.client.LanFreeInfo lf_info = 7;</code>
         */
        java.util.List<cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.LanFreeInfo>
        getLfInfoList();
        /**
         * <pre>
         * LanFree 信息
         * </pre>
         *
         * <code>repeated .one2data.rbtmqmsgcli.client.LanFreeInfo lf_info = 7;</code>
         */
        cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.LanFreeInfo getLfInfo(int index);
        /**
         * <pre>
         * LanFree 信息
         * </pre>
         *
         * <code>repeated .one2data.rbtmqmsgcli.client.LanFreeInfo lf_info = 7;</code>
         */
        int getLfInfoCount();
        /**
         * <pre>
         * LanFree 信息
         * </pre>
         *
         * <code>repeated .one2data.rbtmqmsgcli.client.LanFreeInfo lf_info = 7;</code>
         */
        java.util.List<? extends cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.LanFreeInfoOrBuilder>
        getLfInfoOrBuilderList();
        /**
         * <pre>
         * LanFree 信息
         * </pre>
         *
         * <code>repeated .one2data.rbtmqmsgcli.client.LanFreeInfo lf_info = 7;</code>
         */
        cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.LanFreeInfoOrBuilder getLfInfoOrBuilder(
                int index);

        /**
         * <pre>
         * Bitmap 驱动信息
         * </pre>
         *
         * <code>optional .one2data.rbtmqmsgcli.client.BitmapDriverInfo bitmap_driver_info = 8;</code>
         */
        boolean hasBitmapDriverInfo();
        /**
         * <pre>
         * Bitmap 驱动信息
         * </pre>
         *
         * <code>optional .one2data.rbtmqmsgcli.client.BitmapDriverInfo bitmap_driver_info = 8;</code>
         */
        cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BitmapDriverInfo getBitmapDriverInfo();
        /**
         * <pre>
         * Bitmap 驱动信息
         * </pre>
         *
         * <code>optional .one2data.rbtmqmsgcli.client.BitmapDriverInfo bitmap_driver_info = 8;</code>
         */
        cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BitmapDriverInfoOrBuilder getBitmapDriverInfoOrBuilder();

        /**
         * <pre>
         * ISCSI initiator 名称，值为空时表示不支持 ISCSI 挂载，
         * 否则表示支持 ISCSI 挂载，此时 Web 发起 ISCSI 挂载之前可能需要使用该值
         * 先在 ISCSI target 那边授权
         * </pre>
         *
         * <code>optional string iscsi_initiator_name = 9;</code>
         */
        String getIscsiInitiatorName();
        /**
         * <pre>
         * ISCSI initiator 名称，值为空时表示不支持 ISCSI 挂载，
         * 否则表示支持 ISCSI 挂载，此时 Web 发起 ISCSI 挂载之前可能需要使用该值
         * 先在 ISCSI target 那边授权
         * </pre>
         *
         * <code>optional string iscsi_initiator_name = 9;</code>
         */
        com.google.protobuf.ByteString
        getIscsiInitiatorNameBytes();

        /**
         * <pre>
         * 客户端支持的压缩算法
         * </pre>
         *
         * <code>repeated .one2data.rbtmqmsgcli.common.CompressType supported_compress_type = 10;</code>
         */
        java.util.List<cn.keptdata.one2data.header.message.protobuf.common.Common.CompressType> getSupportedCompressTypeList();
        /**
         * <pre>
         * 客户端支持的压缩算法
         * </pre>
         *
         * <code>repeated .one2data.rbtmqmsgcli.common.CompressType supported_compress_type = 10;</code>
         */
        int getSupportedCompressTypeCount();
        /**
         * <pre>
         * 客户端支持的压缩算法
         * </pre>
         *
         * <code>repeated .one2data.rbtmqmsgcli.common.CompressType supported_compress_type = 10;</code>
         */
        cn.keptdata.one2data.header.message.protobuf.common.Common.CompressType getSupportedCompressType(int index);
        /**
         * <pre>
         * 客户端支持的压缩算法
         * </pre>
         *
         * <code>repeated .one2data.rbtmqmsgcli.common.CompressType supported_compress_type = 10;</code>
         */
        java.util.List<Integer>
        getSupportedCompressTypeValueList();
        /**
         * <pre>
         * 客户端支持的压缩算法
         * </pre>
         *
         * <code>repeated .one2data.rbtmqmsgcli.common.CompressType supported_compress_type = 10;</code>
         */
        int getSupportedCompressTypeValue(int index);
    }
    /**
     * <pre>
     *设备硬件信息结构
     * </pre>
     *
     * Protobuf type {@code one2data.rbtmqmsgcli.client.HardwareInfo}
     */
    public  static final class HardwareInfo extends
            com.google.protobuf.GeneratedMessageV3 implements
            // @@protoc_insertion_point(message_implements:one2data.rbtmqmsgcli.client.HardwareInfo)
            HardwareInfoOrBuilder {
        // Use HardwareInfo.newBuilder() to construct.
        private HardwareInfo(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
            super(builder);
        }
        private HardwareInfo() {
            harddiskInfo_ = java.util.Collections.emptyList();
            partitionInfo_ = java.util.Collections.emptyList();
            lvInfo_ = java.util.Collections.emptyList();
            diskInfoJson_ = "";
            volumeInfoJson_ = "";
            diskscanVersion_ = 0;
            lfInfo_ = java.util.Collections.emptyList();
            iscsiInitiatorName_ = "";
            supportedCompressType_ = java.util.Collections.emptyList();
        }

        @Override
        public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
            return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
        }
        private HardwareInfo(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            this();
            int mutable_bitField0_ = 0;
            try {
                boolean done = false;
                while (!done) {
                    int tag = input.readTag();
                    switch (tag) {
                        case 0:
                            done = true;
                            break;
                        default: {
                            if (!input.skipField(tag)) {
                                done = true;
                            }
                            break;
                        }
                        case 10: {
                            if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                                harddiskInfo_ = new java.util.ArrayList<cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.HarddiskInfo>();
                                mutable_bitField0_ |= 0x00000001;
                            }
                            harddiskInfo_.add(
                                    input.readMessage(cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.HarddiskInfo.parser(), extensionRegistry));
                            break;
                        }
                        case 18: {
                            if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                                partitionInfo_ = new java.util.ArrayList<cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.PartitionInfo>();
                                mutable_bitField0_ |= 0x00000002;
                            }
                            partitionInfo_.add(
                                    input.readMessage(cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.PartitionInfo.parser(), extensionRegistry));
                            break;
                        }
                        case 26: {
                            if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                                lvInfo_ = new java.util.ArrayList<cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.LVInfo>();
                                mutable_bitField0_ |= 0x00000004;
                            }
                            lvInfo_.add(
                                    input.readMessage(cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.LVInfo.parser(), extensionRegistry));
                            break;
                        }
                        case 34: {
                            String s = input.readStringRequireUtf8();

                            diskInfoJson_ = s;
                            break;
                        }
                        case 42: {
                            String s = input.readStringRequireUtf8();

                            volumeInfoJson_ = s;
                            break;
                        }
                        case 48: {

                            diskscanVersion_ = input.readInt32();
                            break;
                        }
                        case 58: {
                            if (!((mutable_bitField0_ & 0x00000040) == 0x00000040)) {
                                lfInfo_ = new java.util.ArrayList<cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.LanFreeInfo>();
                                mutable_bitField0_ |= 0x00000040;
                            }
                            lfInfo_.add(
                                    input.readMessage(cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.LanFreeInfo.parser(), extensionRegistry));
                            break;
                        }
                        case 66: {
                            cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BitmapDriverInfo.Builder subBuilder = null;
                            if (bitmapDriverInfo_ != null) {
                                subBuilder = bitmapDriverInfo_.toBuilder();
                            }
                            bitmapDriverInfo_ = input.readMessage(cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BitmapDriverInfo.parser(), extensionRegistry);
                            if (subBuilder != null) {
                                subBuilder.mergeFrom(bitmapDriverInfo_);
                                bitmapDriverInfo_ = subBuilder.buildPartial();
                            }

                            break;
                        }
                        case 74: {
                            String s = input.readStringRequireUtf8();

                            iscsiInitiatorName_ = s;
                            break;
                        }
                        case 80: {
                            int rawValue = input.readEnum();
                            if (!((mutable_bitField0_ & 0x00000200) == 0x00000200)) {
                                supportedCompressType_ = new java.util.ArrayList<Integer>();
                                mutable_bitField0_ |= 0x00000200;
                            }
                            supportedCompressType_.add(rawValue);
                            break;
                        }
                        case 82: {
                            int length = input.readRawVarint32();
                            int oldLimit = input.pushLimit(length);
                            while(input.getBytesUntilLimit() > 0) {
                                int rawValue = input.readEnum();
                                if (!((mutable_bitField0_ & 0x00000200) == 0x00000200)) {
                                    supportedCompressType_ = new java.util.ArrayList<Integer>();
                                    mutable_bitField0_ |= 0x00000200;
                                }
                                supportedCompressType_.add(rawValue);
                            }
                            input.popLimit(oldLimit);
                            break;
                        }
                    }
                }
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(this);
            } catch (java.io.IOException e) {
                throw new com.google.protobuf.InvalidProtocolBufferException(
                        e).setUnfinishedMessage(this);
            } finally {
                if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                    harddiskInfo_ = java.util.Collections.unmodifiableList(harddiskInfo_);
                }
                if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                    partitionInfo_ = java.util.Collections.unmodifiableList(partitionInfo_);
                }
                if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                    lvInfo_ = java.util.Collections.unmodifiableList(lvInfo_);
                }
                if (((mutable_bitField0_ & 0x00000040) == 0x00000040)) {
                    lfInfo_ = java.util.Collections.unmodifiableList(lfInfo_);
                }
                if (((mutable_bitField0_ & 0x00000200) == 0x00000200)) {
                    supportedCompressType_ = java.util.Collections.unmodifiableList(supportedCompressType_);
                }
                makeExtensionsImmutable();
            }
        }
        public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
            return cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.internal_static_one2data_rbtmqmsgcli_client_HardwareInfo_descriptor;
        }

        protected FieldAccessorTable
        internalGetFieldAccessorTable() {
            return cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.internal_static_one2data_rbtmqmsgcli_client_HardwareInfo_fieldAccessorTable
                    .ensureFieldAccessorsInitialized(
                            cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.HardwareInfo.class, cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.HardwareInfo.Builder.class);
        }

        private int bitField0_;
        public static final int HARDDISK_INFO_FIELD_NUMBER = 1;
        private java.util.List<cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.HarddiskInfo> harddiskInfo_;
        /**
         * <pre>
         *磁盘信息
         * </pre>
         *
         * <code>repeated .one2data.rbtmqmsgcli.client.HarddiskInfo harddisk_info = 1;</code>
         */
        public java.util.List<cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.HarddiskInfo> getHarddiskInfoList() {
            return harddiskInfo_;
        }
        /**
         * <pre>
         *磁盘信息
         * </pre>
         *
         * <code>repeated .one2data.rbtmqmsgcli.client.HarddiskInfo harddisk_info = 1;</code>
         */
        public java.util.List<? extends cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.HarddiskInfoOrBuilder>
        getHarddiskInfoOrBuilderList() {
            return harddiskInfo_;
        }
        /**
         * <pre>
         *磁盘信息
         * </pre>
         *
         * <code>repeated .one2data.rbtmqmsgcli.client.HarddiskInfo harddisk_info = 1;</code>
         */
        public int getHarddiskInfoCount() {
            return harddiskInfo_.size();
        }
        /**
         * <pre>
         *磁盘信息
         * </pre>
         *
         * <code>repeated .one2data.rbtmqmsgcli.client.HarddiskInfo harddisk_info = 1;</code>
         */
        public cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.HarddiskInfo getHarddiskInfo(int index) {
            return harddiskInfo_.get(index);
        }
        /**
         * <pre>
         *磁盘信息
         * </pre>
         *
         * <code>repeated .one2data.rbtmqmsgcli.client.HarddiskInfo harddisk_info = 1;</code>
         */
        public cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.HarddiskInfoOrBuilder getHarddiskInfoOrBuilder(
                int index) {
            return harddiskInfo_.get(index);
        }

        public static final int PARTITION_INFO_FIELD_NUMBER = 2;
        private java.util.List<cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.PartitionInfo> partitionInfo_;
        /**
         * <pre>
         *分区信息
         * </pre>
         *
         * <code>repeated .one2data.rbtmqmsgcli.client.PartitionInfo partition_info = 2;</code>
         */
        public java.util.List<cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.PartitionInfo> getPartitionInfoList() {
            return partitionInfo_;
        }
        /**
         * <pre>
         *分区信息
         * </pre>
         *
         * <code>repeated .one2data.rbtmqmsgcli.client.PartitionInfo partition_info = 2;</code>
         */
        public java.util.List<? extends cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.PartitionInfoOrBuilder>
        getPartitionInfoOrBuilderList() {
            return partitionInfo_;
        }
        /**
         * <pre>
         *分区信息
         * </pre>
         *
         * <code>repeated .one2data.rbtmqmsgcli.client.PartitionInfo partition_info = 2;</code>
         */
        public int getPartitionInfoCount() {
            return partitionInfo_.size();
        }
        /**
         * <pre>
         *分区信息
         * </pre>
         *
         * <code>repeated .one2data.rbtmqmsgcli.client.PartitionInfo partition_info = 2;</code>
         */
        public cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.PartitionInfo getPartitionInfo(int index) {
            return partitionInfo_.get(index);
        }
        /**
         * <pre>
         *分区信息
         * </pre>
         *
         * <code>repeated .one2data.rbtmqmsgcli.client.PartitionInfo partition_info = 2;</code>
         */
        public cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.PartitionInfoOrBuilder getPartitionInfoOrBuilder(
                int index) {
            return partitionInfo_.get(index);
        }

        public static final int LV_INFO_FIELD_NUMBER = 3;
        private java.util.List<cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.LVInfo> lvInfo_;
        /**
         * <pre>
         *逻辑卷信息
         * </pre>
         *
         * <code>repeated .one2data.rbtmqmsgcli.client.LVInfo lv_info = 3;</code>
         */
        public java.util.List<cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.LVInfo> getLvInfoList() {
            return lvInfo_;
        }
        /**
         * <pre>
         *逻辑卷信息
         * </pre>
         *
         * <code>repeated .one2data.rbtmqmsgcli.client.LVInfo lv_info = 3;</code>
         */
        public java.util.List<? extends cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.LVInfoOrBuilder>
        getLvInfoOrBuilderList() {
            return lvInfo_;
        }
        /**
         * <pre>
         *逻辑卷信息
         * </pre>
         *
         * <code>repeated .one2data.rbtmqmsgcli.client.LVInfo lv_info = 3;</code>
         */
        public int getLvInfoCount() {
            return lvInfo_.size();
        }
        /**
         * <pre>
         *逻辑卷信息
         * </pre>
         *
         * <code>repeated .one2data.rbtmqmsgcli.client.LVInfo lv_info = 3;</code>
         */
        public cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.LVInfo getLvInfo(int index) {
            return lvInfo_.get(index);
        }
        /**
         * <pre>
         *逻辑卷信息
         * </pre>
         *
         * <code>repeated .one2data.rbtmqmsgcli.client.LVInfo lv_info = 3;</code>
         */
        public cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.LVInfoOrBuilder getLvInfoOrBuilder(
                int index) {
            return lvInfo_.get(index);
        }

        public static final int DISK_INFO_JSON_FIELD_NUMBER = 4;
        private volatile Object diskInfoJson_;
        /**
         * <pre>
         * 磁盘扫描生成的原始 json 字符串
         * </pre>
         *
         * <code>optional string disk_info_json = 4;</code>
         */
        public String getDiskInfoJson() {
            Object ref = diskInfoJson_;
            if (ref instanceof String) {
                return (String) ref;
            } else {
                com.google.protobuf.ByteString bs =
                        (com.google.protobuf.ByteString) ref;
                String s = bs.toStringUtf8();
                diskInfoJson_ = s;
                return s;
            }
        }
        /**
         * <pre>
         * 磁盘扫描生成的原始 json 字符串
         * </pre>
         *
         * <code>optional string disk_info_json = 4;</code>
         */
        public com.google.protobuf.ByteString
        getDiskInfoJsonBytes() {
            Object ref = diskInfoJson_;
            if (ref instanceof String) {
                com.google.protobuf.ByteString b =
                        com.google.protobuf.ByteString.copyFromUtf8(
                                (String) ref);
                diskInfoJson_ = b;
                return b;
            } else {
                return (com.google.protobuf.ByteString) ref;
            }
        }

        public static final int VOLUME_INFO_JSON_FIELD_NUMBER = 5;
        private volatile Object volumeInfoJson_;
        /**
         * <code>optional string volume_info_json = 5;</code>
         */
        public String getVolumeInfoJson() {
            Object ref = volumeInfoJson_;
            if (ref instanceof String) {
                return (String) ref;
            } else {
                com.google.protobuf.ByteString bs =
                        (com.google.protobuf.ByteString) ref;
                String s = bs.toStringUtf8();
                volumeInfoJson_ = s;
                return s;
            }
        }
        /**
         * <code>optional string volume_info_json = 5;</code>
         */
        public com.google.protobuf.ByteString
        getVolumeInfoJsonBytes() {
            Object ref = volumeInfoJson_;
            if (ref instanceof String) {
                com.google.protobuf.ByteString b =
                        com.google.protobuf.ByteString.copyFromUtf8(
                                (String) ref);
                volumeInfoJson_ = b;
                return b;
            } else {
                return (com.google.protobuf.ByteString) ref;
            }
        }

        public static final int DISKSCAN_VERSION_FIELD_NUMBER = 6;
        private int diskscanVersion_;
        /**
         * <pre>
         * 磁盘扫描版本，不同的版本生成的磁盘信息会有差异
         * </pre>
         *
         * <code>optional int32 diskscan_version = 6;</code>
         */
        public int getDiskscanVersion() {
            return diskscanVersion_;
        }

        public static final int LF_INFO_FIELD_NUMBER = 7;
        private java.util.List<cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.LanFreeInfo> lfInfo_;
        /**
         * <pre>
         * LanFree 信息
         * </pre>
         *
         * <code>repeated .one2data.rbtmqmsgcli.client.LanFreeInfo lf_info = 7;</code>
         */
        public java.util.List<cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.LanFreeInfo> getLfInfoList() {
            return lfInfo_;
        }
        /**
         * <pre>
         * LanFree 信息
         * </pre>
         *
         * <code>repeated .one2data.rbtmqmsgcli.client.LanFreeInfo lf_info = 7;</code>
         */
        public java.util.List<? extends cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.LanFreeInfoOrBuilder>
        getLfInfoOrBuilderList() {
            return lfInfo_;
        }
        /**
         * <pre>
         * LanFree 信息
         * </pre>
         *
         * <code>repeated .one2data.rbtmqmsgcli.client.LanFreeInfo lf_info = 7;</code>
         */
        public int getLfInfoCount() {
            return lfInfo_.size();
        }
        /**
         * <pre>
         * LanFree 信息
         * </pre>
         *
         * <code>repeated .one2data.rbtmqmsgcli.client.LanFreeInfo lf_info = 7;</code>
         */
        public cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.LanFreeInfo getLfInfo(int index) {
            return lfInfo_.get(index);
        }
        /**
         * <pre>
         * LanFree 信息
         * </pre>
         *
         * <code>repeated .one2data.rbtmqmsgcli.client.LanFreeInfo lf_info = 7;</code>
         */
        public cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.LanFreeInfoOrBuilder getLfInfoOrBuilder(
                int index) {
            return lfInfo_.get(index);
        }

        public static final int BITMAP_DRIVER_INFO_FIELD_NUMBER = 8;
        private cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BitmapDriverInfo bitmapDriverInfo_;
        /**
         * <pre>
         * Bitmap 驱动信息
         * </pre>
         *
         * <code>optional .one2data.rbtmqmsgcli.client.BitmapDriverInfo bitmap_driver_info = 8;</code>
         */
        public boolean hasBitmapDriverInfo() {
            return bitmapDriverInfo_ != null;
        }
        /**
         * <pre>
         * Bitmap 驱动信息
         * </pre>
         *
         * <code>optional .one2data.rbtmqmsgcli.client.BitmapDriverInfo bitmap_driver_info = 8;</code>
         */
        public cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BitmapDriverInfo getBitmapDriverInfo() {
            return bitmapDriverInfo_ == null ? cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BitmapDriverInfo.getDefaultInstance() : bitmapDriverInfo_;
        }
        /**
         * <pre>
         * Bitmap 驱动信息
         * </pre>
         *
         * <code>optional .one2data.rbtmqmsgcli.client.BitmapDriverInfo bitmap_driver_info = 8;</code>
         */
        public cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BitmapDriverInfoOrBuilder getBitmapDriverInfoOrBuilder() {
            return getBitmapDriverInfo();
        }

        public static final int ISCSI_INITIATOR_NAME_FIELD_NUMBER = 9;
        private volatile Object iscsiInitiatorName_;
        /**
         * <pre>
         * ISCSI initiator 名称，值为空时表示不支持 ISCSI 挂载，
         * 否则表示支持 ISCSI 挂载，此时 Web 发起 ISCSI 挂载之前可能需要使用该值
         * 先在 ISCSI target 那边授权
         * </pre>
         *
         * <code>optional string iscsi_initiator_name = 9;</code>
         */
        public String getIscsiInitiatorName() {
            Object ref = iscsiInitiatorName_;
            if (ref instanceof String) {
                return (String) ref;
            } else {
                com.google.protobuf.ByteString bs =
                        (com.google.protobuf.ByteString) ref;
                String s = bs.toStringUtf8();
                iscsiInitiatorName_ = s;
                return s;
            }
        }
        /**
         * <pre>
         * ISCSI initiator 名称，值为空时表示不支持 ISCSI 挂载，
         * 否则表示支持 ISCSI 挂载，此时 Web 发起 ISCSI 挂载之前可能需要使用该值
         * 先在 ISCSI target 那边授权
         * </pre>
         *
         * <code>optional string iscsi_initiator_name = 9;</code>
         */
        public com.google.protobuf.ByteString
        getIscsiInitiatorNameBytes() {
            Object ref = iscsiInitiatorName_;
            if (ref instanceof String) {
                com.google.protobuf.ByteString b =
                        com.google.protobuf.ByteString.copyFromUtf8(
                                (String) ref);
                iscsiInitiatorName_ = b;
                return b;
            } else {
                return (com.google.protobuf.ByteString) ref;
            }
        }

        public static final int SUPPORTED_COMPRESS_TYPE_FIELD_NUMBER = 10;
        private java.util.List<Integer> supportedCompressType_;
        private static final com.google.protobuf.Internal.ListAdapter.Converter<
                Integer, cn.keptdata.one2data.header.message.protobuf.common.Common.CompressType> supportedCompressType_converter_ =
                new com.google.protobuf.Internal.ListAdapter.Converter<
                        Integer, cn.keptdata.one2data.header.message.protobuf.common.Common.CompressType>() {
                    public cn.keptdata.one2data.header.message.protobuf.common.Common.CompressType convert(Integer from) {
                        cn.keptdata.one2data.header.message.protobuf.common.Common.CompressType result = cn.keptdata.one2data.header.message.protobuf.common.Common.CompressType.valueOf(from);
                        return result == null ? cn.keptdata.one2data.header.message.protobuf.common.Common.CompressType.UNRECOGNIZED : result;
                    }
                };
        /**
         * <pre>
         * 客户端支持的压缩算法
         * </pre>
         *
         * <code>repeated .one2data.rbtmqmsgcli.common.CompressType supported_compress_type = 10;</code>
         */
        public java.util.List<cn.keptdata.one2data.header.message.protobuf.common.Common.CompressType> getSupportedCompressTypeList() {
            return new com.google.protobuf.Internal.ListAdapter<
                    Integer, cn.keptdata.one2data.header.message.protobuf.common.Common.CompressType>(supportedCompressType_, supportedCompressType_converter_);
        }
        /**
         * <pre>
         * 客户端支持的压缩算法
         * </pre>
         *
         * <code>repeated .one2data.rbtmqmsgcli.common.CompressType supported_compress_type = 10;</code>
         */
        public int getSupportedCompressTypeCount() {
            return supportedCompressType_.size();
        }
        /**
         * <pre>
         * 客户端支持的压缩算法
         * </pre>
         *
         * <code>repeated .one2data.rbtmqmsgcli.common.CompressType supported_compress_type = 10;</code>
         */
        public cn.keptdata.one2data.header.message.protobuf.common.Common.CompressType getSupportedCompressType(int index) {
            return supportedCompressType_converter_.convert(supportedCompressType_.get(index));
        }
        /**
         * <pre>
         * 客户端支持的压缩算法
         * </pre>
         *
         * <code>repeated .one2data.rbtmqmsgcli.common.CompressType supported_compress_type = 10;</code>
         */
        public java.util.List<Integer>
        getSupportedCompressTypeValueList() {
            return supportedCompressType_;
        }
        /**
         * <pre>
         * 客户端支持的压缩算法
         * </pre>
         *
         * <code>repeated .one2data.rbtmqmsgcli.common.CompressType supported_compress_type = 10;</code>
         */
        public int getSupportedCompressTypeValue(int index) {
            return supportedCompressType_.get(index);
        }
        private int supportedCompressTypeMemoizedSerializedSize;

        private byte memoizedIsInitialized = -1;
        public final boolean isInitialized() {
            byte isInitialized = memoizedIsInitialized;
            if (isInitialized == 1) return true;
            if (isInitialized == 0) return false;

            memoizedIsInitialized = 1;
            return true;
        }

        public void writeTo(com.google.protobuf.CodedOutputStream output)
                throws java.io.IOException {
            getSerializedSize();
            for (int i = 0; i < harddiskInfo_.size(); i++) {
                output.writeMessage(1, harddiskInfo_.get(i));
            }
            for (int i = 0; i < partitionInfo_.size(); i++) {
                output.writeMessage(2, partitionInfo_.get(i));
            }
            for (int i = 0; i < lvInfo_.size(); i++) {
                output.writeMessage(3, lvInfo_.get(i));
            }
            if (!getDiskInfoJsonBytes().isEmpty()) {
                com.google.protobuf.GeneratedMessageV3.writeString(output, 4, diskInfoJson_);
            }
            if (!getVolumeInfoJsonBytes().isEmpty()) {
                com.google.protobuf.GeneratedMessageV3.writeString(output, 5, volumeInfoJson_);
            }
            if (diskscanVersion_ != 0) {
                output.writeInt32(6, diskscanVersion_);
            }
            for (int i = 0; i < lfInfo_.size(); i++) {
                output.writeMessage(7, lfInfo_.get(i));
            }
            if (bitmapDriverInfo_ != null) {
                output.writeMessage(8, getBitmapDriverInfo());
            }
            if (!getIscsiInitiatorNameBytes().isEmpty()) {
                com.google.protobuf.GeneratedMessageV3.writeString(output, 9, iscsiInitiatorName_);
            }
            if (getSupportedCompressTypeList().size() > 0) {
                output.writeUInt32NoTag(82);
                output.writeUInt32NoTag(supportedCompressTypeMemoizedSerializedSize);
            }
            for (int i = 0; i < supportedCompressType_.size(); i++) {
                output.writeEnumNoTag(supportedCompressType_.get(i));
            }
        }

        public int getSerializedSize() {
            int size = memoizedSize;
            if (size != -1) return size;

            size = 0;
            for (int i = 0; i < harddiskInfo_.size(); i++) {
                size += com.google.protobuf.CodedOutputStream
                        .computeMessageSize(1, harddiskInfo_.get(i));
            }
            for (int i = 0; i < partitionInfo_.size(); i++) {
                size += com.google.protobuf.CodedOutputStream
                        .computeMessageSize(2, partitionInfo_.get(i));
            }
            for (int i = 0; i < lvInfo_.size(); i++) {
                size += com.google.protobuf.CodedOutputStream
                        .computeMessageSize(3, lvInfo_.get(i));
            }
            if (!getDiskInfoJsonBytes().isEmpty()) {
                size += com.google.protobuf.GeneratedMessageV3.computeStringSize(4, diskInfoJson_);
            }
            if (!getVolumeInfoJsonBytes().isEmpty()) {
                size += com.google.protobuf.GeneratedMessageV3.computeStringSize(5, volumeInfoJson_);
            }
            if (diskscanVersion_ != 0) {
                size += com.google.protobuf.CodedOutputStream
                        .computeInt32Size(6, diskscanVersion_);
            }
            for (int i = 0; i < lfInfo_.size(); i++) {
                size += com.google.protobuf.CodedOutputStream
                        .computeMessageSize(7, lfInfo_.get(i));
            }
            if (bitmapDriverInfo_ != null) {
                size += com.google.protobuf.CodedOutputStream
                        .computeMessageSize(8, getBitmapDriverInfo());
            }
            if (!getIscsiInitiatorNameBytes().isEmpty()) {
                size += com.google.protobuf.GeneratedMessageV3.computeStringSize(9, iscsiInitiatorName_);
            }
            {
                int dataSize = 0;
                for (int i = 0; i < supportedCompressType_.size(); i++) {
                    dataSize += com.google.protobuf.CodedOutputStream
                            .computeEnumSizeNoTag(supportedCompressType_.get(i));
                }
                size += dataSize;
                if (!getSupportedCompressTypeList().isEmpty()) {  size += 1;
                    size += com.google.protobuf.CodedOutputStream
                            .computeUInt32SizeNoTag(dataSize);
                }supportedCompressTypeMemoizedSerializedSize = dataSize;
            }
            memoizedSize = size;
            return size;
        }

        private static final long serialVersionUID = 0L;
        @Override
        public boolean equals(final Object obj) {
            if (obj == this) {
                return true;
            }
            if (!(obj instanceof cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.HardwareInfo)) {
                return super.equals(obj);
            }
            cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.HardwareInfo other = (cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.HardwareInfo) obj;

            boolean result = true;
            result = result && getHarddiskInfoList()
                    .equals(other.getHarddiskInfoList());
            result = result && getPartitionInfoList()
                    .equals(other.getPartitionInfoList());
            result = result && getLvInfoList()
                    .equals(other.getLvInfoList());
            result = result && getDiskInfoJson()
                    .equals(other.getDiskInfoJson());
            result = result && getVolumeInfoJson()
                    .equals(other.getVolumeInfoJson());
            result = result && (getDiskscanVersion()
                    == other.getDiskscanVersion());
            result = result && getLfInfoList()
                    .equals(other.getLfInfoList());
            result = result && (hasBitmapDriverInfo() == other.hasBitmapDriverInfo());
            if (hasBitmapDriverInfo()) {
                result = result && getBitmapDriverInfo()
                        .equals(other.getBitmapDriverInfo());
            }
            result = result && getIscsiInitiatorName()
                    .equals(other.getIscsiInitiatorName());
            result = result && supportedCompressType_.equals(other.supportedCompressType_);
            return result;
        }

        @Override
        public int hashCode() {
            if (memoizedHashCode != 0) {
                return memoizedHashCode;
            }
            int hash = 41;
            hash = (19 * hash) + getDescriptorForType().hashCode();
            if (getHarddiskInfoCount() > 0) {
                hash = (37 * hash) + HARDDISK_INFO_FIELD_NUMBER;
                hash = (53 * hash) + getHarddiskInfoList().hashCode();
            }
            if (getPartitionInfoCount() > 0) {
                hash = (37 * hash) + PARTITION_INFO_FIELD_NUMBER;
                hash = (53 * hash) + getPartitionInfoList().hashCode();
            }
            if (getLvInfoCount() > 0) {
                hash = (37 * hash) + LV_INFO_FIELD_NUMBER;
                hash = (53 * hash) + getLvInfoList().hashCode();
            }
            hash = (37 * hash) + DISK_INFO_JSON_FIELD_NUMBER;
            hash = (53 * hash) + getDiskInfoJson().hashCode();
            hash = (37 * hash) + VOLUME_INFO_JSON_FIELD_NUMBER;
            hash = (53 * hash) + getVolumeInfoJson().hashCode();
            hash = (37 * hash) + DISKSCAN_VERSION_FIELD_NUMBER;
            hash = (53 * hash) + getDiskscanVersion();
            if (getLfInfoCount() > 0) {
                hash = (37 * hash) + LF_INFO_FIELD_NUMBER;
                hash = (53 * hash) + getLfInfoList().hashCode();
            }
            if (hasBitmapDriverInfo()) {
                hash = (37 * hash) + BITMAP_DRIVER_INFO_FIELD_NUMBER;
                hash = (53 * hash) + getBitmapDriverInfo().hashCode();
            }
            hash = (37 * hash) + ISCSI_INITIATOR_NAME_FIELD_NUMBER;
            hash = (53 * hash) + getIscsiInitiatorName().hashCode();
            if (getSupportedCompressTypeCount() > 0) {
                hash = (37 * hash) + SUPPORTED_COMPRESS_TYPE_FIELD_NUMBER;
                hash = (53 * hash) + supportedCompressType_.hashCode();
            }
            hash = (29 * hash) + unknownFields.hashCode();
            memoizedHashCode = hash;
            return hash;
        }

        public static cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.HardwareInfo parseFrom(
                com.google.protobuf.ByteString data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }
        public static cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.HardwareInfo parseFrom(
                com.google.protobuf.ByteString data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }
        public static cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.HardwareInfo parseFrom(byte[] data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }
        public static cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.HardwareInfo parseFrom(
                byte[] data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }
        public static cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.HardwareInfo parseFrom(java.io.InputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input);
        }
        public static cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.HardwareInfo parseFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input, extensionRegistry);
        }
        public static cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.HardwareInfo parseDelimitedFrom(java.io.InputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseDelimitedWithIOException(PARSER, input);
        }
        public static cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.HardwareInfo parseDelimitedFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
        }
        public static cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.HardwareInfo parseFrom(
                com.google.protobuf.CodedInputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input);
        }
        public static cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.HardwareInfo parseFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input, extensionRegistry);
        }

        public Builder newBuilderForType() { return newBuilder(); }
        public static Builder newBuilder() {
            return DEFAULT_INSTANCE.toBuilder();
        }
        public static Builder newBuilder(cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.HardwareInfo prototype) {
            return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }
        public Builder toBuilder() {
            return this == DEFAULT_INSTANCE
                    ? new Builder() : new Builder().mergeFrom(this);
        }

        @Override
        protected Builder newBuilderForType(
                BuilderParent parent) {
            Builder builder = new Builder(parent);
            return builder;
        }
        /**
         * <pre>
         *设备硬件信息结构
         * </pre>
         *
         * Protobuf type {@code one2data.rbtmqmsgcli.client.HardwareInfo}
         */
        public static final class Builder extends
                com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
                // @@protoc_insertion_point(builder_implements:one2data.rbtmqmsgcli.client.HardwareInfo)
                cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.HardwareInfoOrBuilder {
            public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
                return cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.internal_static_one2data_rbtmqmsgcli_client_HardwareInfo_descriptor;
            }

            protected FieldAccessorTable
            internalGetFieldAccessorTable() {
                return cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.internal_static_one2data_rbtmqmsgcli_client_HardwareInfo_fieldAccessorTable
                        .ensureFieldAccessorsInitialized(
                                cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.HardwareInfo.class, cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.HardwareInfo.Builder.class);
            }

            // Construct using cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.HardwareInfo.newBuilder()
            private Builder() {
                maybeForceBuilderInitialization();
            }

            private Builder(
                    BuilderParent parent) {
                super(parent);
                maybeForceBuilderInitialization();
            }
            private void maybeForceBuilderInitialization() {
                if (com.google.protobuf.GeneratedMessageV3
                        .alwaysUseFieldBuilders) {
                    getHarddiskInfoFieldBuilder();
                    getPartitionInfoFieldBuilder();
                    getLvInfoFieldBuilder();
                    getLfInfoFieldBuilder();
                }
            }
            public Builder clear() {
                super.clear();
                if (harddiskInfoBuilder_ == null) {
                    harddiskInfo_ = java.util.Collections.emptyList();
                    bitField0_ = (bitField0_ & ~0x00000001);
                } else {
                    harddiskInfoBuilder_.clear();
                }
                if (partitionInfoBuilder_ == null) {
                    partitionInfo_ = java.util.Collections.emptyList();
                    bitField0_ = (bitField0_ & ~0x00000002);
                } else {
                    partitionInfoBuilder_.clear();
                }
                if (lvInfoBuilder_ == null) {
                    lvInfo_ = java.util.Collections.emptyList();
                    bitField0_ = (bitField0_ & ~0x00000004);
                } else {
                    lvInfoBuilder_.clear();
                }
                diskInfoJson_ = "";

                volumeInfoJson_ = "";

                diskscanVersion_ = 0;

                if (lfInfoBuilder_ == null) {
                    lfInfo_ = java.util.Collections.emptyList();
                    bitField0_ = (bitField0_ & ~0x00000040);
                } else {
                    lfInfoBuilder_.clear();
                }
                if (bitmapDriverInfoBuilder_ == null) {
                    bitmapDriverInfo_ = null;
                } else {
                    bitmapDriverInfo_ = null;
                    bitmapDriverInfoBuilder_ = null;
                }
                iscsiInitiatorName_ = "";

                supportedCompressType_ = java.util.Collections.emptyList();
                bitField0_ = (bitField0_ & ~0x00000200);
                return this;
            }

            public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
                return cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.internal_static_one2data_rbtmqmsgcli_client_HardwareInfo_descriptor;
            }

            public cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.HardwareInfo getDefaultInstanceForType() {
                return cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.HardwareInfo.getDefaultInstance();
            }

            public cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.HardwareInfo build() {
                cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.HardwareInfo result = buildPartial();
                if (!result.isInitialized()) {
                    throw newUninitializedMessageException(result);
                }
                return result;
            }

            public cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.HardwareInfo buildPartial() {
                cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.HardwareInfo result = new cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.HardwareInfo(this);
                int from_bitField0_ = bitField0_;
                int to_bitField0_ = 0;
                if (harddiskInfoBuilder_ == null) {
                    if (((bitField0_ & 0x00000001) == 0x00000001)) {
                        harddiskInfo_ = java.util.Collections.unmodifiableList(harddiskInfo_);
                        bitField0_ = (bitField0_ & ~0x00000001);
                    }
                    result.harddiskInfo_ = harddiskInfo_;
                } else {
                    result.harddiskInfo_ = harddiskInfoBuilder_.build();
                }
                if (partitionInfoBuilder_ == null) {
                    if (((bitField0_ & 0x00000002) == 0x00000002)) {
                        partitionInfo_ = java.util.Collections.unmodifiableList(partitionInfo_);
                        bitField0_ = (bitField0_ & ~0x00000002);
                    }
                    result.partitionInfo_ = partitionInfo_;
                } else {
                    result.partitionInfo_ = partitionInfoBuilder_.build();
                }
                if (lvInfoBuilder_ == null) {
                    if (((bitField0_ & 0x00000004) == 0x00000004)) {
                        lvInfo_ = java.util.Collections.unmodifiableList(lvInfo_);
                        bitField0_ = (bitField0_ & ~0x00000004);
                    }
                    result.lvInfo_ = lvInfo_;
                } else {
                    result.lvInfo_ = lvInfoBuilder_.build();
                }
                result.diskInfoJson_ = diskInfoJson_;
                result.volumeInfoJson_ = volumeInfoJson_;
                result.diskscanVersion_ = diskscanVersion_;
                if (lfInfoBuilder_ == null) {
                    if (((bitField0_ & 0x00000040) == 0x00000040)) {
                        lfInfo_ = java.util.Collections.unmodifiableList(lfInfo_);
                        bitField0_ = (bitField0_ & ~0x00000040);
                    }
                    result.lfInfo_ = lfInfo_;
                } else {
                    result.lfInfo_ = lfInfoBuilder_.build();
                }
                if (bitmapDriverInfoBuilder_ == null) {
                    result.bitmapDriverInfo_ = bitmapDriverInfo_;
                } else {
                    result.bitmapDriverInfo_ = bitmapDriverInfoBuilder_.build();
                }
                result.iscsiInitiatorName_ = iscsiInitiatorName_;
                if (((bitField0_ & 0x00000200) == 0x00000200)) {
                    supportedCompressType_ = java.util.Collections.unmodifiableList(supportedCompressType_);
                    bitField0_ = (bitField0_ & ~0x00000200);
                }
                result.supportedCompressType_ = supportedCompressType_;
                result.bitField0_ = to_bitField0_;
                onBuilt();
                return result;
            }

            public Builder clone() {
                return (Builder) super.clone();
            }
            public Builder setField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    Object value) {
                return (Builder) super.setField(field, value);
            }
            public Builder clearField(
                    com.google.protobuf.Descriptors.FieldDescriptor field) {
                return (Builder) super.clearField(field);
            }
            public Builder clearOneof(
                    com.google.protobuf.Descriptors.OneofDescriptor oneof) {
                return (Builder) super.clearOneof(oneof);
            }
            public Builder setRepeatedField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    int index, Object value) {
                return (Builder) super.setRepeatedField(field, index, value);
            }
            public Builder addRepeatedField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    Object value) {
                return (Builder) super.addRepeatedField(field, value);
            }
            public Builder mergeFrom(com.google.protobuf.Message other) {
                if (other instanceof cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.HardwareInfo) {
                    return mergeFrom((cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.HardwareInfo)other);
                } else {
                    super.mergeFrom(other);
                    return this;
                }
            }

            public Builder mergeFrom(cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.HardwareInfo other) {
                if (other == cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.HardwareInfo.getDefaultInstance()) return this;
                if (harddiskInfoBuilder_ == null) {
                    if (!other.harddiskInfo_.isEmpty()) {
                        if (harddiskInfo_.isEmpty()) {
                            harddiskInfo_ = other.harddiskInfo_;
                            bitField0_ = (bitField0_ & ~0x00000001);
                        } else {
                            ensureHarddiskInfoIsMutable();
                            harddiskInfo_.addAll(other.harddiskInfo_);
                        }
                        onChanged();
                    }
                } else {
                    if (!other.harddiskInfo_.isEmpty()) {
                        if (harddiskInfoBuilder_.isEmpty()) {
                            harddiskInfoBuilder_.dispose();
                            harddiskInfoBuilder_ = null;
                            harddiskInfo_ = other.harddiskInfo_;
                            bitField0_ = (bitField0_ & ~0x00000001);
                            harddiskInfoBuilder_ =
                                    com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                                            getHarddiskInfoFieldBuilder() : null;
                        } else {
                            harddiskInfoBuilder_.addAllMessages(other.harddiskInfo_);
                        }
                    }
                }
                if (partitionInfoBuilder_ == null) {
                    if (!other.partitionInfo_.isEmpty()) {
                        if (partitionInfo_.isEmpty()) {
                            partitionInfo_ = other.partitionInfo_;
                            bitField0_ = (bitField0_ & ~0x00000002);
                        } else {
                            ensurePartitionInfoIsMutable();
                            partitionInfo_.addAll(other.partitionInfo_);
                        }
                        onChanged();
                    }
                } else {
                    if (!other.partitionInfo_.isEmpty()) {
                        if (partitionInfoBuilder_.isEmpty()) {
                            partitionInfoBuilder_.dispose();
                            partitionInfoBuilder_ = null;
                            partitionInfo_ = other.partitionInfo_;
                            bitField0_ = (bitField0_ & ~0x00000002);
                            partitionInfoBuilder_ =
                                    com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                                            getPartitionInfoFieldBuilder() : null;
                        } else {
                            partitionInfoBuilder_.addAllMessages(other.partitionInfo_);
                        }
                    }
                }
                if (lvInfoBuilder_ == null) {
                    if (!other.lvInfo_.isEmpty()) {
                        if (lvInfo_.isEmpty()) {
                            lvInfo_ = other.lvInfo_;
                            bitField0_ = (bitField0_ & ~0x00000004);
                        } else {
                            ensureLvInfoIsMutable();
                            lvInfo_.addAll(other.lvInfo_);
                        }
                        onChanged();
                    }
                } else {
                    if (!other.lvInfo_.isEmpty()) {
                        if (lvInfoBuilder_.isEmpty()) {
                            lvInfoBuilder_.dispose();
                            lvInfoBuilder_ = null;
                            lvInfo_ = other.lvInfo_;
                            bitField0_ = (bitField0_ & ~0x00000004);
                            lvInfoBuilder_ =
                                    com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                                            getLvInfoFieldBuilder() : null;
                        } else {
                            lvInfoBuilder_.addAllMessages(other.lvInfo_);
                        }
                    }
                }
                if (!other.getDiskInfoJson().isEmpty()) {
                    diskInfoJson_ = other.diskInfoJson_;
                    onChanged();
                }
                if (!other.getVolumeInfoJson().isEmpty()) {
                    volumeInfoJson_ = other.volumeInfoJson_;
                    onChanged();
                }
                if (other.getDiskscanVersion() != 0) {
                    setDiskscanVersion(other.getDiskscanVersion());
                }
                if (lfInfoBuilder_ == null) {
                    if (!other.lfInfo_.isEmpty()) {
                        if (lfInfo_.isEmpty()) {
                            lfInfo_ = other.lfInfo_;
                            bitField0_ = (bitField0_ & ~0x00000040);
                        } else {
                            ensureLfInfoIsMutable();
                            lfInfo_.addAll(other.lfInfo_);
                        }
                        onChanged();
                    }
                } else {
                    if (!other.lfInfo_.isEmpty()) {
                        if (lfInfoBuilder_.isEmpty()) {
                            lfInfoBuilder_.dispose();
                            lfInfoBuilder_ = null;
                            lfInfo_ = other.lfInfo_;
                            bitField0_ = (bitField0_ & ~0x00000040);
                            lfInfoBuilder_ =
                                    com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                                            getLfInfoFieldBuilder() : null;
                        } else {
                            lfInfoBuilder_.addAllMessages(other.lfInfo_);
                        }
                    }
                }
                if (other.hasBitmapDriverInfo()) {
                    mergeBitmapDriverInfo(other.getBitmapDriverInfo());
                }
                if (!other.getIscsiInitiatorName().isEmpty()) {
                    iscsiInitiatorName_ = other.iscsiInitiatorName_;
                    onChanged();
                }
                if (!other.supportedCompressType_.isEmpty()) {
                    if (supportedCompressType_.isEmpty()) {
                        supportedCompressType_ = other.supportedCompressType_;
                        bitField0_ = (bitField0_ & ~0x00000200);
                    } else {
                        ensureSupportedCompressTypeIsMutable();
                        supportedCompressType_.addAll(other.supportedCompressType_);
                    }
                    onChanged();
                }
                onChanged();
                return this;
            }

            public final boolean isInitialized() {
                return true;
            }

            public Builder mergeFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws java.io.IOException {
                cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.HardwareInfo parsedMessage = null;
                try {
                    parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
                } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                    parsedMessage = (cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.HardwareInfo) e.getUnfinishedMessage();
                    throw e.unwrapIOException();
                } finally {
                    if (parsedMessage != null) {
                        mergeFrom(parsedMessage);
                    }
                }
                return this;
            }
            private int bitField0_;

            private java.util.List<cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.HarddiskInfo> harddiskInfo_ =
                    java.util.Collections.emptyList();
            private void ensureHarddiskInfoIsMutable() {
                if (!((bitField0_ & 0x00000001) == 0x00000001)) {
                    harddiskInfo_ = new java.util.ArrayList<cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.HarddiskInfo>(harddiskInfo_);
                    bitField0_ |= 0x00000001;
                }
            }

            private com.google.protobuf.RepeatedFieldBuilderV3<
                    cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.HarddiskInfo, cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.HarddiskInfo.Builder, cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.HarddiskInfoOrBuilder> harddiskInfoBuilder_;

            /**
             * <pre>
             *磁盘信息
             * </pre>
             *
             * <code>repeated .one2data.rbtmqmsgcli.client.HarddiskInfo harddisk_info = 1;</code>
             */
            public java.util.List<cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.HarddiskInfo> getHarddiskInfoList() {
                if (harddiskInfoBuilder_ == null) {
                    return java.util.Collections.unmodifiableList(harddiskInfo_);
                } else {
                    return harddiskInfoBuilder_.getMessageList();
                }
            }
            /**
             * <pre>
             *磁盘信息
             * </pre>
             *
             * <code>repeated .one2data.rbtmqmsgcli.client.HarddiskInfo harddisk_info = 1;</code>
             */
            public int getHarddiskInfoCount() {
                if (harddiskInfoBuilder_ == null) {
                    return harddiskInfo_.size();
                } else {
                    return harddiskInfoBuilder_.getCount();
                }
            }
            /**
             * <pre>
             *磁盘信息
             * </pre>
             *
             * <code>repeated .one2data.rbtmqmsgcli.client.HarddiskInfo harddisk_info = 1;</code>
             */
            public cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.HarddiskInfo getHarddiskInfo(int index) {
                if (harddiskInfoBuilder_ == null) {
                    return harddiskInfo_.get(index);
                } else {
                    return harddiskInfoBuilder_.getMessage(index);
                }
            }
            /**
             * <pre>
             *磁盘信息
             * </pre>
             *
             * <code>repeated .one2data.rbtmqmsgcli.client.HarddiskInfo harddisk_info = 1;</code>
             */
            public Builder setHarddiskInfo(
                    int index, cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.HarddiskInfo value) {
                if (harddiskInfoBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    ensureHarddiskInfoIsMutable();
                    harddiskInfo_.set(index, value);
                    onChanged();
                } else {
                    harddiskInfoBuilder_.setMessage(index, value);
                }
                return this;
            }
            /**
             * <pre>
             *磁盘信息
             * </pre>
             *
             * <code>repeated .one2data.rbtmqmsgcli.client.HarddiskInfo harddisk_info = 1;</code>
             */
            public Builder setHarddiskInfo(
                    int index, cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.HarddiskInfo.Builder builderForValue) {
                if (harddiskInfoBuilder_ == null) {
                    ensureHarddiskInfoIsMutable();
                    harddiskInfo_.set(index, builderForValue.build());
                    onChanged();
                } else {
                    harddiskInfoBuilder_.setMessage(index, builderForValue.build());
                }
                return this;
            }
            /**
             * <pre>
             *磁盘信息
             * </pre>
             *
             * <code>repeated .one2data.rbtmqmsgcli.client.HarddiskInfo harddisk_info = 1;</code>
             */
            public Builder addHarddiskInfo(cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.HarddiskInfo value) {
                if (harddiskInfoBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    ensureHarddiskInfoIsMutable();
                    harddiskInfo_.add(value);
                    onChanged();
                } else {
                    harddiskInfoBuilder_.addMessage(value);
                }
                return this;
            }
            /**
             * <pre>
             *磁盘信息
             * </pre>
             *
             * <code>repeated .one2data.rbtmqmsgcli.client.HarddiskInfo harddisk_info = 1;</code>
             */
            public Builder addHarddiskInfo(
                    int index, cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.HarddiskInfo value) {
                if (harddiskInfoBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    ensureHarddiskInfoIsMutable();
                    harddiskInfo_.add(index, value);
                    onChanged();
                } else {
                    harddiskInfoBuilder_.addMessage(index, value);
                }
                return this;
            }
            /**
             * <pre>
             *磁盘信息
             * </pre>
             *
             * <code>repeated .one2data.rbtmqmsgcli.client.HarddiskInfo harddisk_info = 1;</code>
             */
            public Builder addHarddiskInfo(
                    cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.HarddiskInfo.Builder builderForValue) {
                if (harddiskInfoBuilder_ == null) {
                    ensureHarddiskInfoIsMutable();
                    harddiskInfo_.add(builderForValue.build());
                    onChanged();
                } else {
                    harddiskInfoBuilder_.addMessage(builderForValue.build());
                }
                return this;
            }
            /**
             * <pre>
             *磁盘信息
             * </pre>
             *
             * <code>repeated .one2data.rbtmqmsgcli.client.HarddiskInfo harddisk_info = 1;</code>
             */
            public Builder addHarddiskInfo(
                    int index, cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.HarddiskInfo.Builder builderForValue) {
                if (harddiskInfoBuilder_ == null) {
                    ensureHarddiskInfoIsMutable();
                    harddiskInfo_.add(index, builderForValue.build());
                    onChanged();
                } else {
                    harddiskInfoBuilder_.addMessage(index, builderForValue.build());
                }
                return this;
            }
            /**
             * <pre>
             *磁盘信息
             * </pre>
             *
             * <code>repeated .one2data.rbtmqmsgcli.client.HarddiskInfo harddisk_info = 1;</code>
             */
            public Builder addAllHarddiskInfo(
                    Iterable<? extends cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.HarddiskInfo> values) {
                if (harddiskInfoBuilder_ == null) {
                    ensureHarddiskInfoIsMutable();
                    com.google.protobuf.AbstractMessageLite.Builder.addAll(
                            values, harddiskInfo_);
                    onChanged();
                } else {
                    harddiskInfoBuilder_.addAllMessages(values);
                }
                return this;
            }
            /**
             * <pre>
             *磁盘信息
             * </pre>
             *
             * <code>repeated .one2data.rbtmqmsgcli.client.HarddiskInfo harddisk_info = 1;</code>
             */
            public Builder clearHarddiskInfo() {
                if (harddiskInfoBuilder_ == null) {
                    harddiskInfo_ = java.util.Collections.emptyList();
                    bitField0_ = (bitField0_ & ~0x00000001);
                    onChanged();
                } else {
                    harddiskInfoBuilder_.clear();
                }
                return this;
            }
            /**
             * <pre>
             *磁盘信息
             * </pre>
             *
             * <code>repeated .one2data.rbtmqmsgcli.client.HarddiskInfo harddisk_info = 1;</code>
             */
            public Builder removeHarddiskInfo(int index) {
                if (harddiskInfoBuilder_ == null) {
                    ensureHarddiskInfoIsMutable();
                    harddiskInfo_.remove(index);
                    onChanged();
                } else {
                    harddiskInfoBuilder_.remove(index);
                }
                return this;
            }
            /**
             * <pre>
             *磁盘信息
             * </pre>
             *
             * <code>repeated .one2data.rbtmqmsgcli.client.HarddiskInfo harddisk_info = 1;</code>
             */
            public cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.HarddiskInfo.Builder getHarddiskInfoBuilder(
                    int index) {
                return getHarddiskInfoFieldBuilder().getBuilder(index);
            }
            /**
             * <pre>
             *磁盘信息
             * </pre>
             *
             * <code>repeated .one2data.rbtmqmsgcli.client.HarddiskInfo harddisk_info = 1;</code>
             */
            public cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.HarddiskInfoOrBuilder getHarddiskInfoOrBuilder(
                    int index) {
                if (harddiskInfoBuilder_ == null) {
                    return harddiskInfo_.get(index);  } else {
                    return harddiskInfoBuilder_.getMessageOrBuilder(index);
                }
            }
            /**
             * <pre>
             *磁盘信息
             * </pre>
             *
             * <code>repeated .one2data.rbtmqmsgcli.client.HarddiskInfo harddisk_info = 1;</code>
             */
            public java.util.List<? extends cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.HarddiskInfoOrBuilder>
            getHarddiskInfoOrBuilderList() {
                if (harddiskInfoBuilder_ != null) {
                    return harddiskInfoBuilder_.getMessageOrBuilderList();
                } else {
                    return java.util.Collections.unmodifiableList(harddiskInfo_);
                }
            }
            /**
             * <pre>
             *磁盘信息
             * </pre>
             *
             * <code>repeated .one2data.rbtmqmsgcli.client.HarddiskInfo harddisk_info = 1;</code>
             */
            public cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.HarddiskInfo.Builder addHarddiskInfoBuilder() {
                return getHarddiskInfoFieldBuilder().addBuilder(
                        cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.HarddiskInfo.getDefaultInstance());
            }
            /**
             * <pre>
             *磁盘信息
             * </pre>
             *
             * <code>repeated .one2data.rbtmqmsgcli.client.HarddiskInfo harddisk_info = 1;</code>
             */
            public cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.HarddiskInfo.Builder addHarddiskInfoBuilder(
                    int index) {
                return getHarddiskInfoFieldBuilder().addBuilder(
                        index, cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.HarddiskInfo.getDefaultInstance());
            }
            /**
             * <pre>
             *磁盘信息
             * </pre>
             *
             * <code>repeated .one2data.rbtmqmsgcli.client.HarddiskInfo harddisk_info = 1;</code>
             */
            public java.util.List<cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.HarddiskInfo.Builder>
            getHarddiskInfoBuilderList() {
                return getHarddiskInfoFieldBuilder().getBuilderList();
            }
            private com.google.protobuf.RepeatedFieldBuilderV3<
                    cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.HarddiskInfo, cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.HarddiskInfo.Builder, cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.HarddiskInfoOrBuilder>
            getHarddiskInfoFieldBuilder() {
                if (harddiskInfoBuilder_ == null) {
                    harddiskInfoBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
                            cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.HarddiskInfo, cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.HarddiskInfo.Builder, cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.HarddiskInfoOrBuilder>(
                            harddiskInfo_,
                            ((bitField0_ & 0x00000001) == 0x00000001),
                            getParentForChildren(),
                            isClean());
                    harddiskInfo_ = null;
                }
                return harddiskInfoBuilder_;
            }

            private java.util.List<cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.PartitionInfo> partitionInfo_ =
                    java.util.Collections.emptyList();
            private void ensurePartitionInfoIsMutable() {
                if (!((bitField0_ & 0x00000002) == 0x00000002)) {
                    partitionInfo_ = new java.util.ArrayList<cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.PartitionInfo>(partitionInfo_);
                    bitField0_ |= 0x00000002;
                }
            }

            private com.google.protobuf.RepeatedFieldBuilderV3<
                    cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.PartitionInfo, cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.PartitionInfo.Builder, cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.PartitionInfoOrBuilder> partitionInfoBuilder_;

            /**
             * <pre>
             *分区信息
             * </pre>
             *
             * <code>repeated .one2data.rbtmqmsgcli.client.PartitionInfo partition_info = 2;</code>
             */
            public java.util.List<cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.PartitionInfo> getPartitionInfoList() {
                if (partitionInfoBuilder_ == null) {
                    return java.util.Collections.unmodifiableList(partitionInfo_);
                } else {
                    return partitionInfoBuilder_.getMessageList();
                }
            }
            /**
             * <pre>
             *分区信息
             * </pre>
             *
             * <code>repeated .one2data.rbtmqmsgcli.client.PartitionInfo partition_info = 2;</code>
             */
            public int getPartitionInfoCount() {
                if (partitionInfoBuilder_ == null) {
                    return partitionInfo_.size();
                } else {
                    return partitionInfoBuilder_.getCount();
                }
            }
            /**
             * <pre>
             *分区信息
             * </pre>
             *
             * <code>repeated .one2data.rbtmqmsgcli.client.PartitionInfo partition_info = 2;</code>
             */
            public cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.PartitionInfo getPartitionInfo(int index) {
                if (partitionInfoBuilder_ == null) {
                    return partitionInfo_.get(index);
                } else {
                    return partitionInfoBuilder_.getMessage(index);
                }
            }
            /**
             * <pre>
             *分区信息
             * </pre>
             *
             * <code>repeated .one2data.rbtmqmsgcli.client.PartitionInfo partition_info = 2;</code>
             */
            public Builder setPartitionInfo(
                    int index, cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.PartitionInfo value) {
                if (partitionInfoBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    ensurePartitionInfoIsMutable();
                    partitionInfo_.set(index, value);
                    onChanged();
                } else {
                    partitionInfoBuilder_.setMessage(index, value);
                }
                return this;
            }
            /**
             * <pre>
             *分区信息
             * </pre>
             *
             * <code>repeated .one2data.rbtmqmsgcli.client.PartitionInfo partition_info = 2;</code>
             */
            public Builder setPartitionInfo(
                    int index, cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.PartitionInfo.Builder builderForValue) {
                if (partitionInfoBuilder_ == null) {
                    ensurePartitionInfoIsMutable();
                    partitionInfo_.set(index, builderForValue.build());
                    onChanged();
                } else {
                    partitionInfoBuilder_.setMessage(index, builderForValue.build());
                }
                return this;
            }
            /**
             * <pre>
             *分区信息
             * </pre>
             *
             * <code>repeated .one2data.rbtmqmsgcli.client.PartitionInfo partition_info = 2;</code>
             */
            public Builder addPartitionInfo(cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.PartitionInfo value) {
                if (partitionInfoBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    ensurePartitionInfoIsMutable();
                    partitionInfo_.add(value);
                    onChanged();
                } else {
                    partitionInfoBuilder_.addMessage(value);
                }
                return this;
            }
            /**
             * <pre>
             *分区信息
             * </pre>
             *
             * <code>repeated .one2data.rbtmqmsgcli.client.PartitionInfo partition_info = 2;</code>
             */
            public Builder addPartitionInfo(
                    int index, cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.PartitionInfo value) {
                if (partitionInfoBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    ensurePartitionInfoIsMutable();
                    partitionInfo_.add(index, value);
                    onChanged();
                } else {
                    partitionInfoBuilder_.addMessage(index, value);
                }
                return this;
            }
            /**
             * <pre>
             *分区信息
             * </pre>
             *
             * <code>repeated .one2data.rbtmqmsgcli.client.PartitionInfo partition_info = 2;</code>
             */
            public Builder addPartitionInfo(
                    cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.PartitionInfo.Builder builderForValue) {
                if (partitionInfoBuilder_ == null) {
                    ensurePartitionInfoIsMutable();
                    partitionInfo_.add(builderForValue.build());
                    onChanged();
                } else {
                    partitionInfoBuilder_.addMessage(builderForValue.build());
                }
                return this;
            }
            /**
             * <pre>
             *分区信息
             * </pre>
             *
             * <code>repeated .one2data.rbtmqmsgcli.client.PartitionInfo partition_info = 2;</code>
             */
            public Builder addPartitionInfo(
                    int index, cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.PartitionInfo.Builder builderForValue) {
                if (partitionInfoBuilder_ == null) {
                    ensurePartitionInfoIsMutable();
                    partitionInfo_.add(index, builderForValue.build());
                    onChanged();
                } else {
                    partitionInfoBuilder_.addMessage(index, builderForValue.build());
                }
                return this;
            }
            /**
             * <pre>
             *分区信息
             * </pre>
             *
             * <code>repeated .one2data.rbtmqmsgcli.client.PartitionInfo partition_info = 2;</code>
             */
            public Builder addAllPartitionInfo(
                    Iterable<? extends cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.PartitionInfo> values) {
                if (partitionInfoBuilder_ == null) {
                    ensurePartitionInfoIsMutable();
                    com.google.protobuf.AbstractMessageLite.Builder.addAll(
                            values, partitionInfo_);
                    onChanged();
                } else {
                    partitionInfoBuilder_.addAllMessages(values);
                }
                return this;
            }
            /**
             * <pre>
             *分区信息
             * </pre>
             *
             * <code>repeated .one2data.rbtmqmsgcli.client.PartitionInfo partition_info = 2;</code>
             */
            public Builder clearPartitionInfo() {
                if (partitionInfoBuilder_ == null) {
                    partitionInfo_ = java.util.Collections.emptyList();
                    bitField0_ = (bitField0_ & ~0x00000002);
                    onChanged();
                } else {
                    partitionInfoBuilder_.clear();
                }
                return this;
            }
            /**
             * <pre>
             *分区信息
             * </pre>
             *
             * <code>repeated .one2data.rbtmqmsgcli.client.PartitionInfo partition_info = 2;</code>
             */
            public Builder removePartitionInfo(int index) {
                if (partitionInfoBuilder_ == null) {
                    ensurePartitionInfoIsMutable();
                    partitionInfo_.remove(index);
                    onChanged();
                } else {
                    partitionInfoBuilder_.remove(index);
                }
                return this;
            }
            /**
             * <pre>
             *分区信息
             * </pre>
             *
             * <code>repeated .one2data.rbtmqmsgcli.client.PartitionInfo partition_info = 2;</code>
             */
            public cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.PartitionInfo.Builder getPartitionInfoBuilder(
                    int index) {
                return getPartitionInfoFieldBuilder().getBuilder(index);
            }
            /**
             * <pre>
             *分区信息
             * </pre>
             *
             * <code>repeated .one2data.rbtmqmsgcli.client.PartitionInfo partition_info = 2;</code>
             */
            public cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.PartitionInfoOrBuilder getPartitionInfoOrBuilder(
                    int index) {
                if (partitionInfoBuilder_ == null) {
                    return partitionInfo_.get(index);  } else {
                    return partitionInfoBuilder_.getMessageOrBuilder(index);
                }
            }
            /**
             * <pre>
             *分区信息
             * </pre>
             *
             * <code>repeated .one2data.rbtmqmsgcli.client.PartitionInfo partition_info = 2;</code>
             */
            public java.util.List<? extends cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.PartitionInfoOrBuilder>
            getPartitionInfoOrBuilderList() {
                if (partitionInfoBuilder_ != null) {
                    return partitionInfoBuilder_.getMessageOrBuilderList();
                } else {
                    return java.util.Collections.unmodifiableList(partitionInfo_);
                }
            }
            /**
             * <pre>
             *分区信息
             * </pre>
             *
             * <code>repeated .one2data.rbtmqmsgcli.client.PartitionInfo partition_info = 2;</code>
             */
            public cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.PartitionInfo.Builder addPartitionInfoBuilder() {
                return getPartitionInfoFieldBuilder().addBuilder(
                        cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.PartitionInfo.getDefaultInstance());
            }
            /**
             * <pre>
             *分区信息
             * </pre>
             *
             * <code>repeated .one2data.rbtmqmsgcli.client.PartitionInfo partition_info = 2;</code>
             */
            public cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.PartitionInfo.Builder addPartitionInfoBuilder(
                    int index) {
                return getPartitionInfoFieldBuilder().addBuilder(
                        index, cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.PartitionInfo.getDefaultInstance());
            }
            /**
             * <pre>
             *分区信息
             * </pre>
             *
             * <code>repeated .one2data.rbtmqmsgcli.client.PartitionInfo partition_info = 2;</code>
             */
            public java.util.List<cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.PartitionInfo.Builder>
            getPartitionInfoBuilderList() {
                return getPartitionInfoFieldBuilder().getBuilderList();
            }
            private com.google.protobuf.RepeatedFieldBuilderV3<
                    cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.PartitionInfo, cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.PartitionInfo.Builder, cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.PartitionInfoOrBuilder>
            getPartitionInfoFieldBuilder() {
                if (partitionInfoBuilder_ == null) {
                    partitionInfoBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
                            cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.PartitionInfo, cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.PartitionInfo.Builder, cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.PartitionInfoOrBuilder>(
                            partitionInfo_,
                            ((bitField0_ & 0x00000002) == 0x00000002),
                            getParentForChildren(),
                            isClean());
                    partitionInfo_ = null;
                }
                return partitionInfoBuilder_;
            }

            private java.util.List<cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.LVInfo> lvInfo_ =
                    java.util.Collections.emptyList();
            private void ensureLvInfoIsMutable() {
                if (!((bitField0_ & 0x00000004) == 0x00000004)) {
                    lvInfo_ = new java.util.ArrayList<cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.LVInfo>(lvInfo_);
                    bitField0_ |= 0x00000004;
                }
            }

            private com.google.protobuf.RepeatedFieldBuilderV3<
                    cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.LVInfo, cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.LVInfo.Builder, cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.LVInfoOrBuilder> lvInfoBuilder_;

            /**
             * <pre>
             *逻辑卷信息
             * </pre>
             *
             * <code>repeated .one2data.rbtmqmsgcli.client.LVInfo lv_info = 3;</code>
             */
            public java.util.List<cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.LVInfo> getLvInfoList() {
                if (lvInfoBuilder_ == null) {
                    return java.util.Collections.unmodifiableList(lvInfo_);
                } else {
                    return lvInfoBuilder_.getMessageList();
                }
            }
            /**
             * <pre>
             *逻辑卷信息
             * </pre>
             *
             * <code>repeated .one2data.rbtmqmsgcli.client.LVInfo lv_info = 3;</code>
             */
            public int getLvInfoCount() {
                if (lvInfoBuilder_ == null) {
                    return lvInfo_.size();
                } else {
                    return lvInfoBuilder_.getCount();
                }
            }
            /**
             * <pre>
             *逻辑卷信息
             * </pre>
             *
             * <code>repeated .one2data.rbtmqmsgcli.client.LVInfo lv_info = 3;</code>
             */
            public cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.LVInfo getLvInfo(int index) {
                if (lvInfoBuilder_ == null) {
                    return lvInfo_.get(index);
                } else {
                    return lvInfoBuilder_.getMessage(index);
                }
            }
            /**
             * <pre>
             *逻辑卷信息
             * </pre>
             *
             * <code>repeated .one2data.rbtmqmsgcli.client.LVInfo lv_info = 3;</code>
             */
            public Builder setLvInfo(
                    int index, cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.LVInfo value) {
                if (lvInfoBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    ensureLvInfoIsMutable();
                    lvInfo_.set(index, value);
                    onChanged();
                } else {
                    lvInfoBuilder_.setMessage(index, value);
                }
                return this;
            }
            /**
             * <pre>
             *逻辑卷信息
             * </pre>
             *
             * <code>repeated .one2data.rbtmqmsgcli.client.LVInfo lv_info = 3;</code>
             */
            public Builder setLvInfo(
                    int index, cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.LVInfo.Builder builderForValue) {
                if (lvInfoBuilder_ == null) {
                    ensureLvInfoIsMutable();
                    lvInfo_.set(index, builderForValue.build());
                    onChanged();
                } else {
                    lvInfoBuilder_.setMessage(index, builderForValue.build());
                }
                return this;
            }
            /**
             * <pre>
             *逻辑卷信息
             * </pre>
             *
             * <code>repeated .one2data.rbtmqmsgcli.client.LVInfo lv_info = 3;</code>
             */
            public Builder addLvInfo(cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.LVInfo value) {
                if (lvInfoBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    ensureLvInfoIsMutable();
                    lvInfo_.add(value);
                    onChanged();
                } else {
                    lvInfoBuilder_.addMessage(value);
                }
                return this;
            }
            /**
             * <pre>
             *逻辑卷信息
             * </pre>
             *
             * <code>repeated .one2data.rbtmqmsgcli.client.LVInfo lv_info = 3;</code>
             */
            public Builder addLvInfo(
                    int index, cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.LVInfo value) {
                if (lvInfoBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    ensureLvInfoIsMutable();
                    lvInfo_.add(index, value);
                    onChanged();
                } else {
                    lvInfoBuilder_.addMessage(index, value);
                }
                return this;
            }
            /**
             * <pre>
             *逻辑卷信息
             * </pre>
             *
             * <code>repeated .one2data.rbtmqmsgcli.client.LVInfo lv_info = 3;</code>
             */
            public Builder addLvInfo(
                    cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.LVInfo.Builder builderForValue) {
                if (lvInfoBuilder_ == null) {
                    ensureLvInfoIsMutable();
                    lvInfo_.add(builderForValue.build());
                    onChanged();
                } else {
                    lvInfoBuilder_.addMessage(builderForValue.build());
                }
                return this;
            }
            /**
             * <pre>
             *逻辑卷信息
             * </pre>
             *
             * <code>repeated .one2data.rbtmqmsgcli.client.LVInfo lv_info = 3;</code>
             */
            public Builder addLvInfo(
                    int index, cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.LVInfo.Builder builderForValue) {
                if (lvInfoBuilder_ == null) {
                    ensureLvInfoIsMutable();
                    lvInfo_.add(index, builderForValue.build());
                    onChanged();
                } else {
                    lvInfoBuilder_.addMessage(index, builderForValue.build());
                }
                return this;
            }
            /**
             * <pre>
             *逻辑卷信息
             * </pre>
             *
             * <code>repeated .one2data.rbtmqmsgcli.client.LVInfo lv_info = 3;</code>
             */
            public Builder addAllLvInfo(
                    Iterable<? extends cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.LVInfo> values) {
                if (lvInfoBuilder_ == null) {
                    ensureLvInfoIsMutable();
                    com.google.protobuf.AbstractMessageLite.Builder.addAll(
                            values, lvInfo_);
                    onChanged();
                } else {
                    lvInfoBuilder_.addAllMessages(values);
                }
                return this;
            }
            /**
             * <pre>
             *逻辑卷信息
             * </pre>
             *
             * <code>repeated .one2data.rbtmqmsgcli.client.LVInfo lv_info = 3;</code>
             */
            public Builder clearLvInfo() {
                if (lvInfoBuilder_ == null) {
                    lvInfo_ = java.util.Collections.emptyList();
                    bitField0_ = (bitField0_ & ~0x00000004);
                    onChanged();
                } else {
                    lvInfoBuilder_.clear();
                }
                return this;
            }
            /**
             * <pre>
             *逻辑卷信息
             * </pre>
             *
             * <code>repeated .one2data.rbtmqmsgcli.client.LVInfo lv_info = 3;</code>
             */
            public Builder removeLvInfo(int index) {
                if (lvInfoBuilder_ == null) {
                    ensureLvInfoIsMutable();
                    lvInfo_.remove(index);
                    onChanged();
                } else {
                    lvInfoBuilder_.remove(index);
                }
                return this;
            }
            /**
             * <pre>
             *逻辑卷信息
             * </pre>
             *
             * <code>repeated .one2data.rbtmqmsgcli.client.LVInfo lv_info = 3;</code>
             */
            public cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.LVInfo.Builder getLvInfoBuilder(
                    int index) {
                return getLvInfoFieldBuilder().getBuilder(index);
            }
            /**
             * <pre>
             *逻辑卷信息
             * </pre>
             *
             * <code>repeated .one2data.rbtmqmsgcli.client.LVInfo lv_info = 3;</code>
             */
            public cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.LVInfoOrBuilder getLvInfoOrBuilder(
                    int index) {
                if (lvInfoBuilder_ == null) {
                    return lvInfo_.get(index);  } else {
                    return lvInfoBuilder_.getMessageOrBuilder(index);
                }
            }
            /**
             * <pre>
             *逻辑卷信息
             * </pre>
             *
             * <code>repeated .one2data.rbtmqmsgcli.client.LVInfo lv_info = 3;</code>
             */
            public java.util.List<? extends cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.LVInfoOrBuilder>
            getLvInfoOrBuilderList() {
                if (lvInfoBuilder_ != null) {
                    return lvInfoBuilder_.getMessageOrBuilderList();
                } else {
                    return java.util.Collections.unmodifiableList(lvInfo_);
                }
            }
            /**
             * <pre>
             *逻辑卷信息
             * </pre>
             *
             * <code>repeated .one2data.rbtmqmsgcli.client.LVInfo lv_info = 3;</code>
             */
            public cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.LVInfo.Builder addLvInfoBuilder() {
                return getLvInfoFieldBuilder().addBuilder(
                        cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.LVInfo.getDefaultInstance());
            }
            /**
             * <pre>
             *逻辑卷信息
             * </pre>
             *
             * <code>repeated .one2data.rbtmqmsgcli.client.LVInfo lv_info = 3;</code>
             */
            public cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.LVInfo.Builder addLvInfoBuilder(
                    int index) {
                return getLvInfoFieldBuilder().addBuilder(
                        index, cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.LVInfo.getDefaultInstance());
            }
            /**
             * <pre>
             *逻辑卷信息
             * </pre>
             *
             * <code>repeated .one2data.rbtmqmsgcli.client.LVInfo lv_info = 3;</code>
             */
            public java.util.List<cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.LVInfo.Builder>
            getLvInfoBuilderList() {
                return getLvInfoFieldBuilder().getBuilderList();
            }
            private com.google.protobuf.RepeatedFieldBuilderV3<
                    cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.LVInfo, cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.LVInfo.Builder, cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.LVInfoOrBuilder>
            getLvInfoFieldBuilder() {
                if (lvInfoBuilder_ == null) {
                    lvInfoBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
                            cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.LVInfo, cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.LVInfo.Builder, cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.LVInfoOrBuilder>(
                            lvInfo_,
                            ((bitField0_ & 0x00000004) == 0x00000004),
                            getParentForChildren(),
                            isClean());
                    lvInfo_ = null;
                }
                return lvInfoBuilder_;
            }

            private Object diskInfoJson_ = "";
            /**
             * <pre>
             * 磁盘扫描生成的原始 json 字符串
             * </pre>
             *
             * <code>optional string disk_info_json = 4;</code>
             */
            public String getDiskInfoJson() {
                Object ref = diskInfoJson_;
                if (!(ref instanceof String)) {
                    com.google.protobuf.ByteString bs =
                            (com.google.protobuf.ByteString) ref;
                    String s = bs.toStringUtf8();
                    diskInfoJson_ = s;
                    return s;
                } else {
                    return (String) ref;
                }
            }
            /**
             * <pre>
             * 磁盘扫描生成的原始 json 字符串
             * </pre>
             *
             * <code>optional string disk_info_json = 4;</code>
             */
            public com.google.protobuf.ByteString
            getDiskInfoJsonBytes() {
                Object ref = diskInfoJson_;
                if (ref instanceof String) {
                    com.google.protobuf.ByteString b =
                            com.google.protobuf.ByteString.copyFromUtf8(
                                    (String) ref);
                    diskInfoJson_ = b;
                    return b;
                } else {
                    return (com.google.protobuf.ByteString) ref;
                }
            }
            /**
             * <pre>
             * 磁盘扫描生成的原始 json 字符串
             * </pre>
             *
             * <code>optional string disk_info_json = 4;</code>
             */
            public Builder setDiskInfoJson(
                    String value) {
                if (value == null) {
                    throw new NullPointerException();
                }

                diskInfoJson_ = value;
                onChanged();
                return this;
            }
            /**
             * <pre>
             * 磁盘扫描生成的原始 json 字符串
             * </pre>
             *
             * <code>optional string disk_info_json = 4;</code>
             */
            public Builder clearDiskInfoJson() {

                diskInfoJson_ = getDefaultInstance().getDiskInfoJson();
                onChanged();
                return this;
            }
            /**
             * <pre>
             * 磁盘扫描生成的原始 json 字符串
             * </pre>
             *
             * <code>optional string disk_info_json = 4;</code>
             */
            public Builder setDiskInfoJsonBytes(
                    com.google.protobuf.ByteString value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                checkByteStringIsUtf8(value);

                diskInfoJson_ = value;
                onChanged();
                return this;
            }

            private Object volumeInfoJson_ = "";
            /**
             * <code>optional string volume_info_json = 5;</code>
             */
            public String getVolumeInfoJson() {
                Object ref = volumeInfoJson_;
                if (!(ref instanceof String)) {
                    com.google.protobuf.ByteString bs =
                            (com.google.protobuf.ByteString) ref;
                    String s = bs.toStringUtf8();
                    volumeInfoJson_ = s;
                    return s;
                } else {
                    return (String) ref;
                }
            }
            /**
             * <code>optional string volume_info_json = 5;</code>
             */
            public com.google.protobuf.ByteString
            getVolumeInfoJsonBytes() {
                Object ref = volumeInfoJson_;
                if (ref instanceof String) {
                    com.google.protobuf.ByteString b =
                            com.google.protobuf.ByteString.copyFromUtf8(
                                    (String) ref);
                    volumeInfoJson_ = b;
                    return b;
                } else {
                    return (com.google.protobuf.ByteString) ref;
                }
            }
            /**
             * <code>optional string volume_info_json = 5;</code>
             */
            public Builder setVolumeInfoJson(
                    String value) {
                if (value == null) {
                    throw new NullPointerException();
                }

                volumeInfoJson_ = value;
                onChanged();
                return this;
            }
            /**
             * <code>optional string volume_info_json = 5;</code>
             */
            public Builder clearVolumeInfoJson() {

                volumeInfoJson_ = getDefaultInstance().getVolumeInfoJson();
                onChanged();
                return this;
            }
            /**
             * <code>optional string volume_info_json = 5;</code>
             */
            public Builder setVolumeInfoJsonBytes(
                    com.google.protobuf.ByteString value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                checkByteStringIsUtf8(value);

                volumeInfoJson_ = value;
                onChanged();
                return this;
            }

            private int diskscanVersion_ ;
            /**
             * <pre>
             * 磁盘扫描版本，不同的版本生成的磁盘信息会有差异
             * </pre>
             *
             * <code>optional int32 diskscan_version = 6;</code>
             */
            public int getDiskscanVersion() {
                return diskscanVersion_;
            }
            /**
             * <pre>
             * 磁盘扫描版本，不同的版本生成的磁盘信息会有差异
             * </pre>
             *
             * <code>optional int32 diskscan_version = 6;</code>
             */
            public Builder setDiskscanVersion(int value) {

                diskscanVersion_ = value;
                onChanged();
                return this;
            }
            /**
             * <pre>
             * 磁盘扫描版本，不同的版本生成的磁盘信息会有差异
             * </pre>
             *
             * <code>optional int32 diskscan_version = 6;</code>
             */
            public Builder clearDiskscanVersion() {

                diskscanVersion_ = 0;
                onChanged();
                return this;
            }

            private java.util.List<cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.LanFreeInfo> lfInfo_ =
                    java.util.Collections.emptyList();
            private void ensureLfInfoIsMutable() {
                if (!((bitField0_ & 0x00000040) == 0x00000040)) {
                    lfInfo_ = new java.util.ArrayList<cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.LanFreeInfo>(lfInfo_);
                    bitField0_ |= 0x00000040;
                }
            }

            private com.google.protobuf.RepeatedFieldBuilderV3<
                    cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.LanFreeInfo, cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.LanFreeInfo.Builder, cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.LanFreeInfoOrBuilder> lfInfoBuilder_;

            /**
             * <pre>
             * LanFree 信息
             * </pre>
             *
             * <code>repeated .one2data.rbtmqmsgcli.client.LanFreeInfo lf_info = 7;</code>
             */
            public java.util.List<cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.LanFreeInfo> getLfInfoList() {
                if (lfInfoBuilder_ == null) {
                    return java.util.Collections.unmodifiableList(lfInfo_);
                } else {
                    return lfInfoBuilder_.getMessageList();
                }
            }
            /**
             * <pre>
             * LanFree 信息
             * </pre>
             *
             * <code>repeated .one2data.rbtmqmsgcli.client.LanFreeInfo lf_info = 7;</code>
             */
            public int getLfInfoCount() {
                if (lfInfoBuilder_ == null) {
                    return lfInfo_.size();
                } else {
                    return lfInfoBuilder_.getCount();
                }
            }
            /**
             * <pre>
             * LanFree 信息
             * </pre>
             *
             * <code>repeated .one2data.rbtmqmsgcli.client.LanFreeInfo lf_info = 7;</code>
             */
            public cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.LanFreeInfo getLfInfo(int index) {
                if (lfInfoBuilder_ == null) {
                    return lfInfo_.get(index);
                } else {
                    return lfInfoBuilder_.getMessage(index);
                }
            }
            /**
             * <pre>
             * LanFree 信息
             * </pre>
             *
             * <code>repeated .one2data.rbtmqmsgcli.client.LanFreeInfo lf_info = 7;</code>
             */
            public Builder setLfInfo(
                    int index, cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.LanFreeInfo value) {
                if (lfInfoBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    ensureLfInfoIsMutable();
                    lfInfo_.set(index, value);
                    onChanged();
                } else {
                    lfInfoBuilder_.setMessage(index, value);
                }
                return this;
            }
            /**
             * <pre>
             * LanFree 信息
             * </pre>
             *
             * <code>repeated .one2data.rbtmqmsgcli.client.LanFreeInfo lf_info = 7;</code>
             */
            public Builder setLfInfo(
                    int index, cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.LanFreeInfo.Builder builderForValue) {
                if (lfInfoBuilder_ == null) {
                    ensureLfInfoIsMutable();
                    lfInfo_.set(index, builderForValue.build());
                    onChanged();
                } else {
                    lfInfoBuilder_.setMessage(index, builderForValue.build());
                }
                return this;
            }
            /**
             * <pre>
             * LanFree 信息
             * </pre>
             *
             * <code>repeated .one2data.rbtmqmsgcli.client.LanFreeInfo lf_info = 7;</code>
             */
            public Builder addLfInfo(cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.LanFreeInfo value) {
                if (lfInfoBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    ensureLfInfoIsMutable();
                    lfInfo_.add(value);
                    onChanged();
                } else {
                    lfInfoBuilder_.addMessage(value);
                }
                return this;
            }
            /**
             * <pre>
             * LanFree 信息
             * </pre>
             *
             * <code>repeated .one2data.rbtmqmsgcli.client.LanFreeInfo lf_info = 7;</code>
             */
            public Builder addLfInfo(
                    int index, cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.LanFreeInfo value) {
                if (lfInfoBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    ensureLfInfoIsMutable();
                    lfInfo_.add(index, value);
                    onChanged();
                } else {
                    lfInfoBuilder_.addMessage(index, value);
                }
                return this;
            }
            /**
             * <pre>
             * LanFree 信息
             * </pre>
             *
             * <code>repeated .one2data.rbtmqmsgcli.client.LanFreeInfo lf_info = 7;</code>
             */
            public Builder addLfInfo(
                    cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.LanFreeInfo.Builder builderForValue) {
                if (lfInfoBuilder_ == null) {
                    ensureLfInfoIsMutable();
                    lfInfo_.add(builderForValue.build());
                    onChanged();
                } else {
                    lfInfoBuilder_.addMessage(builderForValue.build());
                }
                return this;
            }
            /**
             * <pre>
             * LanFree 信息
             * </pre>
             *
             * <code>repeated .one2data.rbtmqmsgcli.client.LanFreeInfo lf_info = 7;</code>
             */
            public Builder addLfInfo(
                    int index, cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.LanFreeInfo.Builder builderForValue) {
                if (lfInfoBuilder_ == null) {
                    ensureLfInfoIsMutable();
                    lfInfo_.add(index, builderForValue.build());
                    onChanged();
                } else {
                    lfInfoBuilder_.addMessage(index, builderForValue.build());
                }
                return this;
            }
            /**
             * <pre>
             * LanFree 信息
             * </pre>
             *
             * <code>repeated .one2data.rbtmqmsgcli.client.LanFreeInfo lf_info = 7;</code>
             */
            public Builder addAllLfInfo(
                    Iterable<? extends cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.LanFreeInfo> values) {
                if (lfInfoBuilder_ == null) {
                    ensureLfInfoIsMutable();
                    com.google.protobuf.AbstractMessageLite.Builder.addAll(
                            values, lfInfo_);
                    onChanged();
                } else {
                    lfInfoBuilder_.addAllMessages(values);
                }
                return this;
            }
            /**
             * <pre>
             * LanFree 信息
             * </pre>
             *
             * <code>repeated .one2data.rbtmqmsgcli.client.LanFreeInfo lf_info = 7;</code>
             */
            public Builder clearLfInfo() {
                if (lfInfoBuilder_ == null) {
                    lfInfo_ = java.util.Collections.emptyList();
                    bitField0_ = (bitField0_ & ~0x00000040);
                    onChanged();
                } else {
                    lfInfoBuilder_.clear();
                }
                return this;
            }
            /**
             * <pre>
             * LanFree 信息
             * </pre>
             *
             * <code>repeated .one2data.rbtmqmsgcli.client.LanFreeInfo lf_info = 7;</code>
             */
            public Builder removeLfInfo(int index) {
                if (lfInfoBuilder_ == null) {
                    ensureLfInfoIsMutable();
                    lfInfo_.remove(index);
                    onChanged();
                } else {
                    lfInfoBuilder_.remove(index);
                }
                return this;
            }
            /**
             * <pre>
             * LanFree 信息
             * </pre>
             *
             * <code>repeated .one2data.rbtmqmsgcli.client.LanFreeInfo lf_info = 7;</code>
             */
            public cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.LanFreeInfo.Builder getLfInfoBuilder(
                    int index) {
                return getLfInfoFieldBuilder().getBuilder(index);
            }
            /**
             * <pre>
             * LanFree 信息
             * </pre>
             *
             * <code>repeated .one2data.rbtmqmsgcli.client.LanFreeInfo lf_info = 7;</code>
             */
            public cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.LanFreeInfoOrBuilder getLfInfoOrBuilder(
                    int index) {
                if (lfInfoBuilder_ == null) {
                    return lfInfo_.get(index);  } else {
                    return lfInfoBuilder_.getMessageOrBuilder(index);
                }
            }
            /**
             * <pre>
             * LanFree 信息
             * </pre>
             *
             * <code>repeated .one2data.rbtmqmsgcli.client.LanFreeInfo lf_info = 7;</code>
             */
            public java.util.List<? extends cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.LanFreeInfoOrBuilder>
            getLfInfoOrBuilderList() {
                if (lfInfoBuilder_ != null) {
                    return lfInfoBuilder_.getMessageOrBuilderList();
                } else {
                    return java.util.Collections.unmodifiableList(lfInfo_);
                }
            }
            /**
             * <pre>
             * LanFree 信息
             * </pre>
             *
             * <code>repeated .one2data.rbtmqmsgcli.client.LanFreeInfo lf_info = 7;</code>
             */
            public cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.LanFreeInfo.Builder addLfInfoBuilder() {
                return getLfInfoFieldBuilder().addBuilder(
                        cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.LanFreeInfo.getDefaultInstance());
            }
            /**
             * <pre>
             * LanFree 信息
             * </pre>
             *
             * <code>repeated .one2data.rbtmqmsgcli.client.LanFreeInfo lf_info = 7;</code>
             */
            public cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.LanFreeInfo.Builder addLfInfoBuilder(
                    int index) {
                return getLfInfoFieldBuilder().addBuilder(
                        index, cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.LanFreeInfo.getDefaultInstance());
            }
            /**
             * <pre>
             * LanFree 信息
             * </pre>
             *
             * <code>repeated .one2data.rbtmqmsgcli.client.LanFreeInfo lf_info = 7;</code>
             */
            public java.util.List<cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.LanFreeInfo.Builder>
            getLfInfoBuilderList() {
                return getLfInfoFieldBuilder().getBuilderList();
            }
            private com.google.protobuf.RepeatedFieldBuilderV3<
                    cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.LanFreeInfo, cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.LanFreeInfo.Builder, cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.LanFreeInfoOrBuilder>
            getLfInfoFieldBuilder() {
                if (lfInfoBuilder_ == null) {
                    lfInfoBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
                            cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.LanFreeInfo, cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.LanFreeInfo.Builder, cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.LanFreeInfoOrBuilder>(
                            lfInfo_,
                            ((bitField0_ & 0x00000040) == 0x00000040),
                            getParentForChildren(),
                            isClean());
                    lfInfo_ = null;
                }
                return lfInfoBuilder_;
            }

            private cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BitmapDriverInfo bitmapDriverInfo_ = null;
            private com.google.protobuf.SingleFieldBuilderV3<
                    cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BitmapDriverInfo, cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BitmapDriverInfo.Builder, cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BitmapDriverInfoOrBuilder> bitmapDriverInfoBuilder_;
            /**
             * <pre>
             * Bitmap 驱动信息
             * </pre>
             *
             * <code>optional .one2data.rbtmqmsgcli.client.BitmapDriverInfo bitmap_driver_info = 8;</code>
             */
            public boolean hasBitmapDriverInfo() {
                return bitmapDriverInfoBuilder_ != null || bitmapDriverInfo_ != null;
            }
            /**
             * <pre>
             * Bitmap 驱动信息
             * </pre>
             *
             * <code>optional .one2data.rbtmqmsgcli.client.BitmapDriverInfo bitmap_driver_info = 8;</code>
             */
            public cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BitmapDriverInfo getBitmapDriverInfo() {
                if (bitmapDriverInfoBuilder_ == null) {
                    return bitmapDriverInfo_ == null ? cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BitmapDriverInfo.getDefaultInstance() : bitmapDriverInfo_;
                } else {
                    return bitmapDriverInfoBuilder_.getMessage();
                }
            }
            /**
             * <pre>
             * Bitmap 驱动信息
             * </pre>
             *
             * <code>optional .one2data.rbtmqmsgcli.client.BitmapDriverInfo bitmap_driver_info = 8;</code>
             */
            public Builder setBitmapDriverInfo(cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BitmapDriverInfo value) {
                if (bitmapDriverInfoBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    bitmapDriverInfo_ = value;
                    onChanged();
                } else {
                    bitmapDriverInfoBuilder_.setMessage(value);
                }

                return this;
            }
            /**
             * <pre>
             * Bitmap 驱动信息
             * </pre>
             *
             * <code>optional .one2data.rbtmqmsgcli.client.BitmapDriverInfo bitmap_driver_info = 8;</code>
             */
            public Builder setBitmapDriverInfo(
                    cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BitmapDriverInfo.Builder builderForValue) {
                if (bitmapDriverInfoBuilder_ == null) {
                    bitmapDriverInfo_ = builderForValue.build();
                    onChanged();
                } else {
                    bitmapDriverInfoBuilder_.setMessage(builderForValue.build());
                }

                return this;
            }
            /**
             * <pre>
             * Bitmap 驱动信息
             * </pre>
             *
             * <code>optional .one2data.rbtmqmsgcli.client.BitmapDriverInfo bitmap_driver_info = 8;</code>
             */
            public Builder mergeBitmapDriverInfo(cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BitmapDriverInfo value) {
                if (bitmapDriverInfoBuilder_ == null) {
                    if (bitmapDriverInfo_ != null) {
                        bitmapDriverInfo_ =
                                cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BitmapDriverInfo.newBuilder(bitmapDriverInfo_).mergeFrom(value).buildPartial();
                    } else {
                        bitmapDriverInfo_ = value;
                    }
                    onChanged();
                } else {
                    bitmapDriverInfoBuilder_.mergeFrom(value);
                }

                return this;
            }
            /**
             * <pre>
             * Bitmap 驱动信息
             * </pre>
             *
             * <code>optional .one2data.rbtmqmsgcli.client.BitmapDriverInfo bitmap_driver_info = 8;</code>
             */
            public Builder clearBitmapDriverInfo() {
                if (bitmapDriverInfoBuilder_ == null) {
                    bitmapDriverInfo_ = null;
                    onChanged();
                } else {
                    bitmapDriverInfo_ = null;
                    bitmapDriverInfoBuilder_ = null;
                }

                return this;
            }
            /**
             * <pre>
             * Bitmap 驱动信息
             * </pre>
             *
             * <code>optional .one2data.rbtmqmsgcli.client.BitmapDriverInfo bitmap_driver_info = 8;</code>
             */
            public cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BitmapDriverInfo.Builder getBitmapDriverInfoBuilder() {

                onChanged();
                return getBitmapDriverInfoFieldBuilder().getBuilder();
            }
            /**
             * <pre>
             * Bitmap 驱动信息
             * </pre>
             *
             * <code>optional .one2data.rbtmqmsgcli.client.BitmapDriverInfo bitmap_driver_info = 8;</code>
             */
            public cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BitmapDriverInfoOrBuilder getBitmapDriverInfoOrBuilder() {
                if (bitmapDriverInfoBuilder_ != null) {
                    return bitmapDriverInfoBuilder_.getMessageOrBuilder();
                } else {
                    return bitmapDriverInfo_ == null ?
                            cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BitmapDriverInfo.getDefaultInstance() : bitmapDriverInfo_;
                }
            }
            /**
             * <pre>
             * Bitmap 驱动信息
             * </pre>
             *
             * <code>optional .one2data.rbtmqmsgcli.client.BitmapDriverInfo bitmap_driver_info = 8;</code>
             */
            private com.google.protobuf.SingleFieldBuilderV3<
                    cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BitmapDriverInfo, cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BitmapDriverInfo.Builder, cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BitmapDriverInfoOrBuilder>
            getBitmapDriverInfoFieldBuilder() {
                if (bitmapDriverInfoBuilder_ == null) {
                    bitmapDriverInfoBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                            cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BitmapDriverInfo, cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BitmapDriverInfo.Builder, cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BitmapDriverInfoOrBuilder>(
                            getBitmapDriverInfo(),
                            getParentForChildren(),
                            isClean());
                    bitmapDriverInfo_ = null;
                }
                return bitmapDriverInfoBuilder_;
            }

            private Object iscsiInitiatorName_ = "";
            /**
             * <pre>
             * ISCSI initiator 名称，值为空时表示不支持 ISCSI 挂载，
             * 否则表示支持 ISCSI 挂载，此时 Web 发起 ISCSI 挂载之前可能需要使用该值
             * 先在 ISCSI target 那边授权
             * </pre>
             *
             * <code>optional string iscsi_initiator_name = 9;</code>
             */
            public String getIscsiInitiatorName() {
                Object ref = iscsiInitiatorName_;
                if (!(ref instanceof String)) {
                    com.google.protobuf.ByteString bs =
                            (com.google.protobuf.ByteString) ref;
                    String s = bs.toStringUtf8();
                    iscsiInitiatorName_ = s;
                    return s;
                } else {
                    return (String) ref;
                }
            }
            /**
             * <pre>
             * ISCSI initiator 名称，值为空时表示不支持 ISCSI 挂载，
             * 否则表示支持 ISCSI 挂载，此时 Web 发起 ISCSI 挂载之前可能需要使用该值
             * 先在 ISCSI target 那边授权
             * </pre>
             *
             * <code>optional string iscsi_initiator_name = 9;</code>
             */
            public com.google.protobuf.ByteString
            getIscsiInitiatorNameBytes() {
                Object ref = iscsiInitiatorName_;
                if (ref instanceof String) {
                    com.google.protobuf.ByteString b =
                            com.google.protobuf.ByteString.copyFromUtf8(
                                    (String) ref);
                    iscsiInitiatorName_ = b;
                    return b;
                } else {
                    return (com.google.protobuf.ByteString) ref;
                }
            }
            /**
             * <pre>
             * ISCSI initiator 名称，值为空时表示不支持 ISCSI 挂载，
             * 否则表示支持 ISCSI 挂载，此时 Web 发起 ISCSI 挂载之前可能需要使用该值
             * 先在 ISCSI target 那边授权
             * </pre>
             *
             * <code>optional string iscsi_initiator_name = 9;</code>
             */
            public Builder setIscsiInitiatorName(
                    String value) {
                if (value == null) {
                    throw new NullPointerException();
                }

                iscsiInitiatorName_ = value;
                onChanged();
                return this;
            }
            /**
             * <pre>
             * ISCSI initiator 名称，值为空时表示不支持 ISCSI 挂载，
             * 否则表示支持 ISCSI 挂载，此时 Web 发起 ISCSI 挂载之前可能需要使用该值
             * 先在 ISCSI target 那边授权
             * </pre>
             *
             * <code>optional string iscsi_initiator_name = 9;</code>
             */
            public Builder clearIscsiInitiatorName() {

                iscsiInitiatorName_ = getDefaultInstance().getIscsiInitiatorName();
                onChanged();
                return this;
            }
            /**
             * <pre>
             * ISCSI initiator 名称，值为空时表示不支持 ISCSI 挂载，
             * 否则表示支持 ISCSI 挂载，此时 Web 发起 ISCSI 挂载之前可能需要使用该值
             * 先在 ISCSI target 那边授权
             * </pre>
             *
             * <code>optional string iscsi_initiator_name = 9;</code>
             */
            public Builder setIscsiInitiatorNameBytes(
                    com.google.protobuf.ByteString value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                checkByteStringIsUtf8(value);

                iscsiInitiatorName_ = value;
                onChanged();
                return this;
            }

            private java.util.List<Integer> supportedCompressType_ =
                    java.util.Collections.emptyList();
            private void ensureSupportedCompressTypeIsMutable() {
                if (!((bitField0_ & 0x00000200) == 0x00000200)) {
                    supportedCompressType_ = new java.util.ArrayList<Integer>(supportedCompressType_);
                    bitField0_ |= 0x00000200;
                }
            }
            /**
             * <pre>
             * 客户端支持的压缩算法
             * </pre>
             *
             * <code>repeated .one2data.rbtmqmsgcli.common.CompressType supported_compress_type = 10;</code>
             */
            public java.util.List<cn.keptdata.one2data.header.message.protobuf.common.Common.CompressType> getSupportedCompressTypeList() {
                return new com.google.protobuf.Internal.ListAdapter<
                        Integer, cn.keptdata.one2data.header.message.protobuf.common.Common.CompressType>(supportedCompressType_, supportedCompressType_converter_);
            }
            /**
             * <pre>
             * 客户端支持的压缩算法
             * </pre>
             *
             * <code>repeated .one2data.rbtmqmsgcli.common.CompressType supported_compress_type = 10;</code>
             */
            public int getSupportedCompressTypeCount() {
                return supportedCompressType_.size();
            }
            /**
             * <pre>
             * 客户端支持的压缩算法
             * </pre>
             *
             * <code>repeated .one2data.rbtmqmsgcli.common.CompressType supported_compress_type = 10;</code>
             */
            public cn.keptdata.one2data.header.message.protobuf.common.Common.CompressType getSupportedCompressType(int index) {
                return supportedCompressType_converter_.convert(supportedCompressType_.get(index));
            }
            /**
             * <pre>
             * 客户端支持的压缩算法
             * </pre>
             *
             * <code>repeated .one2data.rbtmqmsgcli.common.CompressType supported_compress_type = 10;</code>
             */
            public Builder setSupportedCompressType(
                    int index, cn.keptdata.one2data.header.message.protobuf.common.Common.CompressType value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                ensureSupportedCompressTypeIsMutable();
                supportedCompressType_.set(index, value.getNumber());
                onChanged();
                return this;
            }
            /**
             * <pre>
             * 客户端支持的压缩算法
             * </pre>
             *
             * <code>repeated .one2data.rbtmqmsgcli.common.CompressType supported_compress_type = 10;</code>
             */
            public Builder addSupportedCompressType(cn.keptdata.one2data.header.message.protobuf.common.Common.CompressType value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                ensureSupportedCompressTypeIsMutable();
                supportedCompressType_.add(value.getNumber());
                onChanged();
                return this;
            }
            /**
             * <pre>
             * 客户端支持的压缩算法
             * </pre>
             *
             * <code>repeated .one2data.rbtmqmsgcli.common.CompressType supported_compress_type = 10;</code>
             */
            public Builder addAllSupportedCompressType(
                    Iterable<? extends cn.keptdata.one2data.header.message.protobuf.common.Common.CompressType> values) {
                ensureSupportedCompressTypeIsMutable();
                for (cn.keptdata.one2data.header.message.protobuf.common.Common.CompressType value : values) {
                    supportedCompressType_.add(value.getNumber());
                }
                onChanged();
                return this;
            }
            /**
             * <pre>
             * 客户端支持的压缩算法
             * </pre>
             *
             * <code>repeated .one2data.rbtmqmsgcli.common.CompressType supported_compress_type = 10;</code>
             */
            public Builder clearSupportedCompressType() {
                supportedCompressType_ = java.util.Collections.emptyList();
                bitField0_ = (bitField0_ & ~0x00000200);
                onChanged();
                return this;
            }
            /**
             * <pre>
             * 客户端支持的压缩算法
             * </pre>
             *
             * <code>repeated .one2data.rbtmqmsgcli.common.CompressType supported_compress_type = 10;</code>
             */
            public java.util.List<Integer>
            getSupportedCompressTypeValueList() {
                return java.util.Collections.unmodifiableList(supportedCompressType_);
            }
            /**
             * <pre>
             * 客户端支持的压缩算法
             * </pre>
             *
             * <code>repeated .one2data.rbtmqmsgcli.common.CompressType supported_compress_type = 10;</code>
             */
            public int getSupportedCompressTypeValue(int index) {
                return supportedCompressType_.get(index);
            }
            /**
             * <pre>
             * 客户端支持的压缩算法
             * </pre>
             *
             * <code>repeated .one2data.rbtmqmsgcli.common.CompressType supported_compress_type = 10;</code>
             */
            public Builder setSupportedCompressTypeValue(
                    int index, int value) {
                ensureSupportedCompressTypeIsMutable();
                supportedCompressType_.set(index, value);
                onChanged();
                return this;
            }
            /**
             * <pre>
             * 客户端支持的压缩算法
             * </pre>
             *
             * <code>repeated .one2data.rbtmqmsgcli.common.CompressType supported_compress_type = 10;</code>
             */
            public Builder addSupportedCompressTypeValue(int value) {
                ensureSupportedCompressTypeIsMutable();
                supportedCompressType_.add(value);
                onChanged();
                return this;
            }
            /**
             * <pre>
             * 客户端支持的压缩算法
             * </pre>
             *
             * <code>repeated .one2data.rbtmqmsgcli.common.CompressType supported_compress_type = 10;</code>
             */
            public Builder addAllSupportedCompressTypeValue(
                    Iterable<Integer> values) {
                ensureSupportedCompressTypeIsMutable();
                for (int value : values) {
                    supportedCompressType_.add(value);
                }
                onChanged();
                return this;
            }
            public final Builder setUnknownFields(
                    final com.google.protobuf.UnknownFieldSet unknownFields) {
                return this;
            }

            public final Builder mergeUnknownFields(
                    final com.google.protobuf.UnknownFieldSet unknownFields) {
                return this;
            }


            // @@protoc_insertion_point(builder_scope:one2data.rbtmqmsgcli.client.HardwareInfo)
        }

        // @@protoc_insertion_point(class_scope:one2data.rbtmqmsgcli.client.HardwareInfo)
        private static final cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.HardwareInfo DEFAULT_INSTANCE;
        static {
            DEFAULT_INSTANCE = new cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.HardwareInfo();
        }

        public static cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.HardwareInfo getDefaultInstance() {
            return DEFAULT_INSTANCE;
        }

        private static final com.google.protobuf.Parser<HardwareInfo>
                PARSER = new com.google.protobuf.AbstractParser<HardwareInfo>() {
            public HardwareInfo parsePartialFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws com.google.protobuf.InvalidProtocolBufferException {
                return new HardwareInfo(input, extensionRegistry);
            }
        };

        public static com.google.protobuf.Parser<HardwareInfo> parser() {
            return PARSER;
        }

        @Override
        public com.google.protobuf.Parser<HardwareInfo> getParserForType() {
            return PARSER;
        }

        public cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.HardwareInfo getDefaultInstanceForType() {
            return DEFAULT_INSTANCE;
        }

    }

    public interface NodeAndHardwareInfoOrBuilder extends
            // @@protoc_insertion_point(interface_extends:one2data.rbtmqmsgcli.client.NodeAndHardwareInfo)
            com.google.protobuf.MessageOrBuilder {

        /**
         * <pre>
         *设备基础信息
         * </pre>
         *
         * <code>optional .one2data.rbtmqmsgcli.common.NodeBaseInfo deviceInfo = 1;</code>
         */
        boolean hasDeviceInfo();
        /**
         * <pre>
         *设备基础信息
         * </pre>
         *
         * <code>optional .one2data.rbtmqmsgcli.common.NodeBaseInfo deviceInfo = 1;</code>
         */
        cn.keptdata.one2data.header.message.protobuf.common.Node.NodeBaseInfo getDeviceInfo();
        /**
         * <pre>
         *设备基础信息
         * </pre>
         *
         * <code>optional .one2data.rbtmqmsgcli.common.NodeBaseInfo deviceInfo = 1;</code>
         */
        cn.keptdata.one2data.header.message.protobuf.common.Node.NodeBaseInfoOrBuilder getDeviceInfoOrBuilder();

        /**
         * <pre>
         *设备硬件信息结构
         * </pre>
         *
         * <code>optional .one2data.rbtmqmsgcli.client.HardwareInfo hardware_info = 2;</code>
         */
        boolean hasHardwareInfo();
        /**
         * <pre>
         *设备硬件信息结构
         * </pre>
         *
         * <code>optional .one2data.rbtmqmsgcli.client.HardwareInfo hardware_info = 2;</code>
         */
        cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.HardwareInfo getHardwareInfo();
        /**
         * <pre>
         *设备硬件信息结构
         * </pre>
         *
         * <code>optional .one2data.rbtmqmsgcli.client.HardwareInfo hardware_info = 2;</code>
         */
        cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.HardwareInfoOrBuilder getHardwareInfoOrBuilder();
    }
    /**
     * <pre>
     *设备信息消息体
     * </pre>
     *
     * Protobuf type {@code one2data.rbtmqmsgcli.client.NodeAndHardwareInfo}
     */
    public  static final class NodeAndHardwareInfo extends
            com.google.protobuf.GeneratedMessageV3 implements
            // @@protoc_insertion_point(message_implements:one2data.rbtmqmsgcli.client.NodeAndHardwareInfo)
            NodeAndHardwareInfoOrBuilder {
        // Use NodeAndHardwareInfo.newBuilder() to construct.
        private NodeAndHardwareInfo(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
            super(builder);
        }
        private NodeAndHardwareInfo() {
        }

        @Override
        public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
            return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
        }
        private NodeAndHardwareInfo(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            this();
            int mutable_bitField0_ = 0;
            try {
                boolean done = false;
                while (!done) {
                    int tag = input.readTag();
                    switch (tag) {
                        case 0:
                            done = true;
                            break;
                        default: {
                            if (!input.skipField(tag)) {
                                done = true;
                            }
                            break;
                        }
                        case 10: {
                            cn.keptdata.one2data.header.message.protobuf.common.Node.NodeBaseInfo.Builder subBuilder = null;
                            if (deviceInfo_ != null) {
                                subBuilder = deviceInfo_.toBuilder();
                            }
                            deviceInfo_ = input.readMessage(cn.keptdata.one2data.header.message.protobuf.common.Node.NodeBaseInfo.parser(), extensionRegistry);
                            if (subBuilder != null) {
                                subBuilder.mergeFrom(deviceInfo_);
                                deviceInfo_ = subBuilder.buildPartial();
                            }

                            break;
                        }
                        case 18: {
                            cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.HardwareInfo.Builder subBuilder = null;
                            if (hardwareInfo_ != null) {
                                subBuilder = hardwareInfo_.toBuilder();
                            }
                            hardwareInfo_ = input.readMessage(cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.HardwareInfo.parser(), extensionRegistry);
                            if (subBuilder != null) {
                                subBuilder.mergeFrom(hardwareInfo_);
                                hardwareInfo_ = subBuilder.buildPartial();
                            }

                            break;
                        }
                    }
                }
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(this);
            } catch (java.io.IOException e) {
                throw new com.google.protobuf.InvalidProtocolBufferException(
                        e).setUnfinishedMessage(this);
            } finally {
                makeExtensionsImmutable();
            }
        }
        public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
            return cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.internal_static_one2data_rbtmqmsgcli_client_NodeAndHardwareInfo_descriptor;
        }

        protected FieldAccessorTable
        internalGetFieldAccessorTable() {
            return cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.internal_static_one2data_rbtmqmsgcli_client_NodeAndHardwareInfo_fieldAccessorTable
                    .ensureFieldAccessorsInitialized(
                            cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.NodeAndHardwareInfo.class, cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.NodeAndHardwareInfo.Builder.class);
        }

        public static final int DEVICEINFO_FIELD_NUMBER = 1;
        private cn.keptdata.one2data.header.message.protobuf.common.Node.NodeBaseInfo deviceInfo_;
        /**
         * <pre>
         *设备基础信息
         * </pre>
         *
         * <code>optional .one2data.rbtmqmsgcli.common.NodeBaseInfo deviceInfo = 1;</code>
         */
        public boolean hasDeviceInfo() {
            return deviceInfo_ != null;
        }
        /**
         * <pre>
         *设备基础信息
         * </pre>
         *
         * <code>optional .one2data.rbtmqmsgcli.common.NodeBaseInfo deviceInfo = 1;</code>
         */
        public cn.keptdata.one2data.header.message.protobuf.common.Node.NodeBaseInfo getDeviceInfo() {
            return deviceInfo_ == null ? cn.keptdata.one2data.header.message.protobuf.common.Node.NodeBaseInfo.getDefaultInstance() : deviceInfo_;
        }
        /**
         * <pre>
         *设备基础信息
         * </pre>
         *
         * <code>optional .one2data.rbtmqmsgcli.common.NodeBaseInfo deviceInfo = 1;</code>
         */
        public cn.keptdata.one2data.header.message.protobuf.common.Node.NodeBaseInfoOrBuilder getDeviceInfoOrBuilder() {
            return getDeviceInfo();
        }

        public static final int HARDWARE_INFO_FIELD_NUMBER = 2;
        private cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.HardwareInfo hardwareInfo_;
        /**
         * <pre>
         *设备硬件信息结构
         * </pre>
         *
         * <code>optional .one2data.rbtmqmsgcli.client.HardwareInfo hardware_info = 2;</code>
         */
        public boolean hasHardwareInfo() {
            return hardwareInfo_ != null;
        }
        /**
         * <pre>
         *设备硬件信息结构
         * </pre>
         *
         * <code>optional .one2data.rbtmqmsgcli.client.HardwareInfo hardware_info = 2;</code>
         */
        public cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.HardwareInfo getHardwareInfo() {
            return hardwareInfo_ == null ? cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.HardwareInfo.getDefaultInstance() : hardwareInfo_;
        }
        /**
         * <pre>
         *设备硬件信息结构
         * </pre>
         *
         * <code>optional .one2data.rbtmqmsgcli.client.HardwareInfo hardware_info = 2;</code>
         */
        public cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.HardwareInfoOrBuilder getHardwareInfoOrBuilder() {
            return getHardwareInfo();
        }

        private byte memoizedIsInitialized = -1;
        public final boolean isInitialized() {
            byte isInitialized = memoizedIsInitialized;
            if (isInitialized == 1) return true;
            if (isInitialized == 0) return false;

            memoizedIsInitialized = 1;
            return true;
        }

        public void writeTo(com.google.protobuf.CodedOutputStream output)
                throws java.io.IOException {
            if (deviceInfo_ != null) {
                output.writeMessage(1, getDeviceInfo());
            }
            if (hardwareInfo_ != null) {
                output.writeMessage(2, getHardwareInfo());
            }
        }

        public int getSerializedSize() {
            int size = memoizedSize;
            if (size != -1) return size;

            size = 0;
            if (deviceInfo_ != null) {
                size += com.google.protobuf.CodedOutputStream
                        .computeMessageSize(1, getDeviceInfo());
            }
            if (hardwareInfo_ != null) {
                size += com.google.protobuf.CodedOutputStream
                        .computeMessageSize(2, getHardwareInfo());
            }
            memoizedSize = size;
            return size;
        }

        private static final long serialVersionUID = 0L;
        @Override
        public boolean equals(final Object obj) {
            if (obj == this) {
                return true;
            }
            if (!(obj instanceof cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.NodeAndHardwareInfo)) {
                return super.equals(obj);
            }
            cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.NodeAndHardwareInfo other = (cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.NodeAndHardwareInfo) obj;

            boolean result = true;
            result = result && (hasDeviceInfo() == other.hasDeviceInfo());
            if (hasDeviceInfo()) {
                result = result && getDeviceInfo()
                        .equals(other.getDeviceInfo());
            }
            result = result && (hasHardwareInfo() == other.hasHardwareInfo());
            if (hasHardwareInfo()) {
                result = result && getHardwareInfo()
                        .equals(other.getHardwareInfo());
            }
            return result;
        }

        @Override
        public int hashCode() {
            if (memoizedHashCode != 0) {
                return memoizedHashCode;
            }
            int hash = 41;
            hash = (19 * hash) + getDescriptorForType().hashCode();
            if (hasDeviceInfo()) {
                hash = (37 * hash) + DEVICEINFO_FIELD_NUMBER;
                hash = (53 * hash) + getDeviceInfo().hashCode();
            }
            if (hasHardwareInfo()) {
                hash = (37 * hash) + HARDWARE_INFO_FIELD_NUMBER;
                hash = (53 * hash) + getHardwareInfo().hashCode();
            }
            hash = (29 * hash) + unknownFields.hashCode();
            memoizedHashCode = hash;
            return hash;
        }

        public static cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.NodeAndHardwareInfo parseFrom(
                com.google.protobuf.ByteString data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }
        public static cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.NodeAndHardwareInfo parseFrom(
                com.google.protobuf.ByteString data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }
        public static cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.NodeAndHardwareInfo parseFrom(byte[] data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }
        public static cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.NodeAndHardwareInfo parseFrom(
                byte[] data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }
        public static cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.NodeAndHardwareInfo parseFrom(java.io.InputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input);
        }
        public static cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.NodeAndHardwareInfo parseFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input, extensionRegistry);
        }
        public static cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.NodeAndHardwareInfo parseDelimitedFrom(java.io.InputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseDelimitedWithIOException(PARSER, input);
        }
        public static cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.NodeAndHardwareInfo parseDelimitedFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
        }
        public static cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.NodeAndHardwareInfo parseFrom(
                com.google.protobuf.CodedInputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input);
        }
        public static cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.NodeAndHardwareInfo parseFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input, extensionRegistry);
        }

        public Builder newBuilderForType() { return newBuilder(); }
        public static Builder newBuilder() {
            return DEFAULT_INSTANCE.toBuilder();
        }
        public static Builder newBuilder(cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.NodeAndHardwareInfo prototype) {
            return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }
        public Builder toBuilder() {
            return this == DEFAULT_INSTANCE
                    ? new Builder() : new Builder().mergeFrom(this);
        }

        @Override
        protected Builder newBuilderForType(
                BuilderParent parent) {
            Builder builder = new Builder(parent);
            return builder;
        }
        /**
         * <pre>
         *设备信息消息体
         * </pre>
         *
         * Protobuf type {@code one2data.rbtmqmsgcli.client.NodeAndHardwareInfo}
         */
        public static final class Builder extends
                com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
                // @@protoc_insertion_point(builder_implements:one2data.rbtmqmsgcli.client.NodeAndHardwareInfo)
                cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.NodeAndHardwareInfoOrBuilder {
            public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
                return cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.internal_static_one2data_rbtmqmsgcli_client_NodeAndHardwareInfo_descriptor;
            }

            protected FieldAccessorTable
            internalGetFieldAccessorTable() {
                return cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.internal_static_one2data_rbtmqmsgcli_client_NodeAndHardwareInfo_fieldAccessorTable
                        .ensureFieldAccessorsInitialized(
                                cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.NodeAndHardwareInfo.class, cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.NodeAndHardwareInfo.Builder.class);
            }

            // Construct using cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.NodeAndHardwareInfo.newBuilder()
            private Builder() {
                maybeForceBuilderInitialization();
            }

            private Builder(
                    BuilderParent parent) {
                super(parent);
                maybeForceBuilderInitialization();
            }
            private void maybeForceBuilderInitialization() {
                if (com.google.protobuf.GeneratedMessageV3
                        .alwaysUseFieldBuilders) {
                }
            }
            public Builder clear() {
                super.clear();
                if (deviceInfoBuilder_ == null) {
                    deviceInfo_ = null;
                } else {
                    deviceInfo_ = null;
                    deviceInfoBuilder_ = null;
                }
                if (hardwareInfoBuilder_ == null) {
                    hardwareInfo_ = null;
                } else {
                    hardwareInfo_ = null;
                    hardwareInfoBuilder_ = null;
                }
                return this;
            }

            public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
                return cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.internal_static_one2data_rbtmqmsgcli_client_NodeAndHardwareInfo_descriptor;
            }

            public cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.NodeAndHardwareInfo getDefaultInstanceForType() {
                return cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.NodeAndHardwareInfo.getDefaultInstance();
            }

            public cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.NodeAndHardwareInfo build() {
                cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.NodeAndHardwareInfo result = buildPartial();
                if (!result.isInitialized()) {
                    throw newUninitializedMessageException(result);
                }
                return result;
            }

            public cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.NodeAndHardwareInfo buildPartial() {
                cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.NodeAndHardwareInfo result = new cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.NodeAndHardwareInfo(this);
                if (deviceInfoBuilder_ == null) {
                    result.deviceInfo_ = deviceInfo_;
                } else {
                    result.deviceInfo_ = deviceInfoBuilder_.build();
                }
                if (hardwareInfoBuilder_ == null) {
                    result.hardwareInfo_ = hardwareInfo_;
                } else {
                    result.hardwareInfo_ = hardwareInfoBuilder_.build();
                }
                onBuilt();
                return result;
            }

            public Builder clone() {
                return (Builder) super.clone();
            }
            public Builder setField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    Object value) {
                return (Builder) super.setField(field, value);
            }
            public Builder clearField(
                    com.google.protobuf.Descriptors.FieldDescriptor field) {
                return (Builder) super.clearField(field);
            }
            public Builder clearOneof(
                    com.google.protobuf.Descriptors.OneofDescriptor oneof) {
                return (Builder) super.clearOneof(oneof);
            }
            public Builder setRepeatedField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    int index, Object value) {
                return (Builder) super.setRepeatedField(field, index, value);
            }
            public Builder addRepeatedField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    Object value) {
                return (Builder) super.addRepeatedField(field, value);
            }
            public Builder mergeFrom(com.google.protobuf.Message other) {
                if (other instanceof cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.NodeAndHardwareInfo) {
                    return mergeFrom((cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.NodeAndHardwareInfo)other);
                } else {
                    super.mergeFrom(other);
                    return this;
                }
            }

            public Builder mergeFrom(cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.NodeAndHardwareInfo other) {
                if (other == cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.NodeAndHardwareInfo.getDefaultInstance()) return this;
                if (other.hasDeviceInfo()) {
                    mergeDeviceInfo(other.getDeviceInfo());
                }
                if (other.hasHardwareInfo()) {
                    mergeHardwareInfo(other.getHardwareInfo());
                }
                onChanged();
                return this;
            }

            public final boolean isInitialized() {
                return true;
            }

            public Builder mergeFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws java.io.IOException {
                cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.NodeAndHardwareInfo parsedMessage = null;
                try {
                    parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
                } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                    parsedMessage = (cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.NodeAndHardwareInfo) e.getUnfinishedMessage();
                    throw e.unwrapIOException();
                } finally {
                    if (parsedMessage != null) {
                        mergeFrom(parsedMessage);
                    }
                }
                return this;
            }

            private cn.keptdata.one2data.header.message.protobuf.common.Node.NodeBaseInfo deviceInfo_ = null;
            private com.google.protobuf.SingleFieldBuilderV3<
                    cn.keptdata.one2data.header.message.protobuf.common.Node.NodeBaseInfo, cn.keptdata.one2data.header.message.protobuf.common.Node.NodeBaseInfo.Builder, cn.keptdata.one2data.header.message.protobuf.common.Node.NodeBaseInfoOrBuilder> deviceInfoBuilder_;
            /**
             * <pre>
             *设备基础信息
             * </pre>
             *
             * <code>optional .one2data.rbtmqmsgcli.common.NodeBaseInfo deviceInfo = 1;</code>
             */
            public boolean hasDeviceInfo() {
                return deviceInfoBuilder_ != null || deviceInfo_ != null;
            }
            /**
             * <pre>
             *设备基础信息
             * </pre>
             *
             * <code>optional .one2data.rbtmqmsgcli.common.NodeBaseInfo deviceInfo = 1;</code>
             */
            public cn.keptdata.one2data.header.message.protobuf.common.Node.NodeBaseInfo getDeviceInfo() {
                if (deviceInfoBuilder_ == null) {
                    return deviceInfo_ == null ? cn.keptdata.one2data.header.message.protobuf.common.Node.NodeBaseInfo.getDefaultInstance() : deviceInfo_;
                } else {
                    return deviceInfoBuilder_.getMessage();
                }
            }
            /**
             * <pre>
             *设备基础信息
             * </pre>
             *
             * <code>optional .one2data.rbtmqmsgcli.common.NodeBaseInfo deviceInfo = 1;</code>
             */
            public Builder setDeviceInfo(cn.keptdata.one2data.header.message.protobuf.common.Node.NodeBaseInfo value) {
                if (deviceInfoBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    deviceInfo_ = value;
                    onChanged();
                } else {
                    deviceInfoBuilder_.setMessage(value);
                }

                return this;
            }
            /**
             * <pre>
             *设备基础信息
             * </pre>
             *
             * <code>optional .one2data.rbtmqmsgcli.common.NodeBaseInfo deviceInfo = 1;</code>
             */
            public Builder setDeviceInfo(
                    cn.keptdata.one2data.header.message.protobuf.common.Node.NodeBaseInfo.Builder builderForValue) {
                if (deviceInfoBuilder_ == null) {
                    deviceInfo_ = builderForValue.build();
                    onChanged();
                } else {
                    deviceInfoBuilder_.setMessage(builderForValue.build());
                }

                return this;
            }
            /**
             * <pre>
             *设备基础信息
             * </pre>
             *
             * <code>optional .one2data.rbtmqmsgcli.common.NodeBaseInfo deviceInfo = 1;</code>
             */
            public Builder mergeDeviceInfo(cn.keptdata.one2data.header.message.protobuf.common.Node.NodeBaseInfo value) {
                if (deviceInfoBuilder_ == null) {
                    if (deviceInfo_ != null) {
                        deviceInfo_ =
                                cn.keptdata.one2data.header.message.protobuf.common.Node.NodeBaseInfo.newBuilder(deviceInfo_).mergeFrom(value).buildPartial();
                    } else {
                        deviceInfo_ = value;
                    }
                    onChanged();
                } else {
                    deviceInfoBuilder_.mergeFrom(value);
                }

                return this;
            }
            /**
             * <pre>
             *设备基础信息
             * </pre>
             *
             * <code>optional .one2data.rbtmqmsgcli.common.NodeBaseInfo deviceInfo = 1;</code>
             */
            public Builder clearDeviceInfo() {
                if (deviceInfoBuilder_ == null) {
                    deviceInfo_ = null;
                    onChanged();
                } else {
                    deviceInfo_ = null;
                    deviceInfoBuilder_ = null;
                }

                return this;
            }
            /**
             * <pre>
             *设备基础信息
             * </pre>
             *
             * <code>optional .one2data.rbtmqmsgcli.common.NodeBaseInfo deviceInfo = 1;</code>
             */
            public cn.keptdata.one2data.header.message.protobuf.common.Node.NodeBaseInfo.Builder getDeviceInfoBuilder() {

                onChanged();
                return getDeviceInfoFieldBuilder().getBuilder();
            }
            /**
             * <pre>
             *设备基础信息
             * </pre>
             *
             * <code>optional .one2data.rbtmqmsgcli.common.NodeBaseInfo deviceInfo = 1;</code>
             */
            public cn.keptdata.one2data.header.message.protobuf.common.Node.NodeBaseInfoOrBuilder getDeviceInfoOrBuilder() {
                if (deviceInfoBuilder_ != null) {
                    return deviceInfoBuilder_.getMessageOrBuilder();
                } else {
                    return deviceInfo_ == null ?
                            cn.keptdata.one2data.header.message.protobuf.common.Node.NodeBaseInfo.getDefaultInstance() : deviceInfo_;
                }
            }
            /**
             * <pre>
             *设备基础信息
             * </pre>
             *
             * <code>optional .one2data.rbtmqmsgcli.common.NodeBaseInfo deviceInfo = 1;</code>
             */
            private com.google.protobuf.SingleFieldBuilderV3<
                    cn.keptdata.one2data.header.message.protobuf.common.Node.NodeBaseInfo, cn.keptdata.one2data.header.message.protobuf.common.Node.NodeBaseInfo.Builder, cn.keptdata.one2data.header.message.protobuf.common.Node.NodeBaseInfoOrBuilder>
            getDeviceInfoFieldBuilder() {
                if (deviceInfoBuilder_ == null) {
                    deviceInfoBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                            cn.keptdata.one2data.header.message.protobuf.common.Node.NodeBaseInfo, cn.keptdata.one2data.header.message.protobuf.common.Node.NodeBaseInfo.Builder, cn.keptdata.one2data.header.message.protobuf.common.Node.NodeBaseInfoOrBuilder>(
                            getDeviceInfo(),
                            getParentForChildren(),
                            isClean());
                    deviceInfo_ = null;
                }
                return deviceInfoBuilder_;
            }

            private cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.HardwareInfo hardwareInfo_ = null;
            private com.google.protobuf.SingleFieldBuilderV3<
                    cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.HardwareInfo, cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.HardwareInfo.Builder, cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.HardwareInfoOrBuilder> hardwareInfoBuilder_;
            /**
             * <pre>
             *设备硬件信息结构
             * </pre>
             *
             * <code>optional .one2data.rbtmqmsgcli.client.HardwareInfo hardware_info = 2;</code>
             */
            public boolean hasHardwareInfo() {
                return hardwareInfoBuilder_ != null || hardwareInfo_ != null;
            }
            /**
             * <pre>
             *设备硬件信息结构
             * </pre>
             *
             * <code>optional .one2data.rbtmqmsgcli.client.HardwareInfo hardware_info = 2;</code>
             */
            public cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.HardwareInfo getHardwareInfo() {
                if (hardwareInfoBuilder_ == null) {
                    return hardwareInfo_ == null ? cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.HardwareInfo.getDefaultInstance() : hardwareInfo_;
                } else {
                    return hardwareInfoBuilder_.getMessage();
                }
            }
            /**
             * <pre>
             *设备硬件信息结构
             * </pre>
             *
             * <code>optional .one2data.rbtmqmsgcli.client.HardwareInfo hardware_info = 2;</code>
             */
            public Builder setHardwareInfo(cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.HardwareInfo value) {
                if (hardwareInfoBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    hardwareInfo_ = value;
                    onChanged();
                } else {
                    hardwareInfoBuilder_.setMessage(value);
                }

                return this;
            }
            /**
             * <pre>
             *设备硬件信息结构
             * </pre>
             *
             * <code>optional .one2data.rbtmqmsgcli.client.HardwareInfo hardware_info = 2;</code>
             */
            public Builder setHardwareInfo(
                    cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.HardwareInfo.Builder builderForValue) {
                if (hardwareInfoBuilder_ == null) {
                    hardwareInfo_ = builderForValue.build();
                    onChanged();
                } else {
                    hardwareInfoBuilder_.setMessage(builderForValue.build());
                }

                return this;
            }
            /**
             * <pre>
             *设备硬件信息结构
             * </pre>
             *
             * <code>optional .one2data.rbtmqmsgcli.client.HardwareInfo hardware_info = 2;</code>
             */
            public Builder mergeHardwareInfo(cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.HardwareInfo value) {
                if (hardwareInfoBuilder_ == null) {
                    if (hardwareInfo_ != null) {
                        hardwareInfo_ =
                                cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.HardwareInfo.newBuilder(hardwareInfo_).mergeFrom(value).buildPartial();
                    } else {
                        hardwareInfo_ = value;
                    }
                    onChanged();
                } else {
                    hardwareInfoBuilder_.mergeFrom(value);
                }

                return this;
            }
            /**
             * <pre>
             *设备硬件信息结构
             * </pre>
             *
             * <code>optional .one2data.rbtmqmsgcli.client.HardwareInfo hardware_info = 2;</code>
             */
            public Builder clearHardwareInfo() {
                if (hardwareInfoBuilder_ == null) {
                    hardwareInfo_ = null;
                    onChanged();
                } else {
                    hardwareInfo_ = null;
                    hardwareInfoBuilder_ = null;
                }

                return this;
            }
            /**
             * <pre>
             *设备硬件信息结构
             * </pre>
             *
             * <code>optional .one2data.rbtmqmsgcli.client.HardwareInfo hardware_info = 2;</code>
             */
            public cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.HardwareInfo.Builder getHardwareInfoBuilder() {

                onChanged();
                return getHardwareInfoFieldBuilder().getBuilder();
            }
            /**
             * <pre>
             *设备硬件信息结构
             * </pre>
             *
             * <code>optional .one2data.rbtmqmsgcli.client.HardwareInfo hardware_info = 2;</code>
             */
            public cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.HardwareInfoOrBuilder getHardwareInfoOrBuilder() {
                if (hardwareInfoBuilder_ != null) {
                    return hardwareInfoBuilder_.getMessageOrBuilder();
                } else {
                    return hardwareInfo_ == null ?
                            cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.HardwareInfo.getDefaultInstance() : hardwareInfo_;
                }
            }
            /**
             * <pre>
             *设备硬件信息结构
             * </pre>
             *
             * <code>optional .one2data.rbtmqmsgcli.client.HardwareInfo hardware_info = 2;</code>
             */
            private com.google.protobuf.SingleFieldBuilderV3<
                    cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.HardwareInfo, cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.HardwareInfo.Builder, cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.HardwareInfoOrBuilder>
            getHardwareInfoFieldBuilder() {
                if (hardwareInfoBuilder_ == null) {
                    hardwareInfoBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                            cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.HardwareInfo, cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.HardwareInfo.Builder, cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.HardwareInfoOrBuilder>(
                            getHardwareInfo(),
                            getParentForChildren(),
                            isClean());
                    hardwareInfo_ = null;
                }
                return hardwareInfoBuilder_;
            }
            public final Builder setUnknownFields(
                    final com.google.protobuf.UnknownFieldSet unknownFields) {
                return this;
            }

            public final Builder mergeUnknownFields(
                    final com.google.protobuf.UnknownFieldSet unknownFields) {
                return this;
            }


            // @@protoc_insertion_point(builder_scope:one2data.rbtmqmsgcli.client.NodeAndHardwareInfo)
        }

        // @@protoc_insertion_point(class_scope:one2data.rbtmqmsgcli.client.NodeAndHardwareInfo)
        private static final cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.NodeAndHardwareInfo DEFAULT_INSTANCE;
        static {
            DEFAULT_INSTANCE = new cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.NodeAndHardwareInfo();
        }

        public static cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.NodeAndHardwareInfo getDefaultInstance() {
            return DEFAULT_INSTANCE;
        }

        private static final com.google.protobuf.Parser<NodeAndHardwareInfo>
                PARSER = new com.google.protobuf.AbstractParser<NodeAndHardwareInfo>() {
            public NodeAndHardwareInfo parsePartialFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws com.google.protobuf.InvalidProtocolBufferException {
                return new NodeAndHardwareInfo(input, extensionRegistry);
            }
        };

        public static com.google.protobuf.Parser<NodeAndHardwareInfo> parser() {
            return PARSER;
        }

        @Override
        public com.google.protobuf.Parser<NodeAndHardwareInfo> getParserForType() {
            return PARSER;
        }

        public cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.NodeAndHardwareInfo getDefaultInstanceForType() {
            return DEFAULT_INSTANCE;
        }

    }

    public interface ReportNodeAndHardwareInfoOrBuilder extends
            // @@protoc_insertion_point(interface_extends:one2data.rbtmqmsgcli.client.ReportNodeAndHardwareInfo)
            com.google.protobuf.MessageOrBuilder {

        /**
         * <pre>
         *节点信息
         * </pre>
         *
         * <code>optional .one2data.rbtmqmsgcli.client.NodeAndHardwareInfo node_and_hardware_info = 1;</code>
         */
        boolean hasNodeAndHardwareInfo();
        /**
         * <pre>
         *节点信息
         * </pre>
         *
         * <code>optional .one2data.rbtmqmsgcli.client.NodeAndHardwareInfo node_and_hardware_info = 1;</code>
         */
        cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.NodeAndHardwareInfo getNodeAndHardwareInfo();
        /**
         * <pre>
         *节点信息
         * </pre>
         *
         * <code>optional .one2data.rbtmqmsgcli.client.NodeAndHardwareInfo node_and_hardware_info = 1;</code>
         */
        cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.NodeAndHardwareInfoOrBuilder getNodeAndHardwareInfoOrBuilder();

        /**
         * <pre>
         *安装信息，分两种情况:
         *  1. 在线安装: base64 编码字符串，具体内容由 web 决定
         *  2. 离线安装: csv 格式字符串，为了和 base64 编码字符串做区分，客户端会确保该字符串最后以 ',' 结束,
         *     该 csv 字符串第一列为租户名，后续可通过新增列表示其他含义
         * </pre>
         *
         * <code>optional string install_info = 2;</code>
         */
        String getInstallInfo();
        /**
         * <pre>
         *安装信息，分两种情况:
         *  1. 在线安装: base64 编码字符串，具体内容由 web 决定
         *  2. 离线安装: csv 格式字符串，为了和 base64 编码字符串做区分，客户端会确保该字符串最后以 ',' 结束,
         *     该 csv 字符串第一列为租户名，后续可通过新增列表示其他含义
         * </pre>
         *
         * <code>optional string install_info = 2;</code>
         */
        com.google.protobuf.ByteString
        getInstallInfoBytes();

        /**
         * <pre>
         *驱动信息, json 格式, 其中 gloabl 表示全局检测结果，其他字段表示分类后的结果
         *当 global 不为空时使用 global 中的驱动，其他字段不需要再处理
         * {
         *     "global" : [
         *          "sd",
         *          "vmxnet3",
         *          "vmwgfx",
         *     ],
         *     "disk" : [
         *         "sd"
         *     ],
         *     "net" : [
         *         "vmxnet3"
         *     ],
         *     "graph" : [
         *         "vmwgfx"
         *     ]
         * }
         * </pre>
         *
         * <code>optional string driver_info_json = 3;</code>
         */
        String getDriverInfoJson();
        /**
         * <pre>
         *驱动信息, json 格式, 其中 gloabl 表示全局检测结果，其他字段表示分类后的结果
         *当 global 不为空时使用 global 中的驱动，其他字段不需要再处理
         * {
         *     "global" : [
         *          "sd",
         *          "vmxnet3",
         *          "vmwgfx",
         *     ],
         *     "disk" : [
         *         "sd"
         *     ],
         *     "net" : [
         *         "vmxnet3"
         *     ],
         *     "graph" : [
         *         "vmwgfx"
         *     ]
         * }
         * </pre>
         *
         * <code>optional string driver_info_json = 3;</code>
         */
        com.google.protobuf.ByteString
        getDriverInfoJsonBytes();
    }
    /**
     * <pre>
     *************客户端上报设备信息******************
     * </pre>
     *
     * Protobuf type {@code one2data.rbtmqmsgcli.client.ReportNodeAndHardwareInfo}
     */
    public  static final class ReportNodeAndHardwareInfo extends
            com.google.protobuf.GeneratedMessageV3 implements
            // @@protoc_insertion_point(message_implements:one2data.rbtmqmsgcli.client.ReportNodeAndHardwareInfo)
            ReportNodeAndHardwareInfoOrBuilder {
        // Use ReportNodeAndHardwareInfo.newBuilder() to construct.
        private ReportNodeAndHardwareInfo(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
            super(builder);
        }
        private ReportNodeAndHardwareInfo() {
            installInfo_ = "";
            driverInfoJson_ = "";
        }

        @Override
        public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
            return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
        }
        private ReportNodeAndHardwareInfo(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            this();
            int mutable_bitField0_ = 0;
            try {
                boolean done = false;
                while (!done) {
                    int tag = input.readTag();
                    switch (tag) {
                        case 0:
                            done = true;
                            break;
                        default: {
                            if (!input.skipField(tag)) {
                                done = true;
                            }
                            break;
                        }
                        case 10: {
                            cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.NodeAndHardwareInfo.Builder subBuilder = null;
                            if (nodeAndHardwareInfo_ != null) {
                                subBuilder = nodeAndHardwareInfo_.toBuilder();
                            }
                            nodeAndHardwareInfo_ = input.readMessage(cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.NodeAndHardwareInfo.parser(), extensionRegistry);
                            if (subBuilder != null) {
                                subBuilder.mergeFrom(nodeAndHardwareInfo_);
                                nodeAndHardwareInfo_ = subBuilder.buildPartial();
                            }

                            break;
                        }
                        case 18: {
                            String s = input.readStringRequireUtf8();

                            installInfo_ = s;
                            break;
                        }
                        case 26: {
                            String s = input.readStringRequireUtf8();

                            driverInfoJson_ = s;
                            break;
                        }
                    }
                }
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(this);
            } catch (java.io.IOException e) {
                throw new com.google.protobuf.InvalidProtocolBufferException(
                        e).setUnfinishedMessage(this);
            } finally {
                makeExtensionsImmutable();
            }
        }
        public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
            return cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.internal_static_one2data_rbtmqmsgcli_client_ReportNodeAndHardwareInfo_descriptor;
        }

        protected FieldAccessorTable
        internalGetFieldAccessorTable() {
            return cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.internal_static_one2data_rbtmqmsgcli_client_ReportNodeAndHardwareInfo_fieldAccessorTable
                    .ensureFieldAccessorsInitialized(
                            cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.ReportNodeAndHardwareInfo.class, cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.ReportNodeAndHardwareInfo.Builder.class);
        }

        public static final int NODE_AND_HARDWARE_INFO_FIELD_NUMBER = 1;
        private cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.NodeAndHardwareInfo nodeAndHardwareInfo_;
        /**
         * <pre>
         *节点信息
         * </pre>
         *
         * <code>optional .one2data.rbtmqmsgcli.client.NodeAndHardwareInfo node_and_hardware_info = 1;</code>
         */
        public boolean hasNodeAndHardwareInfo() {
            return nodeAndHardwareInfo_ != null;
        }
        /**
         * <pre>
         *节点信息
         * </pre>
         *
         * <code>optional .one2data.rbtmqmsgcli.client.NodeAndHardwareInfo node_and_hardware_info = 1;</code>
         */
        public cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.NodeAndHardwareInfo getNodeAndHardwareInfo() {
            return nodeAndHardwareInfo_ == null ? cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.NodeAndHardwareInfo.getDefaultInstance() : nodeAndHardwareInfo_;
        }
        /**
         * <pre>
         *节点信息
         * </pre>
         *
         * <code>optional .one2data.rbtmqmsgcli.client.NodeAndHardwareInfo node_and_hardware_info = 1;</code>
         */
        public cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.NodeAndHardwareInfoOrBuilder getNodeAndHardwareInfoOrBuilder() {
            return getNodeAndHardwareInfo();
        }

        public static final int INSTALL_INFO_FIELD_NUMBER = 2;
        private volatile Object installInfo_;
        /**
         * <pre>
         *安装信息，分两种情况:
         *  1. 在线安装: base64 编码字符串，具体内容由 web 决定
         *  2. 离线安装: csv 格式字符串，为了和 base64 编码字符串做区分，客户端会确保该字符串最后以 ',' 结束,
         *     该 csv 字符串第一列为租户名，后续可通过新增列表示其他含义
         * </pre>
         *
         * <code>optional string install_info = 2;</code>
         */
        public String getInstallInfo() {
            Object ref = installInfo_;
            if (ref instanceof String) {
                return (String) ref;
            } else {
                com.google.protobuf.ByteString bs =
                        (com.google.protobuf.ByteString) ref;
                String s = bs.toStringUtf8();
                installInfo_ = s;
                return s;
            }
        }
        /**
         * <pre>
         *安装信息，分两种情况:
         *  1. 在线安装: base64 编码字符串，具体内容由 web 决定
         *  2. 离线安装: csv 格式字符串，为了和 base64 编码字符串做区分，客户端会确保该字符串最后以 ',' 结束,
         *     该 csv 字符串第一列为租户名，后续可通过新增列表示其他含义
         * </pre>
         *
         * <code>optional string install_info = 2;</code>
         */
        public com.google.protobuf.ByteString
        getInstallInfoBytes() {
            Object ref = installInfo_;
            if (ref instanceof String) {
                com.google.protobuf.ByteString b =
                        com.google.protobuf.ByteString.copyFromUtf8(
                                (String) ref);
                installInfo_ = b;
                return b;
            } else {
                return (com.google.protobuf.ByteString) ref;
            }
        }

        public static final int DRIVER_INFO_JSON_FIELD_NUMBER = 3;
        private volatile Object driverInfoJson_;
        /**
         * <pre>
         *驱动信息, json 格式, 其中 gloabl 表示全局检测结果，其他字段表示分类后的结果
         *当 global 不为空时使用 global 中的驱动，其他字段不需要再处理
         * {
         *     "global" : [
         *          "sd",
         *          "vmxnet3",
         *          "vmwgfx",
         *     ],
         *     "disk" : [
         *         "sd"
         *     ],
         *     "net" : [
         *         "vmxnet3"
         *     ],
         *     "graph" : [
         *         "vmwgfx"
         *     ]
         * }
         * </pre>
         *
         * <code>optional string driver_info_json = 3;</code>
         */
        public String getDriverInfoJson() {
            Object ref = driverInfoJson_;
            if (ref instanceof String) {
                return (String) ref;
            } else {
                com.google.protobuf.ByteString bs =
                        (com.google.protobuf.ByteString) ref;
                String s = bs.toStringUtf8();
                driverInfoJson_ = s;
                return s;
            }
        }
        /**
         * <pre>
         *驱动信息, json 格式, 其中 gloabl 表示全局检测结果，其他字段表示分类后的结果
         *当 global 不为空时使用 global 中的驱动，其他字段不需要再处理
         * {
         *     "global" : [
         *          "sd",
         *          "vmxnet3",
         *          "vmwgfx",
         *     ],
         *     "disk" : [
         *         "sd"
         *     ],
         *     "net" : [
         *         "vmxnet3"
         *     ],
         *     "graph" : [
         *         "vmwgfx"
         *     ]
         * }
         * </pre>
         *
         * <code>optional string driver_info_json = 3;</code>
         */
        public com.google.protobuf.ByteString
        getDriverInfoJsonBytes() {
            Object ref = driverInfoJson_;
            if (ref instanceof String) {
                com.google.protobuf.ByteString b =
                        com.google.protobuf.ByteString.copyFromUtf8(
                                (String) ref);
                driverInfoJson_ = b;
                return b;
            } else {
                return (com.google.protobuf.ByteString) ref;
            }
        }

        private byte memoizedIsInitialized = -1;
        public final boolean isInitialized() {
            byte isInitialized = memoizedIsInitialized;
            if (isInitialized == 1) return true;
            if (isInitialized == 0) return false;

            memoizedIsInitialized = 1;
            return true;
        }

        public void writeTo(com.google.protobuf.CodedOutputStream output)
                throws java.io.IOException {
            if (nodeAndHardwareInfo_ != null) {
                output.writeMessage(1, getNodeAndHardwareInfo());
            }
            if (!getInstallInfoBytes().isEmpty()) {
                com.google.protobuf.GeneratedMessageV3.writeString(output, 2, installInfo_);
            }
            if (!getDriverInfoJsonBytes().isEmpty()) {
                com.google.protobuf.GeneratedMessageV3.writeString(output, 3, driverInfoJson_);
            }
        }

        public int getSerializedSize() {
            int size = memoizedSize;
            if (size != -1) return size;

            size = 0;
            if (nodeAndHardwareInfo_ != null) {
                size += com.google.protobuf.CodedOutputStream
                        .computeMessageSize(1, getNodeAndHardwareInfo());
            }
            if (!getInstallInfoBytes().isEmpty()) {
                size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, installInfo_);
            }
            if (!getDriverInfoJsonBytes().isEmpty()) {
                size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, driverInfoJson_);
            }
            memoizedSize = size;
            return size;
        }

        private static final long serialVersionUID = 0L;
        @Override
        public boolean equals(final Object obj) {
            if (obj == this) {
                return true;
            }
            if (!(obj instanceof cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.ReportNodeAndHardwareInfo)) {
                return super.equals(obj);
            }
            cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.ReportNodeAndHardwareInfo other = (cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.ReportNodeAndHardwareInfo) obj;

            boolean result = true;
            result = result && (hasNodeAndHardwareInfo() == other.hasNodeAndHardwareInfo());
            if (hasNodeAndHardwareInfo()) {
                result = result && getNodeAndHardwareInfo()
                        .equals(other.getNodeAndHardwareInfo());
            }
            result = result && getInstallInfo()
                    .equals(other.getInstallInfo());
            result = result && getDriverInfoJson()
                    .equals(other.getDriverInfoJson());
            return result;
        }

        @Override
        public int hashCode() {
            if (memoizedHashCode != 0) {
                return memoizedHashCode;
            }
            int hash = 41;
            hash = (19 * hash) + getDescriptorForType().hashCode();
            if (hasNodeAndHardwareInfo()) {
                hash = (37 * hash) + NODE_AND_HARDWARE_INFO_FIELD_NUMBER;
                hash = (53 * hash) + getNodeAndHardwareInfo().hashCode();
            }
            hash = (37 * hash) + INSTALL_INFO_FIELD_NUMBER;
            hash = (53 * hash) + getInstallInfo().hashCode();
            hash = (37 * hash) + DRIVER_INFO_JSON_FIELD_NUMBER;
            hash = (53 * hash) + getDriverInfoJson().hashCode();
            hash = (29 * hash) + unknownFields.hashCode();
            memoizedHashCode = hash;
            return hash;
        }

        public static cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.ReportNodeAndHardwareInfo parseFrom(
                com.google.protobuf.ByteString data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }
        public static cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.ReportNodeAndHardwareInfo parseFrom(
                com.google.protobuf.ByteString data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }
        public static cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.ReportNodeAndHardwareInfo parseFrom(byte[] data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }
        public static cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.ReportNodeAndHardwareInfo parseFrom(
                byte[] data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }
        public static cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.ReportNodeAndHardwareInfo parseFrom(java.io.InputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input);
        }
        public static cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.ReportNodeAndHardwareInfo parseFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input, extensionRegistry);
        }
        public static cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.ReportNodeAndHardwareInfo parseDelimitedFrom(java.io.InputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseDelimitedWithIOException(PARSER, input);
        }
        public static cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.ReportNodeAndHardwareInfo parseDelimitedFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
        }
        public static cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.ReportNodeAndHardwareInfo parseFrom(
                com.google.protobuf.CodedInputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input);
        }
        public static cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.ReportNodeAndHardwareInfo parseFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input, extensionRegistry);
        }

        public Builder newBuilderForType() { return newBuilder(); }
        public static Builder newBuilder() {
            return DEFAULT_INSTANCE.toBuilder();
        }
        public static Builder newBuilder(cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.ReportNodeAndHardwareInfo prototype) {
            return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }
        public Builder toBuilder() {
            return this == DEFAULT_INSTANCE
                    ? new Builder() : new Builder().mergeFrom(this);
        }

        @Override
        protected Builder newBuilderForType(
                BuilderParent parent) {
            Builder builder = new Builder(parent);
            return builder;
        }
        /**
         * <pre>
         *************客户端上报设备信息******************
         * </pre>
         *
         * Protobuf type {@code one2data.rbtmqmsgcli.client.ReportNodeAndHardwareInfo}
         */
        public static final class Builder extends
                com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
                // @@protoc_insertion_point(builder_implements:one2data.rbtmqmsgcli.client.ReportNodeAndHardwareInfo)
                cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.ReportNodeAndHardwareInfoOrBuilder {
            public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
                return cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.internal_static_one2data_rbtmqmsgcli_client_ReportNodeAndHardwareInfo_descriptor;
            }

            protected FieldAccessorTable
            internalGetFieldAccessorTable() {
                return cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.internal_static_one2data_rbtmqmsgcli_client_ReportNodeAndHardwareInfo_fieldAccessorTable
                        .ensureFieldAccessorsInitialized(
                                cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.ReportNodeAndHardwareInfo.class, cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.ReportNodeAndHardwareInfo.Builder.class);
            }

            // Construct using cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.ReportNodeAndHardwareInfo.newBuilder()
            private Builder() {
                maybeForceBuilderInitialization();
            }

            private Builder(
                    BuilderParent parent) {
                super(parent);
                maybeForceBuilderInitialization();
            }
            private void maybeForceBuilderInitialization() {
                if (com.google.protobuf.GeneratedMessageV3
                        .alwaysUseFieldBuilders) {
                }
            }
            public Builder clear() {
                super.clear();
                if (nodeAndHardwareInfoBuilder_ == null) {
                    nodeAndHardwareInfo_ = null;
                } else {
                    nodeAndHardwareInfo_ = null;
                    nodeAndHardwareInfoBuilder_ = null;
                }
                installInfo_ = "";

                driverInfoJson_ = "";

                return this;
            }

            public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
                return cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.internal_static_one2data_rbtmqmsgcli_client_ReportNodeAndHardwareInfo_descriptor;
            }

            public cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.ReportNodeAndHardwareInfo getDefaultInstanceForType() {
                return cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.ReportNodeAndHardwareInfo.getDefaultInstance();
            }

            public cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.ReportNodeAndHardwareInfo build() {
                cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.ReportNodeAndHardwareInfo result = buildPartial();
                if (!result.isInitialized()) {
                    throw newUninitializedMessageException(result);
                }
                return result;
            }

            public cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.ReportNodeAndHardwareInfo buildPartial() {
                cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.ReportNodeAndHardwareInfo result = new cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.ReportNodeAndHardwareInfo(this);
                if (nodeAndHardwareInfoBuilder_ == null) {
                    result.nodeAndHardwareInfo_ = nodeAndHardwareInfo_;
                } else {
                    result.nodeAndHardwareInfo_ = nodeAndHardwareInfoBuilder_.build();
                }
                result.installInfo_ = installInfo_;
                result.driverInfoJson_ = driverInfoJson_;
                onBuilt();
                return result;
            }

            public Builder clone() {
                return (Builder) super.clone();
            }
            public Builder setField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    Object value) {
                return (Builder) super.setField(field, value);
            }
            public Builder clearField(
                    com.google.protobuf.Descriptors.FieldDescriptor field) {
                return (Builder) super.clearField(field);
            }
            public Builder clearOneof(
                    com.google.protobuf.Descriptors.OneofDescriptor oneof) {
                return (Builder) super.clearOneof(oneof);
            }
            public Builder setRepeatedField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    int index, Object value) {
                return (Builder) super.setRepeatedField(field, index, value);
            }
            public Builder addRepeatedField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    Object value) {
                return (Builder) super.addRepeatedField(field, value);
            }
            public Builder mergeFrom(com.google.protobuf.Message other) {
                if (other instanceof cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.ReportNodeAndHardwareInfo) {
                    return mergeFrom((cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.ReportNodeAndHardwareInfo)other);
                } else {
                    super.mergeFrom(other);
                    return this;
                }
            }

            public Builder mergeFrom(cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.ReportNodeAndHardwareInfo other) {
                if (other == cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.ReportNodeAndHardwareInfo.getDefaultInstance()) return this;
                if (other.hasNodeAndHardwareInfo()) {
                    mergeNodeAndHardwareInfo(other.getNodeAndHardwareInfo());
                }
                if (!other.getInstallInfo().isEmpty()) {
                    installInfo_ = other.installInfo_;
                    onChanged();
                }
                if (!other.getDriverInfoJson().isEmpty()) {
                    driverInfoJson_ = other.driverInfoJson_;
                    onChanged();
                }
                onChanged();
                return this;
            }

            public final boolean isInitialized() {
                return true;
            }

            public Builder mergeFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws java.io.IOException {
                cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.ReportNodeAndHardwareInfo parsedMessage = null;
                try {
                    parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
                } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                    parsedMessage = (cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.ReportNodeAndHardwareInfo) e.getUnfinishedMessage();
                    throw e.unwrapIOException();
                } finally {
                    if (parsedMessage != null) {
                        mergeFrom(parsedMessage);
                    }
                }
                return this;
            }

            private cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.NodeAndHardwareInfo nodeAndHardwareInfo_ = null;
            private com.google.protobuf.SingleFieldBuilderV3<
                    cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.NodeAndHardwareInfo, cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.NodeAndHardwareInfo.Builder, cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.NodeAndHardwareInfoOrBuilder> nodeAndHardwareInfoBuilder_;
            /**
             * <pre>
             *节点信息
             * </pre>
             *
             * <code>optional .one2data.rbtmqmsgcli.client.NodeAndHardwareInfo node_and_hardware_info = 1;</code>
             */
            public boolean hasNodeAndHardwareInfo() {
                return nodeAndHardwareInfoBuilder_ != null || nodeAndHardwareInfo_ != null;
            }
            /**
             * <pre>
             *节点信息
             * </pre>
             *
             * <code>optional .one2data.rbtmqmsgcli.client.NodeAndHardwareInfo node_and_hardware_info = 1;</code>
             */
            public cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.NodeAndHardwareInfo getNodeAndHardwareInfo() {
                if (nodeAndHardwareInfoBuilder_ == null) {
                    return nodeAndHardwareInfo_ == null ? cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.NodeAndHardwareInfo.getDefaultInstance() : nodeAndHardwareInfo_;
                } else {
                    return nodeAndHardwareInfoBuilder_.getMessage();
                }
            }
            /**
             * <pre>
             *节点信息
             * </pre>
             *
             * <code>optional .one2data.rbtmqmsgcli.client.NodeAndHardwareInfo node_and_hardware_info = 1;</code>
             */
            public Builder setNodeAndHardwareInfo(cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.NodeAndHardwareInfo value) {
                if (nodeAndHardwareInfoBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    nodeAndHardwareInfo_ = value;
                    onChanged();
                } else {
                    nodeAndHardwareInfoBuilder_.setMessage(value);
                }

                return this;
            }
            /**
             * <pre>
             *节点信息
             * </pre>
             *
             * <code>optional .one2data.rbtmqmsgcli.client.NodeAndHardwareInfo node_and_hardware_info = 1;</code>
             */
            public Builder setNodeAndHardwareInfo(
                    cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.NodeAndHardwareInfo.Builder builderForValue) {
                if (nodeAndHardwareInfoBuilder_ == null) {
                    nodeAndHardwareInfo_ = builderForValue.build();
                    onChanged();
                } else {
                    nodeAndHardwareInfoBuilder_.setMessage(builderForValue.build());
                }

                return this;
            }
            /**
             * <pre>
             *节点信息
             * </pre>
             *
             * <code>optional .one2data.rbtmqmsgcli.client.NodeAndHardwareInfo node_and_hardware_info = 1;</code>
             */
            public Builder mergeNodeAndHardwareInfo(cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.NodeAndHardwareInfo value) {
                if (nodeAndHardwareInfoBuilder_ == null) {
                    if (nodeAndHardwareInfo_ != null) {
                        nodeAndHardwareInfo_ =
                                cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.NodeAndHardwareInfo.newBuilder(nodeAndHardwareInfo_).mergeFrom(value).buildPartial();
                    } else {
                        nodeAndHardwareInfo_ = value;
                    }
                    onChanged();
                } else {
                    nodeAndHardwareInfoBuilder_.mergeFrom(value);
                }

                return this;
            }
            /**
             * <pre>
             *节点信息
             * </pre>
             *
             * <code>optional .one2data.rbtmqmsgcli.client.NodeAndHardwareInfo node_and_hardware_info = 1;</code>
             */
            public Builder clearNodeAndHardwareInfo() {
                if (nodeAndHardwareInfoBuilder_ == null) {
                    nodeAndHardwareInfo_ = null;
                    onChanged();
                } else {
                    nodeAndHardwareInfo_ = null;
                    nodeAndHardwareInfoBuilder_ = null;
                }

                return this;
            }
            /**
             * <pre>
             *节点信息
             * </pre>
             *
             * <code>optional .one2data.rbtmqmsgcli.client.NodeAndHardwareInfo node_and_hardware_info = 1;</code>
             */
            public cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.NodeAndHardwareInfo.Builder getNodeAndHardwareInfoBuilder() {

                onChanged();
                return getNodeAndHardwareInfoFieldBuilder().getBuilder();
            }
            /**
             * <pre>
             *节点信息
             * </pre>
             *
             * <code>optional .one2data.rbtmqmsgcli.client.NodeAndHardwareInfo node_and_hardware_info = 1;</code>
             */
            public cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.NodeAndHardwareInfoOrBuilder getNodeAndHardwareInfoOrBuilder() {
                if (nodeAndHardwareInfoBuilder_ != null) {
                    return nodeAndHardwareInfoBuilder_.getMessageOrBuilder();
                } else {
                    return nodeAndHardwareInfo_ == null ?
                            cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.NodeAndHardwareInfo.getDefaultInstance() : nodeAndHardwareInfo_;
                }
            }
            /**
             * <pre>
             *节点信息
             * </pre>
             *
             * <code>optional .one2data.rbtmqmsgcli.client.NodeAndHardwareInfo node_and_hardware_info = 1;</code>
             */
            private com.google.protobuf.SingleFieldBuilderV3<
                    cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.NodeAndHardwareInfo, cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.NodeAndHardwareInfo.Builder, cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.NodeAndHardwareInfoOrBuilder>
            getNodeAndHardwareInfoFieldBuilder() {
                if (nodeAndHardwareInfoBuilder_ == null) {
                    nodeAndHardwareInfoBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                            cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.NodeAndHardwareInfo, cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.NodeAndHardwareInfo.Builder, cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.NodeAndHardwareInfoOrBuilder>(
                            getNodeAndHardwareInfo(),
                            getParentForChildren(),
                            isClean());
                    nodeAndHardwareInfo_ = null;
                }
                return nodeAndHardwareInfoBuilder_;
            }

            private Object installInfo_ = "";
            /**
             * <pre>
             *安装信息，分两种情况:
             *  1. 在线安装: base64 编码字符串，具体内容由 web 决定
             *  2. 离线安装: csv 格式字符串，为了和 base64 编码字符串做区分，客户端会确保该字符串最后以 ',' 结束,
             *     该 csv 字符串第一列为租户名，后续可通过新增列表示其他含义
             * </pre>
             *
             * <code>optional string install_info = 2;</code>
             */
            public String getInstallInfo() {
                Object ref = installInfo_;
                if (!(ref instanceof String)) {
                    com.google.protobuf.ByteString bs =
                            (com.google.protobuf.ByteString) ref;
                    String s = bs.toStringUtf8();
                    installInfo_ = s;
                    return s;
                } else {
                    return (String) ref;
                }
            }
            /**
             * <pre>
             *安装信息，分两种情况:
             *  1. 在线安装: base64 编码字符串，具体内容由 web 决定
             *  2. 离线安装: csv 格式字符串，为了和 base64 编码字符串做区分，客户端会确保该字符串最后以 ',' 结束,
             *     该 csv 字符串第一列为租户名，后续可通过新增列表示其他含义
             * </pre>
             *
             * <code>optional string install_info = 2;</code>
             */
            public com.google.protobuf.ByteString
            getInstallInfoBytes() {
                Object ref = installInfo_;
                if (ref instanceof String) {
                    com.google.protobuf.ByteString b =
                            com.google.protobuf.ByteString.copyFromUtf8(
                                    (String) ref);
                    installInfo_ = b;
                    return b;
                } else {
                    return (com.google.protobuf.ByteString) ref;
                }
            }
            /**
             * <pre>
             *安装信息，分两种情况:
             *  1. 在线安装: base64 编码字符串，具体内容由 web 决定
             *  2. 离线安装: csv 格式字符串，为了和 base64 编码字符串做区分，客户端会确保该字符串最后以 ',' 结束,
             *     该 csv 字符串第一列为租户名，后续可通过新增列表示其他含义
             * </pre>
             *
             * <code>optional string install_info = 2;</code>
             */
            public Builder setInstallInfo(
                    String value) {
                if (value == null) {
                    throw new NullPointerException();
                }

                installInfo_ = value;
                onChanged();
                return this;
            }
            /**
             * <pre>
             *安装信息，分两种情况:
             *  1. 在线安装: base64 编码字符串，具体内容由 web 决定
             *  2. 离线安装: csv 格式字符串，为了和 base64 编码字符串做区分，客户端会确保该字符串最后以 ',' 结束,
             *     该 csv 字符串第一列为租户名，后续可通过新增列表示其他含义
             * </pre>
             *
             * <code>optional string install_info = 2;</code>
             */
            public Builder clearInstallInfo() {

                installInfo_ = getDefaultInstance().getInstallInfo();
                onChanged();
                return this;
            }
            /**
             * <pre>
             *安装信息，分两种情况:
             *  1. 在线安装: base64 编码字符串，具体内容由 web 决定
             *  2. 离线安装: csv 格式字符串，为了和 base64 编码字符串做区分，客户端会确保该字符串最后以 ',' 结束,
             *     该 csv 字符串第一列为租户名，后续可通过新增列表示其他含义
             * </pre>
             *
             * <code>optional string install_info = 2;</code>
             */
            public Builder setInstallInfoBytes(
                    com.google.protobuf.ByteString value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                checkByteStringIsUtf8(value);

                installInfo_ = value;
                onChanged();
                return this;
            }

            private Object driverInfoJson_ = "";
            /**
             * <pre>
             *驱动信息, json 格式, 其中 gloabl 表示全局检测结果，其他字段表示分类后的结果
             *当 global 不为空时使用 global 中的驱动，其他字段不需要再处理
             * {
             *     "global" : [
             *          "sd",
             *          "vmxnet3",
             *          "vmwgfx",
             *     ],
             *     "disk" : [
             *         "sd"
             *     ],
             *     "net" : [
             *         "vmxnet3"
             *     ],
             *     "graph" : [
             *         "vmwgfx"
             *     ]
             * }
             * </pre>
             *
             * <code>optional string driver_info_json = 3;</code>
             */
            public String getDriverInfoJson() {
                Object ref = driverInfoJson_;
                if (!(ref instanceof String)) {
                    com.google.protobuf.ByteString bs =
                            (com.google.protobuf.ByteString) ref;
                    String s = bs.toStringUtf8();
                    driverInfoJson_ = s;
                    return s;
                } else {
                    return (String) ref;
                }
            }
            /**
             * <pre>
             *驱动信息, json 格式, 其中 gloabl 表示全局检测结果，其他字段表示分类后的结果
             *当 global 不为空时使用 global 中的驱动，其他字段不需要再处理
             * {
             *     "global" : [
             *          "sd",
             *          "vmxnet3",
             *          "vmwgfx",
             *     ],
             *     "disk" : [
             *         "sd"
             *     ],
             *     "net" : [
             *         "vmxnet3"
             *     ],
             *     "graph" : [
             *         "vmwgfx"
             *     ]
             * }
             * </pre>
             *
             * <code>optional string driver_info_json = 3;</code>
             */
            public com.google.protobuf.ByteString
            getDriverInfoJsonBytes() {
                Object ref = driverInfoJson_;
                if (ref instanceof String) {
                    com.google.protobuf.ByteString b =
                            com.google.protobuf.ByteString.copyFromUtf8(
                                    (String) ref);
                    driverInfoJson_ = b;
                    return b;
                } else {
                    return (com.google.protobuf.ByteString) ref;
                }
            }
            /**
             * <pre>
             *驱动信息, json 格式, 其中 gloabl 表示全局检测结果，其他字段表示分类后的结果
             *当 global 不为空时使用 global 中的驱动，其他字段不需要再处理
             * {
             *     "global" : [
             *          "sd",
             *          "vmxnet3",
             *          "vmwgfx",
             *     ],
             *     "disk" : [
             *         "sd"
             *     ],
             *     "net" : [
             *         "vmxnet3"
             *     ],
             *     "graph" : [
             *         "vmwgfx"
             *     ]
             * }
             * </pre>
             *
             * <code>optional string driver_info_json = 3;</code>
             */
            public Builder setDriverInfoJson(
                    String value) {
                if (value == null) {
                    throw new NullPointerException();
                }

                driverInfoJson_ = value;
                onChanged();
                return this;
            }
            /**
             * <pre>
             *驱动信息, json 格式, 其中 gloabl 表示全局检测结果，其他字段表示分类后的结果
             *当 global 不为空时使用 global 中的驱动，其他字段不需要再处理
             * {
             *     "global" : [
             *          "sd",
             *          "vmxnet3",
             *          "vmwgfx",
             *     ],
             *     "disk" : [
             *         "sd"
             *     ],
             *     "net" : [
             *         "vmxnet3"
             *     ],
             *     "graph" : [
             *         "vmwgfx"
             *     ]
             * }
             * </pre>
             *
             * <code>optional string driver_info_json = 3;</code>
             */
            public Builder clearDriverInfoJson() {

                driverInfoJson_ = getDefaultInstance().getDriverInfoJson();
                onChanged();
                return this;
            }
            /**
             * <pre>
             *驱动信息, json 格式, 其中 gloabl 表示全局检测结果，其他字段表示分类后的结果
             *当 global 不为空时使用 global 中的驱动，其他字段不需要再处理
             * {
             *     "global" : [
             *          "sd",
             *          "vmxnet3",
             *          "vmwgfx",
             *     ],
             *     "disk" : [
             *         "sd"
             *     ],
             *     "net" : [
             *         "vmxnet3"
             *     ],
             *     "graph" : [
             *         "vmwgfx"
             *     ]
             * }
             * </pre>
             *
             * <code>optional string driver_info_json = 3;</code>
             */
            public Builder setDriverInfoJsonBytes(
                    com.google.protobuf.ByteString value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                checkByteStringIsUtf8(value);

                driverInfoJson_ = value;
                onChanged();
                return this;
            }
            public final Builder setUnknownFields(
                    final com.google.protobuf.UnknownFieldSet unknownFields) {
                return this;
            }

            public final Builder mergeUnknownFields(
                    final com.google.protobuf.UnknownFieldSet unknownFields) {
                return this;
            }


            // @@protoc_insertion_point(builder_scope:one2data.rbtmqmsgcli.client.ReportNodeAndHardwareInfo)
        }

        // @@protoc_insertion_point(class_scope:one2data.rbtmqmsgcli.client.ReportNodeAndHardwareInfo)
        private static final cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.ReportNodeAndHardwareInfo DEFAULT_INSTANCE;
        static {
            DEFAULT_INSTANCE = new cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.ReportNodeAndHardwareInfo();
        }

        public static cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.ReportNodeAndHardwareInfo getDefaultInstance() {
            return DEFAULT_INSTANCE;
        }

        private static final com.google.protobuf.Parser<ReportNodeAndHardwareInfo>
                PARSER = new com.google.protobuf.AbstractParser<ReportNodeAndHardwareInfo>() {
            public ReportNodeAndHardwareInfo parsePartialFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws com.google.protobuf.InvalidProtocolBufferException {
                return new ReportNodeAndHardwareInfo(input, extensionRegistry);
            }
        };

        public static com.google.protobuf.Parser<ReportNodeAndHardwareInfo> parser() {
            return PARSER;
        }

        @Override
        public com.google.protobuf.Parser<ReportNodeAndHardwareInfo> getParserForType() {
            return PARSER;
        }

        public cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.ReportNodeAndHardwareInfo getDefaultInstanceForType() {
            return DEFAULT_INSTANCE;
        }

    }

    public interface ReportNodeAndHardwareInfoAckOrBuilder extends
            // @@protoc_insertion_point(interface_extends:one2data.rbtmqmsgcli.client.ReportNodeAndHardwareInfoAck)
            com.google.protobuf.MessageOrBuilder {

        /**
         * <pre>
         *基础响应结果
         * </pre>
         *
         * <code>optional .one2data.rbtmqmsgcli.common.BaseAck base_ack = 1;</code>
         */
        boolean hasBaseAck();
        /**
         * <pre>
         *基础响应结果
         * </pre>
         *
         * <code>optional .one2data.rbtmqmsgcli.common.BaseAck base_ack = 1;</code>
         */
        cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck getBaseAck();
        /**
         * <pre>
         *基础响应结果
         * </pre>
         *
         * <code>optional .one2data.rbtmqmsgcli.common.BaseAck base_ack = 1;</code>
         */
        cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAckOrBuilder getBaseAckOrBuilder();
    }
    /**
     * <pre>
     *客户端节点上报ACk
     * </pre>
     *
     * Protobuf type {@code one2data.rbtmqmsgcli.client.ReportNodeAndHardwareInfoAck}
     */
    public  static final class ReportNodeAndHardwareInfoAck extends
            com.google.protobuf.GeneratedMessageV3 implements
            // @@protoc_insertion_point(message_implements:one2data.rbtmqmsgcli.client.ReportNodeAndHardwareInfoAck)
            ReportNodeAndHardwareInfoAckOrBuilder {
        // Use ReportNodeAndHardwareInfoAck.newBuilder() to construct.
        private ReportNodeAndHardwareInfoAck(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
            super(builder);
        }
        private ReportNodeAndHardwareInfoAck() {
        }

        @Override
        public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
            return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
        }
        private ReportNodeAndHardwareInfoAck(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            this();
            int mutable_bitField0_ = 0;
            try {
                boolean done = false;
                while (!done) {
                    int tag = input.readTag();
                    switch (tag) {
                        case 0:
                            done = true;
                            break;
                        default: {
                            if (!input.skipField(tag)) {
                                done = true;
                            }
                            break;
                        }
                        case 10: {
                            cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck.Builder subBuilder = null;
                            if (baseAck_ != null) {
                                subBuilder = baseAck_.toBuilder();
                            }
                            baseAck_ = input.readMessage(cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck.parser(), extensionRegistry);
                            if (subBuilder != null) {
                                subBuilder.mergeFrom(baseAck_);
                                baseAck_ = subBuilder.buildPartial();
                            }

                            break;
                        }
                    }
                }
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(this);
            } catch (java.io.IOException e) {
                throw new com.google.protobuf.InvalidProtocolBufferException(
                        e).setUnfinishedMessage(this);
            } finally {
                makeExtensionsImmutable();
            }
        }
        public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
            return cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.internal_static_one2data_rbtmqmsgcli_client_ReportNodeAndHardwareInfoAck_descriptor;
        }

        protected FieldAccessorTable
        internalGetFieldAccessorTable() {
            return cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.internal_static_one2data_rbtmqmsgcli_client_ReportNodeAndHardwareInfoAck_fieldAccessorTable
                    .ensureFieldAccessorsInitialized(
                            cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.ReportNodeAndHardwareInfoAck.class, cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.ReportNodeAndHardwareInfoAck.Builder.class);
        }

        public static final int BASE_ACK_FIELD_NUMBER = 1;
        private cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck baseAck_;
        /**
         * <pre>
         *基础响应结果
         * </pre>
         *
         * <code>optional .one2data.rbtmqmsgcli.common.BaseAck base_ack = 1;</code>
         */
        public boolean hasBaseAck() {
            return baseAck_ != null;
        }
        /**
         * <pre>
         *基础响应结果
         * </pre>
         *
         * <code>optional .one2data.rbtmqmsgcli.common.BaseAck base_ack = 1;</code>
         */
        public cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck getBaseAck() {
            return baseAck_ == null ? cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck.getDefaultInstance() : baseAck_;
        }
        /**
         * <pre>
         *基础响应结果
         * </pre>
         *
         * <code>optional .one2data.rbtmqmsgcli.common.BaseAck base_ack = 1;</code>
         */
        public cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAckOrBuilder getBaseAckOrBuilder() {
            return getBaseAck();
        }

        private byte memoizedIsInitialized = -1;
        public final boolean isInitialized() {
            byte isInitialized = memoizedIsInitialized;
            if (isInitialized == 1) return true;
            if (isInitialized == 0) return false;

            memoizedIsInitialized = 1;
            return true;
        }

        public void writeTo(com.google.protobuf.CodedOutputStream output)
                throws java.io.IOException {
            if (baseAck_ != null) {
                output.writeMessage(1, getBaseAck());
            }
        }

        public int getSerializedSize() {
            int size = memoizedSize;
            if (size != -1) return size;

            size = 0;
            if (baseAck_ != null) {
                size += com.google.protobuf.CodedOutputStream
                        .computeMessageSize(1, getBaseAck());
            }
            memoizedSize = size;
            return size;
        }

        private static final long serialVersionUID = 0L;
        @Override
        public boolean equals(final Object obj) {
            if (obj == this) {
                return true;
            }
            if (!(obj instanceof cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.ReportNodeAndHardwareInfoAck)) {
                return super.equals(obj);
            }
            cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.ReportNodeAndHardwareInfoAck other = (cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.ReportNodeAndHardwareInfoAck) obj;

            boolean result = true;
            result = result && (hasBaseAck() == other.hasBaseAck());
            if (hasBaseAck()) {
                result = result && getBaseAck()
                        .equals(other.getBaseAck());
            }
            return result;
        }

        @Override
        public int hashCode() {
            if (memoizedHashCode != 0) {
                return memoizedHashCode;
            }
            int hash = 41;
            hash = (19 * hash) + getDescriptorForType().hashCode();
            if (hasBaseAck()) {
                hash = (37 * hash) + BASE_ACK_FIELD_NUMBER;
                hash = (53 * hash) + getBaseAck().hashCode();
            }
            hash = (29 * hash) + unknownFields.hashCode();
            memoizedHashCode = hash;
            return hash;
        }

        public static cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.ReportNodeAndHardwareInfoAck parseFrom(
                com.google.protobuf.ByteString data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }
        public static cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.ReportNodeAndHardwareInfoAck parseFrom(
                com.google.protobuf.ByteString data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }
        public static cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.ReportNodeAndHardwareInfoAck parseFrom(byte[] data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }
        public static cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.ReportNodeAndHardwareInfoAck parseFrom(
                byte[] data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }
        public static cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.ReportNodeAndHardwareInfoAck parseFrom(java.io.InputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input);
        }
        public static cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.ReportNodeAndHardwareInfoAck parseFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input, extensionRegistry);
        }
        public static cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.ReportNodeAndHardwareInfoAck parseDelimitedFrom(java.io.InputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseDelimitedWithIOException(PARSER, input);
        }
        public static cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.ReportNodeAndHardwareInfoAck parseDelimitedFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
        }
        public static cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.ReportNodeAndHardwareInfoAck parseFrom(
                com.google.protobuf.CodedInputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input);
        }
        public static cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.ReportNodeAndHardwareInfoAck parseFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input, extensionRegistry);
        }

        public Builder newBuilderForType() { return newBuilder(); }
        public static Builder newBuilder() {
            return DEFAULT_INSTANCE.toBuilder();
        }
        public static Builder newBuilder(cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.ReportNodeAndHardwareInfoAck prototype) {
            return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }
        public Builder toBuilder() {
            return this == DEFAULT_INSTANCE
                    ? new Builder() : new Builder().mergeFrom(this);
        }

        @Override
        protected Builder newBuilderForType(
                BuilderParent parent) {
            Builder builder = new Builder(parent);
            return builder;
        }
        /**
         * <pre>
         *客户端节点上报ACk
         * </pre>
         *
         * Protobuf type {@code one2data.rbtmqmsgcli.client.ReportNodeAndHardwareInfoAck}
         */
        public static final class Builder extends
                com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
                // @@protoc_insertion_point(builder_implements:one2data.rbtmqmsgcli.client.ReportNodeAndHardwareInfoAck)
                cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.ReportNodeAndHardwareInfoAckOrBuilder {
            public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
                return cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.internal_static_one2data_rbtmqmsgcli_client_ReportNodeAndHardwareInfoAck_descriptor;
            }

            protected FieldAccessorTable
            internalGetFieldAccessorTable() {
                return cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.internal_static_one2data_rbtmqmsgcli_client_ReportNodeAndHardwareInfoAck_fieldAccessorTable
                        .ensureFieldAccessorsInitialized(
                                cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.ReportNodeAndHardwareInfoAck.class, cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.ReportNodeAndHardwareInfoAck.Builder.class);
            }

            // Construct using cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.ReportNodeAndHardwareInfoAck.newBuilder()
            private Builder() {
                maybeForceBuilderInitialization();
            }

            private Builder(
                    BuilderParent parent) {
                super(parent);
                maybeForceBuilderInitialization();
            }
            private void maybeForceBuilderInitialization() {
                if (com.google.protobuf.GeneratedMessageV3
                        .alwaysUseFieldBuilders) {
                }
            }
            public Builder clear() {
                super.clear();
                if (baseAckBuilder_ == null) {
                    baseAck_ = null;
                } else {
                    baseAck_ = null;
                    baseAckBuilder_ = null;
                }
                return this;
            }

            public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
                return cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.internal_static_one2data_rbtmqmsgcli_client_ReportNodeAndHardwareInfoAck_descriptor;
            }

            public cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.ReportNodeAndHardwareInfoAck getDefaultInstanceForType() {
                return cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.ReportNodeAndHardwareInfoAck.getDefaultInstance();
            }

            public cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.ReportNodeAndHardwareInfoAck build() {
                cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.ReportNodeAndHardwareInfoAck result = buildPartial();
                if (!result.isInitialized()) {
                    throw newUninitializedMessageException(result);
                }
                return result;
            }

            public cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.ReportNodeAndHardwareInfoAck buildPartial() {
                cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.ReportNodeAndHardwareInfoAck result = new cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.ReportNodeAndHardwareInfoAck(this);
                if (baseAckBuilder_ == null) {
                    result.baseAck_ = baseAck_;
                } else {
                    result.baseAck_ = baseAckBuilder_.build();
                }
                onBuilt();
                return result;
            }

            public Builder clone() {
                return (Builder) super.clone();
            }
            public Builder setField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    Object value) {
                return (Builder) super.setField(field, value);
            }
            public Builder clearField(
                    com.google.protobuf.Descriptors.FieldDescriptor field) {
                return (Builder) super.clearField(field);
            }
            public Builder clearOneof(
                    com.google.protobuf.Descriptors.OneofDescriptor oneof) {
                return (Builder) super.clearOneof(oneof);
            }
            public Builder setRepeatedField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    int index, Object value) {
                return (Builder) super.setRepeatedField(field, index, value);
            }
            public Builder addRepeatedField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    Object value) {
                return (Builder) super.addRepeatedField(field, value);
            }
            public Builder mergeFrom(com.google.protobuf.Message other) {
                if (other instanceof cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.ReportNodeAndHardwareInfoAck) {
                    return mergeFrom((cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.ReportNodeAndHardwareInfoAck)other);
                } else {
                    super.mergeFrom(other);
                    return this;
                }
            }

            public Builder mergeFrom(cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.ReportNodeAndHardwareInfoAck other) {
                if (other == cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.ReportNodeAndHardwareInfoAck.getDefaultInstance()) return this;
                if (other.hasBaseAck()) {
                    mergeBaseAck(other.getBaseAck());
                }
                onChanged();
                return this;
            }

            public final boolean isInitialized() {
                return true;
            }

            public Builder mergeFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws java.io.IOException {
                cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.ReportNodeAndHardwareInfoAck parsedMessage = null;
                try {
                    parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
                } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                    parsedMessage = (cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.ReportNodeAndHardwareInfoAck) e.getUnfinishedMessage();
                    throw e.unwrapIOException();
                } finally {
                    if (parsedMessage != null) {
                        mergeFrom(parsedMessage);
                    }
                }
                return this;
            }

            private cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck baseAck_ = null;
            private com.google.protobuf.SingleFieldBuilderV3<
                    cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck, cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck.Builder, cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAckOrBuilder> baseAckBuilder_;
            /**
             * <pre>
             *基础响应结果
             * </pre>
             *
             * <code>optional .one2data.rbtmqmsgcli.common.BaseAck base_ack = 1;</code>
             */
            public boolean hasBaseAck() {
                return baseAckBuilder_ != null || baseAck_ != null;
            }
            /**
             * <pre>
             *基础响应结果
             * </pre>
             *
             * <code>optional .one2data.rbtmqmsgcli.common.BaseAck base_ack = 1;</code>
             */
            public cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck getBaseAck() {
                if (baseAckBuilder_ == null) {
                    return baseAck_ == null ? cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck.getDefaultInstance() : baseAck_;
                } else {
                    return baseAckBuilder_.getMessage();
                }
            }
            /**
             * <pre>
             *基础响应结果
             * </pre>
             *
             * <code>optional .one2data.rbtmqmsgcli.common.BaseAck base_ack = 1;</code>
             */
            public Builder setBaseAck(cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck value) {
                if (baseAckBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    baseAck_ = value;
                    onChanged();
                } else {
                    baseAckBuilder_.setMessage(value);
                }

                return this;
            }
            /**
             * <pre>
             *基础响应结果
             * </pre>
             *
             * <code>optional .one2data.rbtmqmsgcli.common.BaseAck base_ack = 1;</code>
             */
            public Builder setBaseAck(
                    cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck.Builder builderForValue) {
                if (baseAckBuilder_ == null) {
                    baseAck_ = builderForValue.build();
                    onChanged();
                } else {
                    baseAckBuilder_.setMessage(builderForValue.build());
                }

                return this;
            }
            /**
             * <pre>
             *基础响应结果
             * </pre>
             *
             * <code>optional .one2data.rbtmqmsgcli.common.BaseAck base_ack = 1;</code>
             */
            public Builder mergeBaseAck(cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck value) {
                if (baseAckBuilder_ == null) {
                    if (baseAck_ != null) {
                        baseAck_ =
                                cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck.newBuilder(baseAck_).mergeFrom(value).buildPartial();
                    } else {
                        baseAck_ = value;
                    }
                    onChanged();
                } else {
                    baseAckBuilder_.mergeFrom(value);
                }

                return this;
            }
            /**
             * <pre>
             *基础响应结果
             * </pre>
             *
             * <code>optional .one2data.rbtmqmsgcli.common.BaseAck base_ack = 1;</code>
             */
            public Builder clearBaseAck() {
                if (baseAckBuilder_ == null) {
                    baseAck_ = null;
                    onChanged();
                } else {
                    baseAck_ = null;
                    baseAckBuilder_ = null;
                }

                return this;
            }
            /**
             * <pre>
             *基础响应结果
             * </pre>
             *
             * <code>optional .one2data.rbtmqmsgcli.common.BaseAck base_ack = 1;</code>
             */
            public cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck.Builder getBaseAckBuilder() {

                onChanged();
                return getBaseAckFieldBuilder().getBuilder();
            }
            /**
             * <pre>
             *基础响应结果
             * </pre>
             *
             * <code>optional .one2data.rbtmqmsgcli.common.BaseAck base_ack = 1;</code>
             */
            public cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAckOrBuilder getBaseAckOrBuilder() {
                if (baseAckBuilder_ != null) {
                    return baseAckBuilder_.getMessageOrBuilder();
                } else {
                    return baseAck_ == null ?
                            cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck.getDefaultInstance() : baseAck_;
                }
            }
            /**
             * <pre>
             *基础响应结果
             * </pre>
             *
             * <code>optional .one2data.rbtmqmsgcli.common.BaseAck base_ack = 1;</code>
             */
            private com.google.protobuf.SingleFieldBuilderV3<
                    cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck, cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck.Builder, cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAckOrBuilder>
            getBaseAckFieldBuilder() {
                if (baseAckBuilder_ == null) {
                    baseAckBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                            cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck, cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck.Builder, cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAckOrBuilder>(
                            getBaseAck(),
                            getParentForChildren(),
                            isClean());
                    baseAck_ = null;
                }
                return baseAckBuilder_;
            }
            public final Builder setUnknownFields(
                    final com.google.protobuf.UnknownFieldSet unknownFields) {
                return this;
            }

            public final Builder mergeUnknownFields(
                    final com.google.protobuf.UnknownFieldSet unknownFields) {
                return this;
            }


            // @@protoc_insertion_point(builder_scope:one2data.rbtmqmsgcli.client.ReportNodeAndHardwareInfoAck)
        }

        // @@protoc_insertion_point(class_scope:one2data.rbtmqmsgcli.client.ReportNodeAndHardwareInfoAck)
        private static final cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.ReportNodeAndHardwareInfoAck DEFAULT_INSTANCE;
        static {
            DEFAULT_INSTANCE = new cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.ReportNodeAndHardwareInfoAck();
        }

        public static cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.ReportNodeAndHardwareInfoAck getDefaultInstance() {
            return DEFAULT_INSTANCE;
        }

        private static final com.google.protobuf.Parser<ReportNodeAndHardwareInfoAck>
                PARSER = new com.google.protobuf.AbstractParser<ReportNodeAndHardwareInfoAck>() {
            public ReportNodeAndHardwareInfoAck parsePartialFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws com.google.protobuf.InvalidProtocolBufferException {
                return new ReportNodeAndHardwareInfoAck(input, extensionRegistry);
            }
        };

        public static com.google.protobuf.Parser<ReportNodeAndHardwareInfoAck> parser() {
            return PARSER;
        }

        @Override
        public com.google.protobuf.Parser<ReportNodeAndHardwareInfoAck> getParserForType() {
            return PARSER;
        }

        public cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.ReportNodeAndHardwareInfoAck getDefaultInstanceForType() {
            return DEFAULT_INSTANCE;
        }

    }

    public interface ReportHardwareChangedOrBuilder extends
            // @@protoc_insertion_point(interface_extends:one2data.rbtmqmsgcli.client.ReportHardwareChanged)
            com.google.protobuf.MessageOrBuilder {

        /**
         * <pre>
         *设备内部唯一ID
         * </pre>
         *
         * <code>optional string device_uuid_key = 1;</code>
         */
        String getDeviceUuidKey();
        /**
         * <pre>
         *设备内部唯一ID
         * </pre>
         *
         * <code>optional string device_uuid_key = 1;</code>
         */
        com.google.protobuf.ByteString
        getDeviceUuidKeyBytes();

        /**
         * <pre>
         *设备硬件信息结构-设备最新硬件结构
         * </pre>
         *
         * <code>optional .one2data.rbtmqmsgcli.client.HardwareInfo hardware_info = 2;</code>
         */
        boolean hasHardwareInfo();
        /**
         * <pre>
         *设备硬件信息结构-设备最新硬件结构
         * </pre>
         *
         * <code>optional .one2data.rbtmqmsgcli.client.HardwareInfo hardware_info = 2;</code>
         */
        cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.HardwareInfo getHardwareInfo();
        /**
         * <pre>
         *设备硬件信息结构-设备最新硬件结构
         * </pre>
         *
         * <code>optional .one2data.rbtmqmsgcli.client.HardwareInfo hardware_info = 2;</code>
         */
        cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.HardwareInfoOrBuilder getHardwareInfoOrBuilder();
    }
    /**
     * <pre>
     *上报设备硬件信息变更信息
     * </pre>
     *
     * Protobuf type {@code one2data.rbtmqmsgcli.client.ReportHardwareChanged}
     */
    public  static final class ReportHardwareChanged extends
            com.google.protobuf.GeneratedMessageV3 implements
            // @@protoc_insertion_point(message_implements:one2data.rbtmqmsgcli.client.ReportHardwareChanged)
            ReportHardwareChangedOrBuilder {
        // Use ReportHardwareChanged.newBuilder() to construct.
        private ReportHardwareChanged(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
            super(builder);
        }
        private ReportHardwareChanged() {
            deviceUuidKey_ = "";
        }

        @Override
        public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
            return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
        }
        private ReportHardwareChanged(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            this();
            int mutable_bitField0_ = 0;
            try {
                boolean done = false;
                while (!done) {
                    int tag = input.readTag();
                    switch (tag) {
                        case 0:
                            done = true;
                            break;
                        default: {
                            if (!input.skipField(tag)) {
                                done = true;
                            }
                            break;
                        }
                        case 10: {
                            String s = input.readStringRequireUtf8();

                            deviceUuidKey_ = s;
                            break;
                        }
                        case 18: {
                            cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.HardwareInfo.Builder subBuilder = null;
                            if (hardwareInfo_ != null) {
                                subBuilder = hardwareInfo_.toBuilder();
                            }
                            hardwareInfo_ = input.readMessage(cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.HardwareInfo.parser(), extensionRegistry);
                            if (subBuilder != null) {
                                subBuilder.mergeFrom(hardwareInfo_);
                                hardwareInfo_ = subBuilder.buildPartial();
                            }

                            break;
                        }
                    }
                }
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(this);
            } catch (java.io.IOException e) {
                throw new com.google.protobuf.InvalidProtocolBufferException(
                        e).setUnfinishedMessage(this);
            } finally {
                makeExtensionsImmutable();
            }
        }
        public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
            return cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.internal_static_one2data_rbtmqmsgcli_client_ReportHardwareChanged_descriptor;
        }

        protected FieldAccessorTable
        internalGetFieldAccessorTable() {
            return cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.internal_static_one2data_rbtmqmsgcli_client_ReportHardwareChanged_fieldAccessorTable
                    .ensureFieldAccessorsInitialized(
                            cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.ReportHardwareChanged.class, cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.ReportHardwareChanged.Builder.class);
        }

        public static final int DEVICE_UUID_KEY_FIELD_NUMBER = 1;
        private volatile Object deviceUuidKey_;
        /**
         * <pre>
         *设备内部唯一ID
         * </pre>
         *
         * <code>optional string device_uuid_key = 1;</code>
         */
        public String getDeviceUuidKey() {
            Object ref = deviceUuidKey_;
            if (ref instanceof String) {
                return (String) ref;
            } else {
                com.google.protobuf.ByteString bs =
                        (com.google.protobuf.ByteString) ref;
                String s = bs.toStringUtf8();
                deviceUuidKey_ = s;
                return s;
            }
        }
        /**
         * <pre>
         *设备内部唯一ID
         * </pre>
         *
         * <code>optional string device_uuid_key = 1;</code>
         */
        public com.google.protobuf.ByteString
        getDeviceUuidKeyBytes() {
            Object ref = deviceUuidKey_;
            if (ref instanceof String) {
                com.google.protobuf.ByteString b =
                        com.google.protobuf.ByteString.copyFromUtf8(
                                (String) ref);
                deviceUuidKey_ = b;
                return b;
            } else {
                return (com.google.protobuf.ByteString) ref;
            }
        }

        public static final int HARDWARE_INFO_FIELD_NUMBER = 2;
        private cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.HardwareInfo hardwareInfo_;
        /**
         * <pre>
         *设备硬件信息结构-设备最新硬件结构
         * </pre>
         *
         * <code>optional .one2data.rbtmqmsgcli.client.HardwareInfo hardware_info = 2;</code>
         */
        public boolean hasHardwareInfo() {
            return hardwareInfo_ != null;
        }
        /**
         * <pre>
         *设备硬件信息结构-设备最新硬件结构
         * </pre>
         *
         * <code>optional .one2data.rbtmqmsgcli.client.HardwareInfo hardware_info = 2;</code>
         */
        public cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.HardwareInfo getHardwareInfo() {
            return hardwareInfo_ == null ? cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.HardwareInfo.getDefaultInstance() : hardwareInfo_;
        }
        /**
         * <pre>
         *设备硬件信息结构-设备最新硬件结构
         * </pre>
         *
         * <code>optional .one2data.rbtmqmsgcli.client.HardwareInfo hardware_info = 2;</code>
         */
        public cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.HardwareInfoOrBuilder getHardwareInfoOrBuilder() {
            return getHardwareInfo();
        }

        private byte memoizedIsInitialized = -1;
        public final boolean isInitialized() {
            byte isInitialized = memoizedIsInitialized;
            if (isInitialized == 1) return true;
            if (isInitialized == 0) return false;

            memoizedIsInitialized = 1;
            return true;
        }

        public void writeTo(com.google.protobuf.CodedOutputStream output)
                throws java.io.IOException {
            if (!getDeviceUuidKeyBytes().isEmpty()) {
                com.google.protobuf.GeneratedMessageV3.writeString(output, 1, deviceUuidKey_);
            }
            if (hardwareInfo_ != null) {
                output.writeMessage(2, getHardwareInfo());
            }
        }

        public int getSerializedSize() {
            int size = memoizedSize;
            if (size != -1) return size;

            size = 0;
            if (!getDeviceUuidKeyBytes().isEmpty()) {
                size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, deviceUuidKey_);
            }
            if (hardwareInfo_ != null) {
                size += com.google.protobuf.CodedOutputStream
                        .computeMessageSize(2, getHardwareInfo());
            }
            memoizedSize = size;
            return size;
        }

        private static final long serialVersionUID = 0L;
        @Override
        public boolean equals(final Object obj) {
            if (obj == this) {
                return true;
            }
            if (!(obj instanceof cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.ReportHardwareChanged)) {
                return super.equals(obj);
            }
            cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.ReportHardwareChanged other = (cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.ReportHardwareChanged) obj;

            boolean result = true;
            result = result && getDeviceUuidKey()
                    .equals(other.getDeviceUuidKey());
            result = result && (hasHardwareInfo() == other.hasHardwareInfo());
            if (hasHardwareInfo()) {
                result = result && getHardwareInfo()
                        .equals(other.getHardwareInfo());
            }
            return result;
        }

        @Override
        public int hashCode() {
            if (memoizedHashCode != 0) {
                return memoizedHashCode;
            }
            int hash = 41;
            hash = (19 * hash) + getDescriptorForType().hashCode();
            hash = (37 * hash) + DEVICE_UUID_KEY_FIELD_NUMBER;
            hash = (53 * hash) + getDeviceUuidKey().hashCode();
            if (hasHardwareInfo()) {
                hash = (37 * hash) + HARDWARE_INFO_FIELD_NUMBER;
                hash = (53 * hash) + getHardwareInfo().hashCode();
            }
            hash = (29 * hash) + unknownFields.hashCode();
            memoizedHashCode = hash;
            return hash;
        }

        public static cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.ReportHardwareChanged parseFrom(
                com.google.protobuf.ByteString data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }
        public static cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.ReportHardwareChanged parseFrom(
                com.google.protobuf.ByteString data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }
        public static cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.ReportHardwareChanged parseFrom(byte[] data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }
        public static cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.ReportHardwareChanged parseFrom(
                byte[] data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }
        public static cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.ReportHardwareChanged parseFrom(java.io.InputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input);
        }
        public static cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.ReportHardwareChanged parseFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input, extensionRegistry);
        }
        public static cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.ReportHardwareChanged parseDelimitedFrom(java.io.InputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseDelimitedWithIOException(PARSER, input);
        }
        public static cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.ReportHardwareChanged parseDelimitedFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
        }
        public static cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.ReportHardwareChanged parseFrom(
                com.google.protobuf.CodedInputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input);
        }
        public static cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.ReportHardwareChanged parseFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input, extensionRegistry);
        }

        public Builder newBuilderForType() { return newBuilder(); }
        public static Builder newBuilder() {
            return DEFAULT_INSTANCE.toBuilder();
        }
        public static Builder newBuilder(cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.ReportHardwareChanged prototype) {
            return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }
        public Builder toBuilder() {
            return this == DEFAULT_INSTANCE
                    ? new Builder() : new Builder().mergeFrom(this);
        }

        @Override
        protected Builder newBuilderForType(
                BuilderParent parent) {
            Builder builder = new Builder(parent);
            return builder;
        }
        /**
         * <pre>
         *上报设备硬件信息变更信息
         * </pre>
         *
         * Protobuf type {@code one2data.rbtmqmsgcli.client.ReportHardwareChanged}
         */
        public static final class Builder extends
                com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
                // @@protoc_insertion_point(builder_implements:one2data.rbtmqmsgcli.client.ReportHardwareChanged)
                cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.ReportHardwareChangedOrBuilder {
            public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
                return cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.internal_static_one2data_rbtmqmsgcli_client_ReportHardwareChanged_descriptor;
            }

            protected FieldAccessorTable
            internalGetFieldAccessorTable() {
                return cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.internal_static_one2data_rbtmqmsgcli_client_ReportHardwareChanged_fieldAccessorTable
                        .ensureFieldAccessorsInitialized(
                                cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.ReportHardwareChanged.class, cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.ReportHardwareChanged.Builder.class);
            }

            // Construct using cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.ReportHardwareChanged.newBuilder()
            private Builder() {
                maybeForceBuilderInitialization();
            }

            private Builder(
                    BuilderParent parent) {
                super(parent);
                maybeForceBuilderInitialization();
            }
            private void maybeForceBuilderInitialization() {
                if (com.google.protobuf.GeneratedMessageV3
                        .alwaysUseFieldBuilders) {
                }
            }
            public Builder clear() {
                super.clear();
                deviceUuidKey_ = "";

                if (hardwareInfoBuilder_ == null) {
                    hardwareInfo_ = null;
                } else {
                    hardwareInfo_ = null;
                    hardwareInfoBuilder_ = null;
                }
                return this;
            }

            public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
                return cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.internal_static_one2data_rbtmqmsgcli_client_ReportHardwareChanged_descriptor;
            }

            public cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.ReportHardwareChanged getDefaultInstanceForType() {
                return cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.ReportHardwareChanged.getDefaultInstance();
            }

            public cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.ReportHardwareChanged build() {
                cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.ReportHardwareChanged result = buildPartial();
                if (!result.isInitialized()) {
                    throw newUninitializedMessageException(result);
                }
                return result;
            }

            public cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.ReportHardwareChanged buildPartial() {
                cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.ReportHardwareChanged result = new cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.ReportHardwareChanged(this);
                result.deviceUuidKey_ = deviceUuidKey_;
                if (hardwareInfoBuilder_ == null) {
                    result.hardwareInfo_ = hardwareInfo_;
                } else {
                    result.hardwareInfo_ = hardwareInfoBuilder_.build();
                }
                onBuilt();
                return result;
            }

            public Builder clone() {
                return (Builder) super.clone();
            }
            public Builder setField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    Object value) {
                return (Builder) super.setField(field, value);
            }
            public Builder clearField(
                    com.google.protobuf.Descriptors.FieldDescriptor field) {
                return (Builder) super.clearField(field);
            }
            public Builder clearOneof(
                    com.google.protobuf.Descriptors.OneofDescriptor oneof) {
                return (Builder) super.clearOneof(oneof);
            }
            public Builder setRepeatedField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    int index, Object value) {
                return (Builder) super.setRepeatedField(field, index, value);
            }
            public Builder addRepeatedField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    Object value) {
                return (Builder) super.addRepeatedField(field, value);
            }
            public Builder mergeFrom(com.google.protobuf.Message other) {
                if (other instanceof cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.ReportHardwareChanged) {
                    return mergeFrom((cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.ReportHardwareChanged)other);
                } else {
                    super.mergeFrom(other);
                    return this;
                }
            }

            public Builder mergeFrom(cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.ReportHardwareChanged other) {
                if (other == cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.ReportHardwareChanged.getDefaultInstance()) return this;
                if (!other.getDeviceUuidKey().isEmpty()) {
                    deviceUuidKey_ = other.deviceUuidKey_;
                    onChanged();
                }
                if (other.hasHardwareInfo()) {
                    mergeHardwareInfo(other.getHardwareInfo());
                }
                onChanged();
                return this;
            }

            public final boolean isInitialized() {
                return true;
            }

            public Builder mergeFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws java.io.IOException {
                cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.ReportHardwareChanged parsedMessage = null;
                try {
                    parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
                } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                    parsedMessage = (cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.ReportHardwareChanged) e.getUnfinishedMessage();
                    throw e.unwrapIOException();
                } finally {
                    if (parsedMessage != null) {
                        mergeFrom(parsedMessage);
                    }
                }
                return this;
            }

            private Object deviceUuidKey_ = "";
            /**
             * <pre>
             *设备内部唯一ID
             * </pre>
             *
             * <code>optional string device_uuid_key = 1;</code>
             */
            public String getDeviceUuidKey() {
                Object ref = deviceUuidKey_;
                if (!(ref instanceof String)) {
                    com.google.protobuf.ByteString bs =
                            (com.google.protobuf.ByteString) ref;
                    String s = bs.toStringUtf8();
                    deviceUuidKey_ = s;
                    return s;
                } else {
                    return (String) ref;
                }
            }
            /**
             * <pre>
             *设备内部唯一ID
             * </pre>
             *
             * <code>optional string device_uuid_key = 1;</code>
             */
            public com.google.protobuf.ByteString
            getDeviceUuidKeyBytes() {
                Object ref = deviceUuidKey_;
                if (ref instanceof String) {
                    com.google.protobuf.ByteString b =
                            com.google.protobuf.ByteString.copyFromUtf8(
                                    (String) ref);
                    deviceUuidKey_ = b;
                    return b;
                } else {
                    return (com.google.protobuf.ByteString) ref;
                }
            }
            /**
             * <pre>
             *设备内部唯一ID
             * </pre>
             *
             * <code>optional string device_uuid_key = 1;</code>
             */
            public Builder setDeviceUuidKey(
                    String value) {
                if (value == null) {
                    throw new NullPointerException();
                }

                deviceUuidKey_ = value;
                onChanged();
                return this;
            }
            /**
             * <pre>
             *设备内部唯一ID
             * </pre>
             *
             * <code>optional string device_uuid_key = 1;</code>
             */
            public Builder clearDeviceUuidKey() {

                deviceUuidKey_ = getDefaultInstance().getDeviceUuidKey();
                onChanged();
                return this;
            }
            /**
             * <pre>
             *设备内部唯一ID
             * </pre>
             *
             * <code>optional string device_uuid_key = 1;</code>
             */
            public Builder setDeviceUuidKeyBytes(
                    com.google.protobuf.ByteString value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                checkByteStringIsUtf8(value);

                deviceUuidKey_ = value;
                onChanged();
                return this;
            }

            private cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.HardwareInfo hardwareInfo_ = null;
            private com.google.protobuf.SingleFieldBuilderV3<
                    cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.HardwareInfo, cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.HardwareInfo.Builder, cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.HardwareInfoOrBuilder> hardwareInfoBuilder_;
            /**
             * <pre>
             *设备硬件信息结构-设备最新硬件结构
             * </pre>
             *
             * <code>optional .one2data.rbtmqmsgcli.client.HardwareInfo hardware_info = 2;</code>
             */
            public boolean hasHardwareInfo() {
                return hardwareInfoBuilder_ != null || hardwareInfo_ != null;
            }
            /**
             * <pre>
             *设备硬件信息结构-设备最新硬件结构
             * </pre>
             *
             * <code>optional .one2data.rbtmqmsgcli.client.HardwareInfo hardware_info = 2;</code>
             */
            public cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.HardwareInfo getHardwareInfo() {
                if (hardwareInfoBuilder_ == null) {
                    return hardwareInfo_ == null ? cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.HardwareInfo.getDefaultInstance() : hardwareInfo_;
                } else {
                    return hardwareInfoBuilder_.getMessage();
                }
            }
            /**
             * <pre>
             *设备硬件信息结构-设备最新硬件结构
             * </pre>
             *
             * <code>optional .one2data.rbtmqmsgcli.client.HardwareInfo hardware_info = 2;</code>
             */
            public Builder setHardwareInfo(cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.HardwareInfo value) {
                if (hardwareInfoBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    hardwareInfo_ = value;
                    onChanged();
                } else {
                    hardwareInfoBuilder_.setMessage(value);
                }

                return this;
            }
            /**
             * <pre>
             *设备硬件信息结构-设备最新硬件结构
             * </pre>
             *
             * <code>optional .one2data.rbtmqmsgcli.client.HardwareInfo hardware_info = 2;</code>
             */
            public Builder setHardwareInfo(
                    cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.HardwareInfo.Builder builderForValue) {
                if (hardwareInfoBuilder_ == null) {
                    hardwareInfo_ = builderForValue.build();
                    onChanged();
                } else {
                    hardwareInfoBuilder_.setMessage(builderForValue.build());
                }

                return this;
            }
            /**
             * <pre>
             *设备硬件信息结构-设备最新硬件结构
             * </pre>
             *
             * <code>optional .one2data.rbtmqmsgcli.client.HardwareInfo hardware_info = 2;</code>
             */
            public Builder mergeHardwareInfo(cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.HardwareInfo value) {
                if (hardwareInfoBuilder_ == null) {
                    if (hardwareInfo_ != null) {
                        hardwareInfo_ =
                                cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.HardwareInfo.newBuilder(hardwareInfo_).mergeFrom(value).buildPartial();
                    } else {
                        hardwareInfo_ = value;
                    }
                    onChanged();
                } else {
                    hardwareInfoBuilder_.mergeFrom(value);
                }

                return this;
            }
            /**
             * <pre>
             *设备硬件信息结构-设备最新硬件结构
             * </pre>
             *
             * <code>optional .one2data.rbtmqmsgcli.client.HardwareInfo hardware_info = 2;</code>
             */
            public Builder clearHardwareInfo() {
                if (hardwareInfoBuilder_ == null) {
                    hardwareInfo_ = null;
                    onChanged();
                } else {
                    hardwareInfo_ = null;
                    hardwareInfoBuilder_ = null;
                }

                return this;
            }
            /**
             * <pre>
             *设备硬件信息结构-设备最新硬件结构
             * </pre>
             *
             * <code>optional .one2data.rbtmqmsgcli.client.HardwareInfo hardware_info = 2;</code>
             */
            public cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.HardwareInfo.Builder getHardwareInfoBuilder() {

                onChanged();
                return getHardwareInfoFieldBuilder().getBuilder();
            }
            /**
             * <pre>
             *设备硬件信息结构-设备最新硬件结构
             * </pre>
             *
             * <code>optional .one2data.rbtmqmsgcli.client.HardwareInfo hardware_info = 2;</code>
             */
            public cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.HardwareInfoOrBuilder getHardwareInfoOrBuilder() {
                if (hardwareInfoBuilder_ != null) {
                    return hardwareInfoBuilder_.getMessageOrBuilder();
                } else {
                    return hardwareInfo_ == null ?
                            cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.HardwareInfo.getDefaultInstance() : hardwareInfo_;
                }
            }
            /**
             * <pre>
             *设备硬件信息结构-设备最新硬件结构
             * </pre>
             *
             * <code>optional .one2data.rbtmqmsgcli.client.HardwareInfo hardware_info = 2;</code>
             */
            private com.google.protobuf.SingleFieldBuilderV3<
                    cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.HardwareInfo, cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.HardwareInfo.Builder, cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.HardwareInfoOrBuilder>
            getHardwareInfoFieldBuilder() {
                if (hardwareInfoBuilder_ == null) {
                    hardwareInfoBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                            cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.HardwareInfo, cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.HardwareInfo.Builder, cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.HardwareInfoOrBuilder>(
                            getHardwareInfo(),
                            getParentForChildren(),
                            isClean());
                    hardwareInfo_ = null;
                }
                return hardwareInfoBuilder_;
            }
            public final Builder setUnknownFields(
                    final com.google.protobuf.UnknownFieldSet unknownFields) {
                return this;
            }

            public final Builder mergeUnknownFields(
                    final com.google.protobuf.UnknownFieldSet unknownFields) {
                return this;
            }


            // @@protoc_insertion_point(builder_scope:one2data.rbtmqmsgcli.client.ReportHardwareChanged)
        }

        // @@protoc_insertion_point(class_scope:one2data.rbtmqmsgcli.client.ReportHardwareChanged)
        private static final cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.ReportHardwareChanged DEFAULT_INSTANCE;
        static {
            DEFAULT_INSTANCE = new cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.ReportHardwareChanged();
        }

        public static cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.ReportHardwareChanged getDefaultInstance() {
            return DEFAULT_INSTANCE;
        }

        private static final com.google.protobuf.Parser<ReportHardwareChanged>
                PARSER = new com.google.protobuf.AbstractParser<ReportHardwareChanged>() {
            public ReportHardwareChanged parsePartialFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws com.google.protobuf.InvalidProtocolBufferException {
                return new ReportHardwareChanged(input, extensionRegistry);
            }
        };

        public static com.google.protobuf.Parser<ReportHardwareChanged> parser() {
            return PARSER;
        }

        @Override
        public com.google.protobuf.Parser<ReportHardwareChanged> getParserForType() {
            return PARSER;
        }

        public cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.ReportHardwareChanged getDefaultInstanceForType() {
            return DEFAULT_INSTANCE;
        }

    }

    public interface HarddiskInfoOrBuilder extends
            // @@protoc_insertion_point(interface_extends:one2data.rbtmqmsgcli.client.HarddiskInfo)
            com.google.protobuf.MessageOrBuilder {

        /**
         * <pre>
         *设备内部唯一ID
         * </pre>
         *
         * <code>optional string device_uuid_key = 1;</code>
         */
        String getDeviceUuidKey();
        /**
         * <pre>
         *设备内部唯一ID
         * </pre>
         *
         * <code>optional string device_uuid_key = 1;</code>
         */
        com.google.protobuf.ByteString
        getDeviceUuidKeyBytes();

        /**
         * <pre>
         *磁盘内部唯一标识
         * </pre>
         *
         * <code>optional .one2data.rbtmqmsgcli.common.BlockDeviceKey key = 2;</code>
         */
        boolean hasKey();
        /**
         * <pre>
         *磁盘内部唯一标识
         * </pre>
         *
         * <code>optional .one2data.rbtmqmsgcli.common.BlockDeviceKey key = 2;</code>
         */
        cn.keptdata.one2data.header.message.protobuf.common.Node.BlockDeviceKey getKey();
        /**
         * <pre>
         *磁盘内部唯一标识
         * </pre>
         *
         * <code>optional .one2data.rbtmqmsgcli.common.BlockDeviceKey key = 2;</code>
         */
        cn.keptdata.one2data.header.message.protobuf.common.Node.BlockDeviceKeyOrBuilder getKeyOrBuilder();

        /**
         * <pre>
         *磁盘是否在线
         * </pre>
         *
         * <code>optional bool is_online = 3;</code>
         */
        boolean getIsOnline();

        /**
         * <pre>
         *是否启动盘
         * </pre>
         *
         * <code>optional bool is_boot = 4;</code>
         */
        boolean getIsBoot();

        /**
         * <pre>
         *磁盘总扇区个数
         * </pre>
         *
         * <code>optional uint64 total_sector = 5;</code>
         */
        long getTotalSector();

        /**
         * <pre>
         *磁盘扇区大小，用于计算磁盘大小
         * </pre>
         *
         * <code>optional uint32 sector_size = 6;</code>
         */
        int getSectorSize();

        /**
         * <pre>
         *磁盘内部索引，只针对在线磁盘，如windows下的磁盘0，其中0即为该索引
         * </pre>
         *
         * <code>optional uint32 system_index = 7;</code>
         */
        int getSystemIndex();

        /**
         * <pre>
         *分区表类型
         * </pre>
         *
         * <code>optional .one2data.rbtmqmsgcli.client.PartTableType part_table_type = 8;</code>
         */
        int getPartTableTypeValue();
        /**
         * <pre>
         *分区表类型
         * </pre>
         *
         * <code>optional .one2data.rbtmqmsgcli.client.PartTableType part_table_type = 8;</code>
         */
        cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.PartTableType getPartTableType();

        /**
         * <pre>
         *是否包含物理卷
         * </pre>
         *
         * <code>optional bool has_pv = 9;</code>
         */
        boolean getHasPv();

        /**
         * <pre>
         *文件系统类型
         * </pre>
         *
         * <code>optional string filesystem_type = 10;</code>
         */
        String getFilesystemType();
        /**
         * <pre>
         *文件系统类型
         * </pre>
         *
         * <code>optional string filesystem_type = 10;</code>
         */
        com.google.protobuf.ByteString
        getFilesystemTypeBytes();

        /**
         * <pre>
         *是否是虚拟盘
         * </pre>
         *
         * <code>optional bool is_virtual = 11;</code>
         */
        boolean getIsVirtual();

        /**
         * <pre>
         *磁盘名称，用于显示
         * </pre>
         *
         * <code>optional string name = 12;</code>
         */
        String getName();
        /**
         * <pre>
         *磁盘名称，用于显示
         * </pre>
         *
         * <code>optional string name = 12;</code>
         */
        com.google.protobuf.ByteString
        getNameBytes();

        /**
         * <pre>
         *磁盘序列号
         * </pre>
         *
         * <code>optional string sn = 13;</code>
         */
        String getSn();
        /**
         * <pre>
         *磁盘序列号
         * </pre>
         *
         * <code>optional string sn = 13;</code>
         */
        com.google.protobuf.ByteString
        getSnBytes();

        /**
         * <pre>
         *磁盘制造商
         * </pre>
         *
         * <code>optional string vendor = 14;</code>
         */
        String getVendor();
        /**
         * <pre>
         *磁盘制造商
         * </pre>
         *
         * <code>optional string vendor = 14;</code>
         */
        com.google.protobuf.ByteString
        getVendorBytes();

        /**
         * <pre>
         *磁盘型号
         * </pre>
         *
         * <code>optional string model = 15;</code>
         */
        String getModel();
        /**
         * <pre>
         *磁盘型号
         * </pre>
         *
         * <code>optional string model = 15;</code>
         */
        com.google.protobuf.ByteString
        getModelBytes();

        /**
         * <pre>
         *磁盘是否可见，对于不可见磁盘web进行过滤
         * </pre>
         *
         * <code>optional bool is_visible = 16;</code>
         */
        boolean getIsVisible();

        /**
         * <pre>
         *挂载点
         * </pre>
         *
         * <code>optional string mount_point = 17;</code>
         */
        String getMountPoint();
        /**
         * <pre>
         *挂载点
         * </pre>
         *
         * <code>optional string mount_point = 17;</code>
         */
        com.google.protobuf.ByteString
        getMountPointBytes();

        /**
         * <pre>
         *磁盘物理扇区大小
         * </pre>
         *
         * <code>optional uint32 physical_sector_size = 18;</code>
         */
        int getPhysicalSectorSize();

        /**
         * <pre>
         *可备份的类型，&gt;=0 表示可备份，&lt;0 表示不可备份
         * </pre>
         *
         * <code>optional int32 backupable_type = 19;</code>
         */
        int getBackupableType();

        /**
         * <pre>
         *磁盘逻辑扇区大小
         * </pre>
         *
         * <code>optional uint32 logical_sector_size = 20;</code>
         */
        int getLogicalSectorSize();

        /**
         * <pre>
         *磁盘的分区
         * </pre>
         *
         * <code>repeated .one2data.rbtmqmsgcli.common.BlockDeviceKey partitions = 30;</code>
         */
        java.util.List<cn.keptdata.one2data.header.message.protobuf.common.Node.BlockDeviceKey>
        getPartitionsList();
        /**
         * <pre>
         *磁盘的分区
         * </pre>
         *
         * <code>repeated .one2data.rbtmqmsgcli.common.BlockDeviceKey partitions = 30;</code>
         */
        cn.keptdata.one2data.header.message.protobuf.common.Node.BlockDeviceKey getPartitions(int index);
        /**
         * <pre>
         *磁盘的分区
         * </pre>
         *
         * <code>repeated .one2data.rbtmqmsgcli.common.BlockDeviceKey partitions = 30;</code>
         */
        int getPartitionsCount();
        /**
         * <pre>
         *磁盘的分区
         * </pre>
         *
         * <code>repeated .one2data.rbtmqmsgcli.common.BlockDeviceKey partitions = 30;</code>
         */
        java.util.List<? extends cn.keptdata.one2data.header.message.protobuf.common.Node.BlockDeviceKeyOrBuilder>
        getPartitionsOrBuilderList();
        /**
         * <pre>
         *磁盘的分区
         * </pre>
         *
         * <code>repeated .one2data.rbtmqmsgcli.common.BlockDeviceKey partitions = 30;</code>
         */
        cn.keptdata.one2data.header.message.protobuf.common.Node.BlockDeviceKeyOrBuilder getPartitionsOrBuilder(
                int index);

        /**
         * <pre>
         *源磁盘: 当 is_virtual=true 时，表示该虚拟盘是由哪些磁盘提供的
         * </pre>
         *
         * <code>repeated .one2data.rbtmqmsgcli.common.BlockDeviceKey sources = 31;</code>
         */
        java.util.List<cn.keptdata.one2data.header.message.protobuf.common.Node.BlockDeviceKey>
        getSourcesList();
        /**
         * <pre>
         *源磁盘: 当 is_virtual=true 时，表示该虚拟盘是由哪些磁盘提供的
         * </pre>
         *
         * <code>repeated .one2data.rbtmqmsgcli.common.BlockDeviceKey sources = 31;</code>
         */
        cn.keptdata.one2data.header.message.protobuf.common.Node.BlockDeviceKey getSources(int index);
        /**
         * <pre>
         *源磁盘: 当 is_virtual=true 时，表示该虚拟盘是由哪些磁盘提供的
         * </pre>
         *
         * <code>repeated .one2data.rbtmqmsgcli.common.BlockDeviceKey sources = 31;</code>
         */
        int getSourcesCount();
        /**
         * <pre>
         *源磁盘: 当 is_virtual=true 时，表示该虚拟盘是由哪些磁盘提供的
         * </pre>
         *
         * <code>repeated .one2data.rbtmqmsgcli.common.BlockDeviceKey sources = 31;</code>
         */
        java.util.List<? extends cn.keptdata.one2data.header.message.protobuf.common.Node.BlockDeviceKeyOrBuilder>
        getSourcesOrBuilderList();
        /**
         * <pre>
         *源磁盘: 当 is_virtual=true 时，表示该虚拟盘是由哪些磁盘提供的
         * </pre>
         *
         * <code>repeated .one2data.rbtmqmsgcli.common.BlockDeviceKey sources = 31;</code>
         */
        cn.keptdata.one2data.header.message.protobuf.common.Node.BlockDeviceKeyOrBuilder getSourcesOrBuilder(
                int index);

        /**
         * <pre>
         *目标磁盘: 当 is_virtual=false 时，表示该物理盘被哪些磁盘使用
         * </pre>
         *
         * <code>repeated .one2data.rbtmqmsgcli.common.BlockDeviceKey targets = 32;</code>
         */
        java.util.List<cn.keptdata.one2data.header.message.protobuf.common.Node.BlockDeviceKey>
        getTargetsList();
        /**
         * <pre>
         *目标磁盘: 当 is_virtual=false 时，表示该物理盘被哪些磁盘使用
         * </pre>
         *
         * <code>repeated .one2data.rbtmqmsgcli.common.BlockDeviceKey targets = 32;</code>
         */
        cn.keptdata.one2data.header.message.protobuf.common.Node.BlockDeviceKey getTargets(int index);
        /**
         * <pre>
         *目标磁盘: 当 is_virtual=false 时，表示该物理盘被哪些磁盘使用
         * </pre>
         *
         * <code>repeated .one2data.rbtmqmsgcli.common.BlockDeviceKey targets = 32;</code>
         */
        int getTargetsCount();
        /**
         * <pre>
         *目标磁盘: 当 is_virtual=false 时，表示该物理盘被哪些磁盘使用
         * </pre>
         *
         * <code>repeated .one2data.rbtmqmsgcli.common.BlockDeviceKey targets = 32;</code>
         */
        java.util.List<? extends cn.keptdata.one2data.header.message.protobuf.common.Node.BlockDeviceKeyOrBuilder>
        getTargetsOrBuilderList();
        /**
         * <pre>
         *目标磁盘: 当 is_virtual=false 时，表示该物理盘被哪些磁盘使用
         * </pre>
         *
         * <code>repeated .one2data.rbtmqmsgcli.common.BlockDeviceKey targets = 32;</code>
         */
        cn.keptdata.one2data.header.message.protobuf.common.Node.BlockDeviceKeyOrBuilder getTargetsOrBuilder(
                int index);
    }
    /**
     * <pre>
     *设备磁盘信息
     * </pre>
     *
     * Protobuf type {@code one2data.rbtmqmsgcli.client.HarddiskInfo}
     */
    public  static final class HarddiskInfo extends
            com.google.protobuf.GeneratedMessageV3 implements
            // @@protoc_insertion_point(message_implements:one2data.rbtmqmsgcli.client.HarddiskInfo)
            HarddiskInfoOrBuilder {
        // Use HarddiskInfo.newBuilder() to construct.
        private HarddiskInfo(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
            super(builder);
        }
        private HarddiskInfo() {
            deviceUuidKey_ = "";
            isOnline_ = false;
            isBoot_ = false;
            totalSector_ = 0L;
            sectorSize_ = 0;
            systemIndex_ = 0;
            partTableType_ = 0;
            hasPv_ = false;
            filesystemType_ = "";
            isVirtual_ = false;
            name_ = "";
            sn_ = "";
            vendor_ = "";
            model_ = "";
            isVisible_ = false;
            mountPoint_ = "";
            physicalSectorSize_ = 0;
            backupableType_ = 0;
            logicalSectorSize_ = 0;
            partitions_ = java.util.Collections.emptyList();
            sources_ = java.util.Collections.emptyList();
            targets_ = java.util.Collections.emptyList();
        }

        @Override
        public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
            return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
        }
        private HarddiskInfo(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            this();
            int mutable_bitField0_ = 0;
            try {
                boolean done = false;
                while (!done) {
                    int tag = input.readTag();
                    switch (tag) {
                        case 0:
                            done = true;
                            break;
                        default: {
                            if (!input.skipField(tag)) {
                                done = true;
                            }
                            break;
                        }
                        case 10: {
                            String s = input.readStringRequireUtf8();

                            deviceUuidKey_ = s;
                            break;
                        }
                        case 18: {
                            cn.keptdata.one2data.header.message.protobuf.common.Node.BlockDeviceKey.Builder subBuilder = null;
                            if (key_ != null) {
                                subBuilder = key_.toBuilder();
                            }
                            key_ = input.readMessage(cn.keptdata.one2data.header.message.protobuf.common.Node.BlockDeviceKey.parser(), extensionRegistry);
                            if (subBuilder != null) {
                                subBuilder.mergeFrom(key_);
                                key_ = subBuilder.buildPartial();
                            }

                            break;
                        }
                        case 24: {

                            isOnline_ = input.readBool();
                            break;
                        }
                        case 32: {

                            isBoot_ = input.readBool();
                            break;
                        }
                        case 40: {

                            totalSector_ = input.readUInt64();
                            break;
                        }
                        case 48: {

                            sectorSize_ = input.readUInt32();
                            break;
                        }
                        case 56: {

                            systemIndex_ = input.readUInt32();
                            break;
                        }
                        case 64: {
                            int rawValue = input.readEnum();

                            partTableType_ = rawValue;
                            break;
                        }
                        case 72: {

                            hasPv_ = input.readBool();
                            break;
                        }
                        case 82: {
                            String s = input.readStringRequireUtf8();

                            filesystemType_ = s;
                            break;
                        }
                        case 88: {

                            isVirtual_ = input.readBool();
                            break;
                        }
                        case 98: {
                            String s = input.readStringRequireUtf8();

                            name_ = s;
                            break;
                        }
                        case 106: {
                            String s = input.readStringRequireUtf8();

                            sn_ = s;
                            break;
                        }
                        case 114: {
                            String s = input.readStringRequireUtf8();

                            vendor_ = s;
                            break;
                        }
                        case 122: {
                            String s = input.readStringRequireUtf8();

                            model_ = s;
                            break;
                        }
                        case 128: {

                            isVisible_ = input.readBool();
                            break;
                        }
                        case 138: {
                            String s = input.readStringRequireUtf8();

                            mountPoint_ = s;
                            break;
                        }
                        case 144: {

                            physicalSectorSize_ = input.readUInt32();
                            break;
                        }
                        case 152: {

                            backupableType_ = input.readInt32();
                            break;
                        }
                        case 160: {

                            logicalSectorSize_ = input.readUInt32();
                            break;
                        }
                        case 242: {
                            if (!((mutable_bitField0_ & 0x00100000) == 0x00100000)) {
                                partitions_ = new java.util.ArrayList<cn.keptdata.one2data.header.message.protobuf.common.Node.BlockDeviceKey>();
                                mutable_bitField0_ |= 0x00100000;
                            }
                            partitions_.add(
                                    input.readMessage(cn.keptdata.one2data.header.message.protobuf.common.Node.BlockDeviceKey.parser(), extensionRegistry));
                            break;
                        }
                        case 250: {
                            if (!((mutable_bitField0_ & 0x00200000) == 0x00200000)) {
                                sources_ = new java.util.ArrayList<cn.keptdata.one2data.header.message.protobuf.common.Node.BlockDeviceKey>();
                                mutable_bitField0_ |= 0x00200000;
                            }
                            sources_.add(
                                    input.readMessage(cn.keptdata.one2data.header.message.protobuf.common.Node.BlockDeviceKey.parser(), extensionRegistry));
                            break;
                        }
                        case 258: {
                            if (!((mutable_bitField0_ & 0x00400000) == 0x00400000)) {
                                targets_ = new java.util.ArrayList<cn.keptdata.one2data.header.message.protobuf.common.Node.BlockDeviceKey>();
                                mutable_bitField0_ |= 0x00400000;
                            }
                            targets_.add(
                                    input.readMessage(cn.keptdata.one2data.header.message.protobuf.common.Node.BlockDeviceKey.parser(), extensionRegistry));
                            break;
                        }
                    }
                }
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(this);
            } catch (java.io.IOException e) {
                throw new com.google.protobuf.InvalidProtocolBufferException(
                        e).setUnfinishedMessage(this);
            } finally {
                if (((mutable_bitField0_ & 0x00100000) == 0x00100000)) {
                    partitions_ = java.util.Collections.unmodifiableList(partitions_);
                }
                if (((mutable_bitField0_ & 0x00200000) == 0x00200000)) {
                    sources_ = java.util.Collections.unmodifiableList(sources_);
                }
                if (((mutable_bitField0_ & 0x00400000) == 0x00400000)) {
                    targets_ = java.util.Collections.unmodifiableList(targets_);
                }
                makeExtensionsImmutable();
            }
        }
        public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
            return cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.internal_static_one2data_rbtmqmsgcli_client_HarddiskInfo_descriptor;
        }

        protected FieldAccessorTable
        internalGetFieldAccessorTable() {
            return cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.internal_static_one2data_rbtmqmsgcli_client_HarddiskInfo_fieldAccessorTable
                    .ensureFieldAccessorsInitialized(
                            cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.HarddiskInfo.class, cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.HarddiskInfo.Builder.class);
        }

        private int bitField0_;
        public static final int DEVICE_UUID_KEY_FIELD_NUMBER = 1;
        private volatile Object deviceUuidKey_;
        /**
         * <pre>
         *设备内部唯一ID
         * </pre>
         *
         * <code>optional string device_uuid_key = 1;</code>
         */
        public String getDeviceUuidKey() {
            Object ref = deviceUuidKey_;
            if (ref instanceof String) {
                return (String) ref;
            } else {
                com.google.protobuf.ByteString bs =
                        (com.google.protobuf.ByteString) ref;
                String s = bs.toStringUtf8();
                deviceUuidKey_ = s;
                return s;
            }
        }
        /**
         * <pre>
         *设备内部唯一ID
         * </pre>
         *
         * <code>optional string device_uuid_key = 1;</code>
         */
        public com.google.protobuf.ByteString
        getDeviceUuidKeyBytes() {
            Object ref = deviceUuidKey_;
            if (ref instanceof String) {
                com.google.protobuf.ByteString b =
                        com.google.protobuf.ByteString.copyFromUtf8(
                                (String) ref);
                deviceUuidKey_ = b;
                return b;
            } else {
                return (com.google.protobuf.ByteString) ref;
            }
        }

        public static final int KEY_FIELD_NUMBER = 2;
        private cn.keptdata.one2data.header.message.protobuf.common.Node.BlockDeviceKey key_;
        /**
         * <pre>
         *磁盘内部唯一标识
         * </pre>
         *
         * <code>optional .one2data.rbtmqmsgcli.common.BlockDeviceKey key = 2;</code>
         */
        public boolean hasKey() {
            return key_ != null;
        }
        /**
         * <pre>
         *磁盘内部唯一标识
         * </pre>
         *
         * <code>optional .one2data.rbtmqmsgcli.common.BlockDeviceKey key = 2;</code>
         */
        public cn.keptdata.one2data.header.message.protobuf.common.Node.BlockDeviceKey getKey() {
            return key_ == null ? cn.keptdata.one2data.header.message.protobuf.common.Node.BlockDeviceKey.getDefaultInstance() : key_;
        }
        /**
         * <pre>
         *磁盘内部唯一标识
         * </pre>
         *
         * <code>optional .one2data.rbtmqmsgcli.common.BlockDeviceKey key = 2;</code>
         */
        public cn.keptdata.one2data.header.message.protobuf.common.Node.BlockDeviceKeyOrBuilder getKeyOrBuilder() {
            return getKey();
        }

        public static final int IS_ONLINE_FIELD_NUMBER = 3;
        private boolean isOnline_;
        /**
         * <pre>
         *磁盘是否在线
         * </pre>
         *
         * <code>optional bool is_online = 3;</code>
         */
        public boolean getIsOnline() {
            return isOnline_;
        }

        public static final int IS_BOOT_FIELD_NUMBER = 4;
        private boolean isBoot_;
        /**
         * <pre>
         *是否启动盘
         * </pre>
         *
         * <code>optional bool is_boot = 4;</code>
         */
        public boolean getIsBoot() {
            return isBoot_;
        }

        public static final int TOTAL_SECTOR_FIELD_NUMBER = 5;
        private long totalSector_;
        /**
         * <pre>
         *磁盘总扇区个数
         * </pre>
         *
         * <code>optional uint64 total_sector = 5;</code>
         */
        public long getTotalSector() {
            return totalSector_;
        }

        public static final int SECTOR_SIZE_FIELD_NUMBER = 6;
        private int sectorSize_;
        /**
         * <pre>
         *磁盘扇区大小，用于计算磁盘大小
         * </pre>
         *
         * <code>optional uint32 sector_size = 6;</code>
         */
        public int getSectorSize() {
            return sectorSize_;
        }

        public static final int SYSTEM_INDEX_FIELD_NUMBER = 7;
        private int systemIndex_;
        /**
         * <pre>
         *磁盘内部索引，只针对在线磁盘，如windows下的磁盘0，其中0即为该索引
         * </pre>
         *
         * <code>optional uint32 system_index = 7;</code>
         */
        public int getSystemIndex() {
            return systemIndex_;
        }

        public static final int PART_TABLE_TYPE_FIELD_NUMBER = 8;
        private int partTableType_;
        /**
         * <pre>
         *分区表类型
         * </pre>
         *
         * <code>optional .one2data.rbtmqmsgcli.client.PartTableType part_table_type = 8;</code>
         */
        public int getPartTableTypeValue() {
            return partTableType_;
        }
        /**
         * <pre>
         *分区表类型
         * </pre>
         *
         * <code>optional .one2data.rbtmqmsgcli.client.PartTableType part_table_type = 8;</code>
         */
        public cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.PartTableType getPartTableType() {
            cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.PartTableType result = cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.PartTableType.valueOf(partTableType_);
            return result == null ? cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.PartTableType.UNRECOGNIZED : result;
        }

        public static final int HAS_PV_FIELD_NUMBER = 9;
        private boolean hasPv_;
        /**
         * <pre>
         *是否包含物理卷
         * </pre>
         *
         * <code>optional bool has_pv = 9;</code>
         */
        public boolean getHasPv() {
            return hasPv_;
        }

        public static final int FILESYSTEM_TYPE_FIELD_NUMBER = 10;
        private volatile Object filesystemType_;
        /**
         * <pre>
         *文件系统类型
         * </pre>
         *
         * <code>optional string filesystem_type = 10;</code>
         */
        public String getFilesystemType() {
            Object ref = filesystemType_;
            if (ref instanceof String) {
                return (String) ref;
            } else {
                com.google.protobuf.ByteString bs =
                        (com.google.protobuf.ByteString) ref;
                String s = bs.toStringUtf8();
                filesystemType_ = s;
                return s;
            }
        }
        /**
         * <pre>
         *文件系统类型
         * </pre>
         *
         * <code>optional string filesystem_type = 10;</code>
         */
        public com.google.protobuf.ByteString
        getFilesystemTypeBytes() {
            Object ref = filesystemType_;
            if (ref instanceof String) {
                com.google.protobuf.ByteString b =
                        com.google.protobuf.ByteString.copyFromUtf8(
                                (String) ref);
                filesystemType_ = b;
                return b;
            } else {
                return (com.google.protobuf.ByteString) ref;
            }
        }

        public static final int IS_VIRTUAL_FIELD_NUMBER = 11;
        private boolean isVirtual_;
        /**
         * <pre>
         *是否是虚拟盘
         * </pre>
         *
         * <code>optional bool is_virtual = 11;</code>
         */
        public boolean getIsVirtual() {
            return isVirtual_;
        }

        public static final int NAME_FIELD_NUMBER = 12;
        private volatile Object name_;
        /**
         * <pre>
         *磁盘名称，用于显示
         * </pre>
         *
         * <code>optional string name = 12;</code>
         */
        public String getName() {
            Object ref = name_;
            if (ref instanceof String) {
                return (String) ref;
            } else {
                com.google.protobuf.ByteString bs =
                        (com.google.protobuf.ByteString) ref;
                String s = bs.toStringUtf8();
                name_ = s;
                return s;
            }
        }
        /**
         * <pre>
         *磁盘名称，用于显示
         * </pre>
         *
         * <code>optional string name = 12;</code>
         */
        public com.google.protobuf.ByteString
        getNameBytes() {
            Object ref = name_;
            if (ref instanceof String) {
                com.google.protobuf.ByteString b =
                        com.google.protobuf.ByteString.copyFromUtf8(
                                (String) ref);
                name_ = b;
                return b;
            } else {
                return (com.google.protobuf.ByteString) ref;
            }
        }

        public static final int SN_FIELD_NUMBER = 13;
        private volatile Object sn_;
        /**
         * <pre>
         *磁盘序列号
         * </pre>
         *
         * <code>optional string sn = 13;</code>
         */
        public String getSn() {
            Object ref = sn_;
            if (ref instanceof String) {
                return (String) ref;
            } else {
                com.google.protobuf.ByteString bs =
                        (com.google.protobuf.ByteString) ref;
                String s = bs.toStringUtf8();
                sn_ = s;
                return s;
            }
        }
        /**
         * <pre>
         *磁盘序列号
         * </pre>
         *
         * <code>optional string sn = 13;</code>
         */
        public com.google.protobuf.ByteString
        getSnBytes() {
            Object ref = sn_;
            if (ref instanceof String) {
                com.google.protobuf.ByteString b =
                        com.google.protobuf.ByteString.copyFromUtf8(
                                (String) ref);
                sn_ = b;
                return b;
            } else {
                return (com.google.protobuf.ByteString) ref;
            }
        }

        public static final int VENDOR_FIELD_NUMBER = 14;
        private volatile Object vendor_;
        /**
         * <pre>
         *磁盘制造商
         * </pre>
         *
         * <code>optional string vendor = 14;</code>
         */
        public String getVendor() {
            Object ref = vendor_;
            if (ref instanceof String) {
                return (String) ref;
            } else {
                com.google.protobuf.ByteString bs =
                        (com.google.protobuf.ByteString) ref;
                String s = bs.toStringUtf8();
                vendor_ = s;
                return s;
            }
        }
        /**
         * <pre>
         *磁盘制造商
         * </pre>
         *
         * <code>optional string vendor = 14;</code>
         */
        public com.google.protobuf.ByteString
        getVendorBytes() {
            Object ref = vendor_;
            if (ref instanceof String) {
                com.google.protobuf.ByteString b =
                        com.google.protobuf.ByteString.copyFromUtf8(
                                (String) ref);
                vendor_ = b;
                return b;
            } else {
                return (com.google.protobuf.ByteString) ref;
            }
        }

        public static final int MODEL_FIELD_NUMBER = 15;
        private volatile Object model_;
        /**
         * <pre>
         *磁盘型号
         * </pre>
         *
         * <code>optional string model = 15;</code>
         */
        public String getModel() {
            Object ref = model_;
            if (ref instanceof String) {
                return (String) ref;
            } else {
                com.google.protobuf.ByteString bs =
                        (com.google.protobuf.ByteString) ref;
                String s = bs.toStringUtf8();
                model_ = s;
                return s;
            }
        }
        /**
         * <pre>
         *磁盘型号
         * </pre>
         *
         * <code>optional string model = 15;</code>
         */
        public com.google.protobuf.ByteString
        getModelBytes() {
            Object ref = model_;
            if (ref instanceof String) {
                com.google.protobuf.ByteString b =
                        com.google.protobuf.ByteString.copyFromUtf8(
                                (String) ref);
                model_ = b;
                return b;
            } else {
                return (com.google.protobuf.ByteString) ref;
            }
        }

        public static final int IS_VISIBLE_FIELD_NUMBER = 16;
        private boolean isVisible_;
        /**
         * <pre>
         *磁盘是否可见，对于不可见磁盘web进行过滤
         * </pre>
         *
         * <code>optional bool is_visible = 16;</code>
         */
        public boolean getIsVisible() {
            return isVisible_;
        }

        public static final int MOUNT_POINT_FIELD_NUMBER = 17;
        private volatile Object mountPoint_;
        /**
         * <pre>
         *挂载点
         * </pre>
         *
         * <code>optional string mount_point = 17;</code>
         */
        public String getMountPoint() {
            Object ref = mountPoint_;
            if (ref instanceof String) {
                return (String) ref;
            } else {
                com.google.protobuf.ByteString bs =
                        (com.google.protobuf.ByteString) ref;
                String s = bs.toStringUtf8();
                mountPoint_ = s;
                return s;
            }
        }
        /**
         * <pre>
         *挂载点
         * </pre>
         *
         * <code>optional string mount_point = 17;</code>
         */
        public com.google.protobuf.ByteString
        getMountPointBytes() {
            Object ref = mountPoint_;
            if (ref instanceof String) {
                com.google.protobuf.ByteString b =
                        com.google.protobuf.ByteString.copyFromUtf8(
                                (String) ref);
                mountPoint_ = b;
                return b;
            } else {
                return (com.google.protobuf.ByteString) ref;
            }
        }

        public static final int PHYSICAL_SECTOR_SIZE_FIELD_NUMBER = 18;
        private int physicalSectorSize_;
        /**
         * <pre>
         *磁盘物理扇区大小
         * </pre>
         *
         * <code>optional uint32 physical_sector_size = 18;</code>
         */
        public int getPhysicalSectorSize() {
            return physicalSectorSize_;
        }

        public static final int BACKUPABLE_TYPE_FIELD_NUMBER = 19;
        private int backupableType_;
        /**
         * <pre>
         *可备份的类型，&gt;=0 表示可备份，&lt;0 表示不可备份
         * </pre>
         *
         * <code>optional int32 backupable_type = 19;</code>
         */
        public int getBackupableType() {
            return backupableType_;
        }

        public static final int LOGICAL_SECTOR_SIZE_FIELD_NUMBER = 20;
        private int logicalSectorSize_;
        /**
         * <pre>
         *磁盘逻辑扇区大小
         * </pre>
         *
         * <code>optional uint32 logical_sector_size = 20;</code>
         */
        public int getLogicalSectorSize() {
            return logicalSectorSize_;
        }

        public static final int PARTITIONS_FIELD_NUMBER = 30;
        private java.util.List<cn.keptdata.one2data.header.message.protobuf.common.Node.BlockDeviceKey> partitions_;
        /**
         * <pre>
         *磁盘的分区
         * </pre>
         *
         * <code>repeated .one2data.rbtmqmsgcli.common.BlockDeviceKey partitions = 30;</code>
         */
        public java.util.List<cn.keptdata.one2data.header.message.protobuf.common.Node.BlockDeviceKey> getPartitionsList() {
            return partitions_;
        }
        /**
         * <pre>
         *磁盘的分区
         * </pre>
         *
         * <code>repeated .one2data.rbtmqmsgcli.common.BlockDeviceKey partitions = 30;</code>
         */
        public java.util.List<? extends cn.keptdata.one2data.header.message.protobuf.common.Node.BlockDeviceKeyOrBuilder>
        getPartitionsOrBuilderList() {
            return partitions_;
        }
        /**
         * <pre>
         *磁盘的分区
         * </pre>
         *
         * <code>repeated .one2data.rbtmqmsgcli.common.BlockDeviceKey partitions = 30;</code>
         */
        public int getPartitionsCount() {
            return partitions_.size();
        }
        /**
         * <pre>
         *磁盘的分区
         * </pre>
         *
         * <code>repeated .one2data.rbtmqmsgcli.common.BlockDeviceKey partitions = 30;</code>
         */
        public cn.keptdata.one2data.header.message.protobuf.common.Node.BlockDeviceKey getPartitions(int index) {
            return partitions_.get(index);
        }
        /**
         * <pre>
         *磁盘的分区
         * </pre>
         *
         * <code>repeated .one2data.rbtmqmsgcli.common.BlockDeviceKey partitions = 30;</code>
         */
        public cn.keptdata.one2data.header.message.protobuf.common.Node.BlockDeviceKeyOrBuilder getPartitionsOrBuilder(
                int index) {
            return partitions_.get(index);
        }

        public static final int SOURCES_FIELD_NUMBER = 31;
        private java.util.List<cn.keptdata.one2data.header.message.protobuf.common.Node.BlockDeviceKey> sources_;
        /**
         * <pre>
         *源磁盘: 当 is_virtual=true 时，表示该虚拟盘是由哪些磁盘提供的
         * </pre>
         *
         * <code>repeated .one2data.rbtmqmsgcli.common.BlockDeviceKey sources = 31;</code>
         */
        public java.util.List<cn.keptdata.one2data.header.message.protobuf.common.Node.BlockDeviceKey> getSourcesList() {
            return sources_;
        }
        /**
         * <pre>
         *源磁盘: 当 is_virtual=true 时，表示该虚拟盘是由哪些磁盘提供的
         * </pre>
         *
         * <code>repeated .one2data.rbtmqmsgcli.common.BlockDeviceKey sources = 31;</code>
         */
        public java.util.List<? extends cn.keptdata.one2data.header.message.protobuf.common.Node.BlockDeviceKeyOrBuilder>
        getSourcesOrBuilderList() {
            return sources_;
        }
        /**
         * <pre>
         *源磁盘: 当 is_virtual=true 时，表示该虚拟盘是由哪些磁盘提供的
         * </pre>
         *
         * <code>repeated .one2data.rbtmqmsgcli.common.BlockDeviceKey sources = 31;</code>
         */
        public int getSourcesCount() {
            return sources_.size();
        }
        /**
         * <pre>
         *源磁盘: 当 is_virtual=true 时，表示该虚拟盘是由哪些磁盘提供的
         * </pre>
         *
         * <code>repeated .one2data.rbtmqmsgcli.common.BlockDeviceKey sources = 31;</code>
         */
        public cn.keptdata.one2data.header.message.protobuf.common.Node.BlockDeviceKey getSources(int index) {
            return sources_.get(index);
        }
        /**
         * <pre>
         *源磁盘: 当 is_virtual=true 时，表示该虚拟盘是由哪些磁盘提供的
         * </pre>
         *
         * <code>repeated .one2data.rbtmqmsgcli.common.BlockDeviceKey sources = 31;</code>
         */
        public cn.keptdata.one2data.header.message.protobuf.common.Node.BlockDeviceKeyOrBuilder getSourcesOrBuilder(
                int index) {
            return sources_.get(index);
        }

        public static final int TARGETS_FIELD_NUMBER = 32;
        private java.util.List<cn.keptdata.one2data.header.message.protobuf.common.Node.BlockDeviceKey> targets_;
        /**
         * <pre>
         *目标磁盘: 当 is_virtual=false 时，表示该物理盘被哪些磁盘使用
         * </pre>
         *
         * <code>repeated .one2data.rbtmqmsgcli.common.BlockDeviceKey targets = 32;</code>
         */
        public java.util.List<cn.keptdata.one2data.header.message.protobuf.common.Node.BlockDeviceKey> getTargetsList() {
            return targets_;
        }
        /**
         * <pre>
         *目标磁盘: 当 is_virtual=false 时，表示该物理盘被哪些磁盘使用
         * </pre>
         *
         * <code>repeated .one2data.rbtmqmsgcli.common.BlockDeviceKey targets = 32;</code>
         */
        public java.util.List<? extends cn.keptdata.one2data.header.message.protobuf.common.Node.BlockDeviceKeyOrBuilder>
        getTargetsOrBuilderList() {
            return targets_;
        }
        /**
         * <pre>
         *目标磁盘: 当 is_virtual=false 时，表示该物理盘被哪些磁盘使用
         * </pre>
         *
         * <code>repeated .one2data.rbtmqmsgcli.common.BlockDeviceKey targets = 32;</code>
         */
        public int getTargetsCount() {
            return targets_.size();
        }
        /**
         * <pre>
         *目标磁盘: 当 is_virtual=false 时，表示该物理盘被哪些磁盘使用
         * </pre>
         *
         * <code>repeated .one2data.rbtmqmsgcli.common.BlockDeviceKey targets = 32;</code>
         */
        public cn.keptdata.one2data.header.message.protobuf.common.Node.BlockDeviceKey getTargets(int index) {
            return targets_.get(index);
        }
        /**
         * <pre>
         *目标磁盘: 当 is_virtual=false 时，表示该物理盘被哪些磁盘使用
         * </pre>
         *
         * <code>repeated .one2data.rbtmqmsgcli.common.BlockDeviceKey targets = 32;</code>
         */
        public cn.keptdata.one2data.header.message.protobuf.common.Node.BlockDeviceKeyOrBuilder getTargetsOrBuilder(
                int index) {
            return targets_.get(index);
        }

        private byte memoizedIsInitialized = -1;
        public final boolean isInitialized() {
            byte isInitialized = memoizedIsInitialized;
            if (isInitialized == 1) return true;
            if (isInitialized == 0) return false;

            memoizedIsInitialized = 1;
            return true;
        }

        public void writeTo(com.google.protobuf.CodedOutputStream output)
                throws java.io.IOException {
            if (!getDeviceUuidKeyBytes().isEmpty()) {
                com.google.protobuf.GeneratedMessageV3.writeString(output, 1, deviceUuidKey_);
            }
            if (key_ != null) {
                output.writeMessage(2, getKey());
            }
            if (isOnline_ != false) {
                output.writeBool(3, isOnline_);
            }
            if (isBoot_ != false) {
                output.writeBool(4, isBoot_);
            }
            if (totalSector_ != 0L) {
                output.writeUInt64(5, totalSector_);
            }
            if (sectorSize_ != 0) {
                output.writeUInt32(6, sectorSize_);
            }
            if (systemIndex_ != 0) {
                output.writeUInt32(7, systemIndex_);
            }
            if (partTableType_ != cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.PartTableType.PTT_UNKNOWN.getNumber()) {
                output.writeEnum(8, partTableType_);
            }
            if (hasPv_ != false) {
                output.writeBool(9, hasPv_);
            }
            if (!getFilesystemTypeBytes().isEmpty()) {
                com.google.protobuf.GeneratedMessageV3.writeString(output, 10, filesystemType_);
            }
            if (isVirtual_ != false) {
                output.writeBool(11, isVirtual_);
            }
            if (!getNameBytes().isEmpty()) {
                com.google.protobuf.GeneratedMessageV3.writeString(output, 12, name_);
            }
            if (!getSnBytes().isEmpty()) {
                com.google.protobuf.GeneratedMessageV3.writeString(output, 13, sn_);
            }
            if (!getVendorBytes().isEmpty()) {
                com.google.protobuf.GeneratedMessageV3.writeString(output, 14, vendor_);
            }
            if (!getModelBytes().isEmpty()) {
                com.google.protobuf.GeneratedMessageV3.writeString(output, 15, model_);
            }
            if (isVisible_ != false) {
                output.writeBool(16, isVisible_);
            }
            if (!getMountPointBytes().isEmpty()) {
                com.google.protobuf.GeneratedMessageV3.writeString(output, 17, mountPoint_);
            }
            if (physicalSectorSize_ != 0) {
                output.writeUInt32(18, physicalSectorSize_);
            }
            if (backupableType_ != 0) {
                output.writeInt32(19, backupableType_);
            }
            if (logicalSectorSize_ != 0) {
                output.writeUInt32(20, logicalSectorSize_);
            }
            for (int i = 0; i < partitions_.size(); i++) {
                output.writeMessage(30, partitions_.get(i));
            }
            for (int i = 0; i < sources_.size(); i++) {
                output.writeMessage(31, sources_.get(i));
            }
            for (int i = 0; i < targets_.size(); i++) {
                output.writeMessage(32, targets_.get(i));
            }
        }

        public int getSerializedSize() {
            int size = memoizedSize;
            if (size != -1) return size;

            size = 0;
            if (!getDeviceUuidKeyBytes().isEmpty()) {
                size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, deviceUuidKey_);
            }
            if (key_ != null) {
                size += com.google.protobuf.CodedOutputStream
                        .computeMessageSize(2, getKey());
            }
            if (isOnline_ != false) {
                size += com.google.protobuf.CodedOutputStream
                        .computeBoolSize(3, isOnline_);
            }
            if (isBoot_ != false) {
                size += com.google.protobuf.CodedOutputStream
                        .computeBoolSize(4, isBoot_);
            }
            if (totalSector_ != 0L) {
                size += com.google.protobuf.CodedOutputStream
                        .computeUInt64Size(5, totalSector_);
            }
            if (sectorSize_ != 0) {
                size += com.google.protobuf.CodedOutputStream
                        .computeUInt32Size(6, sectorSize_);
            }
            if (systemIndex_ != 0) {
                size += com.google.protobuf.CodedOutputStream
                        .computeUInt32Size(7, systemIndex_);
            }
            if (partTableType_ != cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.PartTableType.PTT_UNKNOWN.getNumber()) {
                size += com.google.protobuf.CodedOutputStream
                        .computeEnumSize(8, partTableType_);
            }
            if (hasPv_ != false) {
                size += com.google.protobuf.CodedOutputStream
                        .computeBoolSize(9, hasPv_);
            }
            if (!getFilesystemTypeBytes().isEmpty()) {
                size += com.google.protobuf.GeneratedMessageV3.computeStringSize(10, filesystemType_);
            }
            if (isVirtual_ != false) {
                size += com.google.protobuf.CodedOutputStream
                        .computeBoolSize(11, isVirtual_);
            }
            if (!getNameBytes().isEmpty()) {
                size += com.google.protobuf.GeneratedMessageV3.computeStringSize(12, name_);
            }
            if (!getSnBytes().isEmpty()) {
                size += com.google.protobuf.GeneratedMessageV3.computeStringSize(13, sn_);
            }
            if (!getVendorBytes().isEmpty()) {
                size += com.google.protobuf.GeneratedMessageV3.computeStringSize(14, vendor_);
            }
            if (!getModelBytes().isEmpty()) {
                size += com.google.protobuf.GeneratedMessageV3.computeStringSize(15, model_);
            }
            if (isVisible_ != false) {
                size += com.google.protobuf.CodedOutputStream
                        .computeBoolSize(16, isVisible_);
            }
            if (!getMountPointBytes().isEmpty()) {
                size += com.google.protobuf.GeneratedMessageV3.computeStringSize(17, mountPoint_);
            }
            if (physicalSectorSize_ != 0) {
                size += com.google.protobuf.CodedOutputStream
                        .computeUInt32Size(18, physicalSectorSize_);
            }
            if (backupableType_ != 0) {
                size += com.google.protobuf.CodedOutputStream
                        .computeInt32Size(19, backupableType_);
            }
            if (logicalSectorSize_ != 0) {
                size += com.google.protobuf.CodedOutputStream
                        .computeUInt32Size(20, logicalSectorSize_);
            }
            for (int i = 0; i < partitions_.size(); i++) {
                size += com.google.protobuf.CodedOutputStream
                        .computeMessageSize(30, partitions_.get(i));
            }
            for (int i = 0; i < sources_.size(); i++) {
                size += com.google.protobuf.CodedOutputStream
                        .computeMessageSize(31, sources_.get(i));
            }
            for (int i = 0; i < targets_.size(); i++) {
                size += com.google.protobuf.CodedOutputStream
                        .computeMessageSize(32, targets_.get(i));
            }
            memoizedSize = size;
            return size;
        }

        private static final long serialVersionUID = 0L;
        @Override
        public boolean equals(final Object obj) {
            if (obj == this) {
                return true;
            }
            if (!(obj instanceof cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.HarddiskInfo)) {
                return super.equals(obj);
            }
            cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.HarddiskInfo other = (cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.HarddiskInfo) obj;

            boolean result = true;
            result = result && getDeviceUuidKey()
                    .equals(other.getDeviceUuidKey());
            result = result && (hasKey() == other.hasKey());
            if (hasKey()) {
                result = result && getKey()
                        .equals(other.getKey());
            }
            result = result && (getIsOnline()
                    == other.getIsOnline());
            result = result && (getIsBoot()
                    == other.getIsBoot());
            result = result && (getTotalSector()
                    == other.getTotalSector());
            result = result && (getSectorSize()
                    == other.getSectorSize());
            result = result && (getSystemIndex()
                    == other.getSystemIndex());
            result = result && partTableType_ == other.partTableType_;
            result = result && (getHasPv()
                    == other.getHasPv());
            result = result && getFilesystemType()
                    .equals(other.getFilesystemType());
            result = result && (getIsVirtual()
                    == other.getIsVirtual());
            result = result && getName()
                    .equals(other.getName());
            result = result && getSn()
                    .equals(other.getSn());
            result = result && getVendor()
                    .equals(other.getVendor());
            result = result && getModel()
                    .equals(other.getModel());
            result = result && (getIsVisible()
                    == other.getIsVisible());
            result = result && getMountPoint()
                    .equals(other.getMountPoint());
            result = result && (getPhysicalSectorSize()
                    == other.getPhysicalSectorSize());
            result = result && (getBackupableType()
                    == other.getBackupableType());
            result = result && (getLogicalSectorSize()
                    == other.getLogicalSectorSize());
            result = result && getPartitionsList()
                    .equals(other.getPartitionsList());
            result = result && getSourcesList()
                    .equals(other.getSourcesList());
            result = result && getTargetsList()
                    .equals(other.getTargetsList());
            return result;
        }

        @Override
        public int hashCode() {
            if (memoizedHashCode != 0) {
                return memoizedHashCode;
            }
            int hash = 41;
            hash = (19 * hash) + getDescriptorForType().hashCode();
            hash = (37 * hash) + DEVICE_UUID_KEY_FIELD_NUMBER;
            hash = (53 * hash) + getDeviceUuidKey().hashCode();
            if (hasKey()) {
                hash = (37 * hash) + KEY_FIELD_NUMBER;
                hash = (53 * hash) + getKey().hashCode();
            }
            hash = (37 * hash) + IS_ONLINE_FIELD_NUMBER;
            hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
                    getIsOnline());
            hash = (37 * hash) + IS_BOOT_FIELD_NUMBER;
            hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
                    getIsBoot());
            hash = (37 * hash) + TOTAL_SECTOR_FIELD_NUMBER;
            hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
                    getTotalSector());
            hash = (37 * hash) + SECTOR_SIZE_FIELD_NUMBER;
            hash = (53 * hash) + getSectorSize();
            hash = (37 * hash) + SYSTEM_INDEX_FIELD_NUMBER;
            hash = (53 * hash) + getSystemIndex();
            hash = (37 * hash) + PART_TABLE_TYPE_FIELD_NUMBER;
            hash = (53 * hash) + partTableType_;
            hash = (37 * hash) + HAS_PV_FIELD_NUMBER;
            hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
                    getHasPv());
            hash = (37 * hash) + FILESYSTEM_TYPE_FIELD_NUMBER;
            hash = (53 * hash) + getFilesystemType().hashCode();
            hash = (37 * hash) + IS_VIRTUAL_FIELD_NUMBER;
            hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
                    getIsVirtual());
            hash = (37 * hash) + NAME_FIELD_NUMBER;
            hash = (53 * hash) + getName().hashCode();
            hash = (37 * hash) + SN_FIELD_NUMBER;
            hash = (53 * hash) + getSn().hashCode();
            hash = (37 * hash) + VENDOR_FIELD_NUMBER;
            hash = (53 * hash) + getVendor().hashCode();
            hash = (37 * hash) + MODEL_FIELD_NUMBER;
            hash = (53 * hash) + getModel().hashCode();
            hash = (37 * hash) + IS_VISIBLE_FIELD_NUMBER;
            hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
                    getIsVisible());
            hash = (37 * hash) + MOUNT_POINT_FIELD_NUMBER;
            hash = (53 * hash) + getMountPoint().hashCode();
            hash = (37 * hash) + PHYSICAL_SECTOR_SIZE_FIELD_NUMBER;
            hash = (53 * hash) + getPhysicalSectorSize();
            hash = (37 * hash) + BACKUPABLE_TYPE_FIELD_NUMBER;
            hash = (53 * hash) + getBackupableType();
            hash = (37 * hash) + LOGICAL_SECTOR_SIZE_FIELD_NUMBER;
            hash = (53 * hash) + getLogicalSectorSize();
            if (getPartitionsCount() > 0) {
                hash = (37 * hash) + PARTITIONS_FIELD_NUMBER;
                hash = (53 * hash) + getPartitionsList().hashCode();
            }
            if (getSourcesCount() > 0) {
                hash = (37 * hash) + SOURCES_FIELD_NUMBER;
                hash = (53 * hash) + getSourcesList().hashCode();
            }
            if (getTargetsCount() > 0) {
                hash = (37 * hash) + TARGETS_FIELD_NUMBER;
                hash = (53 * hash) + getTargetsList().hashCode();
            }
            hash = (29 * hash) + unknownFields.hashCode();
            memoizedHashCode = hash;
            return hash;
        }

        public static cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.HarddiskInfo parseFrom(
                com.google.protobuf.ByteString data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }
        public static cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.HarddiskInfo parseFrom(
                com.google.protobuf.ByteString data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }
        public static cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.HarddiskInfo parseFrom(byte[] data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }
        public static cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.HarddiskInfo parseFrom(
                byte[] data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }
        public static cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.HarddiskInfo parseFrom(java.io.InputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input);
        }
        public static cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.HarddiskInfo parseFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input, extensionRegistry);
        }
        public static cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.HarddiskInfo parseDelimitedFrom(java.io.InputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseDelimitedWithIOException(PARSER, input);
        }
        public static cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.HarddiskInfo parseDelimitedFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
        }
        public static cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.HarddiskInfo parseFrom(
                com.google.protobuf.CodedInputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input);
        }
        public static cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.HarddiskInfo parseFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input, extensionRegistry);
        }

        public Builder newBuilderForType() { return newBuilder(); }
        public static Builder newBuilder() {
            return DEFAULT_INSTANCE.toBuilder();
        }
        public static Builder newBuilder(cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.HarddiskInfo prototype) {
            return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }
        public Builder toBuilder() {
            return this == DEFAULT_INSTANCE
                    ? new Builder() : new Builder().mergeFrom(this);
        }

        @Override
        protected Builder newBuilderForType(
                BuilderParent parent) {
            Builder builder = new Builder(parent);
            return builder;
        }
        /**
         * <pre>
         *设备磁盘信息
         * </pre>
         *
         * Protobuf type {@code one2data.rbtmqmsgcli.client.HarddiskInfo}
         */
        public static final class Builder extends
                com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
                // @@protoc_insertion_point(builder_implements:one2data.rbtmqmsgcli.client.HarddiskInfo)
                cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.HarddiskInfoOrBuilder {
            public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
                return cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.internal_static_one2data_rbtmqmsgcli_client_HarddiskInfo_descriptor;
            }

            protected FieldAccessorTable
            internalGetFieldAccessorTable() {
                return cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.internal_static_one2data_rbtmqmsgcli_client_HarddiskInfo_fieldAccessorTable
                        .ensureFieldAccessorsInitialized(
                                cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.HarddiskInfo.class, cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.HarddiskInfo.Builder.class);
            }

            // Construct using cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.HarddiskInfo.newBuilder()
            private Builder() {
                maybeForceBuilderInitialization();
            }

            private Builder(
                    BuilderParent parent) {
                super(parent);
                maybeForceBuilderInitialization();
            }
            private void maybeForceBuilderInitialization() {
                if (com.google.protobuf.GeneratedMessageV3
                        .alwaysUseFieldBuilders) {
                    getPartitionsFieldBuilder();
                    getSourcesFieldBuilder();
                    getTargetsFieldBuilder();
                }
            }
            public Builder clear() {
                super.clear();
                deviceUuidKey_ = "";

                if (keyBuilder_ == null) {
                    key_ = null;
                } else {
                    key_ = null;
                    keyBuilder_ = null;
                }
                isOnline_ = false;

                isBoot_ = false;

                totalSector_ = 0L;

                sectorSize_ = 0;

                systemIndex_ = 0;

                partTableType_ = 0;

                hasPv_ = false;

                filesystemType_ = "";

                isVirtual_ = false;

                name_ = "";

                sn_ = "";

                vendor_ = "";

                model_ = "";

                isVisible_ = false;

                mountPoint_ = "";

                physicalSectorSize_ = 0;

                backupableType_ = 0;

                logicalSectorSize_ = 0;

                if (partitionsBuilder_ == null) {
                    partitions_ = java.util.Collections.emptyList();
                    bitField0_ = (bitField0_ & ~0x00100000);
                } else {
                    partitionsBuilder_.clear();
                }
                if (sourcesBuilder_ == null) {
                    sources_ = java.util.Collections.emptyList();
                    bitField0_ = (bitField0_ & ~0x00200000);
                } else {
                    sourcesBuilder_.clear();
                }
                if (targetsBuilder_ == null) {
                    targets_ = java.util.Collections.emptyList();
                    bitField0_ = (bitField0_ & ~0x00400000);
                } else {
                    targetsBuilder_.clear();
                }
                return this;
            }

            public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
                return cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.internal_static_one2data_rbtmqmsgcli_client_HarddiskInfo_descriptor;
            }

            public cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.HarddiskInfo getDefaultInstanceForType() {
                return cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.HarddiskInfo.getDefaultInstance();
            }

            public cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.HarddiskInfo build() {
                cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.HarddiskInfo result = buildPartial();
                if (!result.isInitialized()) {
                    throw newUninitializedMessageException(result);
                }
                return result;
            }

            public cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.HarddiskInfo buildPartial() {
                cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.HarddiskInfo result = new cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.HarddiskInfo(this);
                int from_bitField0_ = bitField0_;
                int to_bitField0_ = 0;
                result.deviceUuidKey_ = deviceUuidKey_;
                if (keyBuilder_ == null) {
                    result.key_ = key_;
                } else {
                    result.key_ = keyBuilder_.build();
                }
                result.isOnline_ = isOnline_;
                result.isBoot_ = isBoot_;
                result.totalSector_ = totalSector_;
                result.sectorSize_ = sectorSize_;
                result.systemIndex_ = systemIndex_;
                result.partTableType_ = partTableType_;
                result.hasPv_ = hasPv_;
                result.filesystemType_ = filesystemType_;
                result.isVirtual_ = isVirtual_;
                result.name_ = name_;
                result.sn_ = sn_;
                result.vendor_ = vendor_;
                result.model_ = model_;
                result.isVisible_ = isVisible_;
                result.mountPoint_ = mountPoint_;
                result.physicalSectorSize_ = physicalSectorSize_;
                result.backupableType_ = backupableType_;
                result.logicalSectorSize_ = logicalSectorSize_;
                if (partitionsBuilder_ == null) {
                    if (((bitField0_ & 0x00100000) == 0x00100000)) {
                        partitions_ = java.util.Collections.unmodifiableList(partitions_);
                        bitField0_ = (bitField0_ & ~0x00100000);
                    }
                    result.partitions_ = partitions_;
                } else {
                    result.partitions_ = partitionsBuilder_.build();
                }
                if (sourcesBuilder_ == null) {
                    if (((bitField0_ & 0x00200000) == 0x00200000)) {
                        sources_ = java.util.Collections.unmodifiableList(sources_);
                        bitField0_ = (bitField0_ & ~0x00200000);
                    }
                    result.sources_ = sources_;
                } else {
                    result.sources_ = sourcesBuilder_.build();
                }
                if (targetsBuilder_ == null) {
                    if (((bitField0_ & 0x00400000) == 0x00400000)) {
                        targets_ = java.util.Collections.unmodifiableList(targets_);
                        bitField0_ = (bitField0_ & ~0x00400000);
                    }
                    result.targets_ = targets_;
                } else {
                    result.targets_ = targetsBuilder_.build();
                }
                result.bitField0_ = to_bitField0_;
                onBuilt();
                return result;
            }

            public Builder clone() {
                return (Builder) super.clone();
            }
            public Builder setField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    Object value) {
                return (Builder) super.setField(field, value);
            }
            public Builder clearField(
                    com.google.protobuf.Descriptors.FieldDescriptor field) {
                return (Builder) super.clearField(field);
            }
            public Builder clearOneof(
                    com.google.protobuf.Descriptors.OneofDescriptor oneof) {
                return (Builder) super.clearOneof(oneof);
            }
            public Builder setRepeatedField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    int index, Object value) {
                return (Builder) super.setRepeatedField(field, index, value);
            }
            public Builder addRepeatedField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    Object value) {
                return (Builder) super.addRepeatedField(field, value);
            }
            public Builder mergeFrom(com.google.protobuf.Message other) {
                if (other instanceof cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.HarddiskInfo) {
                    return mergeFrom((cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.HarddiskInfo)other);
                } else {
                    super.mergeFrom(other);
                    return this;
                }
            }

            public Builder mergeFrom(cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.HarddiskInfo other) {
                if (other == cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.HarddiskInfo.getDefaultInstance()) return this;
                if (!other.getDeviceUuidKey().isEmpty()) {
                    deviceUuidKey_ = other.deviceUuidKey_;
                    onChanged();
                }
                if (other.hasKey()) {
                    mergeKey(other.getKey());
                }
                if (other.getIsOnline() != false) {
                    setIsOnline(other.getIsOnline());
                }
                if (other.getIsBoot() != false) {
                    setIsBoot(other.getIsBoot());
                }
                if (other.getTotalSector() != 0L) {
                    setTotalSector(other.getTotalSector());
                }
                if (other.getSectorSize() != 0) {
                    setSectorSize(other.getSectorSize());
                }
                if (other.getSystemIndex() != 0) {
                    setSystemIndex(other.getSystemIndex());
                }
                if (other.partTableType_ != 0) {
                    setPartTableTypeValue(other.getPartTableTypeValue());
                }
                if (other.getHasPv() != false) {
                    setHasPv(other.getHasPv());
                }
                if (!other.getFilesystemType().isEmpty()) {
                    filesystemType_ = other.filesystemType_;
                    onChanged();
                }
                if (other.getIsVirtual() != false) {
                    setIsVirtual(other.getIsVirtual());
                }
                if (!other.getName().isEmpty()) {
                    name_ = other.name_;
                    onChanged();
                }
                if (!other.getSn().isEmpty()) {
                    sn_ = other.sn_;
                    onChanged();
                }
                if (!other.getVendor().isEmpty()) {
                    vendor_ = other.vendor_;
                    onChanged();
                }
                if (!other.getModel().isEmpty()) {
                    model_ = other.model_;
                    onChanged();
                }
                if (other.getIsVisible() != false) {
                    setIsVisible(other.getIsVisible());
                }
                if (!other.getMountPoint().isEmpty()) {
                    mountPoint_ = other.mountPoint_;
                    onChanged();
                }
                if (other.getPhysicalSectorSize() != 0) {
                    setPhysicalSectorSize(other.getPhysicalSectorSize());
                }
                if (other.getBackupableType() != 0) {
                    setBackupableType(other.getBackupableType());
                }
                if (other.getLogicalSectorSize() != 0) {
                    setLogicalSectorSize(other.getLogicalSectorSize());
                }
                if (partitionsBuilder_ == null) {
                    if (!other.partitions_.isEmpty()) {
                        if (partitions_.isEmpty()) {
                            partitions_ = other.partitions_;
                            bitField0_ = (bitField0_ & ~0x00100000);
                        } else {
                            ensurePartitionsIsMutable();
                            partitions_.addAll(other.partitions_);
                        }
                        onChanged();
                    }
                } else {
                    if (!other.partitions_.isEmpty()) {
                        if (partitionsBuilder_.isEmpty()) {
                            partitionsBuilder_.dispose();
                            partitionsBuilder_ = null;
                            partitions_ = other.partitions_;
                            bitField0_ = (bitField0_ & ~0x00100000);
                            partitionsBuilder_ =
                                    com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                                            getPartitionsFieldBuilder() : null;
                        } else {
                            partitionsBuilder_.addAllMessages(other.partitions_);
                        }
                    }
                }
                if (sourcesBuilder_ == null) {
                    if (!other.sources_.isEmpty()) {
                        if (sources_.isEmpty()) {
                            sources_ = other.sources_;
                            bitField0_ = (bitField0_ & ~0x00200000);
                        } else {
                            ensureSourcesIsMutable();
                            sources_.addAll(other.sources_);
                        }
                        onChanged();
                    }
                } else {
                    if (!other.sources_.isEmpty()) {
                        if (sourcesBuilder_.isEmpty()) {
                            sourcesBuilder_.dispose();
                            sourcesBuilder_ = null;
                            sources_ = other.sources_;
                            bitField0_ = (bitField0_ & ~0x00200000);
                            sourcesBuilder_ =
                                    com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                                            getSourcesFieldBuilder() : null;
                        } else {
                            sourcesBuilder_.addAllMessages(other.sources_);
                        }
                    }
                }
                if (targetsBuilder_ == null) {
                    if (!other.targets_.isEmpty()) {
                        if (targets_.isEmpty()) {
                            targets_ = other.targets_;
                            bitField0_ = (bitField0_ & ~0x00400000);
                        } else {
                            ensureTargetsIsMutable();
                            targets_.addAll(other.targets_);
                        }
                        onChanged();
                    }
                } else {
                    if (!other.targets_.isEmpty()) {
                        if (targetsBuilder_.isEmpty()) {
                            targetsBuilder_.dispose();
                            targetsBuilder_ = null;
                            targets_ = other.targets_;
                            bitField0_ = (bitField0_ & ~0x00400000);
                            targetsBuilder_ =
                                    com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                                            getTargetsFieldBuilder() : null;
                        } else {
                            targetsBuilder_.addAllMessages(other.targets_);
                        }
                    }
                }
                onChanged();
                return this;
            }

            public final boolean isInitialized() {
                return true;
            }

            public Builder mergeFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws java.io.IOException {
                cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.HarddiskInfo parsedMessage = null;
                try {
                    parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
                } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                    parsedMessage = (cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.HarddiskInfo) e.getUnfinishedMessage();
                    throw e.unwrapIOException();
                } finally {
                    if (parsedMessage != null) {
                        mergeFrom(parsedMessage);
                    }
                }
                return this;
            }
            private int bitField0_;

            private Object deviceUuidKey_ = "";
            /**
             * <pre>
             *设备内部唯一ID
             * </pre>
             *
             * <code>optional string device_uuid_key = 1;</code>
             */
            public String getDeviceUuidKey() {
                Object ref = deviceUuidKey_;
                if (!(ref instanceof String)) {
                    com.google.protobuf.ByteString bs =
                            (com.google.protobuf.ByteString) ref;
                    String s = bs.toStringUtf8();
                    deviceUuidKey_ = s;
                    return s;
                } else {
                    return (String) ref;
                }
            }
            /**
             * <pre>
             *设备内部唯一ID
             * </pre>
             *
             * <code>optional string device_uuid_key = 1;</code>
             */
            public com.google.protobuf.ByteString
            getDeviceUuidKeyBytes() {
                Object ref = deviceUuidKey_;
                if (ref instanceof String) {
                    com.google.protobuf.ByteString b =
                            com.google.protobuf.ByteString.copyFromUtf8(
                                    (String) ref);
                    deviceUuidKey_ = b;
                    return b;
                } else {
                    return (com.google.protobuf.ByteString) ref;
                }
            }
            /**
             * <pre>
             *设备内部唯一ID
             * </pre>
             *
             * <code>optional string device_uuid_key = 1;</code>
             */
            public Builder setDeviceUuidKey(
                    String value) {
                if (value == null) {
                    throw new NullPointerException();
                }

                deviceUuidKey_ = value;
                onChanged();
                return this;
            }
            /**
             * <pre>
             *设备内部唯一ID
             * </pre>
             *
             * <code>optional string device_uuid_key = 1;</code>
             */
            public Builder clearDeviceUuidKey() {

                deviceUuidKey_ = getDefaultInstance().getDeviceUuidKey();
                onChanged();
                return this;
            }
            /**
             * <pre>
             *设备内部唯一ID
             * </pre>
             *
             * <code>optional string device_uuid_key = 1;</code>
             */
            public Builder setDeviceUuidKeyBytes(
                    com.google.protobuf.ByteString value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                checkByteStringIsUtf8(value);

                deviceUuidKey_ = value;
                onChanged();
                return this;
            }

            private cn.keptdata.one2data.header.message.protobuf.common.Node.BlockDeviceKey key_ = null;
            private com.google.protobuf.SingleFieldBuilderV3<
                    cn.keptdata.one2data.header.message.protobuf.common.Node.BlockDeviceKey, cn.keptdata.one2data.header.message.protobuf.common.Node.BlockDeviceKey.Builder, cn.keptdata.one2data.header.message.protobuf.common.Node.BlockDeviceKeyOrBuilder> keyBuilder_;
            /**
             * <pre>
             *磁盘内部唯一标识
             * </pre>
             *
             * <code>optional .one2data.rbtmqmsgcli.common.BlockDeviceKey key = 2;</code>
             */
            public boolean hasKey() {
                return keyBuilder_ != null || key_ != null;
            }
            /**
             * <pre>
             *磁盘内部唯一标识
             * </pre>
             *
             * <code>optional .one2data.rbtmqmsgcli.common.BlockDeviceKey key = 2;</code>
             */
            public cn.keptdata.one2data.header.message.protobuf.common.Node.BlockDeviceKey getKey() {
                if (keyBuilder_ == null) {
                    return key_ == null ? cn.keptdata.one2data.header.message.protobuf.common.Node.BlockDeviceKey.getDefaultInstance() : key_;
                } else {
                    return keyBuilder_.getMessage();
                }
            }
            /**
             * <pre>
             *磁盘内部唯一标识
             * </pre>
             *
             * <code>optional .one2data.rbtmqmsgcli.common.BlockDeviceKey key = 2;</code>
             */
            public Builder setKey(cn.keptdata.one2data.header.message.protobuf.common.Node.BlockDeviceKey value) {
                if (keyBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    key_ = value;
                    onChanged();
                } else {
                    keyBuilder_.setMessage(value);
                }

                return this;
            }
            /**
             * <pre>
             *磁盘内部唯一标识
             * </pre>
             *
             * <code>optional .one2data.rbtmqmsgcli.common.BlockDeviceKey key = 2;</code>
             */
            public Builder setKey(
                    cn.keptdata.one2data.header.message.protobuf.common.Node.BlockDeviceKey.Builder builderForValue) {
                if (keyBuilder_ == null) {
                    key_ = builderForValue.build();
                    onChanged();
                } else {
                    keyBuilder_.setMessage(builderForValue.build());
                }

                return this;
            }
            /**
             * <pre>
             *磁盘内部唯一标识
             * </pre>
             *
             * <code>optional .one2data.rbtmqmsgcli.common.BlockDeviceKey key = 2;</code>
             */
            public Builder mergeKey(cn.keptdata.one2data.header.message.protobuf.common.Node.BlockDeviceKey value) {
                if (keyBuilder_ == null) {
                    if (key_ != null) {
                        key_ =
                                cn.keptdata.one2data.header.message.protobuf.common.Node.BlockDeviceKey.newBuilder(key_).mergeFrom(value).buildPartial();
                    } else {
                        key_ = value;
                    }
                    onChanged();
                } else {
                    keyBuilder_.mergeFrom(value);
                }

                return this;
            }
            /**
             * <pre>
             *磁盘内部唯一标识
             * </pre>
             *
             * <code>optional .one2data.rbtmqmsgcli.common.BlockDeviceKey key = 2;</code>
             */
            public Builder clearKey() {
                if (keyBuilder_ == null) {
                    key_ = null;
                    onChanged();
                } else {
                    key_ = null;
                    keyBuilder_ = null;
                }

                return this;
            }
            /**
             * <pre>
             *磁盘内部唯一标识
             * </pre>
             *
             * <code>optional .one2data.rbtmqmsgcli.common.BlockDeviceKey key = 2;</code>
             */
            public cn.keptdata.one2data.header.message.protobuf.common.Node.BlockDeviceKey.Builder getKeyBuilder() {

                onChanged();
                return getKeyFieldBuilder().getBuilder();
            }
            /**
             * <pre>
             *磁盘内部唯一标识
             * </pre>
             *
             * <code>optional .one2data.rbtmqmsgcli.common.BlockDeviceKey key = 2;</code>
             */
            public cn.keptdata.one2data.header.message.protobuf.common.Node.BlockDeviceKeyOrBuilder getKeyOrBuilder() {
                if (keyBuilder_ != null) {
                    return keyBuilder_.getMessageOrBuilder();
                } else {
                    return key_ == null ?
                            cn.keptdata.one2data.header.message.protobuf.common.Node.BlockDeviceKey.getDefaultInstance() : key_;
                }
            }
            /**
             * <pre>
             *磁盘内部唯一标识
             * </pre>
             *
             * <code>optional .one2data.rbtmqmsgcli.common.BlockDeviceKey key = 2;</code>
             */
            private com.google.protobuf.SingleFieldBuilderV3<
                    cn.keptdata.one2data.header.message.protobuf.common.Node.BlockDeviceKey, cn.keptdata.one2data.header.message.protobuf.common.Node.BlockDeviceKey.Builder, cn.keptdata.one2data.header.message.protobuf.common.Node.BlockDeviceKeyOrBuilder>
            getKeyFieldBuilder() {
                if (keyBuilder_ == null) {
                    keyBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                            cn.keptdata.one2data.header.message.protobuf.common.Node.BlockDeviceKey, cn.keptdata.one2data.header.message.protobuf.common.Node.BlockDeviceKey.Builder, cn.keptdata.one2data.header.message.protobuf.common.Node.BlockDeviceKeyOrBuilder>(
                            getKey(),
                            getParentForChildren(),
                            isClean());
                    key_ = null;
                }
                return keyBuilder_;
            }

            private boolean isOnline_ ;
            /**
             * <pre>
             *磁盘是否在线
             * </pre>
             *
             * <code>optional bool is_online = 3;</code>
             */
            public boolean getIsOnline() {
                return isOnline_;
            }
            /**
             * <pre>
             *磁盘是否在线
             * </pre>
             *
             * <code>optional bool is_online = 3;</code>
             */
            public Builder setIsOnline(boolean value) {

                isOnline_ = value;
                onChanged();
                return this;
            }
            /**
             * <pre>
             *磁盘是否在线
             * </pre>
             *
             * <code>optional bool is_online = 3;</code>
             */
            public Builder clearIsOnline() {

                isOnline_ = false;
                onChanged();
                return this;
            }

            private boolean isBoot_ ;
            /**
             * <pre>
             *是否启动盘
             * </pre>
             *
             * <code>optional bool is_boot = 4;</code>
             */
            public boolean getIsBoot() {
                return isBoot_;
            }
            /**
             * <pre>
             *是否启动盘
             * </pre>
             *
             * <code>optional bool is_boot = 4;</code>
             */
            public Builder setIsBoot(boolean value) {

                isBoot_ = value;
                onChanged();
                return this;
            }
            /**
             * <pre>
             *是否启动盘
             * </pre>
             *
             * <code>optional bool is_boot = 4;</code>
             */
            public Builder clearIsBoot() {

                isBoot_ = false;
                onChanged();
                return this;
            }

            private long totalSector_ ;
            /**
             * <pre>
             *磁盘总扇区个数
             * </pre>
             *
             * <code>optional uint64 total_sector = 5;</code>
             */
            public long getTotalSector() {
                return totalSector_;
            }
            /**
             * <pre>
             *磁盘总扇区个数
             * </pre>
             *
             * <code>optional uint64 total_sector = 5;</code>
             */
            public Builder setTotalSector(long value) {

                totalSector_ = value;
                onChanged();
                return this;
            }
            /**
             * <pre>
             *磁盘总扇区个数
             * </pre>
             *
             * <code>optional uint64 total_sector = 5;</code>
             */
            public Builder clearTotalSector() {

                totalSector_ = 0L;
                onChanged();
                return this;
            }

            private int sectorSize_ ;
            /**
             * <pre>
             *磁盘扇区大小，用于计算磁盘大小
             * </pre>
             *
             * <code>optional uint32 sector_size = 6;</code>
             */
            public int getSectorSize() {
                return sectorSize_;
            }
            /**
             * <pre>
             *磁盘扇区大小，用于计算磁盘大小
             * </pre>
             *
             * <code>optional uint32 sector_size = 6;</code>
             */
            public Builder setSectorSize(int value) {

                sectorSize_ = value;
                onChanged();
                return this;
            }
            /**
             * <pre>
             *磁盘扇区大小，用于计算磁盘大小
             * </pre>
             *
             * <code>optional uint32 sector_size = 6;</code>
             */
            public Builder clearSectorSize() {

                sectorSize_ = 0;
                onChanged();
                return this;
            }

            private int systemIndex_ ;
            /**
             * <pre>
             *磁盘内部索引，只针对在线磁盘，如windows下的磁盘0，其中0即为该索引
             * </pre>
             *
             * <code>optional uint32 system_index = 7;</code>
             */
            public int getSystemIndex() {
                return systemIndex_;
            }
            /**
             * <pre>
             *磁盘内部索引，只针对在线磁盘，如windows下的磁盘0，其中0即为该索引
             * </pre>
             *
             * <code>optional uint32 system_index = 7;</code>
             */
            public Builder setSystemIndex(int value) {

                systemIndex_ = value;
                onChanged();
                return this;
            }
            /**
             * <pre>
             *磁盘内部索引，只针对在线磁盘，如windows下的磁盘0，其中0即为该索引
             * </pre>
             *
             * <code>optional uint32 system_index = 7;</code>
             */
            public Builder clearSystemIndex() {

                systemIndex_ = 0;
                onChanged();
                return this;
            }

            private int partTableType_ = 0;
            /**
             * <pre>
             *分区表类型
             * </pre>
             *
             * <code>optional .one2data.rbtmqmsgcli.client.PartTableType part_table_type = 8;</code>
             */
            public int getPartTableTypeValue() {
                return partTableType_;
            }
            /**
             * <pre>
             *分区表类型
             * </pre>
             *
             * <code>optional .one2data.rbtmqmsgcli.client.PartTableType part_table_type = 8;</code>
             */
            public Builder setPartTableTypeValue(int value) {
                partTableType_ = value;
                onChanged();
                return this;
            }
            /**
             * <pre>
             *分区表类型
             * </pre>
             *
             * <code>optional .one2data.rbtmqmsgcli.client.PartTableType part_table_type = 8;</code>
             */
            public cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.PartTableType getPartTableType() {
                cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.PartTableType result = cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.PartTableType.valueOf(partTableType_);
                return result == null ? cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.PartTableType.UNRECOGNIZED : result;
            }
            /**
             * <pre>
             *分区表类型
             * </pre>
             *
             * <code>optional .one2data.rbtmqmsgcli.client.PartTableType part_table_type = 8;</code>
             */
            public Builder setPartTableType(cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.PartTableType value) {
                if (value == null) {
                    throw new NullPointerException();
                }

                partTableType_ = value.getNumber();
                onChanged();
                return this;
            }
            /**
             * <pre>
             *分区表类型
             * </pre>
             *
             * <code>optional .one2data.rbtmqmsgcli.client.PartTableType part_table_type = 8;</code>
             */
            public Builder clearPartTableType() {

                partTableType_ = 0;
                onChanged();
                return this;
            }

            private boolean hasPv_ ;
            /**
             * <pre>
             *是否包含物理卷
             * </pre>
             *
             * <code>optional bool has_pv = 9;</code>
             */
            public boolean getHasPv() {
                return hasPv_;
            }
            /**
             * <pre>
             *是否包含物理卷
             * </pre>
             *
             * <code>optional bool has_pv = 9;</code>
             */
            public Builder setHasPv(boolean value) {

                hasPv_ = value;
                onChanged();
                return this;
            }
            /**
             * <pre>
             *是否包含物理卷
             * </pre>
             *
             * <code>optional bool has_pv = 9;</code>
             */
            public Builder clearHasPv() {

                hasPv_ = false;
                onChanged();
                return this;
            }

            private Object filesystemType_ = "";
            /**
             * <pre>
             *文件系统类型
             * </pre>
             *
             * <code>optional string filesystem_type = 10;</code>
             */
            public String getFilesystemType() {
                Object ref = filesystemType_;
                if (!(ref instanceof String)) {
                    com.google.protobuf.ByteString bs =
                            (com.google.protobuf.ByteString) ref;
                    String s = bs.toStringUtf8();
                    filesystemType_ = s;
                    return s;
                } else {
                    return (String) ref;
                }
            }
            /**
             * <pre>
             *文件系统类型
             * </pre>
             *
             * <code>optional string filesystem_type = 10;</code>
             */
            public com.google.protobuf.ByteString
            getFilesystemTypeBytes() {
                Object ref = filesystemType_;
                if (ref instanceof String) {
                    com.google.protobuf.ByteString b =
                            com.google.protobuf.ByteString.copyFromUtf8(
                                    (String) ref);
                    filesystemType_ = b;
                    return b;
                } else {
                    return (com.google.protobuf.ByteString) ref;
                }
            }
            /**
             * <pre>
             *文件系统类型
             * </pre>
             *
             * <code>optional string filesystem_type = 10;</code>
             */
            public Builder setFilesystemType(
                    String value) {
                if (value == null) {
                    throw new NullPointerException();
                }

                filesystemType_ = value;
                onChanged();
                return this;
            }
            /**
             * <pre>
             *文件系统类型
             * </pre>
             *
             * <code>optional string filesystem_type = 10;</code>
             */
            public Builder clearFilesystemType() {

                filesystemType_ = getDefaultInstance().getFilesystemType();
                onChanged();
                return this;
            }
            /**
             * <pre>
             *文件系统类型
             * </pre>
             *
             * <code>optional string filesystem_type = 10;</code>
             */
            public Builder setFilesystemTypeBytes(
                    com.google.protobuf.ByteString value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                checkByteStringIsUtf8(value);

                filesystemType_ = value;
                onChanged();
                return this;
            }

            private boolean isVirtual_ ;
            /**
             * <pre>
             *是否是虚拟盘
             * </pre>
             *
             * <code>optional bool is_virtual = 11;</code>
             */
            public boolean getIsVirtual() {
                return isVirtual_;
            }
            /**
             * <pre>
             *是否是虚拟盘
             * </pre>
             *
             * <code>optional bool is_virtual = 11;</code>
             */
            public Builder setIsVirtual(boolean value) {

                isVirtual_ = value;
                onChanged();
                return this;
            }
            /**
             * <pre>
             *是否是虚拟盘
             * </pre>
             *
             * <code>optional bool is_virtual = 11;</code>
             */
            public Builder clearIsVirtual() {

                isVirtual_ = false;
                onChanged();
                return this;
            }

            private Object name_ = "";
            /**
             * <pre>
             *磁盘名称，用于显示
             * </pre>
             *
             * <code>optional string name = 12;</code>
             */
            public String getName() {
                Object ref = name_;
                if (!(ref instanceof String)) {
                    com.google.protobuf.ByteString bs =
                            (com.google.protobuf.ByteString) ref;
                    String s = bs.toStringUtf8();
                    name_ = s;
                    return s;
                } else {
                    return (String) ref;
                }
            }
            /**
             * <pre>
             *磁盘名称，用于显示
             * </pre>
             *
             * <code>optional string name = 12;</code>
             */
            public com.google.protobuf.ByteString
            getNameBytes() {
                Object ref = name_;
                if (ref instanceof String) {
                    com.google.protobuf.ByteString b =
                            com.google.protobuf.ByteString.copyFromUtf8(
                                    (String) ref);
                    name_ = b;
                    return b;
                } else {
                    return (com.google.protobuf.ByteString) ref;
                }
            }
            /**
             * <pre>
             *磁盘名称，用于显示
             * </pre>
             *
             * <code>optional string name = 12;</code>
             */
            public Builder setName(
                    String value) {
                if (value == null) {
                    throw new NullPointerException();
                }

                name_ = value;
                onChanged();
                return this;
            }
            /**
             * <pre>
             *磁盘名称，用于显示
             * </pre>
             *
             * <code>optional string name = 12;</code>
             */
            public Builder clearName() {

                name_ = getDefaultInstance().getName();
                onChanged();
                return this;
            }
            /**
             * <pre>
             *磁盘名称，用于显示
             * </pre>
             *
             * <code>optional string name = 12;</code>
             */
            public Builder setNameBytes(
                    com.google.protobuf.ByteString value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                checkByteStringIsUtf8(value);

                name_ = value;
                onChanged();
                return this;
            }

            private Object sn_ = "";
            /**
             * <pre>
             *磁盘序列号
             * </pre>
             *
             * <code>optional string sn = 13;</code>
             */
            public String getSn() {
                Object ref = sn_;
                if (!(ref instanceof String)) {
                    com.google.protobuf.ByteString bs =
                            (com.google.protobuf.ByteString) ref;
                    String s = bs.toStringUtf8();
                    sn_ = s;
                    return s;
                } else {
                    return (String) ref;
                }
            }
            /**
             * <pre>
             *磁盘序列号
             * </pre>
             *
             * <code>optional string sn = 13;</code>
             */
            public com.google.protobuf.ByteString
            getSnBytes() {
                Object ref = sn_;
                if (ref instanceof String) {
                    com.google.protobuf.ByteString b =
                            com.google.protobuf.ByteString.copyFromUtf8(
                                    (String) ref);
                    sn_ = b;
                    return b;
                } else {
                    return (com.google.protobuf.ByteString) ref;
                }
            }
            /**
             * <pre>
             *磁盘序列号
             * </pre>
             *
             * <code>optional string sn = 13;</code>
             */
            public Builder setSn(
                    String value) {
                if (value == null) {
                    throw new NullPointerException();
                }

                sn_ = value;
                onChanged();
                return this;
            }
            /**
             * <pre>
             *磁盘序列号
             * </pre>
             *
             * <code>optional string sn = 13;</code>
             */
            public Builder clearSn() {

                sn_ = getDefaultInstance().getSn();
                onChanged();
                return this;
            }
            /**
             * <pre>
             *磁盘序列号
             * </pre>
             *
             * <code>optional string sn = 13;</code>
             */
            public Builder setSnBytes(
                    com.google.protobuf.ByteString value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                checkByteStringIsUtf8(value);

                sn_ = value;
                onChanged();
                return this;
            }

            private Object vendor_ = "";
            /**
             * <pre>
             *磁盘制造商
             * </pre>
             *
             * <code>optional string vendor = 14;</code>
             */
            public String getVendor() {
                Object ref = vendor_;
                if (!(ref instanceof String)) {
                    com.google.protobuf.ByteString bs =
                            (com.google.protobuf.ByteString) ref;
                    String s = bs.toStringUtf8();
                    vendor_ = s;
                    return s;
                } else {
                    return (String) ref;
                }
            }
            /**
             * <pre>
             *磁盘制造商
             * </pre>
             *
             * <code>optional string vendor = 14;</code>
             */
            public com.google.protobuf.ByteString
            getVendorBytes() {
                Object ref = vendor_;
                if (ref instanceof String) {
                    com.google.protobuf.ByteString b =
                            com.google.protobuf.ByteString.copyFromUtf8(
                                    (String) ref);
                    vendor_ = b;
                    return b;
                } else {
                    return (com.google.protobuf.ByteString) ref;
                }
            }
            /**
             * <pre>
             *磁盘制造商
             * </pre>
             *
             * <code>optional string vendor = 14;</code>
             */
            public Builder setVendor(
                    String value) {
                if (value == null) {
                    throw new NullPointerException();
                }

                vendor_ = value;
                onChanged();
                return this;
            }
            /**
             * <pre>
             *磁盘制造商
             * </pre>
             *
             * <code>optional string vendor = 14;</code>
             */
            public Builder clearVendor() {

                vendor_ = getDefaultInstance().getVendor();
                onChanged();
                return this;
            }
            /**
             * <pre>
             *磁盘制造商
             * </pre>
             *
             * <code>optional string vendor = 14;</code>
             */
            public Builder setVendorBytes(
                    com.google.protobuf.ByteString value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                checkByteStringIsUtf8(value);

                vendor_ = value;
                onChanged();
                return this;
            }

            private Object model_ = "";
            /**
             * <pre>
             *磁盘型号
             * </pre>
             *
             * <code>optional string model = 15;</code>
             */
            public String getModel() {
                Object ref = model_;
                if (!(ref instanceof String)) {
                    com.google.protobuf.ByteString bs =
                            (com.google.protobuf.ByteString) ref;
                    String s = bs.toStringUtf8();
                    model_ = s;
                    return s;
                } else {
                    return (String) ref;
                }
            }
            /**
             * <pre>
             *磁盘型号
             * </pre>
             *
             * <code>optional string model = 15;</code>
             */
            public com.google.protobuf.ByteString
            getModelBytes() {
                Object ref = model_;
                if (ref instanceof String) {
                    com.google.protobuf.ByteString b =
                            com.google.protobuf.ByteString.copyFromUtf8(
                                    (String) ref);
                    model_ = b;
                    return b;
                } else {
                    return (com.google.protobuf.ByteString) ref;
                }
            }
            /**
             * <pre>
             *磁盘型号
             * </pre>
             *
             * <code>optional string model = 15;</code>
             */
            public Builder setModel(
                    String value) {
                if (value == null) {
                    throw new NullPointerException();
                }

                model_ = value;
                onChanged();
                return this;
            }
            /**
             * <pre>
             *磁盘型号
             * </pre>
             *
             * <code>optional string model = 15;</code>
             */
            public Builder clearModel() {

                model_ = getDefaultInstance().getModel();
                onChanged();
                return this;
            }
            /**
             * <pre>
             *磁盘型号
             * </pre>
             *
             * <code>optional string model = 15;</code>
             */
            public Builder setModelBytes(
                    com.google.protobuf.ByteString value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                checkByteStringIsUtf8(value);

                model_ = value;
                onChanged();
                return this;
            }

            private boolean isVisible_ ;
            /**
             * <pre>
             *磁盘是否可见，对于不可见磁盘web进行过滤
             * </pre>
             *
             * <code>optional bool is_visible = 16;</code>
             */
            public boolean getIsVisible() {
                return isVisible_;
            }
            /**
             * <pre>
             *磁盘是否可见，对于不可见磁盘web进行过滤
             * </pre>
             *
             * <code>optional bool is_visible = 16;</code>
             */
            public Builder setIsVisible(boolean value) {

                isVisible_ = value;
                onChanged();
                return this;
            }
            /**
             * <pre>
             *磁盘是否可见，对于不可见磁盘web进行过滤
             * </pre>
             *
             * <code>optional bool is_visible = 16;</code>
             */
            public Builder clearIsVisible() {

                isVisible_ = false;
                onChanged();
                return this;
            }

            private Object mountPoint_ = "";
            /**
             * <pre>
             *挂载点
             * </pre>
             *
             * <code>optional string mount_point = 17;</code>
             */
            public String getMountPoint() {
                Object ref = mountPoint_;
                if (!(ref instanceof String)) {
                    com.google.protobuf.ByteString bs =
                            (com.google.protobuf.ByteString) ref;
                    String s = bs.toStringUtf8();
                    mountPoint_ = s;
                    return s;
                } else {
                    return (String) ref;
                }
            }
            /**
             * <pre>
             *挂载点
             * </pre>
             *
             * <code>optional string mount_point = 17;</code>
             */
            public com.google.protobuf.ByteString
            getMountPointBytes() {
                Object ref = mountPoint_;
                if (ref instanceof String) {
                    com.google.protobuf.ByteString b =
                            com.google.protobuf.ByteString.copyFromUtf8(
                                    (String) ref);
                    mountPoint_ = b;
                    return b;
                } else {
                    return (com.google.protobuf.ByteString) ref;
                }
            }
            /**
             * <pre>
             *挂载点
             * </pre>
             *
             * <code>optional string mount_point = 17;</code>
             */
            public Builder setMountPoint(
                    String value) {
                if (value == null) {
                    throw new NullPointerException();
                }

                mountPoint_ = value;
                onChanged();
                return this;
            }
            /**
             * <pre>
             *挂载点
             * </pre>
             *
             * <code>optional string mount_point = 17;</code>
             */
            public Builder clearMountPoint() {

                mountPoint_ = getDefaultInstance().getMountPoint();
                onChanged();
                return this;
            }
            /**
             * <pre>
             *挂载点
             * </pre>
             *
             * <code>optional string mount_point = 17;</code>
             */
            public Builder setMountPointBytes(
                    com.google.protobuf.ByteString value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                checkByteStringIsUtf8(value);

                mountPoint_ = value;
                onChanged();
                return this;
            }

            private int physicalSectorSize_ ;
            /**
             * <pre>
             *磁盘物理扇区大小
             * </pre>
             *
             * <code>optional uint32 physical_sector_size = 18;</code>
             */
            public int getPhysicalSectorSize() {
                return physicalSectorSize_;
            }
            /**
             * <pre>
             *磁盘物理扇区大小
             * </pre>
             *
             * <code>optional uint32 physical_sector_size = 18;</code>
             */
            public Builder setPhysicalSectorSize(int value) {

                physicalSectorSize_ = value;
                onChanged();
                return this;
            }
            /**
             * <pre>
             *磁盘物理扇区大小
             * </pre>
             *
             * <code>optional uint32 physical_sector_size = 18;</code>
             */
            public Builder clearPhysicalSectorSize() {

                physicalSectorSize_ = 0;
                onChanged();
                return this;
            }

            private int backupableType_ ;
            /**
             * <pre>
             *可备份的类型，&gt;=0 表示可备份，&lt;0 表示不可备份
             * </pre>
             *
             * <code>optional int32 backupable_type = 19;</code>
             */
            public int getBackupableType() {
                return backupableType_;
            }
            /**
             * <pre>
             *可备份的类型，&gt;=0 表示可备份，&lt;0 表示不可备份
             * </pre>
             *
             * <code>optional int32 backupable_type = 19;</code>
             */
            public Builder setBackupableType(int value) {

                backupableType_ = value;
                onChanged();
                return this;
            }
            /**
             * <pre>
             *可备份的类型，&gt;=0 表示可备份，&lt;0 表示不可备份
             * </pre>
             *
             * <code>optional int32 backupable_type = 19;</code>
             */
            public Builder clearBackupableType() {

                backupableType_ = 0;
                onChanged();
                return this;
            }

            private int logicalSectorSize_ ;
            /**
             * <pre>
             *磁盘逻辑扇区大小
             * </pre>
             *
             * <code>optional uint32 logical_sector_size = 20;</code>
             */
            public int getLogicalSectorSize() {
                return logicalSectorSize_;
            }
            /**
             * <pre>
             *磁盘逻辑扇区大小
             * </pre>
             *
             * <code>optional uint32 logical_sector_size = 20;</code>
             */
            public Builder setLogicalSectorSize(int value) {

                logicalSectorSize_ = value;
                onChanged();
                return this;
            }
            /**
             * <pre>
             *磁盘逻辑扇区大小
             * </pre>
             *
             * <code>optional uint32 logical_sector_size = 20;</code>
             */
            public Builder clearLogicalSectorSize() {

                logicalSectorSize_ = 0;
                onChanged();
                return this;
            }

            private java.util.List<cn.keptdata.one2data.header.message.protobuf.common.Node.BlockDeviceKey> partitions_ =
                    java.util.Collections.emptyList();
            private void ensurePartitionsIsMutable() {
                if (!((bitField0_ & 0x00100000) == 0x00100000)) {
                    partitions_ = new java.util.ArrayList<cn.keptdata.one2data.header.message.protobuf.common.Node.BlockDeviceKey>(partitions_);
                    bitField0_ |= 0x00100000;
                }
            }

            private com.google.protobuf.RepeatedFieldBuilderV3<
                    cn.keptdata.one2data.header.message.protobuf.common.Node.BlockDeviceKey, cn.keptdata.one2data.header.message.protobuf.common.Node.BlockDeviceKey.Builder, cn.keptdata.one2data.header.message.protobuf.common.Node.BlockDeviceKeyOrBuilder> partitionsBuilder_;

            /**
             * <pre>
             *磁盘的分区
             * </pre>
             *
             * <code>repeated .one2data.rbtmqmsgcli.common.BlockDeviceKey partitions = 30;</code>
             */
            public java.util.List<cn.keptdata.one2data.header.message.protobuf.common.Node.BlockDeviceKey> getPartitionsList() {
                if (partitionsBuilder_ == null) {
                    return java.util.Collections.unmodifiableList(partitions_);
                } else {
                    return partitionsBuilder_.getMessageList();
                }
            }
            /**
             * <pre>
             *磁盘的分区
             * </pre>
             *
             * <code>repeated .one2data.rbtmqmsgcli.common.BlockDeviceKey partitions = 30;</code>
             */
            public int getPartitionsCount() {
                if (partitionsBuilder_ == null) {
                    return partitions_.size();
                } else {
                    return partitionsBuilder_.getCount();
                }
            }
            /**
             * <pre>
             *磁盘的分区
             * </pre>
             *
             * <code>repeated .one2data.rbtmqmsgcli.common.BlockDeviceKey partitions = 30;</code>
             */
            public cn.keptdata.one2data.header.message.protobuf.common.Node.BlockDeviceKey getPartitions(int index) {
                if (partitionsBuilder_ == null) {
                    return partitions_.get(index);
                } else {
                    return partitionsBuilder_.getMessage(index);
                }
            }
            /**
             * <pre>
             *磁盘的分区
             * </pre>
             *
             * <code>repeated .one2data.rbtmqmsgcli.common.BlockDeviceKey partitions = 30;</code>
             */
            public Builder setPartitions(
                    int index, cn.keptdata.one2data.header.message.protobuf.common.Node.BlockDeviceKey value) {
                if (partitionsBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    ensurePartitionsIsMutable();
                    partitions_.set(index, value);
                    onChanged();
                } else {
                    partitionsBuilder_.setMessage(index, value);
                }
                return this;
            }
            /**
             * <pre>
             *磁盘的分区
             * </pre>
             *
             * <code>repeated .one2data.rbtmqmsgcli.common.BlockDeviceKey partitions = 30;</code>
             */
            public Builder setPartitions(
                    int index, cn.keptdata.one2data.header.message.protobuf.common.Node.BlockDeviceKey.Builder builderForValue) {
                if (partitionsBuilder_ == null) {
                    ensurePartitionsIsMutable();
                    partitions_.set(index, builderForValue.build());
                    onChanged();
                } else {
                    partitionsBuilder_.setMessage(index, builderForValue.build());
                }
                return this;
            }
            /**
             * <pre>
             *磁盘的分区
             * </pre>
             *
             * <code>repeated .one2data.rbtmqmsgcli.common.BlockDeviceKey partitions = 30;</code>
             */
            public Builder addPartitions(cn.keptdata.one2data.header.message.protobuf.common.Node.BlockDeviceKey value) {
                if (partitionsBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    ensurePartitionsIsMutable();
                    partitions_.add(value);
                    onChanged();
                } else {
                    partitionsBuilder_.addMessage(value);
                }
                return this;
            }
            /**
             * <pre>
             *磁盘的分区
             * </pre>
             *
             * <code>repeated .one2data.rbtmqmsgcli.common.BlockDeviceKey partitions = 30;</code>
             */
            public Builder addPartitions(
                    int index, cn.keptdata.one2data.header.message.protobuf.common.Node.BlockDeviceKey value) {
                if (partitionsBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    ensurePartitionsIsMutable();
                    partitions_.add(index, value);
                    onChanged();
                } else {
                    partitionsBuilder_.addMessage(index, value);
                }
                return this;
            }
            /**
             * <pre>
             *磁盘的分区
             * </pre>
             *
             * <code>repeated .one2data.rbtmqmsgcli.common.BlockDeviceKey partitions = 30;</code>
             */
            public Builder addPartitions(
                    cn.keptdata.one2data.header.message.protobuf.common.Node.BlockDeviceKey.Builder builderForValue) {
                if (partitionsBuilder_ == null) {
                    ensurePartitionsIsMutable();
                    partitions_.add(builderForValue.build());
                    onChanged();
                } else {
                    partitionsBuilder_.addMessage(builderForValue.build());
                }
                return this;
            }
            /**
             * <pre>
             *磁盘的分区
             * </pre>
             *
             * <code>repeated .one2data.rbtmqmsgcli.common.BlockDeviceKey partitions = 30;</code>
             */
            public Builder addPartitions(
                    int index, cn.keptdata.one2data.header.message.protobuf.common.Node.BlockDeviceKey.Builder builderForValue) {
                if (partitionsBuilder_ == null) {
                    ensurePartitionsIsMutable();
                    partitions_.add(index, builderForValue.build());
                    onChanged();
                } else {
                    partitionsBuilder_.addMessage(index, builderForValue.build());
                }
                return this;
            }
            /**
             * <pre>
             *磁盘的分区
             * </pre>
             *
             * <code>repeated .one2data.rbtmqmsgcli.common.BlockDeviceKey partitions = 30;</code>
             */
            public Builder addAllPartitions(
                    Iterable<? extends cn.keptdata.one2data.header.message.protobuf.common.Node.BlockDeviceKey> values) {
                if (partitionsBuilder_ == null) {
                    ensurePartitionsIsMutable();
                    com.google.protobuf.AbstractMessageLite.Builder.addAll(
                            values, partitions_);
                    onChanged();
                } else {
                    partitionsBuilder_.addAllMessages(values);
                }
                return this;
            }
            /**
             * <pre>
             *磁盘的分区
             * </pre>
             *
             * <code>repeated .one2data.rbtmqmsgcli.common.BlockDeviceKey partitions = 30;</code>
             */
            public Builder clearPartitions() {
                if (partitionsBuilder_ == null) {
                    partitions_ = java.util.Collections.emptyList();
                    bitField0_ = (bitField0_ & ~0x00100000);
                    onChanged();
                } else {
                    partitionsBuilder_.clear();
                }
                return this;
            }
            /**
             * <pre>
             *磁盘的分区
             * </pre>
             *
             * <code>repeated .one2data.rbtmqmsgcli.common.BlockDeviceKey partitions = 30;</code>
             */
            public Builder removePartitions(int index) {
                if (partitionsBuilder_ == null) {
                    ensurePartitionsIsMutable();
                    partitions_.remove(index);
                    onChanged();
                } else {
                    partitionsBuilder_.remove(index);
                }
                return this;
            }
            /**
             * <pre>
             *磁盘的分区
             * </pre>
             *
             * <code>repeated .one2data.rbtmqmsgcli.common.BlockDeviceKey partitions = 30;</code>
             */
            public cn.keptdata.one2data.header.message.protobuf.common.Node.BlockDeviceKey.Builder getPartitionsBuilder(
                    int index) {
                return getPartitionsFieldBuilder().getBuilder(index);
            }
            /**
             * <pre>
             *磁盘的分区
             * </pre>
             *
             * <code>repeated .one2data.rbtmqmsgcli.common.BlockDeviceKey partitions = 30;</code>
             */
            public cn.keptdata.one2data.header.message.protobuf.common.Node.BlockDeviceKeyOrBuilder getPartitionsOrBuilder(
                    int index) {
                if (partitionsBuilder_ == null) {
                    return partitions_.get(index);  } else {
                    return partitionsBuilder_.getMessageOrBuilder(index);
                }
            }
            /**
             * <pre>
             *磁盘的分区
             * </pre>
             *
             * <code>repeated .one2data.rbtmqmsgcli.common.BlockDeviceKey partitions = 30;</code>
             */
            public java.util.List<? extends cn.keptdata.one2data.header.message.protobuf.common.Node.BlockDeviceKeyOrBuilder>
            getPartitionsOrBuilderList() {
                if (partitionsBuilder_ != null) {
                    return partitionsBuilder_.getMessageOrBuilderList();
                } else {
                    return java.util.Collections.unmodifiableList(partitions_);
                }
            }
            /**
             * <pre>
             *磁盘的分区
             * </pre>
             *
             * <code>repeated .one2data.rbtmqmsgcli.common.BlockDeviceKey partitions = 30;</code>
             */
            public cn.keptdata.one2data.header.message.protobuf.common.Node.BlockDeviceKey.Builder addPartitionsBuilder() {
                return getPartitionsFieldBuilder().addBuilder(
                        cn.keptdata.one2data.header.message.protobuf.common.Node.BlockDeviceKey.getDefaultInstance());
            }
            /**
             * <pre>
             *磁盘的分区
             * </pre>
             *
             * <code>repeated .one2data.rbtmqmsgcli.common.BlockDeviceKey partitions = 30;</code>
             */
            public cn.keptdata.one2data.header.message.protobuf.common.Node.BlockDeviceKey.Builder addPartitionsBuilder(
                    int index) {
                return getPartitionsFieldBuilder().addBuilder(
                        index, cn.keptdata.one2data.header.message.protobuf.common.Node.BlockDeviceKey.getDefaultInstance());
            }
            /**
             * <pre>
             *磁盘的分区
             * </pre>
             *
             * <code>repeated .one2data.rbtmqmsgcli.common.BlockDeviceKey partitions = 30;</code>
             */
            public java.util.List<cn.keptdata.one2data.header.message.protobuf.common.Node.BlockDeviceKey.Builder>
            getPartitionsBuilderList() {
                return getPartitionsFieldBuilder().getBuilderList();
            }
            private com.google.protobuf.RepeatedFieldBuilderV3<
                    cn.keptdata.one2data.header.message.protobuf.common.Node.BlockDeviceKey, cn.keptdata.one2data.header.message.protobuf.common.Node.BlockDeviceKey.Builder, cn.keptdata.one2data.header.message.protobuf.common.Node.BlockDeviceKeyOrBuilder>
            getPartitionsFieldBuilder() {
                if (partitionsBuilder_ == null) {
                    partitionsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
                            cn.keptdata.one2data.header.message.protobuf.common.Node.BlockDeviceKey, cn.keptdata.one2data.header.message.protobuf.common.Node.BlockDeviceKey.Builder, cn.keptdata.one2data.header.message.protobuf.common.Node.BlockDeviceKeyOrBuilder>(
                            partitions_,
                            ((bitField0_ & 0x00100000) == 0x00100000),
                            getParentForChildren(),
                            isClean());
                    partitions_ = null;
                }
                return partitionsBuilder_;
            }

            private java.util.List<cn.keptdata.one2data.header.message.protobuf.common.Node.BlockDeviceKey> sources_ =
                    java.util.Collections.emptyList();
            private void ensureSourcesIsMutable() {
                if (!((bitField0_ & 0x00200000) == 0x00200000)) {
                    sources_ = new java.util.ArrayList<cn.keptdata.one2data.header.message.protobuf.common.Node.BlockDeviceKey>(sources_);
                    bitField0_ |= 0x00200000;
                }
            }

            private com.google.protobuf.RepeatedFieldBuilderV3<
                    cn.keptdata.one2data.header.message.protobuf.common.Node.BlockDeviceKey, cn.keptdata.one2data.header.message.protobuf.common.Node.BlockDeviceKey.Builder, cn.keptdata.one2data.header.message.protobuf.common.Node.BlockDeviceKeyOrBuilder> sourcesBuilder_;

            /**
             * <pre>
             *源磁盘: 当 is_virtual=true 时，表示该虚拟盘是由哪些磁盘提供的
             * </pre>
             *
             * <code>repeated .one2data.rbtmqmsgcli.common.BlockDeviceKey sources = 31;</code>
             */
            public java.util.List<cn.keptdata.one2data.header.message.protobuf.common.Node.BlockDeviceKey> getSourcesList() {
                if (sourcesBuilder_ == null) {
                    return java.util.Collections.unmodifiableList(sources_);
                } else {
                    return sourcesBuilder_.getMessageList();
                }
            }
            /**
             * <pre>
             *源磁盘: 当 is_virtual=true 时，表示该虚拟盘是由哪些磁盘提供的
             * </pre>
             *
             * <code>repeated .one2data.rbtmqmsgcli.common.BlockDeviceKey sources = 31;</code>
             */
            public int getSourcesCount() {
                if (sourcesBuilder_ == null) {
                    return sources_.size();
                } else {
                    return sourcesBuilder_.getCount();
                }
            }
            /**
             * <pre>
             *源磁盘: 当 is_virtual=true 时，表示该虚拟盘是由哪些磁盘提供的
             * </pre>
             *
             * <code>repeated .one2data.rbtmqmsgcli.common.BlockDeviceKey sources = 31;</code>
             */
            public cn.keptdata.one2data.header.message.protobuf.common.Node.BlockDeviceKey getSources(int index) {
                if (sourcesBuilder_ == null) {
                    return sources_.get(index);
                } else {
                    return sourcesBuilder_.getMessage(index);
                }
            }
            /**
             * <pre>
             *源磁盘: 当 is_virtual=true 时，表示该虚拟盘是由哪些磁盘提供的
             * </pre>
             *
             * <code>repeated .one2data.rbtmqmsgcli.common.BlockDeviceKey sources = 31;</code>
             */
            public Builder setSources(
                    int index, cn.keptdata.one2data.header.message.protobuf.common.Node.BlockDeviceKey value) {
                if (sourcesBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    ensureSourcesIsMutable();
                    sources_.set(index, value);
                    onChanged();
                } else {
                    sourcesBuilder_.setMessage(index, value);
                }
                return this;
            }
            /**
             * <pre>
             *源磁盘: 当 is_virtual=true 时，表示该虚拟盘是由哪些磁盘提供的
             * </pre>
             *
             * <code>repeated .one2data.rbtmqmsgcli.common.BlockDeviceKey sources = 31;</code>
             */
            public Builder setSources(
                    int index, cn.keptdata.one2data.header.message.protobuf.common.Node.BlockDeviceKey.Builder builderForValue) {
                if (sourcesBuilder_ == null) {
                    ensureSourcesIsMutable();
                    sources_.set(index, builderForValue.build());
                    onChanged();
                } else {
                    sourcesBuilder_.setMessage(index, builderForValue.build());
                }
                return this;
            }
            /**
             * <pre>
             *源磁盘: 当 is_virtual=true 时，表示该虚拟盘是由哪些磁盘提供的
             * </pre>
             *
             * <code>repeated .one2data.rbtmqmsgcli.common.BlockDeviceKey sources = 31;</code>
             */
            public Builder addSources(cn.keptdata.one2data.header.message.protobuf.common.Node.BlockDeviceKey value) {
                if (sourcesBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    ensureSourcesIsMutable();
                    sources_.add(value);
                    onChanged();
                } else {
                    sourcesBuilder_.addMessage(value);
                }
                return this;
            }
            /**
             * <pre>
             *源磁盘: 当 is_virtual=true 时，表示该虚拟盘是由哪些磁盘提供的
             * </pre>
             *
             * <code>repeated .one2data.rbtmqmsgcli.common.BlockDeviceKey sources = 31;</code>
             */
            public Builder addSources(
                    int index, cn.keptdata.one2data.header.message.protobuf.common.Node.BlockDeviceKey value) {
                if (sourcesBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    ensureSourcesIsMutable();
                    sources_.add(index, value);
                    onChanged();
                } else {
                    sourcesBuilder_.addMessage(index, value);
                }
                return this;
            }
            /**
             * <pre>
             *源磁盘: 当 is_virtual=true 时，表示该虚拟盘是由哪些磁盘提供的
             * </pre>
             *
             * <code>repeated .one2data.rbtmqmsgcli.common.BlockDeviceKey sources = 31;</code>
             */
            public Builder addSources(
                    cn.keptdata.one2data.header.message.protobuf.common.Node.BlockDeviceKey.Builder builderForValue) {
                if (sourcesBuilder_ == null) {
                    ensureSourcesIsMutable();
                    sources_.add(builderForValue.build());
                    onChanged();
                } else {
                    sourcesBuilder_.addMessage(builderForValue.build());
                }
                return this;
            }
            /**
             * <pre>
             *源磁盘: 当 is_virtual=true 时，表示该虚拟盘是由哪些磁盘提供的
             * </pre>
             *
             * <code>repeated .one2data.rbtmqmsgcli.common.BlockDeviceKey sources = 31;</code>
             */
            public Builder addSources(
                    int index, cn.keptdata.one2data.header.message.protobuf.common.Node.BlockDeviceKey.Builder builderForValue) {
                if (sourcesBuilder_ == null) {
                    ensureSourcesIsMutable();
                    sources_.add(index, builderForValue.build());
                    onChanged();
                } else {
                    sourcesBuilder_.addMessage(index, builderForValue.build());
                }
                return this;
            }
            /**
             * <pre>
             *源磁盘: 当 is_virtual=true 时，表示该虚拟盘是由哪些磁盘提供的
             * </pre>
             *
             * <code>repeated .one2data.rbtmqmsgcli.common.BlockDeviceKey sources = 31;</code>
             */
            public Builder addAllSources(
                    Iterable<? extends cn.keptdata.one2data.header.message.protobuf.common.Node.BlockDeviceKey> values) {
                if (sourcesBuilder_ == null) {
                    ensureSourcesIsMutable();
                    com.google.protobuf.AbstractMessageLite.Builder.addAll(
                            values, sources_);
                    onChanged();
                } else {
                    sourcesBuilder_.addAllMessages(values);
                }
                return this;
            }
            /**
             * <pre>
             *源磁盘: 当 is_virtual=true 时，表示该虚拟盘是由哪些磁盘提供的
             * </pre>
             *
             * <code>repeated .one2data.rbtmqmsgcli.common.BlockDeviceKey sources = 31;</code>
             */
            public Builder clearSources() {
                if (sourcesBuilder_ == null) {
                    sources_ = java.util.Collections.emptyList();
                    bitField0_ = (bitField0_ & ~0x00200000);
                    onChanged();
                } else {
                    sourcesBuilder_.clear();
                }
                return this;
            }
            /**
             * <pre>
             *源磁盘: 当 is_virtual=true 时，表示该虚拟盘是由哪些磁盘提供的
             * </pre>
             *
             * <code>repeated .one2data.rbtmqmsgcli.common.BlockDeviceKey sources = 31;</code>
             */
            public Builder removeSources(int index) {
                if (sourcesBuilder_ == null) {
                    ensureSourcesIsMutable();
                    sources_.remove(index);
                    onChanged();
                } else {
                    sourcesBuilder_.remove(index);
                }
                return this;
            }
            /**
             * <pre>
             *源磁盘: 当 is_virtual=true 时，表示该虚拟盘是由哪些磁盘提供的
             * </pre>
             *
             * <code>repeated .one2data.rbtmqmsgcli.common.BlockDeviceKey sources = 31;</code>
             */
            public cn.keptdata.one2data.header.message.protobuf.common.Node.BlockDeviceKey.Builder getSourcesBuilder(
                    int index) {
                return getSourcesFieldBuilder().getBuilder(index);
            }
            /**
             * <pre>
             *源磁盘: 当 is_virtual=true 时，表示该虚拟盘是由哪些磁盘提供的
             * </pre>
             *
             * <code>repeated .one2data.rbtmqmsgcli.common.BlockDeviceKey sources = 31;</code>
             */
            public cn.keptdata.one2data.header.message.protobuf.common.Node.BlockDeviceKeyOrBuilder getSourcesOrBuilder(
                    int index) {
                if (sourcesBuilder_ == null) {
                    return sources_.get(index);  } else {
                    return sourcesBuilder_.getMessageOrBuilder(index);
                }
            }
            /**
             * <pre>
             *源磁盘: 当 is_virtual=true 时，表示该虚拟盘是由哪些磁盘提供的
             * </pre>
             *
             * <code>repeated .one2data.rbtmqmsgcli.common.BlockDeviceKey sources = 31;</code>
             */
            public java.util.List<? extends cn.keptdata.one2data.header.message.protobuf.common.Node.BlockDeviceKeyOrBuilder>
            getSourcesOrBuilderList() {
                if (sourcesBuilder_ != null) {
                    return sourcesBuilder_.getMessageOrBuilderList();
                } else {
                    return java.util.Collections.unmodifiableList(sources_);
                }
            }
            /**
             * <pre>
             *源磁盘: 当 is_virtual=true 时，表示该虚拟盘是由哪些磁盘提供的
             * </pre>
             *
             * <code>repeated .one2data.rbtmqmsgcli.common.BlockDeviceKey sources = 31;</code>
             */
            public cn.keptdata.one2data.header.message.protobuf.common.Node.BlockDeviceKey.Builder addSourcesBuilder() {
                return getSourcesFieldBuilder().addBuilder(
                        cn.keptdata.one2data.header.message.protobuf.common.Node.BlockDeviceKey.getDefaultInstance());
            }
            /**
             * <pre>
             *源磁盘: 当 is_virtual=true 时，表示该虚拟盘是由哪些磁盘提供的
             * </pre>
             *
             * <code>repeated .one2data.rbtmqmsgcli.common.BlockDeviceKey sources = 31;</code>
             */
            public cn.keptdata.one2data.header.message.protobuf.common.Node.BlockDeviceKey.Builder addSourcesBuilder(
                    int index) {
                return getSourcesFieldBuilder().addBuilder(
                        index, cn.keptdata.one2data.header.message.protobuf.common.Node.BlockDeviceKey.getDefaultInstance());
            }
            /**
             * <pre>
             *源磁盘: 当 is_virtual=true 时，表示该虚拟盘是由哪些磁盘提供的
             * </pre>
             *
             * <code>repeated .one2data.rbtmqmsgcli.common.BlockDeviceKey sources = 31;</code>
             */
            public java.util.List<cn.keptdata.one2data.header.message.protobuf.common.Node.BlockDeviceKey.Builder>
            getSourcesBuilderList() {
                return getSourcesFieldBuilder().getBuilderList();
            }
            private com.google.protobuf.RepeatedFieldBuilderV3<
                    cn.keptdata.one2data.header.message.protobuf.common.Node.BlockDeviceKey, cn.keptdata.one2data.header.message.protobuf.common.Node.BlockDeviceKey.Builder, cn.keptdata.one2data.header.message.protobuf.common.Node.BlockDeviceKeyOrBuilder>
            getSourcesFieldBuilder() {
                if (sourcesBuilder_ == null) {
                    sourcesBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
                            cn.keptdata.one2data.header.message.protobuf.common.Node.BlockDeviceKey, cn.keptdata.one2data.header.message.protobuf.common.Node.BlockDeviceKey.Builder, cn.keptdata.one2data.header.message.protobuf.common.Node.BlockDeviceKeyOrBuilder>(
                            sources_,
                            ((bitField0_ & 0x00200000) == 0x00200000),
                            getParentForChildren(),
                            isClean());
                    sources_ = null;
                }
                return sourcesBuilder_;
            }

            private java.util.List<cn.keptdata.one2data.header.message.protobuf.common.Node.BlockDeviceKey> targets_ =
                    java.util.Collections.emptyList();
            private void ensureTargetsIsMutable() {
                if (!((bitField0_ & 0x00400000) == 0x00400000)) {
                    targets_ = new java.util.ArrayList<cn.keptdata.one2data.header.message.protobuf.common.Node.BlockDeviceKey>(targets_);
                    bitField0_ |= 0x00400000;
                }
            }

            private com.google.protobuf.RepeatedFieldBuilderV3<
                    cn.keptdata.one2data.header.message.protobuf.common.Node.BlockDeviceKey, cn.keptdata.one2data.header.message.protobuf.common.Node.BlockDeviceKey.Builder, cn.keptdata.one2data.header.message.protobuf.common.Node.BlockDeviceKeyOrBuilder> targetsBuilder_;

            /**
             * <pre>
             *目标磁盘: 当 is_virtual=false 时，表示该物理盘被哪些磁盘使用
             * </pre>
             *
             * <code>repeated .one2data.rbtmqmsgcli.common.BlockDeviceKey targets = 32;</code>
             */
            public java.util.List<cn.keptdata.one2data.header.message.protobuf.common.Node.BlockDeviceKey> getTargetsList() {
                if (targetsBuilder_ == null) {
                    return java.util.Collections.unmodifiableList(targets_);
                } else {
                    return targetsBuilder_.getMessageList();
                }
            }
            /**
             * <pre>
             *目标磁盘: 当 is_virtual=false 时，表示该物理盘被哪些磁盘使用
             * </pre>
             *
             * <code>repeated .one2data.rbtmqmsgcli.common.BlockDeviceKey targets = 32;</code>
             */
            public int getTargetsCount() {
                if (targetsBuilder_ == null) {
                    return targets_.size();
                } else {
                    return targetsBuilder_.getCount();
                }
            }
            /**
             * <pre>
             *目标磁盘: 当 is_virtual=false 时，表示该物理盘被哪些磁盘使用
             * </pre>
             *
             * <code>repeated .one2data.rbtmqmsgcli.common.BlockDeviceKey targets = 32;</code>
             */
            public cn.keptdata.one2data.header.message.protobuf.common.Node.BlockDeviceKey getTargets(int index) {
                if (targetsBuilder_ == null) {
                    return targets_.get(index);
                } else {
                    return targetsBuilder_.getMessage(index);
                }
            }
            /**
             * <pre>
             *目标磁盘: 当 is_virtual=false 时，表示该物理盘被哪些磁盘使用
             * </pre>
             *
             * <code>repeated .one2data.rbtmqmsgcli.common.BlockDeviceKey targets = 32;</code>
             */
            public Builder setTargets(
                    int index, cn.keptdata.one2data.header.message.protobuf.common.Node.BlockDeviceKey value) {
                if (targetsBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    ensureTargetsIsMutable();
                    targets_.set(index, value);
                    onChanged();
                } else {
                    targetsBuilder_.setMessage(index, value);
                }
                return this;
            }
            /**
             * <pre>
             *目标磁盘: 当 is_virtual=false 时，表示该物理盘被哪些磁盘使用
             * </pre>
             *
             * <code>repeated .one2data.rbtmqmsgcli.common.BlockDeviceKey targets = 32;</code>
             */
            public Builder setTargets(
                    int index, cn.keptdata.one2data.header.message.protobuf.common.Node.BlockDeviceKey.Builder builderForValue) {
                if (targetsBuilder_ == null) {
                    ensureTargetsIsMutable();
                    targets_.set(index, builderForValue.build());
                    onChanged();
                } else {
                    targetsBuilder_.setMessage(index, builderForValue.build());
                }
                return this;
            }
            /**
             * <pre>
             *目标磁盘: 当 is_virtual=false 时，表示该物理盘被哪些磁盘使用
             * </pre>
             *
             * <code>repeated .one2data.rbtmqmsgcli.common.BlockDeviceKey targets = 32;</code>
             */
            public Builder addTargets(cn.keptdata.one2data.header.message.protobuf.common.Node.BlockDeviceKey value) {
                if (targetsBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    ensureTargetsIsMutable();
                    targets_.add(value);
                    onChanged();
                } else {
                    targetsBuilder_.addMessage(value);
                }
                return this;
            }
            /**
             * <pre>
             *目标磁盘: 当 is_virtual=false 时，表示该物理盘被哪些磁盘使用
             * </pre>
             *
             * <code>repeated .one2data.rbtmqmsgcli.common.BlockDeviceKey targets = 32;</code>
             */
            public Builder addTargets(
                    int index, cn.keptdata.one2data.header.message.protobuf.common.Node.BlockDeviceKey value) {
                if (targetsBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    ensureTargetsIsMutable();
                    targets_.add(index, value);
                    onChanged();
                } else {
                    targetsBuilder_.addMessage(index, value);
                }
                return this;
            }
            /**
             * <pre>
             *目标磁盘: 当 is_virtual=false 时，表示该物理盘被哪些磁盘使用
             * </pre>
             *
             * <code>repeated .one2data.rbtmqmsgcli.common.BlockDeviceKey targets = 32;</code>
             */
            public Builder addTargets(
                    cn.keptdata.one2data.header.message.protobuf.common.Node.BlockDeviceKey.Builder builderForValue) {
                if (targetsBuilder_ == null) {
                    ensureTargetsIsMutable();
                    targets_.add(builderForValue.build());
                    onChanged();
                } else {
                    targetsBuilder_.addMessage(builderForValue.build());
                }
                return this;
            }
            /**
             * <pre>
             *目标磁盘: 当 is_virtual=false 时，表示该物理盘被哪些磁盘使用
             * </pre>
             *
             * <code>repeated .one2data.rbtmqmsgcli.common.BlockDeviceKey targets = 32;</code>
             */
            public Builder addTargets(
                    int index, cn.keptdata.one2data.header.message.protobuf.common.Node.BlockDeviceKey.Builder builderForValue) {
                if (targetsBuilder_ == null) {
                    ensureTargetsIsMutable();
                    targets_.add(index, builderForValue.build());
                    onChanged();
                } else {
                    targetsBuilder_.addMessage(index, builderForValue.build());
                }
                return this;
            }
            /**
             * <pre>
             *目标磁盘: 当 is_virtual=false 时，表示该物理盘被哪些磁盘使用
             * </pre>
             *
             * <code>repeated .one2data.rbtmqmsgcli.common.BlockDeviceKey targets = 32;</code>
             */
            public Builder addAllTargets(
                    Iterable<? extends cn.keptdata.one2data.header.message.protobuf.common.Node.BlockDeviceKey> values) {
                if (targetsBuilder_ == null) {
                    ensureTargetsIsMutable();
                    com.google.protobuf.AbstractMessageLite.Builder.addAll(
                            values, targets_);
                    onChanged();
                } else {
                    targetsBuilder_.addAllMessages(values);
                }
                return this;
            }
            /**
             * <pre>
             *目标磁盘: 当 is_virtual=false 时，表示该物理盘被哪些磁盘使用
             * </pre>
             *
             * <code>repeated .one2data.rbtmqmsgcli.common.BlockDeviceKey targets = 32;</code>
             */
            public Builder clearTargets() {
                if (targetsBuilder_ == null) {
                    targets_ = java.util.Collections.emptyList();
                    bitField0_ = (bitField0_ & ~0x00400000);
                    onChanged();
                } else {
                    targetsBuilder_.clear();
                }
                return this;
            }
            /**
             * <pre>
             *目标磁盘: 当 is_virtual=false 时，表示该物理盘被哪些磁盘使用
             * </pre>
             *
             * <code>repeated .one2data.rbtmqmsgcli.common.BlockDeviceKey targets = 32;</code>
             */
            public Builder removeTargets(int index) {
                if (targetsBuilder_ == null) {
                    ensureTargetsIsMutable();
                    targets_.remove(index);
                    onChanged();
                } else {
                    targetsBuilder_.remove(index);
                }
                return this;
            }
            /**
             * <pre>
             *目标磁盘: 当 is_virtual=false 时，表示该物理盘被哪些磁盘使用
             * </pre>
             *
             * <code>repeated .one2data.rbtmqmsgcli.common.BlockDeviceKey targets = 32;</code>
             */
            public cn.keptdata.one2data.header.message.protobuf.common.Node.BlockDeviceKey.Builder getTargetsBuilder(
                    int index) {
                return getTargetsFieldBuilder().getBuilder(index);
            }
            /**
             * <pre>
             *目标磁盘: 当 is_virtual=false 时，表示该物理盘被哪些磁盘使用
             * </pre>
             *
             * <code>repeated .one2data.rbtmqmsgcli.common.BlockDeviceKey targets = 32;</code>
             */
            public cn.keptdata.one2data.header.message.protobuf.common.Node.BlockDeviceKeyOrBuilder getTargetsOrBuilder(
                    int index) {
                if (targetsBuilder_ == null) {
                    return targets_.get(index);  } else {
                    return targetsBuilder_.getMessageOrBuilder(index);
                }
            }
            /**
             * <pre>
             *目标磁盘: 当 is_virtual=false 时，表示该物理盘被哪些磁盘使用
             * </pre>
             *
             * <code>repeated .one2data.rbtmqmsgcli.common.BlockDeviceKey targets = 32;</code>
             */
            public java.util.List<? extends cn.keptdata.one2data.header.message.protobuf.common.Node.BlockDeviceKeyOrBuilder>
            getTargetsOrBuilderList() {
                if (targetsBuilder_ != null) {
                    return targetsBuilder_.getMessageOrBuilderList();
                } else {
                    return java.util.Collections.unmodifiableList(targets_);
                }
            }
            /**
             * <pre>
             *目标磁盘: 当 is_virtual=false 时，表示该物理盘被哪些磁盘使用
             * </pre>
             *
             * <code>repeated .one2data.rbtmqmsgcli.common.BlockDeviceKey targets = 32;</code>
             */
            public cn.keptdata.one2data.header.message.protobuf.common.Node.BlockDeviceKey.Builder addTargetsBuilder() {
                return getTargetsFieldBuilder().addBuilder(
                        cn.keptdata.one2data.header.message.protobuf.common.Node.BlockDeviceKey.getDefaultInstance());
            }
            /**
             * <pre>
             *目标磁盘: 当 is_virtual=false 时，表示该物理盘被哪些磁盘使用
             * </pre>
             *
             * <code>repeated .one2data.rbtmqmsgcli.common.BlockDeviceKey targets = 32;</code>
             */
            public cn.keptdata.one2data.header.message.protobuf.common.Node.BlockDeviceKey.Builder addTargetsBuilder(
                    int index) {
                return getTargetsFieldBuilder().addBuilder(
                        index, cn.keptdata.one2data.header.message.protobuf.common.Node.BlockDeviceKey.getDefaultInstance());
            }
            /**
             * <pre>
             *目标磁盘: 当 is_virtual=false 时，表示该物理盘被哪些磁盘使用
             * </pre>
             *
             * <code>repeated .one2data.rbtmqmsgcli.common.BlockDeviceKey targets = 32;</code>
             */
            public java.util.List<cn.keptdata.one2data.header.message.protobuf.common.Node.BlockDeviceKey.Builder>
            getTargetsBuilderList() {
                return getTargetsFieldBuilder().getBuilderList();
            }
            private com.google.protobuf.RepeatedFieldBuilderV3<
                    cn.keptdata.one2data.header.message.protobuf.common.Node.BlockDeviceKey, cn.keptdata.one2data.header.message.protobuf.common.Node.BlockDeviceKey.Builder, cn.keptdata.one2data.header.message.protobuf.common.Node.BlockDeviceKeyOrBuilder>
            getTargetsFieldBuilder() {
                if (targetsBuilder_ == null) {
                    targetsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
                            cn.keptdata.one2data.header.message.protobuf.common.Node.BlockDeviceKey, cn.keptdata.one2data.header.message.protobuf.common.Node.BlockDeviceKey.Builder, cn.keptdata.one2data.header.message.protobuf.common.Node.BlockDeviceKeyOrBuilder>(
                            targets_,
                            ((bitField0_ & 0x00400000) == 0x00400000),
                            getParentForChildren(),
                            isClean());
                    targets_ = null;
                }
                return targetsBuilder_;
            }
            public final Builder setUnknownFields(
                    final com.google.protobuf.UnknownFieldSet unknownFields) {
                return this;
            }

            public final Builder mergeUnknownFields(
                    final com.google.protobuf.UnknownFieldSet unknownFields) {
                return this;
            }


            // @@protoc_insertion_point(builder_scope:one2data.rbtmqmsgcli.client.HarddiskInfo)
        }

        // @@protoc_insertion_point(class_scope:one2data.rbtmqmsgcli.client.HarddiskInfo)
        private static final cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.HarddiskInfo DEFAULT_INSTANCE;
        static {
            DEFAULT_INSTANCE = new cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.HarddiskInfo();
        }

        public static cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.HarddiskInfo getDefaultInstance() {
            return DEFAULT_INSTANCE;
        }

        private static final com.google.protobuf.Parser<HarddiskInfo>
                PARSER = new com.google.protobuf.AbstractParser<HarddiskInfo>() {
            public HarddiskInfo parsePartialFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws com.google.protobuf.InvalidProtocolBufferException {
                return new HarddiskInfo(input, extensionRegistry);
            }
        };

        public static com.google.protobuf.Parser<HarddiskInfo> parser() {
            return PARSER;
        }

        @Override
        public com.google.protobuf.Parser<HarddiskInfo> getParserForType() {
            return PARSER;
        }

        public cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.HarddiskInfo getDefaultInstanceForType() {
            return DEFAULT_INSTANCE;
        }

    }

    public interface PartitionInfoOrBuilder extends
            // @@protoc_insertion_point(interface_extends:one2data.rbtmqmsgcli.client.PartitionInfo)
            com.google.protobuf.MessageOrBuilder {

        /**
         * <pre>
         *设备内部唯一ID
         * </pre>
         *
         * <code>optional string device_uuid_key = 1;</code>
         */
        String getDeviceUuidKey();
        /**
         * <pre>
         *设备内部唯一ID
         * </pre>
         *
         * <code>optional string device_uuid_key = 1;</code>
         */
        com.google.protobuf.ByteString
        getDeviceUuidKeyBytes();

        /**
         * <pre>
         *分区内部唯一标识
         * </pre>
         *
         * <code>optional .one2data.rbtmqmsgcli.common.BlockDeviceKey key = 2;</code>
         */
        boolean hasKey();
        /**
         * <pre>
         *分区内部唯一标识
         * </pre>
         *
         * <code>optional .one2data.rbtmqmsgcli.common.BlockDeviceKey key = 2;</code>
         */
        cn.keptdata.one2data.header.message.protobuf.common.Node.BlockDeviceKey getKey();
        /**
         * <pre>
         *分区内部唯一标识
         * </pre>
         *
         * <code>optional .one2data.rbtmqmsgcli.common.BlockDeviceKey key = 2;</code>
         */
        cn.keptdata.one2data.header.message.protobuf.common.Node.BlockDeviceKeyOrBuilder getKeyOrBuilder();

        /**
         * <pre>
         *所属磁盘唯一标识
         * </pre>
         *
         * <code>optional .one2data.rbtmqmsgcli.common.BlockDeviceKey disk_key = 3;</code>
         */
        boolean hasDiskKey();
        /**
         * <pre>
         *所属磁盘唯一标识
         * </pre>
         *
         * <code>optional .one2data.rbtmqmsgcli.common.BlockDeviceKey disk_key = 3;</code>
         */
        cn.keptdata.one2data.header.message.protobuf.common.Node.BlockDeviceKey getDiskKey();
        /**
         * <pre>
         *所属磁盘唯一标识
         * </pre>
         *
         * <code>optional .one2data.rbtmqmsgcli.common.BlockDeviceKey disk_key = 3;</code>
         */
        cn.keptdata.one2data.header.message.protobuf.common.Node.BlockDeviceKeyOrBuilder getDiskKeyOrBuilder();

        /**
         * <pre>
         *分区内部索引
         * </pre>
         *
         * <code>optional uint32 index = 4;</code>
         */
        int getIndex();

        /**
         * <pre>
         *分区是否在线
         * </pre>
         *
         * <code>optional bool is_online = 5;</code>
         */
        boolean getIsOnline();

        /**
         * <pre>
         *是否是启动分区
         * </pre>
         *
         * <code>optional bool is_boot = 6;</code>
         */
        boolean getIsBoot();

        /**
         * <pre>
         *分区类型,如：Linux 83 保留
         * </pre>
         *
         * <code>optional string type = 7;</code>
         */
        String getType();
        /**
         * <pre>
         *分区类型,如：Linux 83 保留
         * </pre>
         *
         * <code>optional string type = 7;</code>
         */
        com.google.protobuf.ByteString
        getTypeBytes();

        /**
         * <pre>
         *文件系统类型
         * </pre>
         *
         * <code>optional string filesystem_type = 8;</code>
         */
        String getFilesystemType();
        /**
         * <pre>
         *文件系统类型
         * </pre>
         *
         * <code>optional string filesystem_type = 8;</code>
         */
        com.google.protobuf.ByteString
        getFilesystemTypeBytes();

        /**
         * <pre>
         *起始扇区编号
         * </pre>
         *
         * <code>optional uint64 start_sector = 9;</code>
         */
        long getStartSector();

        /**
         * <pre>
         *总扇区个数
         * </pre>
         *
         * <code>optional uint64 total_sector = 10;</code>
         */
        long getTotalSector();

        /**
         * <pre>
         *已用扇区个数 保留
         * </pre>
         *
         * <code>optional uint64 used_sector = 11;</code>
         */
        long getUsedSector();

        /**
         * <pre>
         *是否是物理卷
         * </pre>
         *
         * <code>optional bool is_pv = 12;</code>
         */
        boolean getIsPv();

        /**
         * <pre>
         *是否是虚拟分区
         * </pre>
         *
         * <code>optional bool is_virtual = 13;</code>
         */
        boolean getIsVirtual();

        /**
         * <pre>
         *分区名称，用于显示
         * </pre>
         *
         * <code>optional string name = 14;</code>
         */
        String getName();
        /**
         * <pre>
         *分区名称，用于显示
         * </pre>
         *
         * <code>optional string name = 14;</code>
         */
        com.google.protobuf.ByteString
        getNameBytes();

        /**
         * <pre>
         *分区是否可见
         * </pre>
         *
         * <code>optional bool is_visible = 15;</code>
         */
        boolean getIsVisible();

        /**
         * <pre>
         *&#47;挂载点
         * </pre>
         *
         * <code>optional string mount_point = 16;</code>
         */
        String getMountPoint();
        /**
         * <pre>
         *&#47;挂载点
         * </pre>
         *
         * <code>optional string mount_point = 16;</code>
         */
        com.google.protobuf.ByteString
        getMountPointBytes();

        /**
         * <pre>
         *可备份的类型，&gt;=0 表示可备份，&lt;0 表示不可备份
         * </pre>
         *
         * <code>optional int32 backupable_type = 17;</code>
         */
        int getBackupableType();
    }
    /**
     * <pre>
     *设备分区信息
     * </pre>
     *
     * Protobuf type {@code one2data.rbtmqmsgcli.client.PartitionInfo}
     */
    public  static final class PartitionInfo extends
            com.google.protobuf.GeneratedMessageV3 implements
            // @@protoc_insertion_point(message_implements:one2data.rbtmqmsgcli.client.PartitionInfo)
            PartitionInfoOrBuilder {
        // Use PartitionInfo.newBuilder() to construct.
        private PartitionInfo(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
            super(builder);
        }
        private PartitionInfo() {
            deviceUuidKey_ = "";
            index_ = 0;
            isOnline_ = false;
            isBoot_ = false;
            type_ = "";
            filesystemType_ = "";
            startSector_ = 0L;
            totalSector_ = 0L;
            usedSector_ = 0L;
            isPv_ = false;
            isVirtual_ = false;
            name_ = "";
            isVisible_ = false;
            mountPoint_ = "";
            backupableType_ = 0;
        }

        @Override
        public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
            return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
        }
        private PartitionInfo(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            this();
            int mutable_bitField0_ = 0;
            try {
                boolean done = false;
                while (!done) {
                    int tag = input.readTag();
                    switch (tag) {
                        case 0:
                            done = true;
                            break;
                        default: {
                            if (!input.skipField(tag)) {
                                done = true;
                            }
                            break;
                        }
                        case 10: {
                            String s = input.readStringRequireUtf8();

                            deviceUuidKey_ = s;
                            break;
                        }
                        case 18: {
                            cn.keptdata.one2data.header.message.protobuf.common.Node.BlockDeviceKey.Builder subBuilder = null;
                            if (key_ != null) {
                                subBuilder = key_.toBuilder();
                            }
                            key_ = input.readMessage(cn.keptdata.one2data.header.message.protobuf.common.Node.BlockDeviceKey.parser(), extensionRegistry);
                            if (subBuilder != null) {
                                subBuilder.mergeFrom(key_);
                                key_ = subBuilder.buildPartial();
                            }

                            break;
                        }
                        case 26: {
                            cn.keptdata.one2data.header.message.protobuf.common.Node.BlockDeviceKey.Builder subBuilder = null;
                            if (diskKey_ != null) {
                                subBuilder = diskKey_.toBuilder();
                            }
                            diskKey_ = input.readMessage(cn.keptdata.one2data.header.message.protobuf.common.Node.BlockDeviceKey.parser(), extensionRegistry);
                            if (subBuilder != null) {
                                subBuilder.mergeFrom(diskKey_);
                                diskKey_ = subBuilder.buildPartial();
                            }

                            break;
                        }
                        case 32: {

                            index_ = input.readUInt32();
                            break;
                        }
                        case 40: {

                            isOnline_ = input.readBool();
                            break;
                        }
                        case 48: {

                            isBoot_ = input.readBool();
                            break;
                        }
                        case 58: {
                            String s = input.readStringRequireUtf8();

                            type_ = s;
                            break;
                        }
                        case 66: {
                            String s = input.readStringRequireUtf8();

                            filesystemType_ = s;
                            break;
                        }
                        case 72: {

                            startSector_ = input.readUInt64();
                            break;
                        }
                        case 80: {

                            totalSector_ = input.readUInt64();
                            break;
                        }
                        case 88: {

                            usedSector_ = input.readUInt64();
                            break;
                        }
                        case 96: {

                            isPv_ = input.readBool();
                            break;
                        }
                        case 104: {

                            isVirtual_ = input.readBool();
                            break;
                        }
                        case 114: {
                            String s = input.readStringRequireUtf8();

                            name_ = s;
                            break;
                        }
                        case 120: {

                            isVisible_ = input.readBool();
                            break;
                        }
                        case 130: {
                            String s = input.readStringRequireUtf8();

                            mountPoint_ = s;
                            break;
                        }
                        case 136: {

                            backupableType_ = input.readInt32();
                            break;
                        }
                    }
                }
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(this);
            } catch (java.io.IOException e) {
                throw new com.google.protobuf.InvalidProtocolBufferException(
                        e).setUnfinishedMessage(this);
            } finally {
                makeExtensionsImmutable();
            }
        }
        public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
            return cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.internal_static_one2data_rbtmqmsgcli_client_PartitionInfo_descriptor;
        }

        protected FieldAccessorTable
        internalGetFieldAccessorTable() {
            return cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.internal_static_one2data_rbtmqmsgcli_client_PartitionInfo_fieldAccessorTable
                    .ensureFieldAccessorsInitialized(
                            cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.PartitionInfo.class, cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.PartitionInfo.Builder.class);
        }

        public static final int DEVICE_UUID_KEY_FIELD_NUMBER = 1;
        private volatile Object deviceUuidKey_;
        /**
         * <pre>
         *设备内部唯一ID
         * </pre>
         *
         * <code>optional string device_uuid_key = 1;</code>
         */
        public String getDeviceUuidKey() {
            Object ref = deviceUuidKey_;
            if (ref instanceof String) {
                return (String) ref;
            } else {
                com.google.protobuf.ByteString bs =
                        (com.google.protobuf.ByteString) ref;
                String s = bs.toStringUtf8();
                deviceUuidKey_ = s;
                return s;
            }
        }
        /**
         * <pre>
         *设备内部唯一ID
         * </pre>
         *
         * <code>optional string device_uuid_key = 1;</code>
         */
        public com.google.protobuf.ByteString
        getDeviceUuidKeyBytes() {
            Object ref = deviceUuidKey_;
            if (ref instanceof String) {
                com.google.protobuf.ByteString b =
                        com.google.protobuf.ByteString.copyFromUtf8(
                                (String) ref);
                deviceUuidKey_ = b;
                return b;
            } else {
                return (com.google.protobuf.ByteString) ref;
            }
        }

        public static final int KEY_FIELD_NUMBER = 2;
        private cn.keptdata.one2data.header.message.protobuf.common.Node.BlockDeviceKey key_;
        /**
         * <pre>
         *分区内部唯一标识
         * </pre>
         *
         * <code>optional .one2data.rbtmqmsgcli.common.BlockDeviceKey key = 2;</code>
         */
        public boolean hasKey() {
            return key_ != null;
        }
        /**
         * <pre>
         *分区内部唯一标识
         * </pre>
         *
         * <code>optional .one2data.rbtmqmsgcli.common.BlockDeviceKey key = 2;</code>
         */
        public cn.keptdata.one2data.header.message.protobuf.common.Node.BlockDeviceKey getKey() {
            return key_ == null ? cn.keptdata.one2data.header.message.protobuf.common.Node.BlockDeviceKey.getDefaultInstance() : key_;
        }
        /**
         * <pre>
         *分区内部唯一标识
         * </pre>
         *
         * <code>optional .one2data.rbtmqmsgcli.common.BlockDeviceKey key = 2;</code>
         */
        public cn.keptdata.one2data.header.message.protobuf.common.Node.BlockDeviceKeyOrBuilder getKeyOrBuilder() {
            return getKey();
        }

        public static final int DISK_KEY_FIELD_NUMBER = 3;
        private cn.keptdata.one2data.header.message.protobuf.common.Node.BlockDeviceKey diskKey_;
        /**
         * <pre>
         *所属磁盘唯一标识
         * </pre>
         *
         * <code>optional .one2data.rbtmqmsgcli.common.BlockDeviceKey disk_key = 3;</code>
         */
        public boolean hasDiskKey() {
            return diskKey_ != null;
        }
        /**
         * <pre>
         *所属磁盘唯一标识
         * </pre>
         *
         * <code>optional .one2data.rbtmqmsgcli.common.BlockDeviceKey disk_key = 3;</code>
         */
        public cn.keptdata.one2data.header.message.protobuf.common.Node.BlockDeviceKey getDiskKey() {
            return diskKey_ == null ? cn.keptdata.one2data.header.message.protobuf.common.Node.BlockDeviceKey.getDefaultInstance() : diskKey_;
        }
        /**
         * <pre>
         *所属磁盘唯一标识
         * </pre>
         *
         * <code>optional .one2data.rbtmqmsgcli.common.BlockDeviceKey disk_key = 3;</code>
         */
        public cn.keptdata.one2data.header.message.protobuf.common.Node.BlockDeviceKeyOrBuilder getDiskKeyOrBuilder() {
            return getDiskKey();
        }

        public static final int INDEX_FIELD_NUMBER = 4;
        private int index_;
        /**
         * <pre>
         *分区内部索引
         * </pre>
         *
         * <code>optional uint32 index = 4;</code>
         */
        public int getIndex() {
            return index_;
        }

        public static final int IS_ONLINE_FIELD_NUMBER = 5;
        private boolean isOnline_;
        /**
         * <pre>
         *分区是否在线
         * </pre>
         *
         * <code>optional bool is_online = 5;</code>
         */
        public boolean getIsOnline() {
            return isOnline_;
        }

        public static final int IS_BOOT_FIELD_NUMBER = 6;
        private boolean isBoot_;
        /**
         * <pre>
         *是否是启动分区
         * </pre>
         *
         * <code>optional bool is_boot = 6;</code>
         */
        public boolean getIsBoot() {
            return isBoot_;
        }

        public static final int TYPE_FIELD_NUMBER = 7;
        private volatile Object type_;
        /**
         * <pre>
         *分区类型,如：Linux 83 保留
         * </pre>
         *
         * <code>optional string type = 7;</code>
         */
        public String getType() {
            Object ref = type_;
            if (ref instanceof String) {
                return (String) ref;
            } else {
                com.google.protobuf.ByteString bs =
                        (com.google.protobuf.ByteString) ref;
                String s = bs.toStringUtf8();
                type_ = s;
                return s;
            }
        }
        /**
         * <pre>
         *分区类型,如：Linux 83 保留
         * </pre>
         *
         * <code>optional string type = 7;</code>
         */
        public com.google.protobuf.ByteString
        getTypeBytes() {
            Object ref = type_;
            if (ref instanceof String) {
                com.google.protobuf.ByteString b =
                        com.google.protobuf.ByteString.copyFromUtf8(
                                (String) ref);
                type_ = b;
                return b;
            } else {
                return (com.google.protobuf.ByteString) ref;
            }
        }

        public static final int FILESYSTEM_TYPE_FIELD_NUMBER = 8;
        private volatile Object filesystemType_;
        /**
         * <pre>
         *文件系统类型
         * </pre>
         *
         * <code>optional string filesystem_type = 8;</code>
         */
        public String getFilesystemType() {
            Object ref = filesystemType_;
            if (ref instanceof String) {
                return (String) ref;
            } else {
                com.google.protobuf.ByteString bs =
                        (com.google.protobuf.ByteString) ref;
                String s = bs.toStringUtf8();
                filesystemType_ = s;
                return s;
            }
        }
        /**
         * <pre>
         *文件系统类型
         * </pre>
         *
         * <code>optional string filesystem_type = 8;</code>
         */
        public com.google.protobuf.ByteString
        getFilesystemTypeBytes() {
            Object ref = filesystemType_;
            if (ref instanceof String) {
                com.google.protobuf.ByteString b =
                        com.google.protobuf.ByteString.copyFromUtf8(
                                (String) ref);
                filesystemType_ = b;
                return b;
            } else {
                return (com.google.protobuf.ByteString) ref;
            }
        }

        public static final int START_SECTOR_FIELD_NUMBER = 9;
        private long startSector_;
        /**
         * <pre>
         *起始扇区编号
         * </pre>
         *
         * <code>optional uint64 start_sector = 9;</code>
         */
        public long getStartSector() {
            return startSector_;
        }

        public static final int TOTAL_SECTOR_FIELD_NUMBER = 10;
        private long totalSector_;
        /**
         * <pre>
         *总扇区个数
         * </pre>
         *
         * <code>optional uint64 total_sector = 10;</code>
         */
        public long getTotalSector() {
            return totalSector_;
        }

        public static final int USED_SECTOR_FIELD_NUMBER = 11;
        private long usedSector_;
        /**
         * <pre>
         *已用扇区个数 保留
         * </pre>
         *
         * <code>optional uint64 used_sector = 11;</code>
         */
        public long getUsedSector() {
            return usedSector_;
        }

        public static final int IS_PV_FIELD_NUMBER = 12;
        private boolean isPv_;
        /**
         * <pre>
         *是否是物理卷
         * </pre>
         *
         * <code>optional bool is_pv = 12;</code>
         */
        public boolean getIsPv() {
            return isPv_;
        }

        public static final int IS_VIRTUAL_FIELD_NUMBER = 13;
        private boolean isVirtual_;
        /**
         * <pre>
         *是否是虚拟分区
         * </pre>
         *
         * <code>optional bool is_virtual = 13;</code>
         */
        public boolean getIsVirtual() {
            return isVirtual_;
        }

        public static final int NAME_FIELD_NUMBER = 14;
        private volatile Object name_;
        /**
         * <pre>
         *分区名称，用于显示
         * </pre>
         *
         * <code>optional string name = 14;</code>
         */
        public String getName() {
            Object ref = name_;
            if (ref instanceof String) {
                return (String) ref;
            } else {
                com.google.protobuf.ByteString bs =
                        (com.google.protobuf.ByteString) ref;
                String s = bs.toStringUtf8();
                name_ = s;
                return s;
            }
        }
        /**
         * <pre>
         *分区名称，用于显示
         * </pre>
         *
         * <code>optional string name = 14;</code>
         */
        public com.google.protobuf.ByteString
        getNameBytes() {
            Object ref = name_;
            if (ref instanceof String) {
                com.google.protobuf.ByteString b =
                        com.google.protobuf.ByteString.copyFromUtf8(
                                (String) ref);
                name_ = b;
                return b;
            } else {
                return (com.google.protobuf.ByteString) ref;
            }
        }

        public static final int IS_VISIBLE_FIELD_NUMBER = 15;
        private boolean isVisible_;
        /**
         * <pre>
         *分区是否可见
         * </pre>
         *
         * <code>optional bool is_visible = 15;</code>
         */
        public boolean getIsVisible() {
            return isVisible_;
        }

        public static final int MOUNT_POINT_FIELD_NUMBER = 16;
        private volatile Object mountPoint_;
        /**
         * <pre>
         *&#47;挂载点
         * </pre>
         *
         * <code>optional string mount_point = 16;</code>
         */
        public String getMountPoint() {
            Object ref = mountPoint_;
            if (ref instanceof String) {
                return (String) ref;
            } else {
                com.google.protobuf.ByteString bs =
                        (com.google.protobuf.ByteString) ref;
                String s = bs.toStringUtf8();
                mountPoint_ = s;
                return s;
            }
        }
        /**
         * <pre>
         *&#47;挂载点
         * </pre>
         *
         * <code>optional string mount_point = 16;</code>
         */
        public com.google.protobuf.ByteString
        getMountPointBytes() {
            Object ref = mountPoint_;
            if (ref instanceof String) {
                com.google.protobuf.ByteString b =
                        com.google.protobuf.ByteString.copyFromUtf8(
                                (String) ref);
                mountPoint_ = b;
                return b;
            } else {
                return (com.google.protobuf.ByteString) ref;
            }
        }

        public static final int BACKUPABLE_TYPE_FIELD_NUMBER = 17;
        private int backupableType_;
        /**
         * <pre>
         *可备份的类型，&gt;=0 表示可备份，&lt;0 表示不可备份
         * </pre>
         *
         * <code>optional int32 backupable_type = 17;</code>
         */
        public int getBackupableType() {
            return backupableType_;
        }

        private byte memoizedIsInitialized = -1;
        public final boolean isInitialized() {
            byte isInitialized = memoizedIsInitialized;
            if (isInitialized == 1) return true;
            if (isInitialized == 0) return false;

            memoizedIsInitialized = 1;
            return true;
        }

        public void writeTo(com.google.protobuf.CodedOutputStream output)
                throws java.io.IOException {
            if (!getDeviceUuidKeyBytes().isEmpty()) {
                com.google.protobuf.GeneratedMessageV3.writeString(output, 1, deviceUuidKey_);
            }
            if (key_ != null) {
                output.writeMessage(2, getKey());
            }
            if (diskKey_ != null) {
                output.writeMessage(3, getDiskKey());
            }
            if (index_ != 0) {
                output.writeUInt32(4, index_);
            }
            if (isOnline_ != false) {
                output.writeBool(5, isOnline_);
            }
            if (isBoot_ != false) {
                output.writeBool(6, isBoot_);
            }
            if (!getTypeBytes().isEmpty()) {
                com.google.protobuf.GeneratedMessageV3.writeString(output, 7, type_);
            }
            if (!getFilesystemTypeBytes().isEmpty()) {
                com.google.protobuf.GeneratedMessageV3.writeString(output, 8, filesystemType_);
            }
            if (startSector_ != 0L) {
                output.writeUInt64(9, startSector_);
            }
            if (totalSector_ != 0L) {
                output.writeUInt64(10, totalSector_);
            }
            if (usedSector_ != 0L) {
                output.writeUInt64(11, usedSector_);
            }
            if (isPv_ != false) {
                output.writeBool(12, isPv_);
            }
            if (isVirtual_ != false) {
                output.writeBool(13, isVirtual_);
            }
            if (!getNameBytes().isEmpty()) {
                com.google.protobuf.GeneratedMessageV3.writeString(output, 14, name_);
            }
            if (isVisible_ != false) {
                output.writeBool(15, isVisible_);
            }
            if (!getMountPointBytes().isEmpty()) {
                com.google.protobuf.GeneratedMessageV3.writeString(output, 16, mountPoint_);
            }
            if (backupableType_ != 0) {
                output.writeInt32(17, backupableType_);
            }
        }

        public int getSerializedSize() {
            int size = memoizedSize;
            if (size != -1) return size;

            size = 0;
            if (!getDeviceUuidKeyBytes().isEmpty()) {
                size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, deviceUuidKey_);
            }
            if (key_ != null) {
                size += com.google.protobuf.CodedOutputStream
                        .computeMessageSize(2, getKey());
            }
            if (diskKey_ != null) {
                size += com.google.protobuf.CodedOutputStream
                        .computeMessageSize(3, getDiskKey());
            }
            if (index_ != 0) {
                size += com.google.protobuf.CodedOutputStream
                        .computeUInt32Size(4, index_);
            }
            if (isOnline_ != false) {
                size += com.google.protobuf.CodedOutputStream
                        .computeBoolSize(5, isOnline_);
            }
            if (isBoot_ != false) {
                size += com.google.protobuf.CodedOutputStream
                        .computeBoolSize(6, isBoot_);
            }
            if (!getTypeBytes().isEmpty()) {
                size += com.google.protobuf.GeneratedMessageV3.computeStringSize(7, type_);
            }
            if (!getFilesystemTypeBytes().isEmpty()) {
                size += com.google.protobuf.GeneratedMessageV3.computeStringSize(8, filesystemType_);
            }
            if (startSector_ != 0L) {
                size += com.google.protobuf.CodedOutputStream
                        .computeUInt64Size(9, startSector_);
            }
            if (totalSector_ != 0L) {
                size += com.google.protobuf.CodedOutputStream
                        .computeUInt64Size(10, totalSector_);
            }
            if (usedSector_ != 0L) {
                size += com.google.protobuf.CodedOutputStream
                        .computeUInt64Size(11, usedSector_);
            }
            if (isPv_ != false) {
                size += com.google.protobuf.CodedOutputStream
                        .computeBoolSize(12, isPv_);
            }
            if (isVirtual_ != false) {
                size += com.google.protobuf.CodedOutputStream
                        .computeBoolSize(13, isVirtual_);
            }
            if (!getNameBytes().isEmpty()) {
                size += com.google.protobuf.GeneratedMessageV3.computeStringSize(14, name_);
            }
            if (isVisible_ != false) {
                size += com.google.protobuf.CodedOutputStream
                        .computeBoolSize(15, isVisible_);
            }
            if (!getMountPointBytes().isEmpty()) {
                size += com.google.protobuf.GeneratedMessageV3.computeStringSize(16, mountPoint_);
            }
            if (backupableType_ != 0) {
                size += com.google.protobuf.CodedOutputStream
                        .computeInt32Size(17, backupableType_);
            }
            memoizedSize = size;
            return size;
        }

        private static final long serialVersionUID = 0L;
        @Override
        public boolean equals(final Object obj) {
            if (obj == this) {
                return true;
            }
            if (!(obj instanceof cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.PartitionInfo)) {
                return super.equals(obj);
            }
            cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.PartitionInfo other = (cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.PartitionInfo) obj;

            boolean result = true;
            result = result && getDeviceUuidKey()
                    .equals(other.getDeviceUuidKey());
            result = result && (hasKey() == other.hasKey());
            if (hasKey()) {
                result = result && getKey()
                        .equals(other.getKey());
            }
            result = result && (hasDiskKey() == other.hasDiskKey());
            if (hasDiskKey()) {
                result = result && getDiskKey()
                        .equals(other.getDiskKey());
            }
            result = result && (getIndex()
                    == other.getIndex());
            result = result && (getIsOnline()
                    == other.getIsOnline());
            result = result && (getIsBoot()
                    == other.getIsBoot());
            result = result && getType()
                    .equals(other.getType());
            result = result && getFilesystemType()
                    .equals(other.getFilesystemType());
            result = result && (getStartSector()
                    == other.getStartSector());
            result = result && (getTotalSector()
                    == other.getTotalSector());
            result = result && (getUsedSector()
                    == other.getUsedSector());
            result = result && (getIsPv()
                    == other.getIsPv());
            result = result && (getIsVirtual()
                    == other.getIsVirtual());
            result = result && getName()
                    .equals(other.getName());
            result = result && (getIsVisible()
                    == other.getIsVisible());
            result = result && getMountPoint()
                    .equals(other.getMountPoint());
            result = result && (getBackupableType()
                    == other.getBackupableType());
            return result;
        }

        @Override
        public int hashCode() {
            if (memoizedHashCode != 0) {
                return memoizedHashCode;
            }
            int hash = 41;
            hash = (19 * hash) + getDescriptorForType().hashCode();
            hash = (37 * hash) + DEVICE_UUID_KEY_FIELD_NUMBER;
            hash = (53 * hash) + getDeviceUuidKey().hashCode();
            if (hasKey()) {
                hash = (37 * hash) + KEY_FIELD_NUMBER;
                hash = (53 * hash) + getKey().hashCode();
            }
            if (hasDiskKey()) {
                hash = (37 * hash) + DISK_KEY_FIELD_NUMBER;
                hash = (53 * hash) + getDiskKey().hashCode();
            }
            hash = (37 * hash) + INDEX_FIELD_NUMBER;
            hash = (53 * hash) + getIndex();
            hash = (37 * hash) + IS_ONLINE_FIELD_NUMBER;
            hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
                    getIsOnline());
            hash = (37 * hash) + IS_BOOT_FIELD_NUMBER;
            hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
                    getIsBoot());
            hash = (37 * hash) + TYPE_FIELD_NUMBER;
            hash = (53 * hash) + getType().hashCode();
            hash = (37 * hash) + FILESYSTEM_TYPE_FIELD_NUMBER;
            hash = (53 * hash) + getFilesystemType().hashCode();
            hash = (37 * hash) + START_SECTOR_FIELD_NUMBER;
            hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
                    getStartSector());
            hash = (37 * hash) + TOTAL_SECTOR_FIELD_NUMBER;
            hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
                    getTotalSector());
            hash = (37 * hash) + USED_SECTOR_FIELD_NUMBER;
            hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
                    getUsedSector());
            hash = (37 * hash) + IS_PV_FIELD_NUMBER;
            hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
                    getIsPv());
            hash = (37 * hash) + IS_VIRTUAL_FIELD_NUMBER;
            hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
                    getIsVirtual());
            hash = (37 * hash) + NAME_FIELD_NUMBER;
            hash = (53 * hash) + getName().hashCode();
            hash = (37 * hash) + IS_VISIBLE_FIELD_NUMBER;
            hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
                    getIsVisible());
            hash = (37 * hash) + MOUNT_POINT_FIELD_NUMBER;
            hash = (53 * hash) + getMountPoint().hashCode();
            hash = (37 * hash) + BACKUPABLE_TYPE_FIELD_NUMBER;
            hash = (53 * hash) + getBackupableType();
            hash = (29 * hash) + unknownFields.hashCode();
            memoizedHashCode = hash;
            return hash;
        }

        public static cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.PartitionInfo parseFrom(
                com.google.protobuf.ByteString data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }
        public static cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.PartitionInfo parseFrom(
                com.google.protobuf.ByteString data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }
        public static cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.PartitionInfo parseFrom(byte[] data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }
        public static cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.PartitionInfo parseFrom(
                byte[] data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }
        public static cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.PartitionInfo parseFrom(java.io.InputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input);
        }
        public static cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.PartitionInfo parseFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input, extensionRegistry);
        }
        public static cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.PartitionInfo parseDelimitedFrom(java.io.InputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseDelimitedWithIOException(PARSER, input);
        }
        public static cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.PartitionInfo parseDelimitedFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
        }
        public static cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.PartitionInfo parseFrom(
                com.google.protobuf.CodedInputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input);
        }
        public static cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.PartitionInfo parseFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input, extensionRegistry);
        }

        public Builder newBuilderForType() { return newBuilder(); }
        public static Builder newBuilder() {
            return DEFAULT_INSTANCE.toBuilder();
        }
        public static Builder newBuilder(cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.PartitionInfo prototype) {
            return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }
        public Builder toBuilder() {
            return this == DEFAULT_INSTANCE
                    ? new Builder() : new Builder().mergeFrom(this);
        }

        @Override
        protected Builder newBuilderForType(
                BuilderParent parent) {
            Builder builder = new Builder(parent);
            return builder;
        }
        /**
         * <pre>
         *设备分区信息
         * </pre>
         *
         * Protobuf type {@code one2data.rbtmqmsgcli.client.PartitionInfo}
         */
        public static final class Builder extends
                com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
                // @@protoc_insertion_point(builder_implements:one2data.rbtmqmsgcli.client.PartitionInfo)
                cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.PartitionInfoOrBuilder {
            public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
                return cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.internal_static_one2data_rbtmqmsgcli_client_PartitionInfo_descriptor;
            }

            protected FieldAccessorTable
            internalGetFieldAccessorTable() {
                return cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.internal_static_one2data_rbtmqmsgcli_client_PartitionInfo_fieldAccessorTable
                        .ensureFieldAccessorsInitialized(
                                cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.PartitionInfo.class, cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.PartitionInfo.Builder.class);
            }

            // Construct using cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.PartitionInfo.newBuilder()
            private Builder() {
                maybeForceBuilderInitialization();
            }

            private Builder(
                    BuilderParent parent) {
                super(parent);
                maybeForceBuilderInitialization();
            }
            private void maybeForceBuilderInitialization() {
                if (com.google.protobuf.GeneratedMessageV3
                        .alwaysUseFieldBuilders) {
                }
            }
            public Builder clear() {
                super.clear();
                deviceUuidKey_ = "";

                if (keyBuilder_ == null) {
                    key_ = null;
                } else {
                    key_ = null;
                    keyBuilder_ = null;
                }
                if (diskKeyBuilder_ == null) {
                    diskKey_ = null;
                } else {
                    diskKey_ = null;
                    diskKeyBuilder_ = null;
                }
                index_ = 0;

                isOnline_ = false;

                isBoot_ = false;

                type_ = "";

                filesystemType_ = "";

                startSector_ = 0L;

                totalSector_ = 0L;

                usedSector_ = 0L;

                isPv_ = false;

                isVirtual_ = false;

                name_ = "";

                isVisible_ = false;

                mountPoint_ = "";

                backupableType_ = 0;

                return this;
            }

            public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
                return cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.internal_static_one2data_rbtmqmsgcli_client_PartitionInfo_descriptor;
            }

            public cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.PartitionInfo getDefaultInstanceForType() {
                return cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.PartitionInfo.getDefaultInstance();
            }

            public cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.PartitionInfo build() {
                cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.PartitionInfo result = buildPartial();
                if (!result.isInitialized()) {
                    throw newUninitializedMessageException(result);
                }
                return result;
            }

            public cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.PartitionInfo buildPartial() {
                cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.PartitionInfo result = new cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.PartitionInfo(this);
                result.deviceUuidKey_ = deviceUuidKey_;
                if (keyBuilder_ == null) {
                    result.key_ = key_;
                } else {
                    result.key_ = keyBuilder_.build();
                }
                if (diskKeyBuilder_ == null) {
                    result.diskKey_ = diskKey_;
                } else {
                    result.diskKey_ = diskKeyBuilder_.build();
                }
                result.index_ = index_;
                result.isOnline_ = isOnline_;
                result.isBoot_ = isBoot_;
                result.type_ = type_;
                result.filesystemType_ = filesystemType_;
                result.startSector_ = startSector_;
                result.totalSector_ = totalSector_;
                result.usedSector_ = usedSector_;
                result.isPv_ = isPv_;
                result.isVirtual_ = isVirtual_;
                result.name_ = name_;
                result.isVisible_ = isVisible_;
                result.mountPoint_ = mountPoint_;
                result.backupableType_ = backupableType_;
                onBuilt();
                return result;
            }

            public Builder clone() {
                return (Builder) super.clone();
            }
            public Builder setField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    Object value) {
                return (Builder) super.setField(field, value);
            }
            public Builder clearField(
                    com.google.protobuf.Descriptors.FieldDescriptor field) {
                return (Builder) super.clearField(field);
            }
            public Builder clearOneof(
                    com.google.protobuf.Descriptors.OneofDescriptor oneof) {
                return (Builder) super.clearOneof(oneof);
            }
            public Builder setRepeatedField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    int index, Object value) {
                return (Builder) super.setRepeatedField(field, index, value);
            }
            public Builder addRepeatedField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    Object value) {
                return (Builder) super.addRepeatedField(field, value);
            }
            public Builder mergeFrom(com.google.protobuf.Message other) {
                if (other instanceof cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.PartitionInfo) {
                    return mergeFrom((cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.PartitionInfo)other);
                } else {
                    super.mergeFrom(other);
                    return this;
                }
            }

            public Builder mergeFrom(cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.PartitionInfo other) {
                if (other == cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.PartitionInfo.getDefaultInstance()) return this;
                if (!other.getDeviceUuidKey().isEmpty()) {
                    deviceUuidKey_ = other.deviceUuidKey_;
                    onChanged();
                }
                if (other.hasKey()) {
                    mergeKey(other.getKey());
                }
                if (other.hasDiskKey()) {
                    mergeDiskKey(other.getDiskKey());
                }
                if (other.getIndex() != 0) {
                    setIndex(other.getIndex());
                }
                if (other.getIsOnline() != false) {
                    setIsOnline(other.getIsOnline());
                }
                if (other.getIsBoot() != false) {
                    setIsBoot(other.getIsBoot());
                }
                if (!other.getType().isEmpty()) {
                    type_ = other.type_;
                    onChanged();
                }
                if (!other.getFilesystemType().isEmpty()) {
                    filesystemType_ = other.filesystemType_;
                    onChanged();
                }
                if (other.getStartSector() != 0L) {
                    setStartSector(other.getStartSector());
                }
                if (other.getTotalSector() != 0L) {
                    setTotalSector(other.getTotalSector());
                }
                if (other.getUsedSector() != 0L) {
                    setUsedSector(other.getUsedSector());
                }
                if (other.getIsPv() != false) {
                    setIsPv(other.getIsPv());
                }
                if (other.getIsVirtual() != false) {
                    setIsVirtual(other.getIsVirtual());
                }
                if (!other.getName().isEmpty()) {
                    name_ = other.name_;
                    onChanged();
                }
                if (other.getIsVisible() != false) {
                    setIsVisible(other.getIsVisible());
                }
                if (!other.getMountPoint().isEmpty()) {
                    mountPoint_ = other.mountPoint_;
                    onChanged();
                }
                if (other.getBackupableType() != 0) {
                    setBackupableType(other.getBackupableType());
                }
                onChanged();
                return this;
            }

            public final boolean isInitialized() {
                return true;
            }

            public Builder mergeFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws java.io.IOException {
                cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.PartitionInfo parsedMessage = null;
                try {
                    parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
                } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                    parsedMessage = (cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.PartitionInfo) e.getUnfinishedMessage();
                    throw e.unwrapIOException();
                } finally {
                    if (parsedMessage != null) {
                        mergeFrom(parsedMessage);
                    }
                }
                return this;
            }

            private Object deviceUuidKey_ = "";
            /**
             * <pre>
             *设备内部唯一ID
             * </pre>
             *
             * <code>optional string device_uuid_key = 1;</code>
             */
            public String getDeviceUuidKey() {
                Object ref = deviceUuidKey_;
                if (!(ref instanceof String)) {
                    com.google.protobuf.ByteString bs =
                            (com.google.protobuf.ByteString) ref;
                    String s = bs.toStringUtf8();
                    deviceUuidKey_ = s;
                    return s;
                } else {
                    return (String) ref;
                }
            }
            /**
             * <pre>
             *设备内部唯一ID
             * </pre>
             *
             * <code>optional string device_uuid_key = 1;</code>
             */
            public com.google.protobuf.ByteString
            getDeviceUuidKeyBytes() {
                Object ref = deviceUuidKey_;
                if (ref instanceof String) {
                    com.google.protobuf.ByteString b =
                            com.google.protobuf.ByteString.copyFromUtf8(
                                    (String) ref);
                    deviceUuidKey_ = b;
                    return b;
                } else {
                    return (com.google.protobuf.ByteString) ref;
                }
            }
            /**
             * <pre>
             *设备内部唯一ID
             * </pre>
             *
             * <code>optional string device_uuid_key = 1;</code>
             */
            public Builder setDeviceUuidKey(
                    String value) {
                if (value == null) {
                    throw new NullPointerException();
                }

                deviceUuidKey_ = value;
                onChanged();
                return this;
            }
            /**
             * <pre>
             *设备内部唯一ID
             * </pre>
             *
             * <code>optional string device_uuid_key = 1;</code>
             */
            public Builder clearDeviceUuidKey() {

                deviceUuidKey_ = getDefaultInstance().getDeviceUuidKey();
                onChanged();
                return this;
            }
            /**
             * <pre>
             *设备内部唯一ID
             * </pre>
             *
             * <code>optional string device_uuid_key = 1;</code>
             */
            public Builder setDeviceUuidKeyBytes(
                    com.google.protobuf.ByteString value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                checkByteStringIsUtf8(value);

                deviceUuidKey_ = value;
                onChanged();
                return this;
            }

            private cn.keptdata.one2data.header.message.protobuf.common.Node.BlockDeviceKey key_ = null;
            private com.google.protobuf.SingleFieldBuilderV3<
                    cn.keptdata.one2data.header.message.protobuf.common.Node.BlockDeviceKey, cn.keptdata.one2data.header.message.protobuf.common.Node.BlockDeviceKey.Builder, cn.keptdata.one2data.header.message.protobuf.common.Node.BlockDeviceKeyOrBuilder> keyBuilder_;
            /**
             * <pre>
             *分区内部唯一标识
             * </pre>
             *
             * <code>optional .one2data.rbtmqmsgcli.common.BlockDeviceKey key = 2;</code>
             */
            public boolean hasKey() {
                return keyBuilder_ != null || key_ != null;
            }
            /**
             * <pre>
             *分区内部唯一标识
             * </pre>
             *
             * <code>optional .one2data.rbtmqmsgcli.common.BlockDeviceKey key = 2;</code>
             */
            public cn.keptdata.one2data.header.message.protobuf.common.Node.BlockDeviceKey getKey() {
                if (keyBuilder_ == null) {
                    return key_ == null ? cn.keptdata.one2data.header.message.protobuf.common.Node.BlockDeviceKey.getDefaultInstance() : key_;
                } else {
                    return keyBuilder_.getMessage();
                }
            }
            /**
             * <pre>
             *分区内部唯一标识
             * </pre>
             *
             * <code>optional .one2data.rbtmqmsgcli.common.BlockDeviceKey key = 2;</code>
             */
            public Builder setKey(cn.keptdata.one2data.header.message.protobuf.common.Node.BlockDeviceKey value) {
                if (keyBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    key_ = value;
                    onChanged();
                } else {
                    keyBuilder_.setMessage(value);
                }

                return this;
            }
            /**
             * <pre>
             *分区内部唯一标识
             * </pre>
             *
             * <code>optional .one2data.rbtmqmsgcli.common.BlockDeviceKey key = 2;</code>
             */
            public Builder setKey(
                    cn.keptdata.one2data.header.message.protobuf.common.Node.BlockDeviceKey.Builder builderForValue) {
                if (keyBuilder_ == null) {
                    key_ = builderForValue.build();
                    onChanged();
                } else {
                    keyBuilder_.setMessage(builderForValue.build());
                }

                return this;
            }
            /**
             * <pre>
             *分区内部唯一标识
             * </pre>
             *
             * <code>optional .one2data.rbtmqmsgcli.common.BlockDeviceKey key = 2;</code>
             */
            public Builder mergeKey(cn.keptdata.one2data.header.message.protobuf.common.Node.BlockDeviceKey value) {
                if (keyBuilder_ == null) {
                    if (key_ != null) {
                        key_ =
                                cn.keptdata.one2data.header.message.protobuf.common.Node.BlockDeviceKey.newBuilder(key_).mergeFrom(value).buildPartial();
                    } else {
                        key_ = value;
                    }
                    onChanged();
                } else {
                    keyBuilder_.mergeFrom(value);
                }

                return this;
            }
            /**
             * <pre>
             *分区内部唯一标识
             * </pre>
             *
             * <code>optional .one2data.rbtmqmsgcli.common.BlockDeviceKey key = 2;</code>
             */
            public Builder clearKey() {
                if (keyBuilder_ == null) {
                    key_ = null;
                    onChanged();
                } else {
                    key_ = null;
                    keyBuilder_ = null;
                }

                return this;
            }
            /**
             * <pre>
             *分区内部唯一标识
             * </pre>
             *
             * <code>optional .one2data.rbtmqmsgcli.common.BlockDeviceKey key = 2;</code>
             */
            public cn.keptdata.one2data.header.message.protobuf.common.Node.BlockDeviceKey.Builder getKeyBuilder() {

                onChanged();
                return getKeyFieldBuilder().getBuilder();
            }
            /**
             * <pre>
             *分区内部唯一标识
             * </pre>
             *
             * <code>optional .one2data.rbtmqmsgcli.common.BlockDeviceKey key = 2;</code>
             */
            public cn.keptdata.one2data.header.message.protobuf.common.Node.BlockDeviceKeyOrBuilder getKeyOrBuilder() {
                if (keyBuilder_ != null) {
                    return keyBuilder_.getMessageOrBuilder();
                } else {
                    return key_ == null ?
                            cn.keptdata.one2data.header.message.protobuf.common.Node.BlockDeviceKey.getDefaultInstance() : key_;
                }
            }
            /**
             * <pre>
             *分区内部唯一标识
             * </pre>
             *
             * <code>optional .one2data.rbtmqmsgcli.common.BlockDeviceKey key = 2;</code>
             */
            private com.google.protobuf.SingleFieldBuilderV3<
                    cn.keptdata.one2data.header.message.protobuf.common.Node.BlockDeviceKey, cn.keptdata.one2data.header.message.protobuf.common.Node.BlockDeviceKey.Builder, cn.keptdata.one2data.header.message.protobuf.common.Node.BlockDeviceKeyOrBuilder>
            getKeyFieldBuilder() {
                if (keyBuilder_ == null) {
                    keyBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                            cn.keptdata.one2data.header.message.protobuf.common.Node.BlockDeviceKey, cn.keptdata.one2data.header.message.protobuf.common.Node.BlockDeviceKey.Builder, cn.keptdata.one2data.header.message.protobuf.common.Node.BlockDeviceKeyOrBuilder>(
                            getKey(),
                            getParentForChildren(),
                            isClean());
                    key_ = null;
                }
                return keyBuilder_;
            }

            private cn.keptdata.one2data.header.message.protobuf.common.Node.BlockDeviceKey diskKey_ = null;
            private com.google.protobuf.SingleFieldBuilderV3<
                    cn.keptdata.one2data.header.message.protobuf.common.Node.BlockDeviceKey, cn.keptdata.one2data.header.message.protobuf.common.Node.BlockDeviceKey.Builder, cn.keptdata.one2data.header.message.protobuf.common.Node.BlockDeviceKeyOrBuilder> diskKeyBuilder_;
            /**
             * <pre>
             *所属磁盘唯一标识
             * </pre>
             *
             * <code>optional .one2data.rbtmqmsgcli.common.BlockDeviceKey disk_key = 3;</code>
             */
            public boolean hasDiskKey() {
                return diskKeyBuilder_ != null || diskKey_ != null;
            }
            /**
             * <pre>
             *所属磁盘唯一标识
             * </pre>
             *
             * <code>optional .one2data.rbtmqmsgcli.common.BlockDeviceKey disk_key = 3;</code>
             */
            public cn.keptdata.one2data.header.message.protobuf.common.Node.BlockDeviceKey getDiskKey() {
                if (diskKeyBuilder_ == null) {
                    return diskKey_ == null ? cn.keptdata.one2data.header.message.protobuf.common.Node.BlockDeviceKey.getDefaultInstance() : diskKey_;
                } else {
                    return diskKeyBuilder_.getMessage();
                }
            }
            /**
             * <pre>
             *所属磁盘唯一标识
             * </pre>
             *
             * <code>optional .one2data.rbtmqmsgcli.common.BlockDeviceKey disk_key = 3;</code>
             */
            public Builder setDiskKey(cn.keptdata.one2data.header.message.protobuf.common.Node.BlockDeviceKey value) {
                if (diskKeyBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    diskKey_ = value;
                    onChanged();
                } else {
                    diskKeyBuilder_.setMessage(value);
                }

                return this;
            }
            /**
             * <pre>
             *所属磁盘唯一标识
             * </pre>
             *
             * <code>optional .one2data.rbtmqmsgcli.common.BlockDeviceKey disk_key = 3;</code>
             */
            public Builder setDiskKey(
                    cn.keptdata.one2data.header.message.protobuf.common.Node.BlockDeviceKey.Builder builderForValue) {
                if (diskKeyBuilder_ == null) {
                    diskKey_ = builderForValue.build();
                    onChanged();
                } else {
                    diskKeyBuilder_.setMessage(builderForValue.build());
                }

                return this;
            }
            /**
             * <pre>
             *所属磁盘唯一标识
             * </pre>
             *
             * <code>optional .one2data.rbtmqmsgcli.common.BlockDeviceKey disk_key = 3;</code>
             */
            public Builder mergeDiskKey(cn.keptdata.one2data.header.message.protobuf.common.Node.BlockDeviceKey value) {
                if (diskKeyBuilder_ == null) {
                    if (diskKey_ != null) {
                        diskKey_ =
                                cn.keptdata.one2data.header.message.protobuf.common.Node.BlockDeviceKey.newBuilder(diskKey_).mergeFrom(value).buildPartial();
                    } else {
                        diskKey_ = value;
                    }
                    onChanged();
                } else {
                    diskKeyBuilder_.mergeFrom(value);
                }

                return this;
            }
            /**
             * <pre>
             *所属磁盘唯一标识
             * </pre>
             *
             * <code>optional .one2data.rbtmqmsgcli.common.BlockDeviceKey disk_key = 3;</code>
             */
            public Builder clearDiskKey() {
                if (diskKeyBuilder_ == null) {
                    diskKey_ = null;
                    onChanged();
                } else {
                    diskKey_ = null;
                    diskKeyBuilder_ = null;
                }

                return this;
            }
            /**
             * <pre>
             *所属磁盘唯一标识
             * </pre>
             *
             * <code>optional .one2data.rbtmqmsgcli.common.BlockDeviceKey disk_key = 3;</code>
             */
            public cn.keptdata.one2data.header.message.protobuf.common.Node.BlockDeviceKey.Builder getDiskKeyBuilder() {

                onChanged();
                return getDiskKeyFieldBuilder().getBuilder();
            }
            /**
             * <pre>
             *所属磁盘唯一标识
             * </pre>
             *
             * <code>optional .one2data.rbtmqmsgcli.common.BlockDeviceKey disk_key = 3;</code>
             */
            public cn.keptdata.one2data.header.message.protobuf.common.Node.BlockDeviceKeyOrBuilder getDiskKeyOrBuilder() {
                if (diskKeyBuilder_ != null) {
                    return diskKeyBuilder_.getMessageOrBuilder();
                } else {
                    return diskKey_ == null ?
                            cn.keptdata.one2data.header.message.protobuf.common.Node.BlockDeviceKey.getDefaultInstance() : diskKey_;
                }
            }
            /**
             * <pre>
             *所属磁盘唯一标识
             * </pre>
             *
             * <code>optional .one2data.rbtmqmsgcli.common.BlockDeviceKey disk_key = 3;</code>
             */
            private com.google.protobuf.SingleFieldBuilderV3<
                    cn.keptdata.one2data.header.message.protobuf.common.Node.BlockDeviceKey, cn.keptdata.one2data.header.message.protobuf.common.Node.BlockDeviceKey.Builder, cn.keptdata.one2data.header.message.protobuf.common.Node.BlockDeviceKeyOrBuilder>
            getDiskKeyFieldBuilder() {
                if (diskKeyBuilder_ == null) {
                    diskKeyBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                            cn.keptdata.one2data.header.message.protobuf.common.Node.BlockDeviceKey, cn.keptdata.one2data.header.message.protobuf.common.Node.BlockDeviceKey.Builder, cn.keptdata.one2data.header.message.protobuf.common.Node.BlockDeviceKeyOrBuilder>(
                            getDiskKey(),
                            getParentForChildren(),
                            isClean());
                    diskKey_ = null;
                }
                return diskKeyBuilder_;
            }

            private int index_ ;
            /**
             * <pre>
             *分区内部索引
             * </pre>
             *
             * <code>optional uint32 index = 4;</code>
             */
            public int getIndex() {
                return index_;
            }
            /**
             * <pre>
             *分区内部索引
             * </pre>
             *
             * <code>optional uint32 index = 4;</code>
             */
            public Builder setIndex(int value) {

                index_ = value;
                onChanged();
                return this;
            }
            /**
             * <pre>
             *分区内部索引
             * </pre>
             *
             * <code>optional uint32 index = 4;</code>
             */
            public Builder clearIndex() {

                index_ = 0;
                onChanged();
                return this;
            }

            private boolean isOnline_ ;
            /**
             * <pre>
             *分区是否在线
             * </pre>
             *
             * <code>optional bool is_online = 5;</code>
             */
            public boolean getIsOnline() {
                return isOnline_;
            }
            /**
             * <pre>
             *分区是否在线
             * </pre>
             *
             * <code>optional bool is_online = 5;</code>
             */
            public Builder setIsOnline(boolean value) {

                isOnline_ = value;
                onChanged();
                return this;
            }
            /**
             * <pre>
             *分区是否在线
             * </pre>
             *
             * <code>optional bool is_online = 5;</code>
             */
            public Builder clearIsOnline() {

                isOnline_ = false;
                onChanged();
                return this;
            }

            private boolean isBoot_ ;
            /**
             * <pre>
             *是否是启动分区
             * </pre>
             *
             * <code>optional bool is_boot = 6;</code>
             */
            public boolean getIsBoot() {
                return isBoot_;
            }
            /**
             * <pre>
             *是否是启动分区
             * </pre>
             *
             * <code>optional bool is_boot = 6;</code>
             */
            public Builder setIsBoot(boolean value) {

                isBoot_ = value;
                onChanged();
                return this;
            }
            /**
             * <pre>
             *是否是启动分区
             * </pre>
             *
             * <code>optional bool is_boot = 6;</code>
             */
            public Builder clearIsBoot() {

                isBoot_ = false;
                onChanged();
                return this;
            }

            private Object type_ = "";
            /**
             * <pre>
             *分区类型,如：Linux 83 保留
             * </pre>
             *
             * <code>optional string type = 7;</code>
             */
            public String getType() {
                Object ref = type_;
                if (!(ref instanceof String)) {
                    com.google.protobuf.ByteString bs =
                            (com.google.protobuf.ByteString) ref;
                    String s = bs.toStringUtf8();
                    type_ = s;
                    return s;
                } else {
                    return (String) ref;
                }
            }
            /**
             * <pre>
             *分区类型,如：Linux 83 保留
             * </pre>
             *
             * <code>optional string type = 7;</code>
             */
            public com.google.protobuf.ByteString
            getTypeBytes() {
                Object ref = type_;
                if (ref instanceof String) {
                    com.google.protobuf.ByteString b =
                            com.google.protobuf.ByteString.copyFromUtf8(
                                    (String) ref);
                    type_ = b;
                    return b;
                } else {
                    return (com.google.protobuf.ByteString) ref;
                }
            }
            /**
             * <pre>
             *分区类型,如：Linux 83 保留
             * </pre>
             *
             * <code>optional string type = 7;</code>
             */
            public Builder setType(
                    String value) {
                if (value == null) {
                    throw new NullPointerException();
                }

                type_ = value;
                onChanged();
                return this;
            }
            /**
             * <pre>
             *分区类型,如：Linux 83 保留
             * </pre>
             *
             * <code>optional string type = 7;</code>
             */
            public Builder clearType() {

                type_ = getDefaultInstance().getType();
                onChanged();
                return this;
            }
            /**
             * <pre>
             *分区类型,如：Linux 83 保留
             * </pre>
             *
             * <code>optional string type = 7;</code>
             */
            public Builder setTypeBytes(
                    com.google.protobuf.ByteString value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                checkByteStringIsUtf8(value);

                type_ = value;
                onChanged();
                return this;
            }

            private Object filesystemType_ = "";
            /**
             * <pre>
             *文件系统类型
             * </pre>
             *
             * <code>optional string filesystem_type = 8;</code>
             */
            public String getFilesystemType() {
                Object ref = filesystemType_;
                if (!(ref instanceof String)) {
                    com.google.protobuf.ByteString bs =
                            (com.google.protobuf.ByteString) ref;
                    String s = bs.toStringUtf8();
                    filesystemType_ = s;
                    return s;
                } else {
                    return (String) ref;
                }
            }
            /**
             * <pre>
             *文件系统类型
             * </pre>
             *
             * <code>optional string filesystem_type = 8;</code>
             */
            public com.google.protobuf.ByteString
            getFilesystemTypeBytes() {
                Object ref = filesystemType_;
                if (ref instanceof String) {
                    com.google.protobuf.ByteString b =
                            com.google.protobuf.ByteString.copyFromUtf8(
                                    (String) ref);
                    filesystemType_ = b;
                    return b;
                } else {
                    return (com.google.protobuf.ByteString) ref;
                }
            }
            /**
             * <pre>
             *文件系统类型
             * </pre>
             *
             * <code>optional string filesystem_type = 8;</code>
             */
            public Builder setFilesystemType(
                    String value) {
                if (value == null) {
                    throw new NullPointerException();
                }

                filesystemType_ = value;
                onChanged();
                return this;
            }
            /**
             * <pre>
             *文件系统类型
             * </pre>
             *
             * <code>optional string filesystem_type = 8;</code>
             */
            public Builder clearFilesystemType() {

                filesystemType_ = getDefaultInstance().getFilesystemType();
                onChanged();
                return this;
            }
            /**
             * <pre>
             *文件系统类型
             * </pre>
             *
             * <code>optional string filesystem_type = 8;</code>
             */
            public Builder setFilesystemTypeBytes(
                    com.google.protobuf.ByteString value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                checkByteStringIsUtf8(value);

                filesystemType_ = value;
                onChanged();
                return this;
            }

            private long startSector_ ;
            /**
             * <pre>
             *起始扇区编号
             * </pre>
             *
             * <code>optional uint64 start_sector = 9;</code>
             */
            public long getStartSector() {
                return startSector_;
            }
            /**
             * <pre>
             *起始扇区编号
             * </pre>
             *
             * <code>optional uint64 start_sector = 9;</code>
             */
            public Builder setStartSector(long value) {

                startSector_ = value;
                onChanged();
                return this;
            }
            /**
             * <pre>
             *起始扇区编号
             * </pre>
             *
             * <code>optional uint64 start_sector = 9;</code>
             */
            public Builder clearStartSector() {

                startSector_ = 0L;
                onChanged();
                return this;
            }

            private long totalSector_ ;
            /**
             * <pre>
             *总扇区个数
             * </pre>
             *
             * <code>optional uint64 total_sector = 10;</code>
             */
            public long getTotalSector() {
                return totalSector_;
            }
            /**
             * <pre>
             *总扇区个数
             * </pre>
             *
             * <code>optional uint64 total_sector = 10;</code>
             */
            public Builder setTotalSector(long value) {

                totalSector_ = value;
                onChanged();
                return this;
            }
            /**
             * <pre>
             *总扇区个数
             * </pre>
             *
             * <code>optional uint64 total_sector = 10;</code>
             */
            public Builder clearTotalSector() {

                totalSector_ = 0L;
                onChanged();
                return this;
            }

            private long usedSector_ ;
            /**
             * <pre>
             *已用扇区个数 保留
             * </pre>
             *
             * <code>optional uint64 used_sector = 11;</code>
             */
            public long getUsedSector() {
                return usedSector_;
            }
            /**
             * <pre>
             *已用扇区个数 保留
             * </pre>
             *
             * <code>optional uint64 used_sector = 11;</code>
             */
            public Builder setUsedSector(long value) {

                usedSector_ = value;
                onChanged();
                return this;
            }
            /**
             * <pre>
             *已用扇区个数 保留
             * </pre>
             *
             * <code>optional uint64 used_sector = 11;</code>
             */
            public Builder clearUsedSector() {

                usedSector_ = 0L;
                onChanged();
                return this;
            }

            private boolean isPv_ ;
            /**
             * <pre>
             *是否是物理卷
             * </pre>
             *
             * <code>optional bool is_pv = 12;</code>
             */
            public boolean getIsPv() {
                return isPv_;
            }
            /**
             * <pre>
             *是否是物理卷
             * </pre>
             *
             * <code>optional bool is_pv = 12;</code>
             */
            public Builder setIsPv(boolean value) {

                isPv_ = value;
                onChanged();
                return this;
            }
            /**
             * <pre>
             *是否是物理卷
             * </pre>
             *
             * <code>optional bool is_pv = 12;</code>
             */
            public Builder clearIsPv() {

                isPv_ = false;
                onChanged();
                return this;
            }

            private boolean isVirtual_ ;
            /**
             * <pre>
             *是否是虚拟分区
             * </pre>
             *
             * <code>optional bool is_virtual = 13;</code>
             */
            public boolean getIsVirtual() {
                return isVirtual_;
            }
            /**
             * <pre>
             *是否是虚拟分区
             * </pre>
             *
             * <code>optional bool is_virtual = 13;</code>
             */
            public Builder setIsVirtual(boolean value) {

                isVirtual_ = value;
                onChanged();
                return this;
            }
            /**
             * <pre>
             *是否是虚拟分区
             * </pre>
             *
             * <code>optional bool is_virtual = 13;</code>
             */
            public Builder clearIsVirtual() {

                isVirtual_ = false;
                onChanged();
                return this;
            }

            private Object name_ = "";
            /**
             * <pre>
             *分区名称，用于显示
             * </pre>
             *
             * <code>optional string name = 14;</code>
             */
            public String getName() {
                Object ref = name_;
                if (!(ref instanceof String)) {
                    com.google.protobuf.ByteString bs =
                            (com.google.protobuf.ByteString) ref;
                    String s = bs.toStringUtf8();
                    name_ = s;
                    return s;
                } else {
                    return (String) ref;
                }
            }
            /**
             * <pre>
             *分区名称，用于显示
             * </pre>
             *
             * <code>optional string name = 14;</code>
             */
            public com.google.protobuf.ByteString
            getNameBytes() {
                Object ref = name_;
                if (ref instanceof String) {
                    com.google.protobuf.ByteString b =
                            com.google.protobuf.ByteString.copyFromUtf8(
                                    (String) ref);
                    name_ = b;
                    return b;
                } else {
                    return (com.google.protobuf.ByteString) ref;
                }
            }
            /**
             * <pre>
             *分区名称，用于显示
             * </pre>
             *
             * <code>optional string name = 14;</code>
             */
            public Builder setName(
                    String value) {
                if (value == null) {
                    throw new NullPointerException();
                }

                name_ = value;
                onChanged();
                return this;
            }
            /**
             * <pre>
             *分区名称，用于显示
             * </pre>
             *
             * <code>optional string name = 14;</code>
             */
            public Builder clearName() {

                name_ = getDefaultInstance().getName();
                onChanged();
                return this;
            }
            /**
             * <pre>
             *分区名称，用于显示
             * </pre>
             *
             * <code>optional string name = 14;</code>
             */
            public Builder setNameBytes(
                    com.google.protobuf.ByteString value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                checkByteStringIsUtf8(value);

                name_ = value;
                onChanged();
                return this;
            }

            private boolean isVisible_ ;
            /**
             * <pre>
             *分区是否可见
             * </pre>
             *
             * <code>optional bool is_visible = 15;</code>
             */
            public boolean getIsVisible() {
                return isVisible_;
            }
            /**
             * <pre>
             *分区是否可见
             * </pre>
             *
             * <code>optional bool is_visible = 15;</code>
             */
            public Builder setIsVisible(boolean value) {

                isVisible_ = value;
                onChanged();
                return this;
            }
            /**
             * <pre>
             *分区是否可见
             * </pre>
             *
             * <code>optional bool is_visible = 15;</code>
             */
            public Builder clearIsVisible() {

                isVisible_ = false;
                onChanged();
                return this;
            }

            private Object mountPoint_ = "";
            /**
             * <pre>
             *&#47;挂载点
             * </pre>
             *
             * <code>optional string mount_point = 16;</code>
             */
            public String getMountPoint() {
                Object ref = mountPoint_;
                if (!(ref instanceof String)) {
                    com.google.protobuf.ByteString bs =
                            (com.google.protobuf.ByteString) ref;
                    String s = bs.toStringUtf8();
                    mountPoint_ = s;
                    return s;
                } else {
                    return (String) ref;
                }
            }
            /**
             * <pre>
             *&#47;挂载点
             * </pre>
             *
             * <code>optional string mount_point = 16;</code>
             */
            public com.google.protobuf.ByteString
            getMountPointBytes() {
                Object ref = mountPoint_;
                if (ref instanceof String) {
                    com.google.protobuf.ByteString b =
                            com.google.protobuf.ByteString.copyFromUtf8(
                                    (String) ref);
                    mountPoint_ = b;
                    return b;
                } else {
                    return (com.google.protobuf.ByteString) ref;
                }
            }
            /**
             * <pre>
             *&#47;挂载点
             * </pre>
             *
             * <code>optional string mount_point = 16;</code>
             */
            public Builder setMountPoint(
                    String value) {
                if (value == null) {
                    throw new NullPointerException();
                }

                mountPoint_ = value;
                onChanged();
                return this;
            }
            /**
             * <pre>
             *&#47;挂载点
             * </pre>
             *
             * <code>optional string mount_point = 16;</code>
             */
            public Builder clearMountPoint() {

                mountPoint_ = getDefaultInstance().getMountPoint();
                onChanged();
                return this;
            }
            /**
             * <pre>
             *&#47;挂载点
             * </pre>
             *
             * <code>optional string mount_point = 16;</code>
             */
            public Builder setMountPointBytes(
                    com.google.protobuf.ByteString value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                checkByteStringIsUtf8(value);

                mountPoint_ = value;
                onChanged();
                return this;
            }

            private int backupableType_ ;
            /**
             * <pre>
             *可备份的类型，&gt;=0 表示可备份，&lt;0 表示不可备份
             * </pre>
             *
             * <code>optional int32 backupable_type = 17;</code>
             */
            public int getBackupableType() {
                return backupableType_;
            }
            /**
             * <pre>
             *可备份的类型，&gt;=0 表示可备份，&lt;0 表示不可备份
             * </pre>
             *
             * <code>optional int32 backupable_type = 17;</code>
             */
            public Builder setBackupableType(int value) {

                backupableType_ = value;
                onChanged();
                return this;
            }
            /**
             * <pre>
             *可备份的类型，&gt;=0 表示可备份，&lt;0 表示不可备份
             * </pre>
             *
             * <code>optional int32 backupable_type = 17;</code>
             */
            public Builder clearBackupableType() {

                backupableType_ = 0;
                onChanged();
                return this;
            }
            public final Builder setUnknownFields(
                    final com.google.protobuf.UnknownFieldSet unknownFields) {
                return this;
            }

            public final Builder mergeUnknownFields(
                    final com.google.protobuf.UnknownFieldSet unknownFields) {
                return this;
            }


            // @@protoc_insertion_point(builder_scope:one2data.rbtmqmsgcli.client.PartitionInfo)
        }

        // @@protoc_insertion_point(class_scope:one2data.rbtmqmsgcli.client.PartitionInfo)
        private static final cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.PartitionInfo DEFAULT_INSTANCE;
        static {
            DEFAULT_INSTANCE = new cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.PartitionInfo();
        }

        public static cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.PartitionInfo getDefaultInstance() {
            return DEFAULT_INSTANCE;
        }

        private static final com.google.protobuf.Parser<PartitionInfo>
                PARSER = new com.google.protobuf.AbstractParser<PartitionInfo>() {
            public PartitionInfo parsePartialFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws com.google.protobuf.InvalidProtocolBufferException {
                return new PartitionInfo(input, extensionRegistry);
            }
        };

        public static com.google.protobuf.Parser<PartitionInfo> parser() {
            return PARSER;
        }

        @Override
        public com.google.protobuf.Parser<PartitionInfo> getParserForType() {
            return PARSER;
        }

        public cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.PartitionInfo getDefaultInstanceForType() {
            return DEFAULT_INSTANCE;
        }

    }

    public interface LVInfoOrBuilder extends
            // @@protoc_insertion_point(interface_extends:one2data.rbtmqmsgcli.client.LVInfo)
            com.google.protobuf.MessageOrBuilder {

        /**
         * <pre>
         *设备内部唯一ID
         * </pre>
         *
         * <code>optional string device_uuid_key = 1;</code>
         */
        String getDeviceUuidKey();
        /**
         * <pre>
         *设备内部唯一ID
         * </pre>
         *
         * <code>optional string device_uuid_key = 1;</code>
         */
        com.google.protobuf.ByteString
        getDeviceUuidKeyBytes();

        /**
         * <pre>
         *逻辑卷内部唯一标识
         * </pre>
         *
         * <code>optional .one2data.rbtmqmsgcli.common.BlockDeviceKey key = 2;</code>
         */
        boolean hasKey();
        /**
         * <pre>
         *逻辑卷内部唯一标识
         * </pre>
         *
         * <code>optional .one2data.rbtmqmsgcli.common.BlockDeviceKey key = 2;</code>
         */
        cn.keptdata.one2data.header.message.protobuf.common.Node.BlockDeviceKey getKey();
        /**
         * <pre>
         *逻辑卷内部唯一标识
         * </pre>
         *
         * <code>optional .one2data.rbtmqmsgcli.common.BlockDeviceKey key = 2;</code>
         */
        cn.keptdata.one2data.header.message.protobuf.common.Node.BlockDeviceKeyOrBuilder getKeyOrBuilder();

        /**
         * <pre>
         *逻辑卷是否在线
         * </pre>
         *
         * <code>optional bool is_online = 3;</code>
         */
        boolean getIsOnline();

        /**
         * <pre>
         *逻辑卷名称，如windows平台的盘符: C:
         * </pre>
         *
         * <code>optional string name = 4;</code>
         */
        String getName();
        /**
         * <pre>
         *逻辑卷名称，如windows平台的盘符: C:
         * </pre>
         *
         * <code>optional string name = 4;</code>
         */
        com.google.protobuf.ByteString
        getNameBytes();

        /**
         * <pre>
         *逻辑卷别名, 如windows的盘符的别名：本地磁盘
         * </pre>
         *
         * <code>optional string label = 5;</code>
         */
        String getLabel();
        /**
         * <pre>
         *逻辑卷别名, 如windows的盘符的别名：本地磁盘
         * </pre>
         *
         * <code>optional string label = 5;</code>
         */
        com.google.protobuf.ByteString
        getLabelBytes();

        /**
         * <pre>
         *文件系统类型
         * </pre>
         *
         * <code>optional string filesystem_type = 6;</code>
         */
        String getFilesystemType();
        /**
         * <pre>
         *文件系统类型
         * </pre>
         *
         * <code>optional string filesystem_type = 6;</code>
         */
        com.google.protobuf.ByteString
        getFilesystemTypeBytes();

        /**
         * <pre>
         *逻辑卷总大小,单位：Byte
         * </pre>
         *
         * <code>optional uint64 total_size = 7;</code>
         */
        long getTotalSize();

        /**
         * <pre>
         *是否是物理卷, 逻辑卷也可能被制作为物理卷
         * </pre>
         *
         * <code>optional bool is_pv = 8;</code>
         */
        boolean getIsPv();

        /**
         * <pre>
         *逻辑卷是否可见
         * </pre>
         *
         * <code>optional bool is_visible = 9;</code>
         */
        boolean getIsVisible();

        /**
         * <pre>
         *是否是启动卷
         * </pre>
         *
         * <code>optional bool is_boot = 10;</code>
         */
        boolean getIsBoot();

        /**
         * <pre>
         *挂载点
         * </pre>
         *
         * <code>optional string mount_point = 11;</code>
         */
        String getMountPoint();
        /**
         * <pre>
         *挂载点
         * </pre>
         *
         * <code>optional string mount_point = 11;</code>
         */
        com.google.protobuf.ByteString
        getMountPointBytes();

        /**
         * <pre>
         *可备份的类型，&gt;=0 表示可备份，&lt;0 表示不可备份
         * </pre>
         *
         * <code>optional int32 backupable_type = 12;</code>
         */
        int getBackupableType();

        /**
         * <pre>
         *逻辑卷关联的设备信息集合
         * </pre>
         *
         * <code>repeated .one2data.rbtmqmsgcli.client.LVInfo.LVRefDevice lv_ref_device = 30;</code>
         */
        java.util.List<cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.LVInfo.LVRefDevice>
        getLvRefDeviceList();
        /**
         * <pre>
         *逻辑卷关联的设备信息集合
         * </pre>
         *
         * <code>repeated .one2data.rbtmqmsgcli.client.LVInfo.LVRefDevice lv_ref_device = 30;</code>
         */
        cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.LVInfo.LVRefDevice getLvRefDevice(int index);
        /**
         * <pre>
         *逻辑卷关联的设备信息集合
         * </pre>
         *
         * <code>repeated .one2data.rbtmqmsgcli.client.LVInfo.LVRefDevice lv_ref_device = 30;</code>
         */
        int getLvRefDeviceCount();
        /**
         * <pre>
         *逻辑卷关联的设备信息集合
         * </pre>
         *
         * <code>repeated .one2data.rbtmqmsgcli.client.LVInfo.LVRefDevice lv_ref_device = 30;</code>
         */
        java.util.List<? extends cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.LVInfo.LVRefDeviceOrBuilder>
        getLvRefDeviceOrBuilderList();
        /**
         * <pre>
         *逻辑卷关联的设备信息集合
         * </pre>
         *
         * <code>repeated .one2data.rbtmqmsgcli.client.LVInfo.LVRefDevice lv_ref_device = 30;</code>
         */
        cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.LVInfo.LVRefDeviceOrBuilder getLvRefDeviceOrBuilder(
                int index);
    }
    /**
     * <pre>
     *上报逻辑卷信息
     * </pre>
     *
     * Protobuf type {@code one2data.rbtmqmsgcli.client.LVInfo}
     */
    public  static final class LVInfo extends
            com.google.protobuf.GeneratedMessageV3 implements
            // @@protoc_insertion_point(message_implements:one2data.rbtmqmsgcli.client.LVInfo)
            LVInfoOrBuilder {
        // Use LVInfo.newBuilder() to construct.
        private LVInfo(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
            super(builder);
        }
        private LVInfo() {
            deviceUuidKey_ = "";
            isOnline_ = false;
            name_ = "";
            label_ = "";
            filesystemType_ = "";
            totalSize_ = 0L;
            isPv_ = false;
            isVisible_ = false;
            isBoot_ = false;
            mountPoint_ = "";
            backupableType_ = 0;
            lvRefDevice_ = java.util.Collections.emptyList();
        }

        @Override
        public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
            return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
        }
        private LVInfo(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            this();
            int mutable_bitField0_ = 0;
            try {
                boolean done = false;
                while (!done) {
                    int tag = input.readTag();
                    switch (tag) {
                        case 0:
                            done = true;
                            break;
                        default: {
                            if (!input.skipField(tag)) {
                                done = true;
                            }
                            break;
                        }
                        case 10: {
                            String s = input.readStringRequireUtf8();

                            deviceUuidKey_ = s;
                            break;
                        }
                        case 18: {
                            cn.keptdata.one2data.header.message.protobuf.common.Node.BlockDeviceKey.Builder subBuilder = null;
                            if (key_ != null) {
                                subBuilder = key_.toBuilder();
                            }
                            key_ = input.readMessage(cn.keptdata.one2data.header.message.protobuf.common.Node.BlockDeviceKey.parser(), extensionRegistry);
                            if (subBuilder != null) {
                                subBuilder.mergeFrom(key_);
                                key_ = subBuilder.buildPartial();
                            }

                            break;
                        }
                        case 24: {

                            isOnline_ = input.readBool();
                            break;
                        }
                        case 34: {
                            String s = input.readStringRequireUtf8();

                            name_ = s;
                            break;
                        }
                        case 42: {
                            String s = input.readStringRequireUtf8();

                            label_ = s;
                            break;
                        }
                        case 50: {
                            String s = input.readStringRequireUtf8();

                            filesystemType_ = s;
                            break;
                        }
                        case 56: {

                            totalSize_ = input.readUInt64();
                            break;
                        }
                        case 64: {

                            isPv_ = input.readBool();
                            break;
                        }
                        case 72: {

                            isVisible_ = input.readBool();
                            break;
                        }
                        case 80: {

                            isBoot_ = input.readBool();
                            break;
                        }
                        case 90: {
                            String s = input.readStringRequireUtf8();

                            mountPoint_ = s;
                            break;
                        }
                        case 96: {

                            backupableType_ = input.readInt32();
                            break;
                        }
                        case 242: {
                            if (!((mutable_bitField0_ & 0x00001000) == 0x00001000)) {
                                lvRefDevice_ = new java.util.ArrayList<cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.LVInfo.LVRefDevice>();
                                mutable_bitField0_ |= 0x00001000;
                            }
                            lvRefDevice_.add(
                                    input.readMessage(cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.LVInfo.LVRefDevice.parser(), extensionRegistry));
                            break;
                        }
                    }
                }
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(this);
            } catch (java.io.IOException e) {
                throw new com.google.protobuf.InvalidProtocolBufferException(
                        e).setUnfinishedMessage(this);
            } finally {
                if (((mutable_bitField0_ & 0x00001000) == 0x00001000)) {
                    lvRefDevice_ = java.util.Collections.unmodifiableList(lvRefDevice_);
                }
                makeExtensionsImmutable();
            }
        }
        public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
            return cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.internal_static_one2data_rbtmqmsgcli_client_LVInfo_descriptor;
        }

        protected FieldAccessorTable
        internalGetFieldAccessorTable() {
            return cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.internal_static_one2data_rbtmqmsgcli_client_LVInfo_fieldAccessorTable
                    .ensureFieldAccessorsInitialized(
                            cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.LVInfo.class, cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.LVInfo.Builder.class);
        }

        public interface LVRefDeviceOrBuilder extends
                // @@protoc_insertion_point(interface_extends:one2data.rbtmqmsgcli.client.LVInfo.LVRefDevice)
                com.google.protobuf.MessageOrBuilder {

            /**
             * <pre>
             *关联的设备类型
             * </pre>
             *
             * <code>optional .one2data.rbtmqmsgcli.client.BlockDeviceType dev_type = 1;</code>
             */
            int getDevTypeValue();
            /**
             * <pre>
             *关联的设备类型
             * </pre>
             *
             * <code>optional .one2data.rbtmqmsgcli.client.BlockDeviceType dev_type = 1;</code>
             */
            cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BlockDeviceType getDevType();

            /**
             * <pre>
             *关联的块设备内部唯一ID
             * </pre>
             *
             * <code>optional string dev_uuid_key = 2;</code>
             */
            String getDevUuidKey();
            /**
             * <pre>
             *关联的块设备内部唯一ID
             * </pre>
             *
             * <code>optional string dev_uuid_key = 2;</code>
             */
            com.google.protobuf.ByteString
            getDevUuidKeyBytes();

            /**
             * <pre>
             *关联的块设备路径
             * </pre>
             *
             * <code>optional string dev_path = 3;</code>
             */
            String getDevPath();
            /**
             * <pre>
             *关联的块设备路径
             * </pre>
             *
             * <code>optional string dev_path = 3;</code>
             */
            com.google.protobuf.ByteString
            getDevPathBytes();
        }
        /**
         * <pre>
         *逻辑与设备关联信息
         * </pre>
         *
         * Protobuf type {@code one2data.rbtmqmsgcli.client.LVInfo.LVRefDevice}
         */
        public  static final class LVRefDevice extends
                com.google.protobuf.GeneratedMessageV3 implements
                // @@protoc_insertion_point(message_implements:one2data.rbtmqmsgcli.client.LVInfo.LVRefDevice)
                LVRefDeviceOrBuilder {
            // Use LVRefDevice.newBuilder() to construct.
            private LVRefDevice(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
                super(builder);
            }
            private LVRefDevice() {
                devType_ = 0;
                devUuidKey_ = "";
                devPath_ = "";
            }

            @Override
            public final com.google.protobuf.UnknownFieldSet
            getUnknownFields() {
                return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
            }
            private LVRefDevice(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws com.google.protobuf.InvalidProtocolBufferException {
                this();
                int mutable_bitField0_ = 0;
                try {
                    boolean done = false;
                    while (!done) {
                        int tag = input.readTag();
                        switch (tag) {
                            case 0:
                                done = true;
                                break;
                            default: {
                                if (!input.skipField(tag)) {
                                    done = true;
                                }
                                break;
                            }
                            case 8: {
                                int rawValue = input.readEnum();

                                devType_ = rawValue;
                                break;
                            }
                            case 18: {
                                String s = input.readStringRequireUtf8();

                                devUuidKey_ = s;
                                break;
                            }
                            case 26: {
                                String s = input.readStringRequireUtf8();

                                devPath_ = s;
                                break;
                            }
                        }
                    }
                } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                    throw e.setUnfinishedMessage(this);
                } catch (java.io.IOException e) {
                    throw new com.google.protobuf.InvalidProtocolBufferException(
                            e).setUnfinishedMessage(this);
                } finally {
                    makeExtensionsImmutable();
                }
            }
            public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
                return cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.internal_static_one2data_rbtmqmsgcli_client_LVInfo_LVRefDevice_descriptor;
            }

            protected FieldAccessorTable
            internalGetFieldAccessorTable() {
                return cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.internal_static_one2data_rbtmqmsgcli_client_LVInfo_LVRefDevice_fieldAccessorTable
                        .ensureFieldAccessorsInitialized(
                                cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.LVInfo.LVRefDevice.class, cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.LVInfo.LVRefDevice.Builder.class);
            }

            public static final int DEV_TYPE_FIELD_NUMBER = 1;
            private int devType_;
            /**
             * <pre>
             *关联的设备类型
             * </pre>
             *
             * <code>optional .one2data.rbtmqmsgcli.client.BlockDeviceType dev_type = 1;</code>
             */
            public int getDevTypeValue() {
                return devType_;
            }
            /**
             * <pre>
             *关联的设备类型
             * </pre>
             *
             * <code>optional .one2data.rbtmqmsgcli.client.BlockDeviceType dev_type = 1;</code>
             */
            public cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BlockDeviceType getDevType() {
                cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BlockDeviceType result = cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BlockDeviceType.valueOf(devType_);
                return result == null ? cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BlockDeviceType.UNRECOGNIZED : result;
            }

            public static final int DEV_UUID_KEY_FIELD_NUMBER = 2;
            private volatile Object devUuidKey_;
            /**
             * <pre>
             *关联的块设备内部唯一ID
             * </pre>
             *
             * <code>optional string dev_uuid_key = 2;</code>
             */
            public String getDevUuidKey() {
                Object ref = devUuidKey_;
                if (ref instanceof String) {
                    return (String) ref;
                } else {
                    com.google.protobuf.ByteString bs =
                            (com.google.protobuf.ByteString) ref;
                    String s = bs.toStringUtf8();
                    devUuidKey_ = s;
                    return s;
                }
            }
            /**
             * <pre>
             *关联的块设备内部唯一ID
             * </pre>
             *
             * <code>optional string dev_uuid_key = 2;</code>
             */
            public com.google.protobuf.ByteString
            getDevUuidKeyBytes() {
                Object ref = devUuidKey_;
                if (ref instanceof String) {
                    com.google.protobuf.ByteString b =
                            com.google.protobuf.ByteString.copyFromUtf8(
                                    (String) ref);
                    devUuidKey_ = b;
                    return b;
                } else {
                    return (com.google.protobuf.ByteString) ref;
                }
            }

            public static final int DEV_PATH_FIELD_NUMBER = 3;
            private volatile Object devPath_;
            /**
             * <pre>
             *关联的块设备路径
             * </pre>
             *
             * <code>optional string dev_path = 3;</code>
             */
            public String getDevPath() {
                Object ref = devPath_;
                if (ref instanceof String) {
                    return (String) ref;
                } else {
                    com.google.protobuf.ByteString bs =
                            (com.google.protobuf.ByteString) ref;
                    String s = bs.toStringUtf8();
                    devPath_ = s;
                    return s;
                }
            }
            /**
             * <pre>
             *关联的块设备路径
             * </pre>
             *
             * <code>optional string dev_path = 3;</code>
             */
            public com.google.protobuf.ByteString
            getDevPathBytes() {
                Object ref = devPath_;
                if (ref instanceof String) {
                    com.google.protobuf.ByteString b =
                            com.google.protobuf.ByteString.copyFromUtf8(
                                    (String) ref);
                    devPath_ = b;
                    return b;
                } else {
                    return (com.google.protobuf.ByteString) ref;
                }
            }

            private byte memoizedIsInitialized = -1;
            public final boolean isInitialized() {
                byte isInitialized = memoizedIsInitialized;
                if (isInitialized == 1) return true;
                if (isInitialized == 0) return false;

                memoizedIsInitialized = 1;
                return true;
            }

            public void writeTo(com.google.protobuf.CodedOutputStream output)
                    throws java.io.IOException {
                if (devType_ != cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BlockDeviceType.BDT_HARDDISK.getNumber()) {
                    output.writeEnum(1, devType_);
                }
                if (!getDevUuidKeyBytes().isEmpty()) {
                    com.google.protobuf.GeneratedMessageV3.writeString(output, 2, devUuidKey_);
                }
                if (!getDevPathBytes().isEmpty()) {
                    com.google.protobuf.GeneratedMessageV3.writeString(output, 3, devPath_);
                }
            }

            public int getSerializedSize() {
                int size = memoizedSize;
                if (size != -1) return size;

                size = 0;
                if (devType_ != cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BlockDeviceType.BDT_HARDDISK.getNumber()) {
                    size += com.google.protobuf.CodedOutputStream
                            .computeEnumSize(1, devType_);
                }
                if (!getDevUuidKeyBytes().isEmpty()) {
                    size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, devUuidKey_);
                }
                if (!getDevPathBytes().isEmpty()) {
                    size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, devPath_);
                }
                memoizedSize = size;
                return size;
            }

            private static final long serialVersionUID = 0L;
            @Override
            public boolean equals(final Object obj) {
                if (obj == this) {
                    return true;
                }
                if (!(obj instanceof cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.LVInfo.LVRefDevice)) {
                    return super.equals(obj);
                }
                cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.LVInfo.LVRefDevice other = (cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.LVInfo.LVRefDevice) obj;

                boolean result = true;
                result = result && devType_ == other.devType_;
                result = result && getDevUuidKey()
                        .equals(other.getDevUuidKey());
                result = result && getDevPath()
                        .equals(other.getDevPath());
                return result;
            }

            @Override
            public int hashCode() {
                if (memoizedHashCode != 0) {
                    return memoizedHashCode;
                }
                int hash = 41;
                hash = (19 * hash) + getDescriptorForType().hashCode();
                hash = (37 * hash) + DEV_TYPE_FIELD_NUMBER;
                hash = (53 * hash) + devType_;
                hash = (37 * hash) + DEV_UUID_KEY_FIELD_NUMBER;
                hash = (53 * hash) + getDevUuidKey().hashCode();
                hash = (37 * hash) + DEV_PATH_FIELD_NUMBER;
                hash = (53 * hash) + getDevPath().hashCode();
                hash = (29 * hash) + unknownFields.hashCode();
                memoizedHashCode = hash;
                return hash;
            }

            public static cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.LVInfo.LVRefDevice parseFrom(
                    com.google.protobuf.ByteString data)
                    throws com.google.protobuf.InvalidProtocolBufferException {
                return PARSER.parseFrom(data);
            }
            public static cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.LVInfo.LVRefDevice parseFrom(
                    com.google.protobuf.ByteString data,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws com.google.protobuf.InvalidProtocolBufferException {
                return PARSER.parseFrom(data, extensionRegistry);
            }
            public static cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.LVInfo.LVRefDevice parseFrom(byte[] data)
                    throws com.google.protobuf.InvalidProtocolBufferException {
                return PARSER.parseFrom(data);
            }
            public static cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.LVInfo.LVRefDevice parseFrom(
                    byte[] data,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws com.google.protobuf.InvalidProtocolBufferException {
                return PARSER.parseFrom(data, extensionRegistry);
            }
            public static cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.LVInfo.LVRefDevice parseFrom(java.io.InputStream input)
                    throws java.io.IOException {
                return com.google.protobuf.GeneratedMessageV3
                        .parseWithIOException(PARSER, input);
            }
            public static cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.LVInfo.LVRefDevice parseFrom(
                    java.io.InputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws java.io.IOException {
                return com.google.protobuf.GeneratedMessageV3
                        .parseWithIOException(PARSER, input, extensionRegistry);
            }
            public static cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.LVInfo.LVRefDevice parseDelimitedFrom(java.io.InputStream input)
                    throws java.io.IOException {
                return com.google.protobuf.GeneratedMessageV3
                        .parseDelimitedWithIOException(PARSER, input);
            }
            public static cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.LVInfo.LVRefDevice parseDelimitedFrom(
                    java.io.InputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws java.io.IOException {
                return com.google.protobuf.GeneratedMessageV3
                        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
            }
            public static cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.LVInfo.LVRefDevice parseFrom(
                    com.google.protobuf.CodedInputStream input)
                    throws java.io.IOException {
                return com.google.protobuf.GeneratedMessageV3
                        .parseWithIOException(PARSER, input);
            }
            public static cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.LVInfo.LVRefDevice parseFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws java.io.IOException {
                return com.google.protobuf.GeneratedMessageV3
                        .parseWithIOException(PARSER, input, extensionRegistry);
            }

            public Builder newBuilderForType() { return newBuilder(); }
            public static Builder newBuilder() {
                return DEFAULT_INSTANCE.toBuilder();
            }
            public static Builder newBuilder(cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.LVInfo.LVRefDevice prototype) {
                return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
            }
            public Builder toBuilder() {
                return this == DEFAULT_INSTANCE
                        ? new Builder() : new Builder().mergeFrom(this);
            }

            @Override
            protected Builder newBuilderForType(
                    BuilderParent parent) {
                Builder builder = new Builder(parent);
                return builder;
            }
            /**
             * <pre>
             *逻辑与设备关联信息
             * </pre>
             *
             * Protobuf type {@code one2data.rbtmqmsgcli.client.LVInfo.LVRefDevice}
             */
            public static final class Builder extends
                    com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
                    // @@protoc_insertion_point(builder_implements:one2data.rbtmqmsgcli.client.LVInfo.LVRefDevice)
                    cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.LVInfo.LVRefDeviceOrBuilder {
                public static final com.google.protobuf.Descriptors.Descriptor
                getDescriptor() {
                    return cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.internal_static_one2data_rbtmqmsgcli_client_LVInfo_LVRefDevice_descriptor;
                }

                protected FieldAccessorTable
                internalGetFieldAccessorTable() {
                    return cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.internal_static_one2data_rbtmqmsgcli_client_LVInfo_LVRefDevice_fieldAccessorTable
                            .ensureFieldAccessorsInitialized(
                                    cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.LVInfo.LVRefDevice.class, cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.LVInfo.LVRefDevice.Builder.class);
                }

                // Construct using cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.LVInfo.LVRefDevice.newBuilder()
                private Builder() {
                    maybeForceBuilderInitialization();
                }

                private Builder(
                        BuilderParent parent) {
                    super(parent);
                    maybeForceBuilderInitialization();
                }
                private void maybeForceBuilderInitialization() {
                    if (com.google.protobuf.GeneratedMessageV3
                            .alwaysUseFieldBuilders) {
                    }
                }
                public Builder clear() {
                    super.clear();
                    devType_ = 0;

                    devUuidKey_ = "";

                    devPath_ = "";

                    return this;
                }

                public com.google.protobuf.Descriptors.Descriptor
                getDescriptorForType() {
                    return cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.internal_static_one2data_rbtmqmsgcli_client_LVInfo_LVRefDevice_descriptor;
                }

                public cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.LVInfo.LVRefDevice getDefaultInstanceForType() {
                    return cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.LVInfo.LVRefDevice.getDefaultInstance();
                }

                public cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.LVInfo.LVRefDevice build() {
                    cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.LVInfo.LVRefDevice result = buildPartial();
                    if (!result.isInitialized()) {
                        throw newUninitializedMessageException(result);
                    }
                    return result;
                }

                public cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.LVInfo.LVRefDevice buildPartial() {
                    cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.LVInfo.LVRefDevice result = new cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.LVInfo.LVRefDevice(this);
                    result.devType_ = devType_;
                    result.devUuidKey_ = devUuidKey_;
                    result.devPath_ = devPath_;
                    onBuilt();
                    return result;
                }

                public Builder clone() {
                    return (Builder) super.clone();
                }
                public Builder setField(
                        com.google.protobuf.Descriptors.FieldDescriptor field,
                        Object value) {
                    return (Builder) super.setField(field, value);
                }
                public Builder clearField(
                        com.google.protobuf.Descriptors.FieldDescriptor field) {
                    return (Builder) super.clearField(field);
                }
                public Builder clearOneof(
                        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
                    return (Builder) super.clearOneof(oneof);
                }
                public Builder setRepeatedField(
                        com.google.protobuf.Descriptors.FieldDescriptor field,
                        int index, Object value) {
                    return (Builder) super.setRepeatedField(field, index, value);
                }
                public Builder addRepeatedField(
                        com.google.protobuf.Descriptors.FieldDescriptor field,
                        Object value) {
                    return (Builder) super.addRepeatedField(field, value);
                }
                public Builder mergeFrom(com.google.protobuf.Message other) {
                    if (other instanceof cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.LVInfo.LVRefDevice) {
                        return mergeFrom((cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.LVInfo.LVRefDevice)other);
                    } else {
                        super.mergeFrom(other);
                        return this;
                    }
                }

                public Builder mergeFrom(cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.LVInfo.LVRefDevice other) {
                    if (other == cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.LVInfo.LVRefDevice.getDefaultInstance()) return this;
                    if (other.devType_ != 0) {
                        setDevTypeValue(other.getDevTypeValue());
                    }
                    if (!other.getDevUuidKey().isEmpty()) {
                        devUuidKey_ = other.devUuidKey_;
                        onChanged();
                    }
                    if (!other.getDevPath().isEmpty()) {
                        devPath_ = other.devPath_;
                        onChanged();
                    }
                    onChanged();
                    return this;
                }

                public final boolean isInitialized() {
                    return true;
                }

                public Builder mergeFrom(
                        com.google.protobuf.CodedInputStream input,
                        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                        throws java.io.IOException {
                    cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.LVInfo.LVRefDevice parsedMessage = null;
                    try {
                        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
                    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                        parsedMessage = (cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.LVInfo.LVRefDevice) e.getUnfinishedMessage();
                        throw e.unwrapIOException();
                    } finally {
                        if (parsedMessage != null) {
                            mergeFrom(parsedMessage);
                        }
                    }
                    return this;
                }

                private int devType_ = 0;
                /**
                 * <pre>
                 *关联的设备类型
                 * </pre>
                 *
                 * <code>optional .one2data.rbtmqmsgcli.client.BlockDeviceType dev_type = 1;</code>
                 */
                public int getDevTypeValue() {
                    return devType_;
                }
                /**
                 * <pre>
                 *关联的设备类型
                 * </pre>
                 *
                 * <code>optional .one2data.rbtmqmsgcli.client.BlockDeviceType dev_type = 1;</code>
                 */
                public Builder setDevTypeValue(int value) {
                    devType_ = value;
                    onChanged();
                    return this;
                }
                /**
                 * <pre>
                 *关联的设备类型
                 * </pre>
                 *
                 * <code>optional .one2data.rbtmqmsgcli.client.BlockDeviceType dev_type = 1;</code>
                 */
                public cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BlockDeviceType getDevType() {
                    cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BlockDeviceType result = cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BlockDeviceType.valueOf(devType_);
                    return result == null ? cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BlockDeviceType.UNRECOGNIZED : result;
                }
                /**
                 * <pre>
                 *关联的设备类型
                 * </pre>
                 *
                 * <code>optional .one2data.rbtmqmsgcli.client.BlockDeviceType dev_type = 1;</code>
                 */
                public Builder setDevType(cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BlockDeviceType value) {
                    if (value == null) {
                        throw new NullPointerException();
                    }

                    devType_ = value.getNumber();
                    onChanged();
                    return this;
                }
                /**
                 * <pre>
                 *关联的设备类型
                 * </pre>
                 *
                 * <code>optional .one2data.rbtmqmsgcli.client.BlockDeviceType dev_type = 1;</code>
                 */
                public Builder clearDevType() {

                    devType_ = 0;
                    onChanged();
                    return this;
                }

                private Object devUuidKey_ = "";
                /**
                 * <pre>
                 *关联的块设备内部唯一ID
                 * </pre>
                 *
                 * <code>optional string dev_uuid_key = 2;</code>
                 */
                public String getDevUuidKey() {
                    Object ref = devUuidKey_;
                    if (!(ref instanceof String)) {
                        com.google.protobuf.ByteString bs =
                                (com.google.protobuf.ByteString) ref;
                        String s = bs.toStringUtf8();
                        devUuidKey_ = s;
                        return s;
                    } else {
                        return (String) ref;
                    }
                }
                /**
                 * <pre>
                 *关联的块设备内部唯一ID
                 * </pre>
                 *
                 * <code>optional string dev_uuid_key = 2;</code>
                 */
                public com.google.protobuf.ByteString
                getDevUuidKeyBytes() {
                    Object ref = devUuidKey_;
                    if (ref instanceof String) {
                        com.google.protobuf.ByteString b =
                                com.google.protobuf.ByteString.copyFromUtf8(
                                        (String) ref);
                        devUuidKey_ = b;
                        return b;
                    } else {
                        return (com.google.protobuf.ByteString) ref;
                    }
                }
                /**
                 * <pre>
                 *关联的块设备内部唯一ID
                 * </pre>
                 *
                 * <code>optional string dev_uuid_key = 2;</code>
                 */
                public Builder setDevUuidKey(
                        String value) {
                    if (value == null) {
                        throw new NullPointerException();
                    }

                    devUuidKey_ = value;
                    onChanged();
                    return this;
                }
                /**
                 * <pre>
                 *关联的块设备内部唯一ID
                 * </pre>
                 *
                 * <code>optional string dev_uuid_key = 2;</code>
                 */
                public Builder clearDevUuidKey() {

                    devUuidKey_ = getDefaultInstance().getDevUuidKey();
                    onChanged();
                    return this;
                }
                /**
                 * <pre>
                 *关联的块设备内部唯一ID
                 * </pre>
                 *
                 * <code>optional string dev_uuid_key = 2;</code>
                 */
                public Builder setDevUuidKeyBytes(
                        com.google.protobuf.ByteString value) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    checkByteStringIsUtf8(value);

                    devUuidKey_ = value;
                    onChanged();
                    return this;
                }

                private Object devPath_ = "";
                /**
                 * <pre>
                 *关联的块设备路径
                 * </pre>
                 *
                 * <code>optional string dev_path = 3;</code>
                 */
                public String getDevPath() {
                    Object ref = devPath_;
                    if (!(ref instanceof String)) {
                        com.google.protobuf.ByteString bs =
                                (com.google.protobuf.ByteString) ref;
                        String s = bs.toStringUtf8();
                        devPath_ = s;
                        return s;
                    } else {
                        return (String) ref;
                    }
                }
                /**
                 * <pre>
                 *关联的块设备路径
                 * </pre>
                 *
                 * <code>optional string dev_path = 3;</code>
                 */
                public com.google.protobuf.ByteString
                getDevPathBytes() {
                    Object ref = devPath_;
                    if (ref instanceof String) {
                        com.google.protobuf.ByteString b =
                                com.google.protobuf.ByteString.copyFromUtf8(
                                        (String) ref);
                        devPath_ = b;
                        return b;
                    } else {
                        return (com.google.protobuf.ByteString) ref;
                    }
                }
                /**
                 * <pre>
                 *关联的块设备路径
                 * </pre>
                 *
                 * <code>optional string dev_path = 3;</code>
                 */
                public Builder setDevPath(
                        String value) {
                    if (value == null) {
                        throw new NullPointerException();
                    }

                    devPath_ = value;
                    onChanged();
                    return this;
                }
                /**
                 * <pre>
                 *关联的块设备路径
                 * </pre>
                 *
                 * <code>optional string dev_path = 3;</code>
                 */
                public Builder clearDevPath() {

                    devPath_ = getDefaultInstance().getDevPath();
                    onChanged();
                    return this;
                }
                /**
                 * <pre>
                 *关联的块设备路径
                 * </pre>
                 *
                 * <code>optional string dev_path = 3;</code>
                 */
                public Builder setDevPathBytes(
                        com.google.protobuf.ByteString value) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    checkByteStringIsUtf8(value);

                    devPath_ = value;
                    onChanged();
                    return this;
                }
                public final Builder setUnknownFields(
                        final com.google.protobuf.UnknownFieldSet unknownFields) {
                    return this;
                }

                public final Builder mergeUnknownFields(
                        final com.google.protobuf.UnknownFieldSet unknownFields) {
                    return this;
                }


                // @@protoc_insertion_point(builder_scope:one2data.rbtmqmsgcli.client.LVInfo.LVRefDevice)
            }

            // @@protoc_insertion_point(class_scope:one2data.rbtmqmsgcli.client.LVInfo.LVRefDevice)
            private static final cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.LVInfo.LVRefDevice DEFAULT_INSTANCE;
            static {
                DEFAULT_INSTANCE = new cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.LVInfo.LVRefDevice();
            }

            public static cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.LVInfo.LVRefDevice getDefaultInstance() {
                return DEFAULT_INSTANCE;
            }

            private static final com.google.protobuf.Parser<LVRefDevice>
                    PARSER = new com.google.protobuf.AbstractParser<LVRefDevice>() {
                public LVRefDevice parsePartialFrom(
                        com.google.protobuf.CodedInputStream input,
                        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                        throws com.google.protobuf.InvalidProtocolBufferException {
                    return new LVRefDevice(input, extensionRegistry);
                }
            };

            public static com.google.protobuf.Parser<LVRefDevice> parser() {
                return PARSER;
            }

            @Override
            public com.google.protobuf.Parser<LVRefDevice> getParserForType() {
                return PARSER;
            }

            public cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.LVInfo.LVRefDevice getDefaultInstanceForType() {
                return DEFAULT_INSTANCE;
            }

        }

        private int bitField0_;
        public static final int DEVICE_UUID_KEY_FIELD_NUMBER = 1;
        private volatile Object deviceUuidKey_;
        /**
         * <pre>
         *设备内部唯一ID
         * </pre>
         *
         * <code>optional string device_uuid_key = 1;</code>
         */
        public String getDeviceUuidKey() {
            Object ref = deviceUuidKey_;
            if (ref instanceof String) {
                return (String) ref;
            } else {
                com.google.protobuf.ByteString bs =
                        (com.google.protobuf.ByteString) ref;
                String s = bs.toStringUtf8();
                deviceUuidKey_ = s;
                return s;
            }
        }
        /**
         * <pre>
         *设备内部唯一ID
         * </pre>
         *
         * <code>optional string device_uuid_key = 1;</code>
         */
        public com.google.protobuf.ByteString
        getDeviceUuidKeyBytes() {
            Object ref = deviceUuidKey_;
            if (ref instanceof String) {
                com.google.protobuf.ByteString b =
                        com.google.protobuf.ByteString.copyFromUtf8(
                                (String) ref);
                deviceUuidKey_ = b;
                return b;
            } else {
                return (com.google.protobuf.ByteString) ref;
            }
        }

        public static final int KEY_FIELD_NUMBER = 2;
        private cn.keptdata.one2data.header.message.protobuf.common.Node.BlockDeviceKey key_;
        /**
         * <pre>
         *逻辑卷内部唯一标识
         * </pre>
         *
         * <code>optional .one2data.rbtmqmsgcli.common.BlockDeviceKey key = 2;</code>
         */
        public boolean hasKey() {
            return key_ != null;
        }
        /**
         * <pre>
         *逻辑卷内部唯一标识
         * </pre>
         *
         * <code>optional .one2data.rbtmqmsgcli.common.BlockDeviceKey key = 2;</code>
         */
        public cn.keptdata.one2data.header.message.protobuf.common.Node.BlockDeviceKey getKey() {
            return key_ == null ? cn.keptdata.one2data.header.message.protobuf.common.Node.BlockDeviceKey.getDefaultInstance() : key_;
        }
        /**
         * <pre>
         *逻辑卷内部唯一标识
         * </pre>
         *
         * <code>optional .one2data.rbtmqmsgcli.common.BlockDeviceKey key = 2;</code>
         */
        public cn.keptdata.one2data.header.message.protobuf.common.Node.BlockDeviceKeyOrBuilder getKeyOrBuilder() {
            return getKey();
        }

        public static final int IS_ONLINE_FIELD_NUMBER = 3;
        private boolean isOnline_;
        /**
         * <pre>
         *逻辑卷是否在线
         * </pre>
         *
         * <code>optional bool is_online = 3;</code>
         */
        public boolean getIsOnline() {
            return isOnline_;
        }

        public static final int NAME_FIELD_NUMBER = 4;
        private volatile Object name_;
        /**
         * <pre>
         *逻辑卷名称，如windows平台的盘符: C:
         * </pre>
         *
         * <code>optional string name = 4;</code>
         */
        public String getName() {
            Object ref = name_;
            if (ref instanceof String) {
                return (String) ref;
            } else {
                com.google.protobuf.ByteString bs =
                        (com.google.protobuf.ByteString) ref;
                String s = bs.toStringUtf8();
                name_ = s;
                return s;
            }
        }
        /**
         * <pre>
         *逻辑卷名称，如windows平台的盘符: C:
         * </pre>
         *
         * <code>optional string name = 4;</code>
         */
        public com.google.protobuf.ByteString
        getNameBytes() {
            Object ref = name_;
            if (ref instanceof String) {
                com.google.protobuf.ByteString b =
                        com.google.protobuf.ByteString.copyFromUtf8(
                                (String) ref);
                name_ = b;
                return b;
            } else {
                return (com.google.protobuf.ByteString) ref;
            }
        }

        public static final int LABEL_FIELD_NUMBER = 5;
        private volatile Object label_;
        /**
         * <pre>
         *逻辑卷别名, 如windows的盘符的别名：本地磁盘
         * </pre>
         *
         * <code>optional string label = 5;</code>
         */
        public String getLabel() {
            Object ref = label_;
            if (ref instanceof String) {
                return (String) ref;
            } else {
                com.google.protobuf.ByteString bs =
                        (com.google.protobuf.ByteString) ref;
                String s = bs.toStringUtf8();
                label_ = s;
                return s;
            }
        }
        /**
         * <pre>
         *逻辑卷别名, 如windows的盘符的别名：本地磁盘
         * </pre>
         *
         * <code>optional string label = 5;</code>
         */
        public com.google.protobuf.ByteString
        getLabelBytes() {
            Object ref = label_;
            if (ref instanceof String) {
                com.google.protobuf.ByteString b =
                        com.google.protobuf.ByteString.copyFromUtf8(
                                (String) ref);
                label_ = b;
                return b;
            } else {
                return (com.google.protobuf.ByteString) ref;
            }
        }

        public static final int FILESYSTEM_TYPE_FIELD_NUMBER = 6;
        private volatile Object filesystemType_;
        /**
         * <pre>
         *文件系统类型
         * </pre>
         *
         * <code>optional string filesystem_type = 6;</code>
         */
        public String getFilesystemType() {
            Object ref = filesystemType_;
            if (ref instanceof String) {
                return (String) ref;
            } else {
                com.google.protobuf.ByteString bs =
                        (com.google.protobuf.ByteString) ref;
                String s = bs.toStringUtf8();
                filesystemType_ = s;
                return s;
            }
        }
        /**
         * <pre>
         *文件系统类型
         * </pre>
         *
         * <code>optional string filesystem_type = 6;</code>
         */
        public com.google.protobuf.ByteString
        getFilesystemTypeBytes() {
            Object ref = filesystemType_;
            if (ref instanceof String) {
                com.google.protobuf.ByteString b =
                        com.google.protobuf.ByteString.copyFromUtf8(
                                (String) ref);
                filesystemType_ = b;
                return b;
            } else {
                return (com.google.protobuf.ByteString) ref;
            }
        }

        public static final int TOTAL_SIZE_FIELD_NUMBER = 7;
        private long totalSize_;
        /**
         * <pre>
         *逻辑卷总大小,单位：Byte
         * </pre>
         *
         * <code>optional uint64 total_size = 7;</code>
         */
        public long getTotalSize() {
            return totalSize_;
        }

        public static final int IS_PV_FIELD_NUMBER = 8;
        private boolean isPv_;
        /**
         * <pre>
         *是否是物理卷, 逻辑卷也可能被制作为物理卷
         * </pre>
         *
         * <code>optional bool is_pv = 8;</code>
         */
        public boolean getIsPv() {
            return isPv_;
        }

        public static final int IS_VISIBLE_FIELD_NUMBER = 9;
        private boolean isVisible_;
        /**
         * <pre>
         *逻辑卷是否可见
         * </pre>
         *
         * <code>optional bool is_visible = 9;</code>
         */
        public boolean getIsVisible() {
            return isVisible_;
        }

        public static final int IS_BOOT_FIELD_NUMBER = 10;
        private boolean isBoot_;
        /**
         * <pre>
         *是否是启动卷
         * </pre>
         *
         * <code>optional bool is_boot = 10;</code>
         */
        public boolean getIsBoot() {
            return isBoot_;
        }

        public static final int MOUNT_POINT_FIELD_NUMBER = 11;
        private volatile Object mountPoint_;
        /**
         * <pre>
         *挂载点
         * </pre>
         *
         * <code>optional string mount_point = 11;</code>
         */
        public String getMountPoint() {
            Object ref = mountPoint_;
            if (ref instanceof String) {
                return (String) ref;
            } else {
                com.google.protobuf.ByteString bs =
                        (com.google.protobuf.ByteString) ref;
                String s = bs.toStringUtf8();
                mountPoint_ = s;
                return s;
            }
        }
        /**
         * <pre>
         *挂载点
         * </pre>
         *
         * <code>optional string mount_point = 11;</code>
         */
        public com.google.protobuf.ByteString
        getMountPointBytes() {
            Object ref = mountPoint_;
            if (ref instanceof String) {
                com.google.protobuf.ByteString b =
                        com.google.protobuf.ByteString.copyFromUtf8(
                                (String) ref);
                mountPoint_ = b;
                return b;
            } else {
                return (com.google.protobuf.ByteString) ref;
            }
        }

        public static final int BACKUPABLE_TYPE_FIELD_NUMBER = 12;
        private int backupableType_;
        /**
         * <pre>
         *可备份的类型，&gt;=0 表示可备份，&lt;0 表示不可备份
         * </pre>
         *
         * <code>optional int32 backupable_type = 12;</code>
         */
        public int getBackupableType() {
            return backupableType_;
        }

        public static final int LV_REF_DEVICE_FIELD_NUMBER = 30;
        private java.util.List<cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.LVInfo.LVRefDevice> lvRefDevice_;
        /**
         * <pre>
         *逻辑卷关联的设备信息集合
         * </pre>
         *
         * <code>repeated .one2data.rbtmqmsgcli.client.LVInfo.LVRefDevice lv_ref_device = 30;</code>
         */
        public java.util.List<cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.LVInfo.LVRefDevice> getLvRefDeviceList() {
            return lvRefDevice_;
        }
        /**
         * <pre>
         *逻辑卷关联的设备信息集合
         * </pre>
         *
         * <code>repeated .one2data.rbtmqmsgcli.client.LVInfo.LVRefDevice lv_ref_device = 30;</code>
         */
        public java.util.List<? extends cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.LVInfo.LVRefDeviceOrBuilder>
        getLvRefDeviceOrBuilderList() {
            return lvRefDevice_;
        }
        /**
         * <pre>
         *逻辑卷关联的设备信息集合
         * </pre>
         *
         * <code>repeated .one2data.rbtmqmsgcli.client.LVInfo.LVRefDevice lv_ref_device = 30;</code>
         */
        public int getLvRefDeviceCount() {
            return lvRefDevice_.size();
        }
        /**
         * <pre>
         *逻辑卷关联的设备信息集合
         * </pre>
         *
         * <code>repeated .one2data.rbtmqmsgcli.client.LVInfo.LVRefDevice lv_ref_device = 30;</code>
         */
        public cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.LVInfo.LVRefDevice getLvRefDevice(int index) {
            return lvRefDevice_.get(index);
        }
        /**
         * <pre>
         *逻辑卷关联的设备信息集合
         * </pre>
         *
         * <code>repeated .one2data.rbtmqmsgcli.client.LVInfo.LVRefDevice lv_ref_device = 30;</code>
         */
        public cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.LVInfo.LVRefDeviceOrBuilder getLvRefDeviceOrBuilder(
                int index) {
            return lvRefDevice_.get(index);
        }

        private byte memoizedIsInitialized = -1;
        public final boolean isInitialized() {
            byte isInitialized = memoizedIsInitialized;
            if (isInitialized == 1) return true;
            if (isInitialized == 0) return false;

            memoizedIsInitialized = 1;
            return true;
        }

        public void writeTo(com.google.protobuf.CodedOutputStream output)
                throws java.io.IOException {
            if (!getDeviceUuidKeyBytes().isEmpty()) {
                com.google.protobuf.GeneratedMessageV3.writeString(output, 1, deviceUuidKey_);
            }
            if (key_ != null) {
                output.writeMessage(2, getKey());
            }
            if (isOnline_ != false) {
                output.writeBool(3, isOnline_);
            }
            if (!getNameBytes().isEmpty()) {
                com.google.protobuf.GeneratedMessageV3.writeString(output, 4, name_);
            }
            if (!getLabelBytes().isEmpty()) {
                com.google.protobuf.GeneratedMessageV3.writeString(output, 5, label_);
            }
            if (!getFilesystemTypeBytes().isEmpty()) {
                com.google.protobuf.GeneratedMessageV3.writeString(output, 6, filesystemType_);
            }
            if (totalSize_ != 0L) {
                output.writeUInt64(7, totalSize_);
            }
            if (isPv_ != false) {
                output.writeBool(8, isPv_);
            }
            if (isVisible_ != false) {
                output.writeBool(9, isVisible_);
            }
            if (isBoot_ != false) {
                output.writeBool(10, isBoot_);
            }
            if (!getMountPointBytes().isEmpty()) {
                com.google.protobuf.GeneratedMessageV3.writeString(output, 11, mountPoint_);
            }
            if (backupableType_ != 0) {
                output.writeInt32(12, backupableType_);
            }
            for (int i = 0; i < lvRefDevice_.size(); i++) {
                output.writeMessage(30, lvRefDevice_.get(i));
            }
        }

        public int getSerializedSize() {
            int size = memoizedSize;
            if (size != -1) return size;

            size = 0;
            if (!getDeviceUuidKeyBytes().isEmpty()) {
                size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, deviceUuidKey_);
            }
            if (key_ != null) {
                size += com.google.protobuf.CodedOutputStream
                        .computeMessageSize(2, getKey());
            }
            if (isOnline_ != false) {
                size += com.google.protobuf.CodedOutputStream
                        .computeBoolSize(3, isOnline_);
            }
            if (!getNameBytes().isEmpty()) {
                size += com.google.protobuf.GeneratedMessageV3.computeStringSize(4, name_);
            }
            if (!getLabelBytes().isEmpty()) {
                size += com.google.protobuf.GeneratedMessageV3.computeStringSize(5, label_);
            }
            if (!getFilesystemTypeBytes().isEmpty()) {
                size += com.google.protobuf.GeneratedMessageV3.computeStringSize(6, filesystemType_);
            }
            if (totalSize_ != 0L) {
                size += com.google.protobuf.CodedOutputStream
                        .computeUInt64Size(7, totalSize_);
            }
            if (isPv_ != false) {
                size += com.google.protobuf.CodedOutputStream
                        .computeBoolSize(8, isPv_);
            }
            if (isVisible_ != false) {
                size += com.google.protobuf.CodedOutputStream
                        .computeBoolSize(9, isVisible_);
            }
            if (isBoot_ != false) {
                size += com.google.protobuf.CodedOutputStream
                        .computeBoolSize(10, isBoot_);
            }
            if (!getMountPointBytes().isEmpty()) {
                size += com.google.protobuf.GeneratedMessageV3.computeStringSize(11, mountPoint_);
            }
            if (backupableType_ != 0) {
                size += com.google.protobuf.CodedOutputStream
                        .computeInt32Size(12, backupableType_);
            }
            for (int i = 0; i < lvRefDevice_.size(); i++) {
                size += com.google.protobuf.CodedOutputStream
                        .computeMessageSize(30, lvRefDevice_.get(i));
            }
            memoizedSize = size;
            return size;
        }

        private static final long serialVersionUID = 0L;
        @Override
        public boolean equals(final Object obj) {
            if (obj == this) {
                return true;
            }
            if (!(obj instanceof cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.LVInfo)) {
                return super.equals(obj);
            }
            cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.LVInfo other = (cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.LVInfo) obj;

            boolean result = true;
            result = result && getDeviceUuidKey()
                    .equals(other.getDeviceUuidKey());
            result = result && (hasKey() == other.hasKey());
            if (hasKey()) {
                result = result && getKey()
                        .equals(other.getKey());
            }
            result = result && (getIsOnline()
                    == other.getIsOnline());
            result = result && getName()
                    .equals(other.getName());
            result = result && getLabel()
                    .equals(other.getLabel());
            result = result && getFilesystemType()
                    .equals(other.getFilesystemType());
            result = result && (getTotalSize()
                    == other.getTotalSize());
            result = result && (getIsPv()
                    == other.getIsPv());
            result = result && (getIsVisible()
                    == other.getIsVisible());
            result = result && (getIsBoot()
                    == other.getIsBoot());
            result = result && getMountPoint()
                    .equals(other.getMountPoint());
            result = result && (getBackupableType()
                    == other.getBackupableType());
            result = result && getLvRefDeviceList()
                    .equals(other.getLvRefDeviceList());
            return result;
        }

        @Override
        public int hashCode() {
            if (memoizedHashCode != 0) {
                return memoizedHashCode;
            }
            int hash = 41;
            hash = (19 * hash) + getDescriptorForType().hashCode();
            hash = (37 * hash) + DEVICE_UUID_KEY_FIELD_NUMBER;
            hash = (53 * hash) + getDeviceUuidKey().hashCode();
            if (hasKey()) {
                hash = (37 * hash) + KEY_FIELD_NUMBER;
                hash = (53 * hash) + getKey().hashCode();
            }
            hash = (37 * hash) + IS_ONLINE_FIELD_NUMBER;
            hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
                    getIsOnline());
            hash = (37 * hash) + NAME_FIELD_NUMBER;
            hash = (53 * hash) + getName().hashCode();
            hash = (37 * hash) + LABEL_FIELD_NUMBER;
            hash = (53 * hash) + getLabel().hashCode();
            hash = (37 * hash) + FILESYSTEM_TYPE_FIELD_NUMBER;
            hash = (53 * hash) + getFilesystemType().hashCode();
            hash = (37 * hash) + TOTAL_SIZE_FIELD_NUMBER;
            hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
                    getTotalSize());
            hash = (37 * hash) + IS_PV_FIELD_NUMBER;
            hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
                    getIsPv());
            hash = (37 * hash) + IS_VISIBLE_FIELD_NUMBER;
            hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
                    getIsVisible());
            hash = (37 * hash) + IS_BOOT_FIELD_NUMBER;
            hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
                    getIsBoot());
            hash = (37 * hash) + MOUNT_POINT_FIELD_NUMBER;
            hash = (53 * hash) + getMountPoint().hashCode();
            hash = (37 * hash) + BACKUPABLE_TYPE_FIELD_NUMBER;
            hash = (53 * hash) + getBackupableType();
            if (getLvRefDeviceCount() > 0) {
                hash = (37 * hash) + LV_REF_DEVICE_FIELD_NUMBER;
                hash = (53 * hash) + getLvRefDeviceList().hashCode();
            }
            hash = (29 * hash) + unknownFields.hashCode();
            memoizedHashCode = hash;
            return hash;
        }

        public static cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.LVInfo parseFrom(
                com.google.protobuf.ByteString data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }
        public static cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.LVInfo parseFrom(
                com.google.protobuf.ByteString data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }
        public static cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.LVInfo parseFrom(byte[] data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }
        public static cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.LVInfo parseFrom(
                byte[] data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }
        public static cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.LVInfo parseFrom(java.io.InputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input);
        }
        public static cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.LVInfo parseFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input, extensionRegistry);
        }
        public static cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.LVInfo parseDelimitedFrom(java.io.InputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseDelimitedWithIOException(PARSER, input);
        }
        public static cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.LVInfo parseDelimitedFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
        }
        public static cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.LVInfo parseFrom(
                com.google.protobuf.CodedInputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input);
        }
        public static cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.LVInfo parseFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input, extensionRegistry);
        }

        public Builder newBuilderForType() { return newBuilder(); }
        public static Builder newBuilder() {
            return DEFAULT_INSTANCE.toBuilder();
        }
        public static Builder newBuilder(cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.LVInfo prototype) {
            return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }
        public Builder toBuilder() {
            return this == DEFAULT_INSTANCE
                    ? new Builder() : new Builder().mergeFrom(this);
        }

        @Override
        protected Builder newBuilderForType(
                BuilderParent parent) {
            Builder builder = new Builder(parent);
            return builder;
        }
        /**
         * <pre>
         *上报逻辑卷信息
         * </pre>
         *
         * Protobuf type {@code one2data.rbtmqmsgcli.client.LVInfo}
         */
        public static final class Builder extends
                com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
                // @@protoc_insertion_point(builder_implements:one2data.rbtmqmsgcli.client.LVInfo)
                cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.LVInfoOrBuilder {
            public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
                return cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.internal_static_one2data_rbtmqmsgcli_client_LVInfo_descriptor;
            }

            protected FieldAccessorTable
            internalGetFieldAccessorTable() {
                return cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.internal_static_one2data_rbtmqmsgcli_client_LVInfo_fieldAccessorTable
                        .ensureFieldAccessorsInitialized(
                                cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.LVInfo.class, cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.LVInfo.Builder.class);
            }

            // Construct using cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.LVInfo.newBuilder()
            private Builder() {
                maybeForceBuilderInitialization();
            }

            private Builder(
                    BuilderParent parent) {
                super(parent);
                maybeForceBuilderInitialization();
            }
            private void maybeForceBuilderInitialization() {
                if (com.google.protobuf.GeneratedMessageV3
                        .alwaysUseFieldBuilders) {
                    getLvRefDeviceFieldBuilder();
                }
            }
            public Builder clear() {
                super.clear();
                deviceUuidKey_ = "";

                if (keyBuilder_ == null) {
                    key_ = null;
                } else {
                    key_ = null;
                    keyBuilder_ = null;
                }
                isOnline_ = false;

                name_ = "";

                label_ = "";

                filesystemType_ = "";

                totalSize_ = 0L;

                isPv_ = false;

                isVisible_ = false;

                isBoot_ = false;

                mountPoint_ = "";

                backupableType_ = 0;

                if (lvRefDeviceBuilder_ == null) {
                    lvRefDevice_ = java.util.Collections.emptyList();
                    bitField0_ = (bitField0_ & ~0x00001000);
                } else {
                    lvRefDeviceBuilder_.clear();
                }
                return this;
            }

            public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
                return cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.internal_static_one2data_rbtmqmsgcli_client_LVInfo_descriptor;
            }

            public cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.LVInfo getDefaultInstanceForType() {
                return cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.LVInfo.getDefaultInstance();
            }

            public cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.LVInfo build() {
                cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.LVInfo result = buildPartial();
                if (!result.isInitialized()) {
                    throw newUninitializedMessageException(result);
                }
                return result;
            }

            public cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.LVInfo buildPartial() {
                cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.LVInfo result = new cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.LVInfo(this);
                int from_bitField0_ = bitField0_;
                int to_bitField0_ = 0;
                result.deviceUuidKey_ = deviceUuidKey_;
                if (keyBuilder_ == null) {
                    result.key_ = key_;
                } else {
                    result.key_ = keyBuilder_.build();
                }
                result.isOnline_ = isOnline_;
                result.name_ = name_;
                result.label_ = label_;
                result.filesystemType_ = filesystemType_;
                result.totalSize_ = totalSize_;
                result.isPv_ = isPv_;
                result.isVisible_ = isVisible_;
                result.isBoot_ = isBoot_;
                result.mountPoint_ = mountPoint_;
                result.backupableType_ = backupableType_;
                if (lvRefDeviceBuilder_ == null) {
                    if (((bitField0_ & 0x00001000) == 0x00001000)) {
                        lvRefDevice_ = java.util.Collections.unmodifiableList(lvRefDevice_);
                        bitField0_ = (bitField0_ & ~0x00001000);
                    }
                    result.lvRefDevice_ = lvRefDevice_;
                } else {
                    result.lvRefDevice_ = lvRefDeviceBuilder_.build();
                }
                result.bitField0_ = to_bitField0_;
                onBuilt();
                return result;
            }

            public Builder clone() {
                return (Builder) super.clone();
            }
            public Builder setField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    Object value) {
                return (Builder) super.setField(field, value);
            }
            public Builder clearField(
                    com.google.protobuf.Descriptors.FieldDescriptor field) {
                return (Builder) super.clearField(field);
            }
            public Builder clearOneof(
                    com.google.protobuf.Descriptors.OneofDescriptor oneof) {
                return (Builder) super.clearOneof(oneof);
            }
            public Builder setRepeatedField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    int index, Object value) {
                return (Builder) super.setRepeatedField(field, index, value);
            }
            public Builder addRepeatedField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    Object value) {
                return (Builder) super.addRepeatedField(field, value);
            }
            public Builder mergeFrom(com.google.protobuf.Message other) {
                if (other instanceof cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.LVInfo) {
                    return mergeFrom((cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.LVInfo)other);
                } else {
                    super.mergeFrom(other);
                    return this;
                }
            }

            public Builder mergeFrom(cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.LVInfo other) {
                if (other == cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.LVInfo.getDefaultInstance()) return this;
                if (!other.getDeviceUuidKey().isEmpty()) {
                    deviceUuidKey_ = other.deviceUuidKey_;
                    onChanged();
                }
                if (other.hasKey()) {
                    mergeKey(other.getKey());
                }
                if (other.getIsOnline() != false) {
                    setIsOnline(other.getIsOnline());
                }
                if (!other.getName().isEmpty()) {
                    name_ = other.name_;
                    onChanged();
                }
                if (!other.getLabel().isEmpty()) {
                    label_ = other.label_;
                    onChanged();
                }
                if (!other.getFilesystemType().isEmpty()) {
                    filesystemType_ = other.filesystemType_;
                    onChanged();
                }
                if (other.getTotalSize() != 0L) {
                    setTotalSize(other.getTotalSize());
                }
                if (other.getIsPv() != false) {
                    setIsPv(other.getIsPv());
                }
                if (other.getIsVisible() != false) {
                    setIsVisible(other.getIsVisible());
                }
                if (other.getIsBoot() != false) {
                    setIsBoot(other.getIsBoot());
                }
                if (!other.getMountPoint().isEmpty()) {
                    mountPoint_ = other.mountPoint_;
                    onChanged();
                }
                if (other.getBackupableType() != 0) {
                    setBackupableType(other.getBackupableType());
                }
                if (lvRefDeviceBuilder_ == null) {
                    if (!other.lvRefDevice_.isEmpty()) {
                        if (lvRefDevice_.isEmpty()) {
                            lvRefDevice_ = other.lvRefDevice_;
                            bitField0_ = (bitField0_ & ~0x00001000);
                        } else {
                            ensureLvRefDeviceIsMutable();
                            lvRefDevice_.addAll(other.lvRefDevice_);
                        }
                        onChanged();
                    }
                } else {
                    if (!other.lvRefDevice_.isEmpty()) {
                        if (lvRefDeviceBuilder_.isEmpty()) {
                            lvRefDeviceBuilder_.dispose();
                            lvRefDeviceBuilder_ = null;
                            lvRefDevice_ = other.lvRefDevice_;
                            bitField0_ = (bitField0_ & ~0x00001000);
                            lvRefDeviceBuilder_ =
                                    com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                                            getLvRefDeviceFieldBuilder() : null;
                        } else {
                            lvRefDeviceBuilder_.addAllMessages(other.lvRefDevice_);
                        }
                    }
                }
                onChanged();
                return this;
            }

            public final boolean isInitialized() {
                return true;
            }

            public Builder mergeFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws java.io.IOException {
                cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.LVInfo parsedMessage = null;
                try {
                    parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
                } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                    parsedMessage = (cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.LVInfo) e.getUnfinishedMessage();
                    throw e.unwrapIOException();
                } finally {
                    if (parsedMessage != null) {
                        mergeFrom(parsedMessage);
                    }
                }
                return this;
            }
            private int bitField0_;

            private Object deviceUuidKey_ = "";
            /**
             * <pre>
             *设备内部唯一ID
             * </pre>
             *
             * <code>optional string device_uuid_key = 1;</code>
             */
            public String getDeviceUuidKey() {
                Object ref = deviceUuidKey_;
                if (!(ref instanceof String)) {
                    com.google.protobuf.ByteString bs =
                            (com.google.protobuf.ByteString) ref;
                    String s = bs.toStringUtf8();
                    deviceUuidKey_ = s;
                    return s;
                } else {
                    return (String) ref;
                }
            }
            /**
             * <pre>
             *设备内部唯一ID
             * </pre>
             *
             * <code>optional string device_uuid_key = 1;</code>
             */
            public com.google.protobuf.ByteString
            getDeviceUuidKeyBytes() {
                Object ref = deviceUuidKey_;
                if (ref instanceof String) {
                    com.google.protobuf.ByteString b =
                            com.google.protobuf.ByteString.copyFromUtf8(
                                    (String) ref);
                    deviceUuidKey_ = b;
                    return b;
                } else {
                    return (com.google.protobuf.ByteString) ref;
                }
            }
            /**
             * <pre>
             *设备内部唯一ID
             * </pre>
             *
             * <code>optional string device_uuid_key = 1;</code>
             */
            public Builder setDeviceUuidKey(
                    String value) {
                if (value == null) {
                    throw new NullPointerException();
                }

                deviceUuidKey_ = value;
                onChanged();
                return this;
            }
            /**
             * <pre>
             *设备内部唯一ID
             * </pre>
             *
             * <code>optional string device_uuid_key = 1;</code>
             */
            public Builder clearDeviceUuidKey() {

                deviceUuidKey_ = getDefaultInstance().getDeviceUuidKey();
                onChanged();
                return this;
            }
            /**
             * <pre>
             *设备内部唯一ID
             * </pre>
             *
             * <code>optional string device_uuid_key = 1;</code>
             */
            public Builder setDeviceUuidKeyBytes(
                    com.google.protobuf.ByteString value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                checkByteStringIsUtf8(value);

                deviceUuidKey_ = value;
                onChanged();
                return this;
            }

            private cn.keptdata.one2data.header.message.protobuf.common.Node.BlockDeviceKey key_ = null;
            private com.google.protobuf.SingleFieldBuilderV3<
                    cn.keptdata.one2data.header.message.protobuf.common.Node.BlockDeviceKey, cn.keptdata.one2data.header.message.protobuf.common.Node.BlockDeviceKey.Builder, cn.keptdata.one2data.header.message.protobuf.common.Node.BlockDeviceKeyOrBuilder> keyBuilder_;
            /**
             * <pre>
             *逻辑卷内部唯一标识
             * </pre>
             *
             * <code>optional .one2data.rbtmqmsgcli.common.BlockDeviceKey key = 2;</code>
             */
            public boolean hasKey() {
                return keyBuilder_ != null || key_ != null;
            }
            /**
             * <pre>
             *逻辑卷内部唯一标识
             * </pre>
             *
             * <code>optional .one2data.rbtmqmsgcli.common.BlockDeviceKey key = 2;</code>
             */
            public cn.keptdata.one2data.header.message.protobuf.common.Node.BlockDeviceKey getKey() {
                if (keyBuilder_ == null) {
                    return key_ == null ? cn.keptdata.one2data.header.message.protobuf.common.Node.BlockDeviceKey.getDefaultInstance() : key_;
                } else {
                    return keyBuilder_.getMessage();
                }
            }
            /**
             * <pre>
             *逻辑卷内部唯一标识
             * </pre>
             *
             * <code>optional .one2data.rbtmqmsgcli.common.BlockDeviceKey key = 2;</code>
             */
            public Builder setKey(cn.keptdata.one2data.header.message.protobuf.common.Node.BlockDeviceKey value) {
                if (keyBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    key_ = value;
                    onChanged();
                } else {
                    keyBuilder_.setMessage(value);
                }

                return this;
            }
            /**
             * <pre>
             *逻辑卷内部唯一标识
             * </pre>
             *
             * <code>optional .one2data.rbtmqmsgcli.common.BlockDeviceKey key = 2;</code>
             */
            public Builder setKey(
                    cn.keptdata.one2data.header.message.protobuf.common.Node.BlockDeviceKey.Builder builderForValue) {
                if (keyBuilder_ == null) {
                    key_ = builderForValue.build();
                    onChanged();
                } else {
                    keyBuilder_.setMessage(builderForValue.build());
                }

                return this;
            }
            /**
             * <pre>
             *逻辑卷内部唯一标识
             * </pre>
             *
             * <code>optional .one2data.rbtmqmsgcli.common.BlockDeviceKey key = 2;</code>
             */
            public Builder mergeKey(cn.keptdata.one2data.header.message.protobuf.common.Node.BlockDeviceKey value) {
                if (keyBuilder_ == null) {
                    if (key_ != null) {
                        key_ =
                                cn.keptdata.one2data.header.message.protobuf.common.Node.BlockDeviceKey.newBuilder(key_).mergeFrom(value).buildPartial();
                    } else {
                        key_ = value;
                    }
                    onChanged();
                } else {
                    keyBuilder_.mergeFrom(value);
                }

                return this;
            }
            /**
             * <pre>
             *逻辑卷内部唯一标识
             * </pre>
             *
             * <code>optional .one2data.rbtmqmsgcli.common.BlockDeviceKey key = 2;</code>
             */
            public Builder clearKey() {
                if (keyBuilder_ == null) {
                    key_ = null;
                    onChanged();
                } else {
                    key_ = null;
                    keyBuilder_ = null;
                }

                return this;
            }
            /**
             * <pre>
             *逻辑卷内部唯一标识
             * </pre>
             *
             * <code>optional .one2data.rbtmqmsgcli.common.BlockDeviceKey key = 2;</code>
             */
            public cn.keptdata.one2data.header.message.protobuf.common.Node.BlockDeviceKey.Builder getKeyBuilder() {

                onChanged();
                return getKeyFieldBuilder().getBuilder();
            }
            /**
             * <pre>
             *逻辑卷内部唯一标识
             * </pre>
             *
             * <code>optional .one2data.rbtmqmsgcli.common.BlockDeviceKey key = 2;</code>
             */
            public cn.keptdata.one2data.header.message.protobuf.common.Node.BlockDeviceKeyOrBuilder getKeyOrBuilder() {
                if (keyBuilder_ != null) {
                    return keyBuilder_.getMessageOrBuilder();
                } else {
                    return key_ == null ?
                            cn.keptdata.one2data.header.message.protobuf.common.Node.BlockDeviceKey.getDefaultInstance() : key_;
                }
            }
            /**
             * <pre>
             *逻辑卷内部唯一标识
             * </pre>
             *
             * <code>optional .one2data.rbtmqmsgcli.common.BlockDeviceKey key = 2;</code>
             */
            private com.google.protobuf.SingleFieldBuilderV3<
                    cn.keptdata.one2data.header.message.protobuf.common.Node.BlockDeviceKey, cn.keptdata.one2data.header.message.protobuf.common.Node.BlockDeviceKey.Builder, cn.keptdata.one2data.header.message.protobuf.common.Node.BlockDeviceKeyOrBuilder>
            getKeyFieldBuilder() {
                if (keyBuilder_ == null) {
                    keyBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                            cn.keptdata.one2data.header.message.protobuf.common.Node.BlockDeviceKey, cn.keptdata.one2data.header.message.protobuf.common.Node.BlockDeviceKey.Builder, cn.keptdata.one2data.header.message.protobuf.common.Node.BlockDeviceKeyOrBuilder>(
                            getKey(),
                            getParentForChildren(),
                            isClean());
                    key_ = null;
                }
                return keyBuilder_;
            }

            private boolean isOnline_ ;
            /**
             * <pre>
             *逻辑卷是否在线
             * </pre>
             *
             * <code>optional bool is_online = 3;</code>
             */
            public boolean getIsOnline() {
                return isOnline_;
            }
            /**
             * <pre>
             *逻辑卷是否在线
             * </pre>
             *
             * <code>optional bool is_online = 3;</code>
             */
            public Builder setIsOnline(boolean value) {

                isOnline_ = value;
                onChanged();
                return this;
            }
            /**
             * <pre>
             *逻辑卷是否在线
             * </pre>
             *
             * <code>optional bool is_online = 3;</code>
             */
            public Builder clearIsOnline() {

                isOnline_ = false;
                onChanged();
                return this;
            }

            private Object name_ = "";
            /**
             * <pre>
             *逻辑卷名称，如windows平台的盘符: C:
             * </pre>
             *
             * <code>optional string name = 4;</code>
             */
            public String getName() {
                Object ref = name_;
                if (!(ref instanceof String)) {
                    com.google.protobuf.ByteString bs =
                            (com.google.protobuf.ByteString) ref;
                    String s = bs.toStringUtf8();
                    name_ = s;
                    return s;
                } else {
                    return (String) ref;
                }
            }
            /**
             * <pre>
             *逻辑卷名称，如windows平台的盘符: C:
             * </pre>
             *
             * <code>optional string name = 4;</code>
             */
            public com.google.protobuf.ByteString
            getNameBytes() {
                Object ref = name_;
                if (ref instanceof String) {
                    com.google.protobuf.ByteString b =
                            com.google.protobuf.ByteString.copyFromUtf8(
                                    (String) ref);
                    name_ = b;
                    return b;
                } else {
                    return (com.google.protobuf.ByteString) ref;
                }
            }
            /**
             * <pre>
             *逻辑卷名称，如windows平台的盘符: C:
             * </pre>
             *
             * <code>optional string name = 4;</code>
             */
            public Builder setName(
                    String value) {
                if (value == null) {
                    throw new NullPointerException();
                }

                name_ = value;
                onChanged();
                return this;
            }
            /**
             * <pre>
             *逻辑卷名称，如windows平台的盘符: C:
             * </pre>
             *
             * <code>optional string name = 4;</code>
             */
            public Builder clearName() {

                name_ = getDefaultInstance().getName();
                onChanged();
                return this;
            }
            /**
             * <pre>
             *逻辑卷名称，如windows平台的盘符: C:
             * </pre>
             *
             * <code>optional string name = 4;</code>
             */
            public Builder setNameBytes(
                    com.google.protobuf.ByteString value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                checkByteStringIsUtf8(value);

                name_ = value;
                onChanged();
                return this;
            }

            private Object label_ = "";
            /**
             * <pre>
             *逻辑卷别名, 如windows的盘符的别名：本地磁盘
             * </pre>
             *
             * <code>optional string label = 5;</code>
             */
            public String getLabel() {
                Object ref = label_;
                if (!(ref instanceof String)) {
                    com.google.protobuf.ByteString bs =
                            (com.google.protobuf.ByteString) ref;
                    String s = bs.toStringUtf8();
                    label_ = s;
                    return s;
                } else {
                    return (String) ref;
                }
            }
            /**
             * <pre>
             *逻辑卷别名, 如windows的盘符的别名：本地磁盘
             * </pre>
             *
             * <code>optional string label = 5;</code>
             */
            public com.google.protobuf.ByteString
            getLabelBytes() {
                Object ref = label_;
                if (ref instanceof String) {
                    com.google.protobuf.ByteString b =
                            com.google.protobuf.ByteString.copyFromUtf8(
                                    (String) ref);
                    label_ = b;
                    return b;
                } else {
                    return (com.google.protobuf.ByteString) ref;
                }
            }
            /**
             * <pre>
             *逻辑卷别名, 如windows的盘符的别名：本地磁盘
             * </pre>
             *
             * <code>optional string label = 5;</code>
             */
            public Builder setLabel(
                    String value) {
                if (value == null) {
                    throw new NullPointerException();
                }

                label_ = value;
                onChanged();
                return this;
            }
            /**
             * <pre>
             *逻辑卷别名, 如windows的盘符的别名：本地磁盘
             * </pre>
             *
             * <code>optional string label = 5;</code>
             */
            public Builder clearLabel() {

                label_ = getDefaultInstance().getLabel();
                onChanged();
                return this;
            }
            /**
             * <pre>
             *逻辑卷别名, 如windows的盘符的别名：本地磁盘
             * </pre>
             *
             * <code>optional string label = 5;</code>
             */
            public Builder setLabelBytes(
                    com.google.protobuf.ByteString value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                checkByteStringIsUtf8(value);

                label_ = value;
                onChanged();
                return this;
            }

            private Object filesystemType_ = "";
            /**
             * <pre>
             *文件系统类型
             * </pre>
             *
             * <code>optional string filesystem_type = 6;</code>
             */
            public String getFilesystemType() {
                Object ref = filesystemType_;
                if (!(ref instanceof String)) {
                    com.google.protobuf.ByteString bs =
                            (com.google.protobuf.ByteString) ref;
                    String s = bs.toStringUtf8();
                    filesystemType_ = s;
                    return s;
                } else {
                    return (String) ref;
                }
            }
            /**
             * <pre>
             *文件系统类型
             * </pre>
             *
             * <code>optional string filesystem_type = 6;</code>
             */
            public com.google.protobuf.ByteString
            getFilesystemTypeBytes() {
                Object ref = filesystemType_;
                if (ref instanceof String) {
                    com.google.protobuf.ByteString b =
                            com.google.protobuf.ByteString.copyFromUtf8(
                                    (String) ref);
                    filesystemType_ = b;
                    return b;
                } else {
                    return (com.google.protobuf.ByteString) ref;
                }
            }
            /**
             * <pre>
             *文件系统类型
             * </pre>
             *
             * <code>optional string filesystem_type = 6;</code>
             */
            public Builder setFilesystemType(
                    String value) {
                if (value == null) {
                    throw new NullPointerException();
                }

                filesystemType_ = value;
                onChanged();
                return this;
            }
            /**
             * <pre>
             *文件系统类型
             * </pre>
             *
             * <code>optional string filesystem_type = 6;</code>
             */
            public Builder clearFilesystemType() {

                filesystemType_ = getDefaultInstance().getFilesystemType();
                onChanged();
                return this;
            }
            /**
             * <pre>
             *文件系统类型
             * </pre>
             *
             * <code>optional string filesystem_type = 6;</code>
             */
            public Builder setFilesystemTypeBytes(
                    com.google.protobuf.ByteString value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                checkByteStringIsUtf8(value);

                filesystemType_ = value;
                onChanged();
                return this;
            }

            private long totalSize_ ;
            /**
             * <pre>
             *逻辑卷总大小,单位：Byte
             * </pre>
             *
             * <code>optional uint64 total_size = 7;</code>
             */
            public long getTotalSize() {
                return totalSize_;
            }
            /**
             * <pre>
             *逻辑卷总大小,单位：Byte
             * </pre>
             *
             * <code>optional uint64 total_size = 7;</code>
             */
            public Builder setTotalSize(long value) {

                totalSize_ = value;
                onChanged();
                return this;
            }
            /**
             * <pre>
             *逻辑卷总大小,单位：Byte
             * </pre>
             *
             * <code>optional uint64 total_size = 7;</code>
             */
            public Builder clearTotalSize() {

                totalSize_ = 0L;
                onChanged();
                return this;
            }

            private boolean isPv_ ;
            /**
             * <pre>
             *是否是物理卷, 逻辑卷也可能被制作为物理卷
             * </pre>
             *
             * <code>optional bool is_pv = 8;</code>
             */
            public boolean getIsPv() {
                return isPv_;
            }
            /**
             * <pre>
             *是否是物理卷, 逻辑卷也可能被制作为物理卷
             * </pre>
             *
             * <code>optional bool is_pv = 8;</code>
             */
            public Builder setIsPv(boolean value) {

                isPv_ = value;
                onChanged();
                return this;
            }
            /**
             * <pre>
             *是否是物理卷, 逻辑卷也可能被制作为物理卷
             * </pre>
             *
             * <code>optional bool is_pv = 8;</code>
             */
            public Builder clearIsPv() {

                isPv_ = false;
                onChanged();
                return this;
            }

            private boolean isVisible_ ;
            /**
             * <pre>
             *逻辑卷是否可见
             * </pre>
             *
             * <code>optional bool is_visible = 9;</code>
             */
            public boolean getIsVisible() {
                return isVisible_;
            }
            /**
             * <pre>
             *逻辑卷是否可见
             * </pre>
             *
             * <code>optional bool is_visible = 9;</code>
             */
            public Builder setIsVisible(boolean value) {

                isVisible_ = value;
                onChanged();
                return this;
            }
            /**
             * <pre>
             *逻辑卷是否可见
             * </pre>
             *
             * <code>optional bool is_visible = 9;</code>
             */
            public Builder clearIsVisible() {

                isVisible_ = false;
                onChanged();
                return this;
            }

            private boolean isBoot_ ;
            /**
             * <pre>
             *是否是启动卷
             * </pre>
             *
             * <code>optional bool is_boot = 10;</code>
             */
            public boolean getIsBoot() {
                return isBoot_;
            }
            /**
             * <pre>
             *是否是启动卷
             * </pre>
             *
             * <code>optional bool is_boot = 10;</code>
             */
            public Builder setIsBoot(boolean value) {

                isBoot_ = value;
                onChanged();
                return this;
            }
            /**
             * <pre>
             *是否是启动卷
             * </pre>
             *
             * <code>optional bool is_boot = 10;</code>
             */
            public Builder clearIsBoot() {

                isBoot_ = false;
                onChanged();
                return this;
            }

            private Object mountPoint_ = "";
            /**
             * <pre>
             *挂载点
             * </pre>
             *
             * <code>optional string mount_point = 11;</code>
             */
            public String getMountPoint() {
                Object ref = mountPoint_;
                if (!(ref instanceof String)) {
                    com.google.protobuf.ByteString bs =
                            (com.google.protobuf.ByteString) ref;
                    String s = bs.toStringUtf8();
                    mountPoint_ = s;
                    return s;
                } else {
                    return (String) ref;
                }
            }
            /**
             * <pre>
             *挂载点
             * </pre>
             *
             * <code>optional string mount_point = 11;</code>
             */
            public com.google.protobuf.ByteString
            getMountPointBytes() {
                Object ref = mountPoint_;
                if (ref instanceof String) {
                    com.google.protobuf.ByteString b =
                            com.google.protobuf.ByteString.copyFromUtf8(
                                    (String) ref);
                    mountPoint_ = b;
                    return b;
                } else {
                    return (com.google.protobuf.ByteString) ref;
                }
            }
            /**
             * <pre>
             *挂载点
             * </pre>
             *
             * <code>optional string mount_point = 11;</code>
             */
            public Builder setMountPoint(
                    String value) {
                if (value == null) {
                    throw new NullPointerException();
                }

                mountPoint_ = value;
                onChanged();
                return this;
            }
            /**
             * <pre>
             *挂载点
             * </pre>
             *
             * <code>optional string mount_point = 11;</code>
             */
            public Builder clearMountPoint() {

                mountPoint_ = getDefaultInstance().getMountPoint();
                onChanged();
                return this;
            }
            /**
             * <pre>
             *挂载点
             * </pre>
             *
             * <code>optional string mount_point = 11;</code>
             */
            public Builder setMountPointBytes(
                    com.google.protobuf.ByteString value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                checkByteStringIsUtf8(value);

                mountPoint_ = value;
                onChanged();
                return this;
            }

            private int backupableType_ ;
            /**
             * <pre>
             *可备份的类型，&gt;=0 表示可备份，&lt;0 表示不可备份
             * </pre>
             *
             * <code>optional int32 backupable_type = 12;</code>
             */
            public int getBackupableType() {
                return backupableType_;
            }
            /**
             * <pre>
             *可备份的类型，&gt;=0 表示可备份，&lt;0 表示不可备份
             * </pre>
             *
             * <code>optional int32 backupable_type = 12;</code>
             */
            public Builder setBackupableType(int value) {

                backupableType_ = value;
                onChanged();
                return this;
            }
            /**
             * <pre>
             *可备份的类型，&gt;=0 表示可备份，&lt;0 表示不可备份
             * </pre>
             *
             * <code>optional int32 backupable_type = 12;</code>
             */
            public Builder clearBackupableType() {

                backupableType_ = 0;
                onChanged();
                return this;
            }

            private java.util.List<cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.LVInfo.LVRefDevice> lvRefDevice_ =
                    java.util.Collections.emptyList();
            private void ensureLvRefDeviceIsMutable() {
                if (!((bitField0_ & 0x00001000) == 0x00001000)) {
                    lvRefDevice_ = new java.util.ArrayList<cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.LVInfo.LVRefDevice>(lvRefDevice_);
                    bitField0_ |= 0x00001000;
                }
            }

            private com.google.protobuf.RepeatedFieldBuilderV3<
                    cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.LVInfo.LVRefDevice, cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.LVInfo.LVRefDevice.Builder, cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.LVInfo.LVRefDeviceOrBuilder> lvRefDeviceBuilder_;

            /**
             * <pre>
             *逻辑卷关联的设备信息集合
             * </pre>
             *
             * <code>repeated .one2data.rbtmqmsgcli.client.LVInfo.LVRefDevice lv_ref_device = 30;</code>
             */
            public java.util.List<cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.LVInfo.LVRefDevice> getLvRefDeviceList() {
                if (lvRefDeviceBuilder_ == null) {
                    return java.util.Collections.unmodifiableList(lvRefDevice_);
                } else {
                    return lvRefDeviceBuilder_.getMessageList();
                }
            }
            /**
             * <pre>
             *逻辑卷关联的设备信息集合
             * </pre>
             *
             * <code>repeated .one2data.rbtmqmsgcli.client.LVInfo.LVRefDevice lv_ref_device = 30;</code>
             */
            public int getLvRefDeviceCount() {
                if (lvRefDeviceBuilder_ == null) {
                    return lvRefDevice_.size();
                } else {
                    return lvRefDeviceBuilder_.getCount();
                }
            }
            /**
             * <pre>
             *逻辑卷关联的设备信息集合
             * </pre>
             *
             * <code>repeated .one2data.rbtmqmsgcli.client.LVInfo.LVRefDevice lv_ref_device = 30;</code>
             */
            public cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.LVInfo.LVRefDevice getLvRefDevice(int index) {
                if (lvRefDeviceBuilder_ == null) {
                    return lvRefDevice_.get(index);
                } else {
                    return lvRefDeviceBuilder_.getMessage(index);
                }
            }
            /**
             * <pre>
             *逻辑卷关联的设备信息集合
             * </pre>
             *
             * <code>repeated .one2data.rbtmqmsgcli.client.LVInfo.LVRefDevice lv_ref_device = 30;</code>
             */
            public Builder setLvRefDevice(
                    int index, cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.LVInfo.LVRefDevice value) {
                if (lvRefDeviceBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    ensureLvRefDeviceIsMutable();
                    lvRefDevice_.set(index, value);
                    onChanged();
                } else {
                    lvRefDeviceBuilder_.setMessage(index, value);
                }
                return this;
            }
            /**
             * <pre>
             *逻辑卷关联的设备信息集合
             * </pre>
             *
             * <code>repeated .one2data.rbtmqmsgcli.client.LVInfo.LVRefDevice lv_ref_device = 30;</code>
             */
            public Builder setLvRefDevice(
                    int index, cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.LVInfo.LVRefDevice.Builder builderForValue) {
                if (lvRefDeviceBuilder_ == null) {
                    ensureLvRefDeviceIsMutable();
                    lvRefDevice_.set(index, builderForValue.build());
                    onChanged();
                } else {
                    lvRefDeviceBuilder_.setMessage(index, builderForValue.build());
                }
                return this;
            }
            /**
             * <pre>
             *逻辑卷关联的设备信息集合
             * </pre>
             *
             * <code>repeated .one2data.rbtmqmsgcli.client.LVInfo.LVRefDevice lv_ref_device = 30;</code>
             */
            public Builder addLvRefDevice(cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.LVInfo.LVRefDevice value) {
                if (lvRefDeviceBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    ensureLvRefDeviceIsMutable();
                    lvRefDevice_.add(value);
                    onChanged();
                } else {
                    lvRefDeviceBuilder_.addMessage(value);
                }
                return this;
            }
            /**
             * <pre>
             *逻辑卷关联的设备信息集合
             * </pre>
             *
             * <code>repeated .one2data.rbtmqmsgcli.client.LVInfo.LVRefDevice lv_ref_device = 30;</code>
             */
            public Builder addLvRefDevice(
                    int index, cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.LVInfo.LVRefDevice value) {
                if (lvRefDeviceBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    ensureLvRefDeviceIsMutable();
                    lvRefDevice_.add(index, value);
                    onChanged();
                } else {
                    lvRefDeviceBuilder_.addMessage(index, value);
                }
                return this;
            }
            /**
             * <pre>
             *逻辑卷关联的设备信息集合
             * </pre>
             *
             * <code>repeated .one2data.rbtmqmsgcli.client.LVInfo.LVRefDevice lv_ref_device = 30;</code>
             */
            public Builder addLvRefDevice(
                    cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.LVInfo.LVRefDevice.Builder builderForValue) {
                if (lvRefDeviceBuilder_ == null) {
                    ensureLvRefDeviceIsMutable();
                    lvRefDevice_.add(builderForValue.build());
                    onChanged();
                } else {
                    lvRefDeviceBuilder_.addMessage(builderForValue.build());
                }
                return this;
            }
            /**
             * <pre>
             *逻辑卷关联的设备信息集合
             * </pre>
             *
             * <code>repeated .one2data.rbtmqmsgcli.client.LVInfo.LVRefDevice lv_ref_device = 30;</code>
             */
            public Builder addLvRefDevice(
                    int index, cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.LVInfo.LVRefDevice.Builder builderForValue) {
                if (lvRefDeviceBuilder_ == null) {
                    ensureLvRefDeviceIsMutable();
                    lvRefDevice_.add(index, builderForValue.build());
                    onChanged();
                } else {
                    lvRefDeviceBuilder_.addMessage(index, builderForValue.build());
                }
                return this;
            }
            /**
             * <pre>
             *逻辑卷关联的设备信息集合
             * </pre>
             *
             * <code>repeated .one2data.rbtmqmsgcli.client.LVInfo.LVRefDevice lv_ref_device = 30;</code>
             */
            public Builder addAllLvRefDevice(
                    Iterable<? extends cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.LVInfo.LVRefDevice> values) {
                if (lvRefDeviceBuilder_ == null) {
                    ensureLvRefDeviceIsMutable();
                    com.google.protobuf.AbstractMessageLite.Builder.addAll(
                            values, lvRefDevice_);
                    onChanged();
                } else {
                    lvRefDeviceBuilder_.addAllMessages(values);
                }
                return this;
            }
            /**
             * <pre>
             *逻辑卷关联的设备信息集合
             * </pre>
             *
             * <code>repeated .one2data.rbtmqmsgcli.client.LVInfo.LVRefDevice lv_ref_device = 30;</code>
             */
            public Builder clearLvRefDevice() {
                if (lvRefDeviceBuilder_ == null) {
                    lvRefDevice_ = java.util.Collections.emptyList();
                    bitField0_ = (bitField0_ & ~0x00001000);
                    onChanged();
                } else {
                    lvRefDeviceBuilder_.clear();
                }
                return this;
            }
            /**
             * <pre>
             *逻辑卷关联的设备信息集合
             * </pre>
             *
             * <code>repeated .one2data.rbtmqmsgcli.client.LVInfo.LVRefDevice lv_ref_device = 30;</code>
             */
            public Builder removeLvRefDevice(int index) {
                if (lvRefDeviceBuilder_ == null) {
                    ensureLvRefDeviceIsMutable();
                    lvRefDevice_.remove(index);
                    onChanged();
                } else {
                    lvRefDeviceBuilder_.remove(index);
                }
                return this;
            }
            /**
             * <pre>
             *逻辑卷关联的设备信息集合
             * </pre>
             *
             * <code>repeated .one2data.rbtmqmsgcli.client.LVInfo.LVRefDevice lv_ref_device = 30;</code>
             */
            public cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.LVInfo.LVRefDevice.Builder getLvRefDeviceBuilder(
                    int index) {
                return getLvRefDeviceFieldBuilder().getBuilder(index);
            }
            /**
             * <pre>
             *逻辑卷关联的设备信息集合
             * </pre>
             *
             * <code>repeated .one2data.rbtmqmsgcli.client.LVInfo.LVRefDevice lv_ref_device = 30;</code>
             */
            public cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.LVInfo.LVRefDeviceOrBuilder getLvRefDeviceOrBuilder(
                    int index) {
                if (lvRefDeviceBuilder_ == null) {
                    return lvRefDevice_.get(index);  } else {
                    return lvRefDeviceBuilder_.getMessageOrBuilder(index);
                }
            }
            /**
             * <pre>
             *逻辑卷关联的设备信息集合
             * </pre>
             *
             * <code>repeated .one2data.rbtmqmsgcli.client.LVInfo.LVRefDevice lv_ref_device = 30;</code>
             */
            public java.util.List<? extends cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.LVInfo.LVRefDeviceOrBuilder>
            getLvRefDeviceOrBuilderList() {
                if (lvRefDeviceBuilder_ != null) {
                    return lvRefDeviceBuilder_.getMessageOrBuilderList();
                } else {
                    return java.util.Collections.unmodifiableList(lvRefDevice_);
                }
            }
            /**
             * <pre>
             *逻辑卷关联的设备信息集合
             * </pre>
             *
             * <code>repeated .one2data.rbtmqmsgcli.client.LVInfo.LVRefDevice lv_ref_device = 30;</code>
             */
            public cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.LVInfo.LVRefDevice.Builder addLvRefDeviceBuilder() {
                return getLvRefDeviceFieldBuilder().addBuilder(
                        cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.LVInfo.LVRefDevice.getDefaultInstance());
            }
            /**
             * <pre>
             *逻辑卷关联的设备信息集合
             * </pre>
             *
             * <code>repeated .one2data.rbtmqmsgcli.client.LVInfo.LVRefDevice lv_ref_device = 30;</code>
             */
            public cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.LVInfo.LVRefDevice.Builder addLvRefDeviceBuilder(
                    int index) {
                return getLvRefDeviceFieldBuilder().addBuilder(
                        index, cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.LVInfo.LVRefDevice.getDefaultInstance());
            }
            /**
             * <pre>
             *逻辑卷关联的设备信息集合
             * </pre>
             *
             * <code>repeated .one2data.rbtmqmsgcli.client.LVInfo.LVRefDevice lv_ref_device = 30;</code>
             */
            public java.util.List<cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.LVInfo.LVRefDevice.Builder>
            getLvRefDeviceBuilderList() {
                return getLvRefDeviceFieldBuilder().getBuilderList();
            }
            private com.google.protobuf.RepeatedFieldBuilderV3<
                    cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.LVInfo.LVRefDevice, cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.LVInfo.LVRefDevice.Builder, cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.LVInfo.LVRefDeviceOrBuilder>
            getLvRefDeviceFieldBuilder() {
                if (lvRefDeviceBuilder_ == null) {
                    lvRefDeviceBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
                            cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.LVInfo.LVRefDevice, cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.LVInfo.LVRefDevice.Builder, cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.LVInfo.LVRefDeviceOrBuilder>(
                            lvRefDevice_,
                            ((bitField0_ & 0x00001000) == 0x00001000),
                            getParentForChildren(),
                            isClean());
                    lvRefDevice_ = null;
                }
                return lvRefDeviceBuilder_;
            }
            public final Builder setUnknownFields(
                    final com.google.protobuf.UnknownFieldSet unknownFields) {
                return this;
            }

            public final Builder mergeUnknownFields(
                    final com.google.protobuf.UnknownFieldSet unknownFields) {
                return this;
            }


            // @@protoc_insertion_point(builder_scope:one2data.rbtmqmsgcli.client.LVInfo)
        }

        // @@protoc_insertion_point(class_scope:one2data.rbtmqmsgcli.client.LVInfo)
        private static final cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.LVInfo DEFAULT_INSTANCE;
        static {
            DEFAULT_INSTANCE = new cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.LVInfo();
        }

        public static cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.LVInfo getDefaultInstance() {
            return DEFAULT_INSTANCE;
        }

        private static final com.google.protobuf.Parser<LVInfo>
                PARSER = new com.google.protobuf.AbstractParser<LVInfo>() {
            public LVInfo parsePartialFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws com.google.protobuf.InvalidProtocolBufferException {
                return new LVInfo(input, extensionRegistry);
            }
        };

        public static com.google.protobuf.Parser<LVInfo> parser() {
            return PARSER;
        }

        @Override
        public com.google.protobuf.Parser<LVInfo> getParserForType() {
            return PARSER;
        }

        public cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.LVInfo getDefaultInstanceForType() {
            return DEFAULT_INSTANCE;
        }

    }

    public interface LanFreeInfoOrBuilder extends
            // @@protoc_insertion_point(interface_extends:one2data.rbtmqmsgcli.client.LanFreeInfo)
            com.google.protobuf.MessageOrBuilder {

        /**
         * <code>optional .one2data.rbtmqmsgcli.common.BlockDeviceKey key = 1;</code>
         */
        boolean hasKey();
        /**
         * <code>optional .one2data.rbtmqmsgcli.common.BlockDeviceKey key = 1;</code>
         */
        cn.keptdata.one2data.header.message.protobuf.common.Node.BlockDeviceKey getKey();
        /**
         * <code>optional .one2data.rbtmqmsgcli.common.BlockDeviceKey key = 1;</code>
         */
        cn.keptdata.one2data.header.message.protobuf.common.Node.BlockDeviceKeyOrBuilder getKeyOrBuilder();

        /**
         * <code>optional string backfile_name = 2;</code>
         */
        String getBackfileName();
        /**
         * <code>optional string backfile_name = 2;</code>
         */
        com.google.protobuf.ByteString
        getBackfileNameBytes();

        /**
         * <code>optional string initiator_dev_uuid = 3;</code>
         */
        String getInitiatorDevUuid();
        /**
         * <code>optional string initiator_dev_uuid = 3;</code>
         */
        com.google.protobuf.ByteString
        getInitiatorDevUuidBytes();

        /**
         * <code>optional string target_dev_uuid = 4;</code>
         */
        String getTargetDevUuid();
        /**
         * <code>optional string target_dev_uuid = 4;</code>
         */
        com.google.protobuf.ByteString
        getTargetDevUuidBytes();
    }
    /**
     * <pre>
     *上报 LanFree 信息
     * </pre>
     *
     * Protobuf type {@code one2data.rbtmqmsgcli.client.LanFreeInfo}
     */
    public  static final class LanFreeInfo extends
            com.google.protobuf.GeneratedMessageV3 implements
            // @@protoc_insertion_point(message_implements:one2data.rbtmqmsgcli.client.LanFreeInfo)
            LanFreeInfoOrBuilder {
        // Use LanFreeInfo.newBuilder() to construct.
        private LanFreeInfo(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
            super(builder);
        }
        private LanFreeInfo() {
            backfileName_ = "";
            initiatorDevUuid_ = "";
            targetDevUuid_ = "";
        }

        @Override
        public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
            return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
        }
        private LanFreeInfo(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            this();
            int mutable_bitField0_ = 0;
            try {
                boolean done = false;
                while (!done) {
                    int tag = input.readTag();
                    switch (tag) {
                        case 0:
                            done = true;
                            break;
                        default: {
                            if (!input.skipField(tag)) {
                                done = true;
                            }
                            break;
                        }
                        case 10: {
                            cn.keptdata.one2data.header.message.protobuf.common.Node.BlockDeviceKey.Builder subBuilder = null;
                            if (key_ != null) {
                                subBuilder = key_.toBuilder();
                            }
                            key_ = input.readMessage(cn.keptdata.one2data.header.message.protobuf.common.Node.BlockDeviceKey.parser(), extensionRegistry);
                            if (subBuilder != null) {
                                subBuilder.mergeFrom(key_);
                                key_ = subBuilder.buildPartial();
                            }

                            break;
                        }
                        case 18: {
                            String s = input.readStringRequireUtf8();

                            backfileName_ = s;
                            break;
                        }
                        case 26: {
                            String s = input.readStringRequireUtf8();

                            initiatorDevUuid_ = s;
                            break;
                        }
                        case 34: {
                            String s = input.readStringRequireUtf8();

                            targetDevUuid_ = s;
                            break;
                        }
                    }
                }
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(this);
            } catch (java.io.IOException e) {
                throw new com.google.protobuf.InvalidProtocolBufferException(
                        e).setUnfinishedMessage(this);
            } finally {
                makeExtensionsImmutable();
            }
        }
        public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
            return cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.internal_static_one2data_rbtmqmsgcli_client_LanFreeInfo_descriptor;
        }

        protected FieldAccessorTable
        internalGetFieldAccessorTable() {
            return cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.internal_static_one2data_rbtmqmsgcli_client_LanFreeInfo_fieldAccessorTable
                    .ensureFieldAccessorsInitialized(
                            cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.LanFreeInfo.class, cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.LanFreeInfo.Builder.class);
        }

        public static final int KEY_FIELD_NUMBER = 1;
        private cn.keptdata.one2data.header.message.protobuf.common.Node.BlockDeviceKey key_;
        /**
         * <code>optional .one2data.rbtmqmsgcli.common.BlockDeviceKey key = 1;</code>
         */
        public boolean hasKey() {
            return key_ != null;
        }
        /**
         * <code>optional .one2data.rbtmqmsgcli.common.BlockDeviceKey key = 1;</code>
         */
        public cn.keptdata.one2data.header.message.protobuf.common.Node.BlockDeviceKey getKey() {
            return key_ == null ? cn.keptdata.one2data.header.message.protobuf.common.Node.BlockDeviceKey.getDefaultInstance() : key_;
        }
        /**
         * <code>optional .one2data.rbtmqmsgcli.common.BlockDeviceKey key = 1;</code>
         */
        public cn.keptdata.one2data.header.message.protobuf.common.Node.BlockDeviceKeyOrBuilder getKeyOrBuilder() {
            return getKey();
        }

        public static final int BACKFILE_NAME_FIELD_NUMBER = 2;
        private volatile Object backfileName_;
        /**
         * <code>optional string backfile_name = 2;</code>
         */
        public String getBackfileName() {
            Object ref = backfileName_;
            if (ref instanceof String) {
                return (String) ref;
            } else {
                com.google.protobuf.ByteString bs =
                        (com.google.protobuf.ByteString) ref;
                String s = bs.toStringUtf8();
                backfileName_ = s;
                return s;
            }
        }
        /**
         * <code>optional string backfile_name = 2;</code>
         */
        public com.google.protobuf.ByteString
        getBackfileNameBytes() {
            Object ref = backfileName_;
            if (ref instanceof String) {
                com.google.protobuf.ByteString b =
                        com.google.protobuf.ByteString.copyFromUtf8(
                                (String) ref);
                backfileName_ = b;
                return b;
            } else {
                return (com.google.protobuf.ByteString) ref;
            }
        }

        public static final int INITIATOR_DEV_UUID_FIELD_NUMBER = 3;
        private volatile Object initiatorDevUuid_;
        /**
         * <code>optional string initiator_dev_uuid = 3;</code>
         */
        public String getInitiatorDevUuid() {
            Object ref = initiatorDevUuid_;
            if (ref instanceof String) {
                return (String) ref;
            } else {
                com.google.protobuf.ByteString bs =
                        (com.google.protobuf.ByteString) ref;
                String s = bs.toStringUtf8();
                initiatorDevUuid_ = s;
                return s;
            }
        }
        /**
         * <code>optional string initiator_dev_uuid = 3;</code>
         */
        public com.google.protobuf.ByteString
        getInitiatorDevUuidBytes() {
            Object ref = initiatorDevUuid_;
            if (ref instanceof String) {
                com.google.protobuf.ByteString b =
                        com.google.protobuf.ByteString.copyFromUtf8(
                                (String) ref);
                initiatorDevUuid_ = b;
                return b;
            } else {
                return (com.google.protobuf.ByteString) ref;
            }
        }

        public static final int TARGET_DEV_UUID_FIELD_NUMBER = 4;
        private volatile Object targetDevUuid_;
        /**
         * <code>optional string target_dev_uuid = 4;</code>
         */
        public String getTargetDevUuid() {
            Object ref = targetDevUuid_;
            if (ref instanceof String) {
                return (String) ref;
            } else {
                com.google.protobuf.ByteString bs =
                        (com.google.protobuf.ByteString) ref;
                String s = bs.toStringUtf8();
                targetDevUuid_ = s;
                return s;
            }
        }
        /**
         * <code>optional string target_dev_uuid = 4;</code>
         */
        public com.google.protobuf.ByteString
        getTargetDevUuidBytes() {
            Object ref = targetDevUuid_;
            if (ref instanceof String) {
                com.google.protobuf.ByteString b =
                        com.google.protobuf.ByteString.copyFromUtf8(
                                (String) ref);
                targetDevUuid_ = b;
                return b;
            } else {
                return (com.google.protobuf.ByteString) ref;
            }
        }

        private byte memoizedIsInitialized = -1;
        public final boolean isInitialized() {
            byte isInitialized = memoizedIsInitialized;
            if (isInitialized == 1) return true;
            if (isInitialized == 0) return false;

            memoizedIsInitialized = 1;
            return true;
        }

        public void writeTo(com.google.protobuf.CodedOutputStream output)
                throws java.io.IOException {
            if (key_ != null) {
                output.writeMessage(1, getKey());
            }
            if (!getBackfileNameBytes().isEmpty()) {
                com.google.protobuf.GeneratedMessageV3.writeString(output, 2, backfileName_);
            }
            if (!getInitiatorDevUuidBytes().isEmpty()) {
                com.google.protobuf.GeneratedMessageV3.writeString(output, 3, initiatorDevUuid_);
            }
            if (!getTargetDevUuidBytes().isEmpty()) {
                com.google.protobuf.GeneratedMessageV3.writeString(output, 4, targetDevUuid_);
            }
        }

        public int getSerializedSize() {
            int size = memoizedSize;
            if (size != -1) return size;

            size = 0;
            if (key_ != null) {
                size += com.google.protobuf.CodedOutputStream
                        .computeMessageSize(1, getKey());
            }
            if (!getBackfileNameBytes().isEmpty()) {
                size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, backfileName_);
            }
            if (!getInitiatorDevUuidBytes().isEmpty()) {
                size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, initiatorDevUuid_);
            }
            if (!getTargetDevUuidBytes().isEmpty()) {
                size += com.google.protobuf.GeneratedMessageV3.computeStringSize(4, targetDevUuid_);
            }
            memoizedSize = size;
            return size;
        }

        private static final long serialVersionUID = 0L;
        @Override
        public boolean equals(final Object obj) {
            if (obj == this) {
                return true;
            }
            if (!(obj instanceof cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.LanFreeInfo)) {
                return super.equals(obj);
            }
            cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.LanFreeInfo other = (cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.LanFreeInfo) obj;

            boolean result = true;
            result = result && (hasKey() == other.hasKey());
            if (hasKey()) {
                result = result && getKey()
                        .equals(other.getKey());
            }
            result = result && getBackfileName()
                    .equals(other.getBackfileName());
            result = result && getInitiatorDevUuid()
                    .equals(other.getInitiatorDevUuid());
            result = result && getTargetDevUuid()
                    .equals(other.getTargetDevUuid());
            return result;
        }

        @Override
        public int hashCode() {
            if (memoizedHashCode != 0) {
                return memoizedHashCode;
            }
            int hash = 41;
            hash = (19 * hash) + getDescriptorForType().hashCode();
            if (hasKey()) {
                hash = (37 * hash) + KEY_FIELD_NUMBER;
                hash = (53 * hash) + getKey().hashCode();
            }
            hash = (37 * hash) + BACKFILE_NAME_FIELD_NUMBER;
            hash = (53 * hash) + getBackfileName().hashCode();
            hash = (37 * hash) + INITIATOR_DEV_UUID_FIELD_NUMBER;
            hash = (53 * hash) + getInitiatorDevUuid().hashCode();
            hash = (37 * hash) + TARGET_DEV_UUID_FIELD_NUMBER;
            hash = (53 * hash) + getTargetDevUuid().hashCode();
            hash = (29 * hash) + unknownFields.hashCode();
            memoizedHashCode = hash;
            return hash;
        }

        public static cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.LanFreeInfo parseFrom(
                com.google.protobuf.ByteString data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }
        public static cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.LanFreeInfo parseFrom(
                com.google.protobuf.ByteString data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }
        public static cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.LanFreeInfo parseFrom(byte[] data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }
        public static cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.LanFreeInfo parseFrom(
                byte[] data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }
        public static cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.LanFreeInfo parseFrom(java.io.InputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input);
        }
        public static cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.LanFreeInfo parseFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input, extensionRegistry);
        }
        public static cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.LanFreeInfo parseDelimitedFrom(java.io.InputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseDelimitedWithIOException(PARSER, input);
        }
        public static cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.LanFreeInfo parseDelimitedFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
        }
        public static cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.LanFreeInfo parseFrom(
                com.google.protobuf.CodedInputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input);
        }
        public static cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.LanFreeInfo parseFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input, extensionRegistry);
        }

        public Builder newBuilderForType() { return newBuilder(); }
        public static Builder newBuilder() {
            return DEFAULT_INSTANCE.toBuilder();
        }
        public static Builder newBuilder(cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.LanFreeInfo prototype) {
            return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }
        public Builder toBuilder() {
            return this == DEFAULT_INSTANCE
                    ? new Builder() : new Builder().mergeFrom(this);
        }

        @Override
        protected Builder newBuilderForType(
                BuilderParent parent) {
            Builder builder = new Builder(parent);
            return builder;
        }
        /**
         * <pre>
         *上报 LanFree 信息
         * </pre>
         *
         * Protobuf type {@code one2data.rbtmqmsgcli.client.LanFreeInfo}
         */
        public static final class Builder extends
                com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
                // @@protoc_insertion_point(builder_implements:one2data.rbtmqmsgcli.client.LanFreeInfo)
                cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.LanFreeInfoOrBuilder {
            public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
                return cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.internal_static_one2data_rbtmqmsgcli_client_LanFreeInfo_descriptor;
            }

            protected FieldAccessorTable
            internalGetFieldAccessorTable() {
                return cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.internal_static_one2data_rbtmqmsgcli_client_LanFreeInfo_fieldAccessorTable
                        .ensureFieldAccessorsInitialized(
                                cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.LanFreeInfo.class, cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.LanFreeInfo.Builder.class);
            }

            // Construct using cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.LanFreeInfo.newBuilder()
            private Builder() {
                maybeForceBuilderInitialization();
            }

            private Builder(
                    BuilderParent parent) {
                super(parent);
                maybeForceBuilderInitialization();
            }
            private void maybeForceBuilderInitialization() {
                if (com.google.protobuf.GeneratedMessageV3
                        .alwaysUseFieldBuilders) {
                }
            }
            public Builder clear() {
                super.clear();
                if (keyBuilder_ == null) {
                    key_ = null;
                } else {
                    key_ = null;
                    keyBuilder_ = null;
                }
                backfileName_ = "";

                initiatorDevUuid_ = "";

                targetDevUuid_ = "";

                return this;
            }

            public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
                return cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.internal_static_one2data_rbtmqmsgcli_client_LanFreeInfo_descriptor;
            }

            public cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.LanFreeInfo getDefaultInstanceForType() {
                return cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.LanFreeInfo.getDefaultInstance();
            }

            public cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.LanFreeInfo build() {
                cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.LanFreeInfo result = buildPartial();
                if (!result.isInitialized()) {
                    throw newUninitializedMessageException(result);
                }
                return result;
            }

            public cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.LanFreeInfo buildPartial() {
                cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.LanFreeInfo result = new cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.LanFreeInfo(this);
                if (keyBuilder_ == null) {
                    result.key_ = key_;
                } else {
                    result.key_ = keyBuilder_.build();
                }
                result.backfileName_ = backfileName_;
                result.initiatorDevUuid_ = initiatorDevUuid_;
                result.targetDevUuid_ = targetDevUuid_;
                onBuilt();
                return result;
            }

            public Builder clone() {
                return (Builder) super.clone();
            }
            public Builder setField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    Object value) {
                return (Builder) super.setField(field, value);
            }
            public Builder clearField(
                    com.google.protobuf.Descriptors.FieldDescriptor field) {
                return (Builder) super.clearField(field);
            }
            public Builder clearOneof(
                    com.google.protobuf.Descriptors.OneofDescriptor oneof) {
                return (Builder) super.clearOneof(oneof);
            }
            public Builder setRepeatedField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    int index, Object value) {
                return (Builder) super.setRepeatedField(field, index, value);
            }
            public Builder addRepeatedField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    Object value) {
                return (Builder) super.addRepeatedField(field, value);
            }
            public Builder mergeFrom(com.google.protobuf.Message other) {
                if (other instanceof cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.LanFreeInfo) {
                    return mergeFrom((cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.LanFreeInfo)other);
                } else {
                    super.mergeFrom(other);
                    return this;
                }
            }

            public Builder mergeFrom(cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.LanFreeInfo other) {
                if (other == cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.LanFreeInfo.getDefaultInstance()) return this;
                if (other.hasKey()) {
                    mergeKey(other.getKey());
                }
                if (!other.getBackfileName().isEmpty()) {
                    backfileName_ = other.backfileName_;
                    onChanged();
                }
                if (!other.getInitiatorDevUuid().isEmpty()) {
                    initiatorDevUuid_ = other.initiatorDevUuid_;
                    onChanged();
                }
                if (!other.getTargetDevUuid().isEmpty()) {
                    targetDevUuid_ = other.targetDevUuid_;
                    onChanged();
                }
                onChanged();
                return this;
            }

            public final boolean isInitialized() {
                return true;
            }

            public Builder mergeFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws java.io.IOException {
                cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.LanFreeInfo parsedMessage = null;
                try {
                    parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
                } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                    parsedMessage = (cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.LanFreeInfo) e.getUnfinishedMessage();
                    throw e.unwrapIOException();
                } finally {
                    if (parsedMessage != null) {
                        mergeFrom(parsedMessage);
                    }
                }
                return this;
            }

            private cn.keptdata.one2data.header.message.protobuf.common.Node.BlockDeviceKey key_ = null;
            private com.google.protobuf.SingleFieldBuilderV3<
                    cn.keptdata.one2data.header.message.protobuf.common.Node.BlockDeviceKey, cn.keptdata.one2data.header.message.protobuf.common.Node.BlockDeviceKey.Builder, cn.keptdata.one2data.header.message.protobuf.common.Node.BlockDeviceKeyOrBuilder> keyBuilder_;
            /**
             * <code>optional .one2data.rbtmqmsgcli.common.BlockDeviceKey key = 1;</code>
             */
            public boolean hasKey() {
                return keyBuilder_ != null || key_ != null;
            }
            /**
             * <code>optional .one2data.rbtmqmsgcli.common.BlockDeviceKey key = 1;</code>
             */
            public cn.keptdata.one2data.header.message.protobuf.common.Node.BlockDeviceKey getKey() {
                if (keyBuilder_ == null) {
                    return key_ == null ? cn.keptdata.one2data.header.message.protobuf.common.Node.BlockDeviceKey.getDefaultInstance() : key_;
                } else {
                    return keyBuilder_.getMessage();
                }
            }
            /**
             * <code>optional .one2data.rbtmqmsgcli.common.BlockDeviceKey key = 1;</code>
             */
            public Builder setKey(cn.keptdata.one2data.header.message.protobuf.common.Node.BlockDeviceKey value) {
                if (keyBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    key_ = value;
                    onChanged();
                } else {
                    keyBuilder_.setMessage(value);
                }

                return this;
            }
            /**
             * <code>optional .one2data.rbtmqmsgcli.common.BlockDeviceKey key = 1;</code>
             */
            public Builder setKey(
                    cn.keptdata.one2data.header.message.protobuf.common.Node.BlockDeviceKey.Builder builderForValue) {
                if (keyBuilder_ == null) {
                    key_ = builderForValue.build();
                    onChanged();
                } else {
                    keyBuilder_.setMessage(builderForValue.build());
                }

                return this;
            }
            /**
             * <code>optional .one2data.rbtmqmsgcli.common.BlockDeviceKey key = 1;</code>
             */
            public Builder mergeKey(cn.keptdata.one2data.header.message.protobuf.common.Node.BlockDeviceKey value) {
                if (keyBuilder_ == null) {
                    if (key_ != null) {
                        key_ =
                                cn.keptdata.one2data.header.message.protobuf.common.Node.BlockDeviceKey.newBuilder(key_).mergeFrom(value).buildPartial();
                    } else {
                        key_ = value;
                    }
                    onChanged();
                } else {
                    keyBuilder_.mergeFrom(value);
                }

                return this;
            }
            /**
             * <code>optional .one2data.rbtmqmsgcli.common.BlockDeviceKey key = 1;</code>
             */
            public Builder clearKey() {
                if (keyBuilder_ == null) {
                    key_ = null;
                    onChanged();
                } else {
                    key_ = null;
                    keyBuilder_ = null;
                }

                return this;
            }
            /**
             * <code>optional .one2data.rbtmqmsgcli.common.BlockDeviceKey key = 1;</code>
             */
            public cn.keptdata.one2data.header.message.protobuf.common.Node.BlockDeviceKey.Builder getKeyBuilder() {

                onChanged();
                return getKeyFieldBuilder().getBuilder();
            }
            /**
             * <code>optional .one2data.rbtmqmsgcli.common.BlockDeviceKey key = 1;</code>
             */
            public cn.keptdata.one2data.header.message.protobuf.common.Node.BlockDeviceKeyOrBuilder getKeyOrBuilder() {
                if (keyBuilder_ != null) {
                    return keyBuilder_.getMessageOrBuilder();
                } else {
                    return key_ == null ?
                            cn.keptdata.one2data.header.message.protobuf.common.Node.BlockDeviceKey.getDefaultInstance() : key_;
                }
            }
            /**
             * <code>optional .one2data.rbtmqmsgcli.common.BlockDeviceKey key = 1;</code>
             */
            private com.google.protobuf.SingleFieldBuilderV3<
                    cn.keptdata.one2data.header.message.protobuf.common.Node.BlockDeviceKey, cn.keptdata.one2data.header.message.protobuf.common.Node.BlockDeviceKey.Builder, cn.keptdata.one2data.header.message.protobuf.common.Node.BlockDeviceKeyOrBuilder>
            getKeyFieldBuilder() {
                if (keyBuilder_ == null) {
                    keyBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                            cn.keptdata.one2data.header.message.protobuf.common.Node.BlockDeviceKey, cn.keptdata.one2data.header.message.protobuf.common.Node.BlockDeviceKey.Builder, cn.keptdata.one2data.header.message.protobuf.common.Node.BlockDeviceKeyOrBuilder>(
                            getKey(),
                            getParentForChildren(),
                            isClean());
                    key_ = null;
                }
                return keyBuilder_;
            }

            private Object backfileName_ = "";
            /**
             * <code>optional string backfile_name = 2;</code>
             */
            public String getBackfileName() {
                Object ref = backfileName_;
                if (!(ref instanceof String)) {
                    com.google.protobuf.ByteString bs =
                            (com.google.protobuf.ByteString) ref;
                    String s = bs.toStringUtf8();
                    backfileName_ = s;
                    return s;
                } else {
                    return (String) ref;
                }
            }
            /**
             * <code>optional string backfile_name = 2;</code>
             */
            public com.google.protobuf.ByteString
            getBackfileNameBytes() {
                Object ref = backfileName_;
                if (ref instanceof String) {
                    com.google.protobuf.ByteString b =
                            com.google.protobuf.ByteString.copyFromUtf8(
                                    (String) ref);
                    backfileName_ = b;
                    return b;
                } else {
                    return (com.google.protobuf.ByteString) ref;
                }
            }
            /**
             * <code>optional string backfile_name = 2;</code>
             */
            public Builder setBackfileName(
                    String value) {
                if (value == null) {
                    throw new NullPointerException();
                }

                backfileName_ = value;
                onChanged();
                return this;
            }
            /**
             * <code>optional string backfile_name = 2;</code>
             */
            public Builder clearBackfileName() {

                backfileName_ = getDefaultInstance().getBackfileName();
                onChanged();
                return this;
            }
            /**
             * <code>optional string backfile_name = 2;</code>
             */
            public Builder setBackfileNameBytes(
                    com.google.protobuf.ByteString value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                checkByteStringIsUtf8(value);

                backfileName_ = value;
                onChanged();
                return this;
            }

            private Object initiatorDevUuid_ = "";
            /**
             * <code>optional string initiator_dev_uuid = 3;</code>
             */
            public String getInitiatorDevUuid() {
                Object ref = initiatorDevUuid_;
                if (!(ref instanceof String)) {
                    com.google.protobuf.ByteString bs =
                            (com.google.protobuf.ByteString) ref;
                    String s = bs.toStringUtf8();
                    initiatorDevUuid_ = s;
                    return s;
                } else {
                    return (String) ref;
                }
            }
            /**
             * <code>optional string initiator_dev_uuid = 3;</code>
             */
            public com.google.protobuf.ByteString
            getInitiatorDevUuidBytes() {
                Object ref = initiatorDevUuid_;
                if (ref instanceof String) {
                    com.google.protobuf.ByteString b =
                            com.google.protobuf.ByteString.copyFromUtf8(
                                    (String) ref);
                    initiatorDevUuid_ = b;
                    return b;
                } else {
                    return (com.google.protobuf.ByteString) ref;
                }
            }
            /**
             * <code>optional string initiator_dev_uuid = 3;</code>
             */
            public Builder setInitiatorDevUuid(
                    String value) {
                if (value == null) {
                    throw new NullPointerException();
                }

                initiatorDevUuid_ = value;
                onChanged();
                return this;
            }
            /**
             * <code>optional string initiator_dev_uuid = 3;</code>
             */
            public Builder clearInitiatorDevUuid() {

                initiatorDevUuid_ = getDefaultInstance().getInitiatorDevUuid();
                onChanged();
                return this;
            }
            /**
             * <code>optional string initiator_dev_uuid = 3;</code>
             */
            public Builder setInitiatorDevUuidBytes(
                    com.google.protobuf.ByteString value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                checkByteStringIsUtf8(value);

                initiatorDevUuid_ = value;
                onChanged();
                return this;
            }

            private Object targetDevUuid_ = "";
            /**
             * <code>optional string target_dev_uuid = 4;</code>
             */
            public String getTargetDevUuid() {
                Object ref = targetDevUuid_;
                if (!(ref instanceof String)) {
                    com.google.protobuf.ByteString bs =
                            (com.google.protobuf.ByteString) ref;
                    String s = bs.toStringUtf8();
                    targetDevUuid_ = s;
                    return s;
                } else {
                    return (String) ref;
                }
            }
            /**
             * <code>optional string target_dev_uuid = 4;</code>
             */
            public com.google.protobuf.ByteString
            getTargetDevUuidBytes() {
                Object ref = targetDevUuid_;
                if (ref instanceof String) {
                    com.google.protobuf.ByteString b =
                            com.google.protobuf.ByteString.copyFromUtf8(
                                    (String) ref);
                    targetDevUuid_ = b;
                    return b;
                } else {
                    return (com.google.protobuf.ByteString) ref;
                }
            }
            /**
             * <code>optional string target_dev_uuid = 4;</code>
             */
            public Builder setTargetDevUuid(
                    String value) {
                if (value == null) {
                    throw new NullPointerException();
                }

                targetDevUuid_ = value;
                onChanged();
                return this;
            }
            /**
             * <code>optional string target_dev_uuid = 4;</code>
             */
            public Builder clearTargetDevUuid() {

                targetDevUuid_ = getDefaultInstance().getTargetDevUuid();
                onChanged();
                return this;
            }
            /**
             * <code>optional string target_dev_uuid = 4;</code>
             */
            public Builder setTargetDevUuidBytes(
                    com.google.protobuf.ByteString value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                checkByteStringIsUtf8(value);

                targetDevUuid_ = value;
                onChanged();
                return this;
            }
            public final Builder setUnknownFields(
                    final com.google.protobuf.UnknownFieldSet unknownFields) {
                return this;
            }

            public final Builder mergeUnknownFields(
                    final com.google.protobuf.UnknownFieldSet unknownFields) {
                return this;
            }


            // @@protoc_insertion_point(builder_scope:one2data.rbtmqmsgcli.client.LanFreeInfo)
        }

        // @@protoc_insertion_point(class_scope:one2data.rbtmqmsgcli.client.LanFreeInfo)
        private static final cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.LanFreeInfo DEFAULT_INSTANCE;
        static {
            DEFAULT_INSTANCE = new cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.LanFreeInfo();
        }

        public static cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.LanFreeInfo getDefaultInstance() {
            return DEFAULT_INSTANCE;
        }

        private static final com.google.protobuf.Parser<LanFreeInfo>
                PARSER = new com.google.protobuf.AbstractParser<LanFreeInfo>() {
            public LanFreeInfo parsePartialFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws com.google.protobuf.InvalidProtocolBufferException {
                return new LanFreeInfo(input, extensionRegistry);
            }
        };

        public static com.google.protobuf.Parser<LanFreeInfo> parser() {
            return PARSER;
        }

        @Override
        public com.google.protobuf.Parser<LanFreeInfo> getParserForType() {
            return PARSER;
        }

        public cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.LanFreeInfo getDefaultInstanceForType() {
            return DEFAULT_INSTANCE;
        }

    }

    public interface BitmapDriverInfoOrBuilder extends
            // @@protoc_insertion_point(interface_extends:one2data.rbtmqmsgcli.client.BitmapDriverInfo)
            com.google.protobuf.MessageOrBuilder {

        /**
         * <code>optional string driver_version = 1;</code>
         */
        String getDriverVersion();
        /**
         * <code>optional string driver_version = 1;</code>
         */
        com.google.protobuf.ByteString
        getDriverVersionBytes();

        /**
         * <code>optional string driver_vermagic = 2;</code>
         */
        String getDriverVermagic();
        /**
         * <code>optional string driver_vermagic = 2;</code>
         */
        com.google.protobuf.ByteString
        getDriverVermagicBytes();

        /**
         * <code>optional string kernel_release = 3;</code>
         */
        String getKernelRelease();
        /**
         * <code>optional string kernel_release = 3;</code>
         */
        com.google.protobuf.ByteString
        getKernelReleaseBytes();
    }
    /**
     * Protobuf type {@code one2data.rbtmqmsgcli.client.BitmapDriverInfo}
     */
    public  static final class BitmapDriverInfo extends
            com.google.protobuf.GeneratedMessageV3 implements
            // @@protoc_insertion_point(message_implements:one2data.rbtmqmsgcli.client.BitmapDriverInfo)
            BitmapDriverInfoOrBuilder {
        // Use BitmapDriverInfo.newBuilder() to construct.
        private BitmapDriverInfo(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
            super(builder);
        }
        private BitmapDriverInfo() {
            driverVersion_ = "";
            driverVermagic_ = "";
            kernelRelease_ = "";
        }

        @Override
        public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
            return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
        }
        private BitmapDriverInfo(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            this();
            int mutable_bitField0_ = 0;
            try {
                boolean done = false;
                while (!done) {
                    int tag = input.readTag();
                    switch (tag) {
                        case 0:
                            done = true;
                            break;
                        default: {
                            if (!input.skipField(tag)) {
                                done = true;
                            }
                            break;
                        }
                        case 10: {
                            String s = input.readStringRequireUtf8();

                            driverVersion_ = s;
                            break;
                        }
                        case 18: {
                            String s = input.readStringRequireUtf8();

                            driverVermagic_ = s;
                            break;
                        }
                        case 26: {
                            String s = input.readStringRequireUtf8();

                            kernelRelease_ = s;
                            break;
                        }
                    }
                }
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(this);
            } catch (java.io.IOException e) {
                throw new com.google.protobuf.InvalidProtocolBufferException(
                        e).setUnfinishedMessage(this);
            } finally {
                makeExtensionsImmutable();
            }
        }
        public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
            return cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.internal_static_one2data_rbtmqmsgcli_client_BitmapDriverInfo_descriptor;
        }

        protected FieldAccessorTable
        internalGetFieldAccessorTable() {
            return cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.internal_static_one2data_rbtmqmsgcli_client_BitmapDriverInfo_fieldAccessorTable
                    .ensureFieldAccessorsInitialized(
                            cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BitmapDriverInfo.class, cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BitmapDriverInfo.Builder.class);
        }

        public static final int DRIVER_VERSION_FIELD_NUMBER = 1;
        private volatile Object driverVersion_;
        /**
         * <code>optional string driver_version = 1;</code>
         */
        public String getDriverVersion() {
            Object ref = driverVersion_;
            if (ref instanceof String) {
                return (String) ref;
            } else {
                com.google.protobuf.ByteString bs =
                        (com.google.protobuf.ByteString) ref;
                String s = bs.toStringUtf8();
                driverVersion_ = s;
                return s;
            }
        }
        /**
         * <code>optional string driver_version = 1;</code>
         */
        public com.google.protobuf.ByteString
        getDriverVersionBytes() {
            Object ref = driverVersion_;
            if (ref instanceof String) {
                com.google.protobuf.ByteString b =
                        com.google.protobuf.ByteString.copyFromUtf8(
                                (String) ref);
                driverVersion_ = b;
                return b;
            } else {
                return (com.google.protobuf.ByteString) ref;
            }
        }

        public static final int DRIVER_VERMAGIC_FIELD_NUMBER = 2;
        private volatile Object driverVermagic_;
        /**
         * <code>optional string driver_vermagic = 2;</code>
         */
        public String getDriverVermagic() {
            Object ref = driverVermagic_;
            if (ref instanceof String) {
                return (String) ref;
            } else {
                com.google.protobuf.ByteString bs =
                        (com.google.protobuf.ByteString) ref;
                String s = bs.toStringUtf8();
                driverVermagic_ = s;
                return s;
            }
        }
        /**
         * <code>optional string driver_vermagic = 2;</code>
         */
        public com.google.protobuf.ByteString
        getDriverVermagicBytes() {
            Object ref = driverVermagic_;
            if (ref instanceof String) {
                com.google.protobuf.ByteString b =
                        com.google.protobuf.ByteString.copyFromUtf8(
                                (String) ref);
                driverVermagic_ = b;
                return b;
            } else {
                return (com.google.protobuf.ByteString) ref;
            }
        }

        public static final int KERNEL_RELEASE_FIELD_NUMBER = 3;
        private volatile Object kernelRelease_;
        /**
         * <code>optional string kernel_release = 3;</code>
         */
        public String getKernelRelease() {
            Object ref = kernelRelease_;
            if (ref instanceof String) {
                return (String) ref;
            } else {
                com.google.protobuf.ByteString bs =
                        (com.google.protobuf.ByteString) ref;
                String s = bs.toStringUtf8();
                kernelRelease_ = s;
                return s;
            }
        }
        /**
         * <code>optional string kernel_release = 3;</code>
         */
        public com.google.protobuf.ByteString
        getKernelReleaseBytes() {
            Object ref = kernelRelease_;
            if (ref instanceof String) {
                com.google.protobuf.ByteString b =
                        com.google.protobuf.ByteString.copyFromUtf8(
                                (String) ref);
                kernelRelease_ = b;
                return b;
            } else {
                return (com.google.protobuf.ByteString) ref;
            }
        }

        private byte memoizedIsInitialized = -1;
        public final boolean isInitialized() {
            byte isInitialized = memoizedIsInitialized;
            if (isInitialized == 1) return true;
            if (isInitialized == 0) return false;

            memoizedIsInitialized = 1;
            return true;
        }

        public void writeTo(com.google.protobuf.CodedOutputStream output)
                throws java.io.IOException {
            if (!getDriverVersionBytes().isEmpty()) {
                com.google.protobuf.GeneratedMessageV3.writeString(output, 1, driverVersion_);
            }
            if (!getDriverVermagicBytes().isEmpty()) {
                com.google.protobuf.GeneratedMessageV3.writeString(output, 2, driverVermagic_);
            }
            if (!getKernelReleaseBytes().isEmpty()) {
                com.google.protobuf.GeneratedMessageV3.writeString(output, 3, kernelRelease_);
            }
        }

        public int getSerializedSize() {
            int size = memoizedSize;
            if (size != -1) return size;

            size = 0;
            if (!getDriverVersionBytes().isEmpty()) {
                size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, driverVersion_);
            }
            if (!getDriverVermagicBytes().isEmpty()) {
                size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, driverVermagic_);
            }
            if (!getKernelReleaseBytes().isEmpty()) {
                size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, kernelRelease_);
            }
            memoizedSize = size;
            return size;
        }

        private static final long serialVersionUID = 0L;
        @Override
        public boolean equals(final Object obj) {
            if (obj == this) {
                return true;
            }
            if (!(obj instanceof cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BitmapDriverInfo)) {
                return super.equals(obj);
            }
            cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BitmapDriverInfo other = (cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BitmapDriverInfo) obj;

            boolean result = true;
            result = result && getDriverVersion()
                    .equals(other.getDriverVersion());
            result = result && getDriverVermagic()
                    .equals(other.getDriverVermagic());
            result = result && getKernelRelease()
                    .equals(other.getKernelRelease());
            return result;
        }

        @Override
        public int hashCode() {
            if (memoizedHashCode != 0) {
                return memoizedHashCode;
            }
            int hash = 41;
            hash = (19 * hash) + getDescriptorForType().hashCode();
            hash = (37 * hash) + DRIVER_VERSION_FIELD_NUMBER;
            hash = (53 * hash) + getDriverVersion().hashCode();
            hash = (37 * hash) + DRIVER_VERMAGIC_FIELD_NUMBER;
            hash = (53 * hash) + getDriverVermagic().hashCode();
            hash = (37 * hash) + KERNEL_RELEASE_FIELD_NUMBER;
            hash = (53 * hash) + getKernelRelease().hashCode();
            hash = (29 * hash) + unknownFields.hashCode();
            memoizedHashCode = hash;
            return hash;
        }

        public static cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BitmapDriverInfo parseFrom(
                com.google.protobuf.ByteString data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }
        public static cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BitmapDriverInfo parseFrom(
                com.google.protobuf.ByteString data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }
        public static cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BitmapDriverInfo parseFrom(byte[] data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }
        public static cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BitmapDriverInfo parseFrom(
                byte[] data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }
        public static cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BitmapDriverInfo parseFrom(java.io.InputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input);
        }
        public static cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BitmapDriverInfo parseFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input, extensionRegistry);
        }
        public static cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BitmapDriverInfo parseDelimitedFrom(java.io.InputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseDelimitedWithIOException(PARSER, input);
        }
        public static cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BitmapDriverInfo parseDelimitedFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
        }
        public static cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BitmapDriverInfo parseFrom(
                com.google.protobuf.CodedInputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input);
        }
        public static cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BitmapDriverInfo parseFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input, extensionRegistry);
        }

        public Builder newBuilderForType() { return newBuilder(); }
        public static Builder newBuilder() {
            return DEFAULT_INSTANCE.toBuilder();
        }
        public static Builder newBuilder(cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BitmapDriverInfo prototype) {
            return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }
        public Builder toBuilder() {
            return this == DEFAULT_INSTANCE
                    ? new Builder() : new Builder().mergeFrom(this);
        }

        @Override
        protected Builder newBuilderForType(
                BuilderParent parent) {
            Builder builder = new Builder(parent);
            return builder;
        }
        /**
         * Protobuf type {@code one2data.rbtmqmsgcli.client.BitmapDriverInfo}
         */
        public static final class Builder extends
                com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
                // @@protoc_insertion_point(builder_implements:one2data.rbtmqmsgcli.client.BitmapDriverInfo)
                cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BitmapDriverInfoOrBuilder {
            public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
                return cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.internal_static_one2data_rbtmqmsgcli_client_BitmapDriverInfo_descriptor;
            }

            protected FieldAccessorTable
            internalGetFieldAccessorTable() {
                return cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.internal_static_one2data_rbtmqmsgcli_client_BitmapDriverInfo_fieldAccessorTable
                        .ensureFieldAccessorsInitialized(
                                cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BitmapDriverInfo.class, cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BitmapDriverInfo.Builder.class);
            }

            // Construct using cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BitmapDriverInfo.newBuilder()
            private Builder() {
                maybeForceBuilderInitialization();
            }

            private Builder(
                    BuilderParent parent) {
                super(parent);
                maybeForceBuilderInitialization();
            }
            private void maybeForceBuilderInitialization() {
                if (com.google.protobuf.GeneratedMessageV3
                        .alwaysUseFieldBuilders) {
                }
            }
            public Builder clear() {
                super.clear();
                driverVersion_ = "";

                driverVermagic_ = "";

                kernelRelease_ = "";

                return this;
            }

            public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
                return cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.internal_static_one2data_rbtmqmsgcli_client_BitmapDriverInfo_descriptor;
            }

            public cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BitmapDriverInfo getDefaultInstanceForType() {
                return cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BitmapDriverInfo.getDefaultInstance();
            }

            public cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BitmapDriverInfo build() {
                cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BitmapDriverInfo result = buildPartial();
                if (!result.isInitialized()) {
                    throw newUninitializedMessageException(result);
                }
                return result;
            }

            public cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BitmapDriverInfo buildPartial() {
                cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BitmapDriverInfo result = new cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BitmapDriverInfo(this);
                result.driverVersion_ = driverVersion_;
                result.driverVermagic_ = driverVermagic_;
                result.kernelRelease_ = kernelRelease_;
                onBuilt();
                return result;
            }

            public Builder clone() {
                return (Builder) super.clone();
            }
            public Builder setField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    Object value) {
                return (Builder) super.setField(field, value);
            }
            public Builder clearField(
                    com.google.protobuf.Descriptors.FieldDescriptor field) {
                return (Builder) super.clearField(field);
            }
            public Builder clearOneof(
                    com.google.protobuf.Descriptors.OneofDescriptor oneof) {
                return (Builder) super.clearOneof(oneof);
            }
            public Builder setRepeatedField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    int index, Object value) {
                return (Builder) super.setRepeatedField(field, index, value);
            }
            public Builder addRepeatedField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    Object value) {
                return (Builder) super.addRepeatedField(field, value);
            }
            public Builder mergeFrom(com.google.protobuf.Message other) {
                if (other instanceof cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BitmapDriverInfo) {
                    return mergeFrom((cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BitmapDriverInfo)other);
                } else {
                    super.mergeFrom(other);
                    return this;
                }
            }

            public Builder mergeFrom(cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BitmapDriverInfo other) {
                if (other == cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BitmapDriverInfo.getDefaultInstance()) return this;
                if (!other.getDriverVersion().isEmpty()) {
                    driverVersion_ = other.driverVersion_;
                    onChanged();
                }
                if (!other.getDriverVermagic().isEmpty()) {
                    driverVermagic_ = other.driverVermagic_;
                    onChanged();
                }
                if (!other.getKernelRelease().isEmpty()) {
                    kernelRelease_ = other.kernelRelease_;
                    onChanged();
                }
                onChanged();
                return this;
            }

            public final boolean isInitialized() {
                return true;
            }

            public Builder mergeFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws java.io.IOException {
                cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BitmapDriverInfo parsedMessage = null;
                try {
                    parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
                } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                    parsedMessage = (cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BitmapDriverInfo) e.getUnfinishedMessage();
                    throw e.unwrapIOException();
                } finally {
                    if (parsedMessage != null) {
                        mergeFrom(parsedMessage);
                    }
                }
                return this;
            }

            private Object driverVersion_ = "";
            /**
             * <code>optional string driver_version = 1;</code>
             */
            public String getDriverVersion() {
                Object ref = driverVersion_;
                if (!(ref instanceof String)) {
                    com.google.protobuf.ByteString bs =
                            (com.google.protobuf.ByteString) ref;
                    String s = bs.toStringUtf8();
                    driverVersion_ = s;
                    return s;
                } else {
                    return (String) ref;
                }
            }
            /**
             * <code>optional string driver_version = 1;</code>
             */
            public com.google.protobuf.ByteString
            getDriverVersionBytes() {
                Object ref = driverVersion_;
                if (ref instanceof String) {
                    com.google.protobuf.ByteString b =
                            com.google.protobuf.ByteString.copyFromUtf8(
                                    (String) ref);
                    driverVersion_ = b;
                    return b;
                } else {
                    return (com.google.protobuf.ByteString) ref;
                }
            }
            /**
             * <code>optional string driver_version = 1;</code>
             */
            public Builder setDriverVersion(
                    String value) {
                if (value == null) {
                    throw new NullPointerException();
                }

                driverVersion_ = value;
                onChanged();
                return this;
            }
            /**
             * <code>optional string driver_version = 1;</code>
             */
            public Builder clearDriverVersion() {

                driverVersion_ = getDefaultInstance().getDriverVersion();
                onChanged();
                return this;
            }
            /**
             * <code>optional string driver_version = 1;</code>
             */
            public Builder setDriverVersionBytes(
                    com.google.protobuf.ByteString value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                checkByteStringIsUtf8(value);

                driverVersion_ = value;
                onChanged();
                return this;
            }

            private Object driverVermagic_ = "";
            /**
             * <code>optional string driver_vermagic = 2;</code>
             */
            public String getDriverVermagic() {
                Object ref = driverVermagic_;
                if (!(ref instanceof String)) {
                    com.google.protobuf.ByteString bs =
                            (com.google.protobuf.ByteString) ref;
                    String s = bs.toStringUtf8();
                    driverVermagic_ = s;
                    return s;
                } else {
                    return (String) ref;
                }
            }
            /**
             * <code>optional string driver_vermagic = 2;</code>
             */
            public com.google.protobuf.ByteString
            getDriverVermagicBytes() {
                Object ref = driverVermagic_;
                if (ref instanceof String) {
                    com.google.protobuf.ByteString b =
                            com.google.protobuf.ByteString.copyFromUtf8(
                                    (String) ref);
                    driverVermagic_ = b;
                    return b;
                } else {
                    return (com.google.protobuf.ByteString) ref;
                }
            }
            /**
             * <code>optional string driver_vermagic = 2;</code>
             */
            public Builder setDriverVermagic(
                    String value) {
                if (value == null) {
                    throw new NullPointerException();
                }

                driverVermagic_ = value;
                onChanged();
                return this;
            }
            /**
             * <code>optional string driver_vermagic = 2;</code>
             */
            public Builder clearDriverVermagic() {

                driverVermagic_ = getDefaultInstance().getDriverVermagic();
                onChanged();
                return this;
            }
            /**
             * <code>optional string driver_vermagic = 2;</code>
             */
            public Builder setDriverVermagicBytes(
                    com.google.protobuf.ByteString value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                checkByteStringIsUtf8(value);

                driverVermagic_ = value;
                onChanged();
                return this;
            }

            private Object kernelRelease_ = "";
            /**
             * <code>optional string kernel_release = 3;</code>
             */
            public String getKernelRelease() {
                Object ref = kernelRelease_;
                if (!(ref instanceof String)) {
                    com.google.protobuf.ByteString bs =
                            (com.google.protobuf.ByteString) ref;
                    String s = bs.toStringUtf8();
                    kernelRelease_ = s;
                    return s;
                } else {
                    return (String) ref;
                }
            }
            /**
             * <code>optional string kernel_release = 3;</code>
             */
            public com.google.protobuf.ByteString
            getKernelReleaseBytes() {
                Object ref = kernelRelease_;
                if (ref instanceof String) {
                    com.google.protobuf.ByteString b =
                            com.google.protobuf.ByteString.copyFromUtf8(
                                    (String) ref);
                    kernelRelease_ = b;
                    return b;
                } else {
                    return (com.google.protobuf.ByteString) ref;
                }
            }
            /**
             * <code>optional string kernel_release = 3;</code>
             */
            public Builder setKernelRelease(
                    String value) {
                if (value == null) {
                    throw new NullPointerException();
                }

                kernelRelease_ = value;
                onChanged();
                return this;
            }
            /**
             * <code>optional string kernel_release = 3;</code>
             */
            public Builder clearKernelRelease() {

                kernelRelease_ = getDefaultInstance().getKernelRelease();
                onChanged();
                return this;
            }
            /**
             * <code>optional string kernel_release = 3;</code>
             */
            public Builder setKernelReleaseBytes(
                    com.google.protobuf.ByteString value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                checkByteStringIsUtf8(value);

                kernelRelease_ = value;
                onChanged();
                return this;
            }
            public final Builder setUnknownFields(
                    final com.google.protobuf.UnknownFieldSet unknownFields) {
                return this;
            }

            public final Builder mergeUnknownFields(
                    final com.google.protobuf.UnknownFieldSet unknownFields) {
                return this;
            }


            // @@protoc_insertion_point(builder_scope:one2data.rbtmqmsgcli.client.BitmapDriverInfo)
        }

        // @@protoc_insertion_point(class_scope:one2data.rbtmqmsgcli.client.BitmapDriverInfo)
        private static final cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BitmapDriverInfo DEFAULT_INSTANCE;
        static {
            DEFAULT_INSTANCE = new cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BitmapDriverInfo();
        }

        public static cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BitmapDriverInfo getDefaultInstance() {
            return DEFAULT_INSTANCE;
        }

        private static final com.google.protobuf.Parser<BitmapDriverInfo>
                PARSER = new com.google.protobuf.AbstractParser<BitmapDriverInfo>() {
            public BitmapDriverInfo parsePartialFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws com.google.protobuf.InvalidProtocolBufferException {
                return new BitmapDriverInfo(input, extensionRegistry);
            }
        };

        public static com.google.protobuf.Parser<BitmapDriverInfo> parser() {
            return PARSER;
        }

        @Override
        public com.google.protobuf.Parser<BitmapDriverInfo> getParserForType() {
            return PARSER;
        }

        public cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BitmapDriverInfo getDefaultInstanceForType() {
            return DEFAULT_INSTANCE;
        }

    }

    public interface BackupWorkStateReportOrBuilder extends
            // @@protoc_insertion_point(interface_extends:one2data.rbtmqmsgcli.client.BackupWorkStateReport)
            com.google.protobuf.MessageOrBuilder {

        /**
         * <pre>
         *备份Agent 内部唯一ID
         * </pre>
         *
         * <code>optional string device_uuid_key = 1;</code>
         */
        String getDeviceUuidKey();
        /**
         * <pre>
         *备份Agent 内部唯一ID
         * </pre>
         *
         * <code>optional string device_uuid_key = 1;</code>
         */
        com.google.protobuf.ByteString
        getDeviceUuidKeyBytes();

        /**
         * <pre>
         *备份操作类型，支持操作类型见枚举[参见BackupCommand]
         * </pre>
         *
         * <code>optional .one2data.rbtmqmsgcli.client.ActionType action_type = 2;</code>
         */
        int getActionTypeValue();
        /**
         * <pre>
         *备份操作类型，支持操作类型见枚举[参见BackupCommand]
         * </pre>
         *
         * <code>optional .one2data.rbtmqmsgcli.client.ActionType action_type = 2;</code>
         */
        cn.keptdata.one2data.header.message.protobuf.client.BackupCommand.ActionType getActionType();

        /**
         * <pre>
         *客户端当前备份任务的状态
         * </pre>
         *
         * <code>optional .one2data.rbtmqmsgcli.client.BackupWorkStateReport.BackupWorkState backup_work_state = 3;</code>
         */
        int getBackupWorkStateValue();
        /**
         * <pre>
         *客户端当前备份任务的状态
         * </pre>
         *
         * <code>optional .one2data.rbtmqmsgcli.client.BackupWorkStateReport.BackupWorkState backup_work_state = 3;</code>
         */
        cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupWorkStateReport.BackupWorkState getBackupWorkState();

        /**
         * <pre>
         *客户端当前时间戳(毫秒)
         * </pre>
         *
         * <code>optional int64 timestamp_millis = 4;</code>
         */
        long getTimestampMillis();

        /**
         * <pre>
         *当备份状态为:FAIL 时,反馈失败码
         * </pre>
         *
         * <code>optional uint32 error_code = 5;</code>
         */
        int getErrorCode();

        /**
         * <pre>
         *当备份状态为:FAIL 时,反馈失败描述信息
         * </pre>
         *
         * <code>optional string error_info = 6;</code>
         */
        String getErrorInfo();
        /**
         * <pre>
         *当备份状态为:FAIL 时,反馈失败描述信息
         * </pre>
         *
         * <code>optional string error_info = 6;</code>
         */
        com.google.protobuf.ByteString
        getErrorInfoBytes();

        /**
         * <pre>
         *备份任务唯一ID
         * </pre>
         *
         * <code>optional string backup_task_uuid = 7;</code>
         */
        String getBackupTaskUuid();
        /**
         * <pre>
         *备份任务唯一ID
         * </pre>
         *
         * <code>optional string backup_task_uuid = 7;</code>
         */
        com.google.protobuf.ByteString
        getBackupTaskUuidBytes();

        /**
         * <pre>
         *备份数据量
         * </pre>
         *
         * <code>optional int64 backup_bytes = 8;</code>
         */
        long getBackupBytes();

        /**
         * <pre>
         *动作类别
         * </pre>
         *
         * <code>optional .one2data.rbtmqmsgcli.client.ActionCategory action_category = 9;</code>
         */
        int getActionCategoryValue();
        /**
         * <pre>
         *动作类别
         * </pre>
         *
         * <code>optional .one2data.rbtmqmsgcli.client.ActionCategory action_category = 9;</code>
         */
        cn.keptdata.one2data.header.message.protobuf.client.BackupCommand.ActionCategory getActionCategory();
    }
    /**
     * <pre>
     *************客户端上报备份工作状态******************
     * </pre>
     *
     * Protobuf type {@code one2data.rbtmqmsgcli.client.BackupWorkStateReport}
     */
    public  static final class BackupWorkStateReport extends
            com.google.protobuf.GeneratedMessageV3 implements
            // @@protoc_insertion_point(message_implements:one2data.rbtmqmsgcli.client.BackupWorkStateReport)
            BackupWorkStateReportOrBuilder {
        // Use BackupWorkStateReport.newBuilder() to construct.
        private BackupWorkStateReport(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
            super(builder);
        }
        private BackupWorkStateReport() {
            deviceUuidKey_ = "";
            actionType_ = 0;
            backupWorkState_ = 0;
            timestampMillis_ = 0L;
            errorCode_ = 0;
            errorInfo_ = "";
            backupTaskUuid_ = "";
            backupBytes_ = 0L;
            actionCategory_ = 0;
        }

        @Override
        public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
            return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
        }
        private BackupWorkStateReport(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            this();
            int mutable_bitField0_ = 0;
            try {
                boolean done = false;
                while (!done) {
                    int tag = input.readTag();
                    switch (tag) {
                        case 0:
                            done = true;
                            break;
                        default: {
                            if (!input.skipField(tag)) {
                                done = true;
                            }
                            break;
                        }
                        case 10: {
                            String s = input.readStringRequireUtf8();

                            deviceUuidKey_ = s;
                            break;
                        }
                        case 16: {
                            int rawValue = input.readEnum();

                            actionType_ = rawValue;
                            break;
                        }
                        case 24: {
                            int rawValue = input.readEnum();

                            backupWorkState_ = rawValue;
                            break;
                        }
                        case 32: {

                            timestampMillis_ = input.readInt64();
                            break;
                        }
                        case 40: {

                            errorCode_ = input.readUInt32();
                            break;
                        }
                        case 50: {
                            String s = input.readStringRequireUtf8();

                            errorInfo_ = s;
                            break;
                        }
                        case 58: {
                            String s = input.readStringRequireUtf8();

                            backupTaskUuid_ = s;
                            break;
                        }
                        case 64: {

                            backupBytes_ = input.readInt64();
                            break;
                        }
                        case 72: {
                            int rawValue = input.readEnum();

                            actionCategory_ = rawValue;
                            break;
                        }
                    }
                }
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(this);
            } catch (java.io.IOException e) {
                throw new com.google.protobuf.InvalidProtocolBufferException(
                        e).setUnfinishedMessage(this);
            } finally {
                makeExtensionsImmutable();
            }
        }
        public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
            return cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.internal_static_one2data_rbtmqmsgcli_client_BackupWorkStateReport_descriptor;
        }

        protected FieldAccessorTable
        internalGetFieldAccessorTable() {
            return cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.internal_static_one2data_rbtmqmsgcli_client_BackupWorkStateReport_fieldAccessorTable
                    .ensureFieldAccessorsInitialized(
                            cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupWorkStateReport.class, cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupWorkStateReport.Builder.class);
        }

        /**
         * Protobuf enum {@code one2data.rbtmqmsgcli.client.BackupWorkStateReport.BackupWorkState}
         */
        public enum BackupWorkState
                implements com.google.protobuf.ProtocolMessageEnum {
            /**
             * <pre>
             *工作进行中
             * </pre>
             *
             * <code>BWS_WORKING = 0;</code>
             */
            BWS_WORKING(0),
            /**
             * <pre>
             *成功已成功执行
             * </pre>
             *
             * <code>BWS_SUCCESS = 1;</code>
             */
            BWS_SUCCESS(1),
            /**
             * <pre>
             *失败执行失败
             * </pre>
             *
             * <code>BWS_FAIL = 2;</code>
             */
            BWS_FAIL(2),
            UNRECOGNIZED(-1),
            ;

            /**
             * <pre>
             *工作进行中
             * </pre>
             *
             * <code>BWS_WORKING = 0;</code>
             */
            public static final int BWS_WORKING_VALUE = 0;
            /**
             * <pre>
             *成功已成功执行
             * </pre>
             *
             * <code>BWS_SUCCESS = 1;</code>
             */
            public static final int BWS_SUCCESS_VALUE = 1;
            /**
             * <pre>
             *失败执行失败
             * </pre>
             *
             * <code>BWS_FAIL = 2;</code>
             */
            public static final int BWS_FAIL_VALUE = 2;


            public final int getNumber() {
                if (this == UNRECOGNIZED) {
                    throw new IllegalArgumentException(
                            "Can't get the number of an unknown enum value.");
                }
                return value;
            }

            /**
             * @deprecated Use {@link #forNumber(int)} instead.
             */
            @Deprecated
            public static BackupWorkState valueOf(int value) {
                return forNumber(value);
            }

            public static BackupWorkState forNumber(int value) {
                switch (value) {
                    case 0: return BWS_WORKING;
                    case 1: return BWS_SUCCESS;
                    case 2: return BWS_FAIL;
                    default: return null;
                }
            }

            public static com.google.protobuf.Internal.EnumLiteMap<BackupWorkState>
            internalGetValueMap() {
                return internalValueMap;
            }
            private static final com.google.protobuf.Internal.EnumLiteMap<
                    BackupWorkState> internalValueMap =
                    new com.google.protobuf.Internal.EnumLiteMap<BackupWorkState>() {
                        public BackupWorkState findValueByNumber(int number) {
                            return BackupWorkState.forNumber(number);
                        }
                    };

            public final com.google.protobuf.Descriptors.EnumValueDescriptor
            getValueDescriptor() {
                return getDescriptor().getValues().get(ordinal());
            }
            public final com.google.protobuf.Descriptors.EnumDescriptor
            getDescriptorForType() {
                return getDescriptor();
            }
            public static final com.google.protobuf.Descriptors.EnumDescriptor
            getDescriptor() {
                return cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupWorkStateReport.getDescriptor().getEnumTypes().get(0);
            }

            private static final BackupWorkState[] VALUES = values();

            public static BackupWorkState valueOf(
                    com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
                if (desc.getType() != getDescriptor()) {
                    throw new IllegalArgumentException(
                            "EnumValueDescriptor is not for this type.");
                }
                if (desc.getIndex() == -1) {
                    return UNRECOGNIZED;
                }
                return VALUES[desc.getIndex()];
            }

            private final int value;

            private BackupWorkState(int value) {
                this.value = value;
            }

            // @@protoc_insertion_point(enum_scope:one2data.rbtmqmsgcli.client.BackupWorkStateReport.BackupWorkState)
        }

        public static final int DEVICE_UUID_KEY_FIELD_NUMBER = 1;
        private volatile Object deviceUuidKey_;
        /**
         * <pre>
         *备份Agent 内部唯一ID
         * </pre>
         *
         * <code>optional string device_uuid_key = 1;</code>
         */
        public String getDeviceUuidKey() {
            Object ref = deviceUuidKey_;
            if (ref instanceof String) {
                return (String) ref;
            } else {
                com.google.protobuf.ByteString bs =
                        (com.google.protobuf.ByteString) ref;
                String s = bs.toStringUtf8();
                deviceUuidKey_ = s;
                return s;
            }
        }
        /**
         * <pre>
         *备份Agent 内部唯一ID
         * </pre>
         *
         * <code>optional string device_uuid_key = 1;</code>
         */
        public com.google.protobuf.ByteString
        getDeviceUuidKeyBytes() {
            Object ref = deviceUuidKey_;
            if (ref instanceof String) {
                com.google.protobuf.ByteString b =
                        com.google.protobuf.ByteString.copyFromUtf8(
                                (String) ref);
                deviceUuidKey_ = b;
                return b;
            } else {
                return (com.google.protobuf.ByteString) ref;
            }
        }

        public static final int ACTION_TYPE_FIELD_NUMBER = 2;
        private int actionType_;
        /**
         * <pre>
         *备份操作类型，支持操作类型见枚举[参见BackupCommand]
         * </pre>
         *
         * <code>optional .one2data.rbtmqmsgcli.client.ActionType action_type = 2;</code>
         */
        public int getActionTypeValue() {
            return actionType_;
        }
        /**
         * <pre>
         *备份操作类型，支持操作类型见枚举[参见BackupCommand]
         * </pre>
         *
         * <code>optional .one2data.rbtmqmsgcli.client.ActionType action_type = 2;</code>
         */
        public cn.keptdata.one2data.header.message.protobuf.client.BackupCommand.ActionType getActionType() {
            cn.keptdata.one2data.header.message.protobuf.client.BackupCommand.ActionType result = cn.keptdata.one2data.header.message.protobuf.client.BackupCommand.ActionType.valueOf(actionType_);
            return result == null ? cn.keptdata.one2data.header.message.protobuf.client.BackupCommand.ActionType.UNRECOGNIZED : result;
        }

        public static final int BACKUP_WORK_STATE_FIELD_NUMBER = 3;
        private int backupWorkState_;
        /**
         * <pre>
         *客户端当前备份任务的状态
         * </pre>
         *
         * <code>optional .one2data.rbtmqmsgcli.client.BackupWorkStateReport.BackupWorkState backup_work_state = 3;</code>
         */
        public int getBackupWorkStateValue() {
            return backupWorkState_;
        }
        /**
         * <pre>
         *客户端当前备份任务的状态
         * </pre>
         *
         * <code>optional .one2data.rbtmqmsgcli.client.BackupWorkStateReport.BackupWorkState backup_work_state = 3;</code>
         */
        public cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupWorkStateReport.BackupWorkState getBackupWorkState() {
            cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupWorkStateReport.BackupWorkState result = cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupWorkStateReport.BackupWorkState.valueOf(backupWorkState_);
            return result == null ? cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupWorkStateReport.BackupWorkState.UNRECOGNIZED : result;
        }

        public static final int TIMESTAMP_MILLIS_FIELD_NUMBER = 4;
        private long timestampMillis_;
        /**
         * <pre>
         *客户端当前时间戳(毫秒)
         * </pre>
         *
         * <code>optional int64 timestamp_millis = 4;</code>
         */
        public long getTimestampMillis() {
            return timestampMillis_;
        }

        public static final int ERROR_CODE_FIELD_NUMBER = 5;
        private int errorCode_;
        /**
         * <pre>
         *当备份状态为:FAIL 时,反馈失败码
         * </pre>
         *
         * <code>optional uint32 error_code = 5;</code>
         */
        public int getErrorCode() {
            return errorCode_;
        }

        public static final int ERROR_INFO_FIELD_NUMBER = 6;
        private volatile Object errorInfo_;
        /**
         * <pre>
         *当备份状态为:FAIL 时,反馈失败描述信息
         * </pre>
         *
         * <code>optional string error_info = 6;</code>
         */
        public String getErrorInfo() {
            Object ref = errorInfo_;
            if (ref instanceof String) {
                return (String) ref;
            } else {
                com.google.protobuf.ByteString bs =
                        (com.google.protobuf.ByteString) ref;
                String s = bs.toStringUtf8();
                errorInfo_ = s;
                return s;
            }
        }
        /**
         * <pre>
         *当备份状态为:FAIL 时,反馈失败描述信息
         * </pre>
         *
         * <code>optional string error_info = 6;</code>
         */
        public com.google.protobuf.ByteString
        getErrorInfoBytes() {
            Object ref = errorInfo_;
            if (ref instanceof String) {
                com.google.protobuf.ByteString b =
                        com.google.protobuf.ByteString.copyFromUtf8(
                                (String) ref);
                errorInfo_ = b;
                return b;
            } else {
                return (com.google.protobuf.ByteString) ref;
            }
        }

        public static final int BACKUP_TASK_UUID_FIELD_NUMBER = 7;
        private volatile Object backupTaskUuid_;
        /**
         * <pre>
         *备份任务唯一ID
         * </pre>
         *
         * <code>optional string backup_task_uuid = 7;</code>
         */
        public String getBackupTaskUuid() {
            Object ref = backupTaskUuid_;
            if (ref instanceof String) {
                return (String) ref;
            } else {
                com.google.protobuf.ByteString bs =
                        (com.google.protobuf.ByteString) ref;
                String s = bs.toStringUtf8();
                backupTaskUuid_ = s;
                return s;
            }
        }
        /**
         * <pre>
         *备份任务唯一ID
         * </pre>
         *
         * <code>optional string backup_task_uuid = 7;</code>
         */
        public com.google.protobuf.ByteString
        getBackupTaskUuidBytes() {
            Object ref = backupTaskUuid_;
            if (ref instanceof String) {
                com.google.protobuf.ByteString b =
                        com.google.protobuf.ByteString.copyFromUtf8(
                                (String) ref);
                backupTaskUuid_ = b;
                return b;
            } else {
                return (com.google.protobuf.ByteString) ref;
            }
        }

        public static final int BACKUP_BYTES_FIELD_NUMBER = 8;
        private long backupBytes_;
        /**
         * <pre>
         *备份数据量
         * </pre>
         *
         * <code>optional int64 backup_bytes = 8;</code>
         */
        public long getBackupBytes() {
            return backupBytes_;
        }

        public static final int ACTION_CATEGORY_FIELD_NUMBER = 9;
        private int actionCategory_;
        /**
         * <pre>
         *动作类别
         * </pre>
         *
         * <code>optional .one2data.rbtmqmsgcli.client.ActionCategory action_category = 9;</code>
         */
        public int getActionCategoryValue() {
            return actionCategory_;
        }
        /**
         * <pre>
         *动作类别
         * </pre>
         *
         * <code>optional .one2data.rbtmqmsgcli.client.ActionCategory action_category = 9;</code>
         */
        public cn.keptdata.one2data.header.message.protobuf.client.BackupCommand.ActionCategory getActionCategory() {
            cn.keptdata.one2data.header.message.protobuf.client.BackupCommand.ActionCategory result = cn.keptdata.one2data.header.message.protobuf.client.BackupCommand.ActionCategory.valueOf(actionCategory_);
            return result == null ? cn.keptdata.one2data.header.message.protobuf.client.BackupCommand.ActionCategory.UNRECOGNIZED : result;
        }

        private byte memoizedIsInitialized = -1;
        public final boolean isInitialized() {
            byte isInitialized = memoizedIsInitialized;
            if (isInitialized == 1) return true;
            if (isInitialized == 0) return false;

            memoizedIsInitialized = 1;
            return true;
        }

        public void writeTo(com.google.protobuf.CodedOutputStream output)
                throws java.io.IOException {
            if (!getDeviceUuidKeyBytes().isEmpty()) {
                com.google.protobuf.GeneratedMessageV3.writeString(output, 1, deviceUuidKey_);
            }
            if (actionType_ != cn.keptdata.one2data.header.message.protobuf.client.BackupCommand.ActionType.AT_PAUSED.getNumber()) {
                output.writeEnum(2, actionType_);
            }
            if (backupWorkState_ != cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupWorkStateReport.BackupWorkState.BWS_WORKING.getNumber()) {
                output.writeEnum(3, backupWorkState_);
            }
            if (timestampMillis_ != 0L) {
                output.writeInt64(4, timestampMillis_);
            }
            if (errorCode_ != 0) {
                output.writeUInt32(5, errorCode_);
            }
            if (!getErrorInfoBytes().isEmpty()) {
                com.google.protobuf.GeneratedMessageV3.writeString(output, 6, errorInfo_);
            }
            if (!getBackupTaskUuidBytes().isEmpty()) {
                com.google.protobuf.GeneratedMessageV3.writeString(output, 7, backupTaskUuid_);
            }
            if (backupBytes_ != 0L) {
                output.writeInt64(8, backupBytes_);
            }
            if (actionCategory_ != cn.keptdata.one2data.header.message.protobuf.client.BackupCommand.ActionCategory.AC_NORMAL_ACTION.getNumber()) {
                output.writeEnum(9, actionCategory_);
            }
        }

        public int getSerializedSize() {
            int size = memoizedSize;
            if (size != -1) return size;

            size = 0;
            if (!getDeviceUuidKeyBytes().isEmpty()) {
                size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, deviceUuidKey_);
            }
            if (actionType_ != cn.keptdata.one2data.header.message.protobuf.client.BackupCommand.ActionType.AT_PAUSED.getNumber()) {
                size += com.google.protobuf.CodedOutputStream
                        .computeEnumSize(2, actionType_);
            }
            if (backupWorkState_ != cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupWorkStateReport.BackupWorkState.BWS_WORKING.getNumber()) {
                size += com.google.protobuf.CodedOutputStream
                        .computeEnumSize(3, backupWorkState_);
            }
            if (timestampMillis_ != 0L) {
                size += com.google.protobuf.CodedOutputStream
                        .computeInt64Size(4, timestampMillis_);
            }
            if (errorCode_ != 0) {
                size += com.google.protobuf.CodedOutputStream
                        .computeUInt32Size(5, errorCode_);
            }
            if (!getErrorInfoBytes().isEmpty()) {
                size += com.google.protobuf.GeneratedMessageV3.computeStringSize(6, errorInfo_);
            }
            if (!getBackupTaskUuidBytes().isEmpty()) {
                size += com.google.protobuf.GeneratedMessageV3.computeStringSize(7, backupTaskUuid_);
            }
            if (backupBytes_ != 0L) {
                size += com.google.protobuf.CodedOutputStream
                        .computeInt64Size(8, backupBytes_);
            }
            if (actionCategory_ != cn.keptdata.one2data.header.message.protobuf.client.BackupCommand.ActionCategory.AC_NORMAL_ACTION.getNumber()) {
                size += com.google.protobuf.CodedOutputStream
                        .computeEnumSize(9, actionCategory_);
            }
            memoizedSize = size;
            return size;
        }

        private static final long serialVersionUID = 0L;
        @Override
        public boolean equals(final Object obj) {
            if (obj == this) {
                return true;
            }
            if (!(obj instanceof cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupWorkStateReport)) {
                return super.equals(obj);
            }
            cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupWorkStateReport other = (cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupWorkStateReport) obj;

            boolean result = true;
            result = result && getDeviceUuidKey()
                    .equals(other.getDeviceUuidKey());
            result = result && actionType_ == other.actionType_;
            result = result && backupWorkState_ == other.backupWorkState_;
            result = result && (getTimestampMillis()
                    == other.getTimestampMillis());
            result = result && (getErrorCode()
                    == other.getErrorCode());
            result = result && getErrorInfo()
                    .equals(other.getErrorInfo());
            result = result && getBackupTaskUuid()
                    .equals(other.getBackupTaskUuid());
            result = result && (getBackupBytes()
                    == other.getBackupBytes());
            result = result && actionCategory_ == other.actionCategory_;
            return result;
        }

        @Override
        public int hashCode() {
            if (memoizedHashCode != 0) {
                return memoizedHashCode;
            }
            int hash = 41;
            hash = (19 * hash) + getDescriptorForType().hashCode();
            hash = (37 * hash) + DEVICE_UUID_KEY_FIELD_NUMBER;
            hash = (53 * hash) + getDeviceUuidKey().hashCode();
            hash = (37 * hash) + ACTION_TYPE_FIELD_NUMBER;
            hash = (53 * hash) + actionType_;
            hash = (37 * hash) + BACKUP_WORK_STATE_FIELD_NUMBER;
            hash = (53 * hash) + backupWorkState_;
            hash = (37 * hash) + TIMESTAMP_MILLIS_FIELD_NUMBER;
            hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
                    getTimestampMillis());
            hash = (37 * hash) + ERROR_CODE_FIELD_NUMBER;
            hash = (53 * hash) + getErrorCode();
            hash = (37 * hash) + ERROR_INFO_FIELD_NUMBER;
            hash = (53 * hash) + getErrorInfo().hashCode();
            hash = (37 * hash) + BACKUP_TASK_UUID_FIELD_NUMBER;
            hash = (53 * hash) + getBackupTaskUuid().hashCode();
            hash = (37 * hash) + BACKUP_BYTES_FIELD_NUMBER;
            hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
                    getBackupBytes());
            hash = (37 * hash) + ACTION_CATEGORY_FIELD_NUMBER;
            hash = (53 * hash) + actionCategory_;
            hash = (29 * hash) + unknownFields.hashCode();
            memoizedHashCode = hash;
            return hash;
        }

        public static cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupWorkStateReport parseFrom(
                com.google.protobuf.ByteString data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }
        public static cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupWorkStateReport parseFrom(
                com.google.protobuf.ByteString data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }
        public static cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupWorkStateReport parseFrom(byte[] data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }
        public static cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupWorkStateReport parseFrom(
                byte[] data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }
        public static cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupWorkStateReport parseFrom(java.io.InputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input);
        }
        public static cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupWorkStateReport parseFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input, extensionRegistry);
        }
        public static cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupWorkStateReport parseDelimitedFrom(java.io.InputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseDelimitedWithIOException(PARSER, input);
        }
        public static cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupWorkStateReport parseDelimitedFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
        }
        public static cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupWorkStateReport parseFrom(
                com.google.protobuf.CodedInputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input);
        }
        public static cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupWorkStateReport parseFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input, extensionRegistry);
        }

        public Builder newBuilderForType() { return newBuilder(); }
        public static Builder newBuilder() {
            return DEFAULT_INSTANCE.toBuilder();
        }
        public static Builder newBuilder(cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupWorkStateReport prototype) {
            return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }
        public Builder toBuilder() {
            return this == DEFAULT_INSTANCE
                    ? new Builder() : new Builder().mergeFrom(this);
        }

        @Override
        protected Builder newBuilderForType(
                BuilderParent parent) {
            Builder builder = new Builder(parent);
            return builder;
        }
        /**
         * <pre>
         *************客户端上报备份工作状态******************
         * </pre>
         *
         * Protobuf type {@code one2data.rbtmqmsgcli.client.BackupWorkStateReport}
         */
        public static final class Builder extends
                com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
                // @@protoc_insertion_point(builder_implements:one2data.rbtmqmsgcli.client.BackupWorkStateReport)
                cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupWorkStateReportOrBuilder {
            public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
                return cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.internal_static_one2data_rbtmqmsgcli_client_BackupWorkStateReport_descriptor;
            }

            protected FieldAccessorTable
            internalGetFieldAccessorTable() {
                return cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.internal_static_one2data_rbtmqmsgcli_client_BackupWorkStateReport_fieldAccessorTable
                        .ensureFieldAccessorsInitialized(
                                cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupWorkStateReport.class, cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupWorkStateReport.Builder.class);
            }

            // Construct using cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupWorkStateReport.newBuilder()
            private Builder() {
                maybeForceBuilderInitialization();
            }

            private Builder(
                    BuilderParent parent) {
                super(parent);
                maybeForceBuilderInitialization();
            }
            private void maybeForceBuilderInitialization() {
                if (com.google.protobuf.GeneratedMessageV3
                        .alwaysUseFieldBuilders) {
                }
            }
            public Builder clear() {
                super.clear();
                deviceUuidKey_ = "";

                actionType_ = 0;

                backupWorkState_ = 0;

                timestampMillis_ = 0L;

                errorCode_ = 0;

                errorInfo_ = "";

                backupTaskUuid_ = "";

                backupBytes_ = 0L;

                actionCategory_ = 0;

                return this;
            }

            public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
                return cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.internal_static_one2data_rbtmqmsgcli_client_BackupWorkStateReport_descriptor;
            }

            public cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupWorkStateReport getDefaultInstanceForType() {
                return cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupWorkStateReport.getDefaultInstance();
            }

            public cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupWorkStateReport build() {
                cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupWorkStateReport result = buildPartial();
                if (!result.isInitialized()) {
                    throw newUninitializedMessageException(result);
                }
                return result;
            }

            public cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupWorkStateReport buildPartial() {
                cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupWorkStateReport result = new cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupWorkStateReport(this);
                result.deviceUuidKey_ = deviceUuidKey_;
                result.actionType_ = actionType_;
                result.backupWorkState_ = backupWorkState_;
                result.timestampMillis_ = timestampMillis_;
                result.errorCode_ = errorCode_;
                result.errorInfo_ = errorInfo_;
                result.backupTaskUuid_ = backupTaskUuid_;
                result.backupBytes_ = backupBytes_;
                result.actionCategory_ = actionCategory_;
                onBuilt();
                return result;
            }

            public Builder clone() {
                return (Builder) super.clone();
            }
            public Builder setField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    Object value) {
                return (Builder) super.setField(field, value);
            }
            public Builder clearField(
                    com.google.protobuf.Descriptors.FieldDescriptor field) {
                return (Builder) super.clearField(field);
            }
            public Builder clearOneof(
                    com.google.protobuf.Descriptors.OneofDescriptor oneof) {
                return (Builder) super.clearOneof(oneof);
            }
            public Builder setRepeatedField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    int index, Object value) {
                return (Builder) super.setRepeatedField(field, index, value);
            }
            public Builder addRepeatedField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    Object value) {
                return (Builder) super.addRepeatedField(field, value);
            }
            public Builder mergeFrom(com.google.protobuf.Message other) {
                if (other instanceof cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupWorkStateReport) {
                    return mergeFrom((cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupWorkStateReport)other);
                } else {
                    super.mergeFrom(other);
                    return this;
                }
            }

            public Builder mergeFrom(cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupWorkStateReport other) {
                if (other == cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupWorkStateReport.getDefaultInstance()) return this;
                if (!other.getDeviceUuidKey().isEmpty()) {
                    deviceUuidKey_ = other.deviceUuidKey_;
                    onChanged();
                }
                if (other.actionType_ != 0) {
                    setActionTypeValue(other.getActionTypeValue());
                }
                if (other.backupWorkState_ != 0) {
                    setBackupWorkStateValue(other.getBackupWorkStateValue());
                }
                if (other.getTimestampMillis() != 0L) {
                    setTimestampMillis(other.getTimestampMillis());
                }
                if (other.getErrorCode() != 0) {
                    setErrorCode(other.getErrorCode());
                }
                if (!other.getErrorInfo().isEmpty()) {
                    errorInfo_ = other.errorInfo_;
                    onChanged();
                }
                if (!other.getBackupTaskUuid().isEmpty()) {
                    backupTaskUuid_ = other.backupTaskUuid_;
                    onChanged();
                }
                if (other.getBackupBytes() != 0L) {
                    setBackupBytes(other.getBackupBytes());
                }
                if (other.actionCategory_ != 0) {
                    setActionCategoryValue(other.getActionCategoryValue());
                }
                onChanged();
                return this;
            }

            public final boolean isInitialized() {
                return true;
            }

            public Builder mergeFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws java.io.IOException {
                cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupWorkStateReport parsedMessage = null;
                try {
                    parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
                } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                    parsedMessage = (cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupWorkStateReport) e.getUnfinishedMessage();
                    throw e.unwrapIOException();
                } finally {
                    if (parsedMessage != null) {
                        mergeFrom(parsedMessage);
                    }
                }
                return this;
            }

            private Object deviceUuidKey_ = "";
            /**
             * <pre>
             *备份Agent 内部唯一ID
             * </pre>
             *
             * <code>optional string device_uuid_key = 1;</code>
             */
            public String getDeviceUuidKey() {
                Object ref = deviceUuidKey_;
                if (!(ref instanceof String)) {
                    com.google.protobuf.ByteString bs =
                            (com.google.protobuf.ByteString) ref;
                    String s = bs.toStringUtf8();
                    deviceUuidKey_ = s;
                    return s;
                } else {
                    return (String) ref;
                }
            }
            /**
             * <pre>
             *备份Agent 内部唯一ID
             * </pre>
             *
             * <code>optional string device_uuid_key = 1;</code>
             */
            public com.google.protobuf.ByteString
            getDeviceUuidKeyBytes() {
                Object ref = deviceUuidKey_;
                if (ref instanceof String) {
                    com.google.protobuf.ByteString b =
                            com.google.protobuf.ByteString.copyFromUtf8(
                                    (String) ref);
                    deviceUuidKey_ = b;
                    return b;
                } else {
                    return (com.google.protobuf.ByteString) ref;
                }
            }
            /**
             * <pre>
             *备份Agent 内部唯一ID
             * </pre>
             *
             * <code>optional string device_uuid_key = 1;</code>
             */
            public Builder setDeviceUuidKey(
                    String value) {
                if (value == null) {
                    throw new NullPointerException();
                }

                deviceUuidKey_ = value;
                onChanged();
                return this;
            }
            /**
             * <pre>
             *备份Agent 内部唯一ID
             * </pre>
             *
             * <code>optional string device_uuid_key = 1;</code>
             */
            public Builder clearDeviceUuidKey() {

                deviceUuidKey_ = getDefaultInstance().getDeviceUuidKey();
                onChanged();
                return this;
            }
            /**
             * <pre>
             *备份Agent 内部唯一ID
             * </pre>
             *
             * <code>optional string device_uuid_key = 1;</code>
             */
            public Builder setDeviceUuidKeyBytes(
                    com.google.protobuf.ByteString value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                checkByteStringIsUtf8(value);

                deviceUuidKey_ = value;
                onChanged();
                return this;
            }

            private int actionType_ = 0;
            /**
             * <pre>
             *备份操作类型，支持操作类型见枚举[参见BackupCommand]
             * </pre>
             *
             * <code>optional .one2data.rbtmqmsgcli.client.ActionType action_type = 2;</code>
             */
            public int getActionTypeValue() {
                return actionType_;
            }
            /**
             * <pre>
             *备份操作类型，支持操作类型见枚举[参见BackupCommand]
             * </pre>
             *
             * <code>optional .one2data.rbtmqmsgcli.client.ActionType action_type = 2;</code>
             */
            public Builder setActionTypeValue(int value) {
                actionType_ = value;
                onChanged();
                return this;
            }
            /**
             * <pre>
             *备份操作类型，支持操作类型见枚举[参见BackupCommand]
             * </pre>
             *
             * <code>optional .one2data.rbtmqmsgcli.client.ActionType action_type = 2;</code>
             */
            public cn.keptdata.one2data.header.message.protobuf.client.BackupCommand.ActionType getActionType() {
                cn.keptdata.one2data.header.message.protobuf.client.BackupCommand.ActionType result = cn.keptdata.one2data.header.message.protobuf.client.BackupCommand.ActionType.valueOf(actionType_);
                return result == null ? cn.keptdata.one2data.header.message.protobuf.client.BackupCommand.ActionType.UNRECOGNIZED : result;
            }
            /**
             * <pre>
             *备份操作类型，支持操作类型见枚举[参见BackupCommand]
             * </pre>
             *
             * <code>optional .one2data.rbtmqmsgcli.client.ActionType action_type = 2;</code>
             */
            public Builder setActionType(cn.keptdata.one2data.header.message.protobuf.client.BackupCommand.ActionType value) {
                if (value == null) {
                    throw new NullPointerException();
                }

                actionType_ = value.getNumber();
                onChanged();
                return this;
            }
            /**
             * <pre>
             *备份操作类型，支持操作类型见枚举[参见BackupCommand]
             * </pre>
             *
             * <code>optional .one2data.rbtmqmsgcli.client.ActionType action_type = 2;</code>
             */
            public Builder clearActionType() {

                actionType_ = 0;
                onChanged();
                return this;
            }

            private int backupWorkState_ = 0;
            /**
             * <pre>
             *客户端当前备份任务的状态
             * </pre>
             *
             * <code>optional .one2data.rbtmqmsgcli.client.BackupWorkStateReport.BackupWorkState backup_work_state = 3;</code>
             */
            public int getBackupWorkStateValue() {
                return backupWorkState_;
            }
            /**
             * <pre>
             *客户端当前备份任务的状态
             * </pre>
             *
             * <code>optional .one2data.rbtmqmsgcli.client.BackupWorkStateReport.BackupWorkState backup_work_state = 3;</code>
             */
            public Builder setBackupWorkStateValue(int value) {
                backupWorkState_ = value;
                onChanged();
                return this;
            }
            /**
             * <pre>
             *客户端当前备份任务的状态
             * </pre>
             *
             * <code>optional .one2data.rbtmqmsgcli.client.BackupWorkStateReport.BackupWorkState backup_work_state = 3;</code>
             */
            public cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupWorkStateReport.BackupWorkState getBackupWorkState() {
                cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupWorkStateReport.BackupWorkState result = cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupWorkStateReport.BackupWorkState.valueOf(backupWorkState_);
                return result == null ? cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupWorkStateReport.BackupWorkState.UNRECOGNIZED : result;
            }
            /**
             * <pre>
             *客户端当前备份任务的状态
             * </pre>
             *
             * <code>optional .one2data.rbtmqmsgcli.client.BackupWorkStateReport.BackupWorkState backup_work_state = 3;</code>
             */
            public Builder setBackupWorkState(cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupWorkStateReport.BackupWorkState value) {
                if (value == null) {
                    throw new NullPointerException();
                }

                backupWorkState_ = value.getNumber();
                onChanged();
                return this;
            }
            /**
             * <pre>
             *客户端当前备份任务的状态
             * </pre>
             *
             * <code>optional .one2data.rbtmqmsgcli.client.BackupWorkStateReport.BackupWorkState backup_work_state = 3;</code>
             */
            public Builder clearBackupWorkState() {

                backupWorkState_ = 0;
                onChanged();
                return this;
            }

            private long timestampMillis_ ;
            /**
             * <pre>
             *客户端当前时间戳(毫秒)
             * </pre>
             *
             * <code>optional int64 timestamp_millis = 4;</code>
             */
            public long getTimestampMillis() {
                return timestampMillis_;
            }
            /**
             * <pre>
             *客户端当前时间戳(毫秒)
             * </pre>
             *
             * <code>optional int64 timestamp_millis = 4;</code>
             */
            public Builder setTimestampMillis(long value) {

                timestampMillis_ = value;
                onChanged();
                return this;
            }
            /**
             * <pre>
             *客户端当前时间戳(毫秒)
             * </pre>
             *
             * <code>optional int64 timestamp_millis = 4;</code>
             */
            public Builder clearTimestampMillis() {

                timestampMillis_ = 0L;
                onChanged();
                return this;
            }

            private int errorCode_ ;
            /**
             * <pre>
             *当备份状态为:FAIL 时,反馈失败码
             * </pre>
             *
             * <code>optional uint32 error_code = 5;</code>
             */
            public int getErrorCode() {
                return errorCode_;
            }
            /**
             * <pre>
             *当备份状态为:FAIL 时,反馈失败码
             * </pre>
             *
             * <code>optional uint32 error_code = 5;</code>
             */
            public Builder setErrorCode(int value) {

                errorCode_ = value;
                onChanged();
                return this;
            }
            /**
             * <pre>
             *当备份状态为:FAIL 时,反馈失败码
             * </pre>
             *
             * <code>optional uint32 error_code = 5;</code>
             */
            public Builder clearErrorCode() {

                errorCode_ = 0;
                onChanged();
                return this;
            }

            private Object errorInfo_ = "";
            /**
             * <pre>
             *当备份状态为:FAIL 时,反馈失败描述信息
             * </pre>
             *
             * <code>optional string error_info = 6;</code>
             */
            public String getErrorInfo() {
                Object ref = errorInfo_;
                if (!(ref instanceof String)) {
                    com.google.protobuf.ByteString bs =
                            (com.google.protobuf.ByteString) ref;
                    String s = bs.toStringUtf8();
                    errorInfo_ = s;
                    return s;
                } else {
                    return (String) ref;
                }
            }
            /**
             * <pre>
             *当备份状态为:FAIL 时,反馈失败描述信息
             * </pre>
             *
             * <code>optional string error_info = 6;</code>
             */
            public com.google.protobuf.ByteString
            getErrorInfoBytes() {
                Object ref = errorInfo_;
                if (ref instanceof String) {
                    com.google.protobuf.ByteString b =
                            com.google.protobuf.ByteString.copyFromUtf8(
                                    (String) ref);
                    errorInfo_ = b;
                    return b;
                } else {
                    return (com.google.protobuf.ByteString) ref;
                }
            }
            /**
             * <pre>
             *当备份状态为:FAIL 时,反馈失败描述信息
             * </pre>
             *
             * <code>optional string error_info = 6;</code>
             */
            public Builder setErrorInfo(
                    String value) {
                if (value == null) {
                    throw new NullPointerException();
                }

                errorInfo_ = value;
                onChanged();
                return this;
            }
            /**
             * <pre>
             *当备份状态为:FAIL 时,反馈失败描述信息
             * </pre>
             *
             * <code>optional string error_info = 6;</code>
             */
            public Builder clearErrorInfo() {

                errorInfo_ = getDefaultInstance().getErrorInfo();
                onChanged();
                return this;
            }
            /**
             * <pre>
             *当备份状态为:FAIL 时,反馈失败描述信息
             * </pre>
             *
             * <code>optional string error_info = 6;</code>
             */
            public Builder setErrorInfoBytes(
                    com.google.protobuf.ByteString value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                checkByteStringIsUtf8(value);

                errorInfo_ = value;
                onChanged();
                return this;
            }

            private Object backupTaskUuid_ = "";
            /**
             * <pre>
             *备份任务唯一ID
             * </pre>
             *
             * <code>optional string backup_task_uuid = 7;</code>
             */
            public String getBackupTaskUuid() {
                Object ref = backupTaskUuid_;
                if (!(ref instanceof String)) {
                    com.google.protobuf.ByteString bs =
                            (com.google.protobuf.ByteString) ref;
                    String s = bs.toStringUtf8();
                    backupTaskUuid_ = s;
                    return s;
                } else {
                    return (String) ref;
                }
            }
            /**
             * <pre>
             *备份任务唯一ID
             * </pre>
             *
             * <code>optional string backup_task_uuid = 7;</code>
             */
            public com.google.protobuf.ByteString
            getBackupTaskUuidBytes() {
                Object ref = backupTaskUuid_;
                if (ref instanceof String) {
                    com.google.protobuf.ByteString b =
                            com.google.protobuf.ByteString.copyFromUtf8(
                                    (String) ref);
                    backupTaskUuid_ = b;
                    return b;
                } else {
                    return (com.google.protobuf.ByteString) ref;
                }
            }
            /**
             * <pre>
             *备份任务唯一ID
             * </pre>
             *
             * <code>optional string backup_task_uuid = 7;</code>
             */
            public Builder setBackupTaskUuid(
                    String value) {
                if (value == null) {
                    throw new NullPointerException();
                }

                backupTaskUuid_ = value;
                onChanged();
                return this;
            }
            /**
             * <pre>
             *备份任务唯一ID
             * </pre>
             *
             * <code>optional string backup_task_uuid = 7;</code>
             */
            public Builder clearBackupTaskUuid() {

                backupTaskUuid_ = getDefaultInstance().getBackupTaskUuid();
                onChanged();
                return this;
            }
            /**
             * <pre>
             *备份任务唯一ID
             * </pre>
             *
             * <code>optional string backup_task_uuid = 7;</code>
             */
            public Builder setBackupTaskUuidBytes(
                    com.google.protobuf.ByteString value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                checkByteStringIsUtf8(value);

                backupTaskUuid_ = value;
                onChanged();
                return this;
            }

            private long backupBytes_ ;
            /**
             * <pre>
             *备份数据量
             * </pre>
             *
             * <code>optional int64 backup_bytes = 8;</code>
             */
            public long getBackupBytes() {
                return backupBytes_;
            }
            /**
             * <pre>
             *备份数据量
             * </pre>
             *
             * <code>optional int64 backup_bytes = 8;</code>
             */
            public Builder setBackupBytes(long value) {

                backupBytes_ = value;
                onChanged();
                return this;
            }
            /**
             * <pre>
             *备份数据量
             * </pre>
             *
             * <code>optional int64 backup_bytes = 8;</code>
             */
            public Builder clearBackupBytes() {

                backupBytes_ = 0L;
                onChanged();
                return this;
            }

            private int actionCategory_ = 0;
            /**
             * <pre>
             *动作类别
             * </pre>
             *
             * <code>optional .one2data.rbtmqmsgcli.client.ActionCategory action_category = 9;</code>
             */
            public int getActionCategoryValue() {
                return actionCategory_;
            }
            /**
             * <pre>
             *动作类别
             * </pre>
             *
             * <code>optional .one2data.rbtmqmsgcli.client.ActionCategory action_category = 9;</code>
             */
            public Builder setActionCategoryValue(int value) {
                actionCategory_ = value;
                onChanged();
                return this;
            }
            /**
             * <pre>
             *动作类别
             * </pre>
             *
             * <code>optional .one2data.rbtmqmsgcli.client.ActionCategory action_category = 9;</code>
             */
            public cn.keptdata.one2data.header.message.protobuf.client.BackupCommand.ActionCategory getActionCategory() {
                cn.keptdata.one2data.header.message.protobuf.client.BackupCommand.ActionCategory result = cn.keptdata.one2data.header.message.protobuf.client.BackupCommand.ActionCategory.valueOf(actionCategory_);
                return result == null ? cn.keptdata.one2data.header.message.protobuf.client.BackupCommand.ActionCategory.UNRECOGNIZED : result;
            }
            /**
             * <pre>
             *动作类别
             * </pre>
             *
             * <code>optional .one2data.rbtmqmsgcli.client.ActionCategory action_category = 9;</code>
             */
            public Builder setActionCategory(cn.keptdata.one2data.header.message.protobuf.client.BackupCommand.ActionCategory value) {
                if (value == null) {
                    throw new NullPointerException();
                }

                actionCategory_ = value.getNumber();
                onChanged();
                return this;
            }
            /**
             * <pre>
             *动作类别
             * </pre>
             *
             * <code>optional .one2data.rbtmqmsgcli.client.ActionCategory action_category = 9;</code>
             */
            public Builder clearActionCategory() {

                actionCategory_ = 0;
                onChanged();
                return this;
            }
            public final Builder setUnknownFields(
                    final com.google.protobuf.UnknownFieldSet unknownFields) {
                return this;
            }

            public final Builder mergeUnknownFields(
                    final com.google.protobuf.UnknownFieldSet unknownFields) {
                return this;
            }


            // @@protoc_insertion_point(builder_scope:one2data.rbtmqmsgcli.client.BackupWorkStateReport)
        }

        // @@protoc_insertion_point(class_scope:one2data.rbtmqmsgcli.client.BackupWorkStateReport)
        private static final cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupWorkStateReport DEFAULT_INSTANCE;
        static {
            DEFAULT_INSTANCE = new cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupWorkStateReport();
        }

        public static cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupWorkStateReport getDefaultInstance() {
            return DEFAULT_INSTANCE;
        }

        private static final com.google.protobuf.Parser<BackupWorkStateReport>
                PARSER = new com.google.protobuf.AbstractParser<BackupWorkStateReport>() {
            public BackupWorkStateReport parsePartialFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws com.google.protobuf.InvalidProtocolBufferException {
                return new BackupWorkStateReport(input, extensionRegistry);
            }
        };

        public static com.google.protobuf.Parser<BackupWorkStateReport> parser() {
            return PARSER;
        }

        @Override
        public com.google.protobuf.Parser<BackupWorkStateReport> getParserForType() {
            return PARSER;
        }

        public cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupWorkStateReport getDefaultInstanceForType() {
            return DEFAULT_INSTANCE;
        }

    }

    public interface BackupStateReportOrBuilder extends
            // @@protoc_insertion_point(interface_extends:one2data.rbtmqmsgcli.client.BackupStateReport)
            com.google.protobuf.MessageOrBuilder {

        /**
         * <pre>
         *备份Agent 内部唯一ID
         * </pre>
         *
         * <code>optional string device_uuid_key = 1;</code>
         */
        String getDeviceUuidKey();
        /**
         * <pre>
         *备份Agent 内部唯一ID
         * </pre>
         *
         * <code>optional string device_uuid_key = 1;</code>
         */
        com.google.protobuf.ByteString
        getDeviceUuidKeyBytes();

        /**
         * <pre>
         *硬盘备份状态集合
         * </pre>
         *
         * <code>repeated .one2data.rbtmqmsgcli.client.BackupStateReport.HardwareBackupState harddisk_backup_state = 2;</code>
         */
        java.util.List<cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupStateReport.HardwareBackupState>
        getHarddiskBackupStateList();
        /**
         * <pre>
         *硬盘备份状态集合
         * </pre>
         *
         * <code>repeated .one2data.rbtmqmsgcli.client.BackupStateReport.HardwareBackupState harddisk_backup_state = 2;</code>
         */
        cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupStateReport.HardwareBackupState getHarddiskBackupState(int index);
        /**
         * <pre>
         *硬盘备份状态集合
         * </pre>
         *
         * <code>repeated .one2data.rbtmqmsgcli.client.BackupStateReport.HardwareBackupState harddisk_backup_state = 2;</code>
         */
        int getHarddiskBackupStateCount();
        /**
         * <pre>
         *硬盘备份状态集合
         * </pre>
         *
         * <code>repeated .one2data.rbtmqmsgcli.client.BackupStateReport.HardwareBackupState harddisk_backup_state = 2;</code>
         */
        java.util.List<? extends cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupStateReport.HardwareBackupStateOrBuilder>
        getHarddiskBackupStateOrBuilderList();
        /**
         * <pre>
         *硬盘备份状态集合
         * </pre>
         *
         * <code>repeated .one2data.rbtmqmsgcli.client.BackupStateReport.HardwareBackupState harddisk_backup_state = 2;</code>
         */
        cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupStateReport.HardwareBackupStateOrBuilder getHarddiskBackupStateOrBuilder(
                int index);

        /**
         * <pre>
         *分区备份状态集合
         * </pre>
         *
         * <code>repeated .one2data.rbtmqmsgcli.client.BackupStateReport.HardwareBackupState partition_backup_state = 3;</code>
         */
        java.util.List<cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupStateReport.HardwareBackupState>
        getPartitionBackupStateList();
        /**
         * <pre>
         *分区备份状态集合
         * </pre>
         *
         * <code>repeated .one2data.rbtmqmsgcli.client.BackupStateReport.HardwareBackupState partition_backup_state = 3;</code>
         */
        cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupStateReport.HardwareBackupState getPartitionBackupState(int index);
        /**
         * <pre>
         *分区备份状态集合
         * </pre>
         *
         * <code>repeated .one2data.rbtmqmsgcli.client.BackupStateReport.HardwareBackupState partition_backup_state = 3;</code>
         */
        int getPartitionBackupStateCount();
        /**
         * <pre>
         *分区备份状态集合
         * </pre>
         *
         * <code>repeated .one2data.rbtmqmsgcli.client.BackupStateReport.HardwareBackupState partition_backup_state = 3;</code>
         */
        java.util.List<? extends cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupStateReport.HardwareBackupStateOrBuilder>
        getPartitionBackupStateOrBuilderList();
        /**
         * <pre>
         *分区备份状态集合
         * </pre>
         *
         * <code>repeated .one2data.rbtmqmsgcli.client.BackupStateReport.HardwareBackupState partition_backup_state = 3;</code>
         */
        cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupStateReport.HardwareBackupStateOrBuilder getPartitionBackupStateOrBuilder(
                int index);

        /**
         * <pre>
         *逻辑卷备份状态集合
         * </pre>
         *
         * <code>repeated .one2data.rbtmqmsgcli.client.BackupStateReport.HardwareBackupState lv_backup_state = 4;</code>
         */
        java.util.List<cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupStateReport.HardwareBackupState>
        getLvBackupStateList();
        /**
         * <pre>
         *逻辑卷备份状态集合
         * </pre>
         *
         * <code>repeated .one2data.rbtmqmsgcli.client.BackupStateReport.HardwareBackupState lv_backup_state = 4;</code>
         */
        cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupStateReport.HardwareBackupState getLvBackupState(int index);
        /**
         * <pre>
         *逻辑卷备份状态集合
         * </pre>
         *
         * <code>repeated .one2data.rbtmqmsgcli.client.BackupStateReport.HardwareBackupState lv_backup_state = 4;</code>
         */
        int getLvBackupStateCount();
        /**
         * <pre>
         *逻辑卷备份状态集合
         * </pre>
         *
         * <code>repeated .one2data.rbtmqmsgcli.client.BackupStateReport.HardwareBackupState lv_backup_state = 4;</code>
         */
        java.util.List<? extends cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupStateReport.HardwareBackupStateOrBuilder>
        getLvBackupStateOrBuilderList();
        /**
         * <pre>
         *逻辑卷备份状态集合
         * </pre>
         *
         * <code>repeated .one2data.rbtmqmsgcli.client.BackupStateReport.HardwareBackupState lv_backup_state = 4;</code>
         */
        cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupStateReport.HardwareBackupStateOrBuilder getLvBackupStateOrBuilder(
                int index);

        /**
         * <pre>
         *备份任务唯一ID
         * </pre>
         *
         * <code>optional string backup_task_uuid = 5;</code>
         */
        String getBackupTaskUuid();
        /**
         * <pre>
         *备份任务唯一ID
         * </pre>
         *
         * <code>optional string backup_task_uuid = 5;</code>
         */
        com.google.protobuf.ByteString
        getBackupTaskUuidBytes();
    }
    /**
     * <pre>
     *************客户端上报备份状态******************
     * </pre>
     *
     * Protobuf type {@code one2data.rbtmqmsgcli.client.BackupStateReport}
     */
    public  static final class BackupStateReport extends
            com.google.protobuf.GeneratedMessageV3 implements
            // @@protoc_insertion_point(message_implements:one2data.rbtmqmsgcli.client.BackupStateReport)
            BackupStateReportOrBuilder {
        // Use BackupStateReport.newBuilder() to construct.
        private BackupStateReport(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
            super(builder);
        }
        private BackupStateReport() {
            deviceUuidKey_ = "";
            harddiskBackupState_ = java.util.Collections.emptyList();
            partitionBackupState_ = java.util.Collections.emptyList();
            lvBackupState_ = java.util.Collections.emptyList();
            backupTaskUuid_ = "";
        }

        @Override
        public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
            return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
        }
        private BackupStateReport(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            this();
            int mutable_bitField0_ = 0;
            try {
                boolean done = false;
                while (!done) {
                    int tag = input.readTag();
                    switch (tag) {
                        case 0:
                            done = true;
                            break;
                        default: {
                            if (!input.skipField(tag)) {
                                done = true;
                            }
                            break;
                        }
                        case 10: {
                            String s = input.readStringRequireUtf8();

                            deviceUuidKey_ = s;
                            break;
                        }
                        case 18: {
                            if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                                harddiskBackupState_ = new java.util.ArrayList<cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupStateReport.HardwareBackupState>();
                                mutable_bitField0_ |= 0x00000002;
                            }
                            harddiskBackupState_.add(
                                    input.readMessage(cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupStateReport.HardwareBackupState.parser(), extensionRegistry));
                            break;
                        }
                        case 26: {
                            if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                                partitionBackupState_ = new java.util.ArrayList<cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupStateReport.HardwareBackupState>();
                                mutable_bitField0_ |= 0x00000004;
                            }
                            partitionBackupState_.add(
                                    input.readMessage(cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupStateReport.HardwareBackupState.parser(), extensionRegistry));
                            break;
                        }
                        case 34: {
                            if (!((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
                                lvBackupState_ = new java.util.ArrayList<cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupStateReport.HardwareBackupState>();
                                mutable_bitField0_ |= 0x00000008;
                            }
                            lvBackupState_.add(
                                    input.readMessage(cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupStateReport.HardwareBackupState.parser(), extensionRegistry));
                            break;
                        }
                        case 42: {
                            String s = input.readStringRequireUtf8();

                            backupTaskUuid_ = s;
                            break;
                        }
                    }
                }
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(this);
            } catch (java.io.IOException e) {
                throw new com.google.protobuf.InvalidProtocolBufferException(
                        e).setUnfinishedMessage(this);
            } finally {
                if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                    harddiskBackupState_ = java.util.Collections.unmodifiableList(harddiskBackupState_);
                }
                if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                    partitionBackupState_ = java.util.Collections.unmodifiableList(partitionBackupState_);
                }
                if (((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
                    lvBackupState_ = java.util.Collections.unmodifiableList(lvBackupState_);
                }
                makeExtensionsImmutable();
            }
        }
        public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
            return cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.internal_static_one2data_rbtmqmsgcli_client_BackupStateReport_descriptor;
        }

        protected FieldAccessorTable
        internalGetFieldAccessorTable() {
            return cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.internal_static_one2data_rbtmqmsgcli_client_BackupStateReport_fieldAccessorTable
                    .ensureFieldAccessorsInitialized(
                            cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupStateReport.class, cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupStateReport.Builder.class);
        }

        public interface HardwareBackupStateOrBuilder extends
                // @@protoc_insertion_point(interface_extends:one2data.rbtmqmsgcli.client.BackupStateReport.HardwareBackupState)
                com.google.protobuf.MessageOrBuilder {

            /**
             * <pre>
             *块设备内部唯一标识
             * </pre>
             *
             * <code>optional .one2data.rbtmqmsgcli.common.BlockDeviceKey dev_key = 1;</code>
             */
            boolean hasDevKey();
            /**
             * <pre>
             *块设备内部唯一标识
             * </pre>
             *
             * <code>optional .one2data.rbtmqmsgcli.common.BlockDeviceKey dev_key = 1;</code>
             */
            cn.keptdata.one2data.header.message.protobuf.common.Node.BlockDeviceKey getDevKey();
            /**
             * <pre>
             *块设备内部唯一标识
             * </pre>
             *
             * <code>optional .one2data.rbtmqmsgcli.common.BlockDeviceKey dev_key = 1;</code>
             */
            cn.keptdata.one2data.header.message.protobuf.common.Node.BlockDeviceKeyOrBuilder getDevKeyOrBuilder();

            /**
             * <pre>
             *块设备备份状态
             * </pre>
             *
             * <code>optional .one2data.rbtmqmsgcli.client.BackupState backup_state = 2;</code>
             */
            int getBackupStateValue();
            /**
             * <pre>
             *块设备备份状态
             * </pre>
             *
             * <code>optional .one2data.rbtmqmsgcli.client.BackupState backup_state = 2;</code>
             */
            cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupState getBackupState();
        }
        /**
         * Protobuf type {@code one2data.rbtmqmsgcli.client.BackupStateReport.HardwareBackupState}
         */
        public  static final class HardwareBackupState extends
                com.google.protobuf.GeneratedMessageV3 implements
                // @@protoc_insertion_point(message_implements:one2data.rbtmqmsgcli.client.BackupStateReport.HardwareBackupState)
                HardwareBackupStateOrBuilder {
            // Use HardwareBackupState.newBuilder() to construct.
            private HardwareBackupState(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
                super(builder);
            }
            private HardwareBackupState() {
                backupState_ = 0;
            }

            @Override
            public final com.google.protobuf.UnknownFieldSet
            getUnknownFields() {
                return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
            }
            private HardwareBackupState(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws com.google.protobuf.InvalidProtocolBufferException {
                this();
                int mutable_bitField0_ = 0;
                try {
                    boolean done = false;
                    while (!done) {
                        int tag = input.readTag();
                        switch (tag) {
                            case 0:
                                done = true;
                                break;
                            default: {
                                if (!input.skipField(tag)) {
                                    done = true;
                                }
                                break;
                            }
                            case 10: {
                                cn.keptdata.one2data.header.message.protobuf.common.Node.BlockDeviceKey.Builder subBuilder = null;
                                if (devKey_ != null) {
                                    subBuilder = devKey_.toBuilder();
                                }
                                devKey_ = input.readMessage(cn.keptdata.one2data.header.message.protobuf.common.Node.BlockDeviceKey.parser(), extensionRegistry);
                                if (subBuilder != null) {
                                    subBuilder.mergeFrom(devKey_);
                                    devKey_ = subBuilder.buildPartial();
                                }

                                break;
                            }
                            case 16: {
                                int rawValue = input.readEnum();

                                backupState_ = rawValue;
                                break;
                            }
                        }
                    }
                } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                    throw e.setUnfinishedMessage(this);
                } catch (java.io.IOException e) {
                    throw new com.google.protobuf.InvalidProtocolBufferException(
                            e).setUnfinishedMessage(this);
                } finally {
                    makeExtensionsImmutable();
                }
            }
            public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
                return cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.internal_static_one2data_rbtmqmsgcli_client_BackupStateReport_HardwareBackupState_descriptor;
            }

            protected FieldAccessorTable
            internalGetFieldAccessorTable() {
                return cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.internal_static_one2data_rbtmqmsgcli_client_BackupStateReport_HardwareBackupState_fieldAccessorTable
                        .ensureFieldAccessorsInitialized(
                                cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupStateReport.HardwareBackupState.class, cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupStateReport.HardwareBackupState.Builder.class);
            }

            public static final int DEV_KEY_FIELD_NUMBER = 1;
            private cn.keptdata.one2data.header.message.protobuf.common.Node.BlockDeviceKey devKey_;
            /**
             * <pre>
             *块设备内部唯一标识
             * </pre>
             *
             * <code>optional .one2data.rbtmqmsgcli.common.BlockDeviceKey dev_key = 1;</code>
             */
            public boolean hasDevKey() {
                return devKey_ != null;
            }
            /**
             * <pre>
             *块设备内部唯一标识
             * </pre>
             *
             * <code>optional .one2data.rbtmqmsgcli.common.BlockDeviceKey dev_key = 1;</code>
             */
            public cn.keptdata.one2data.header.message.protobuf.common.Node.BlockDeviceKey getDevKey() {
                return devKey_ == null ? cn.keptdata.one2data.header.message.protobuf.common.Node.BlockDeviceKey.getDefaultInstance() : devKey_;
            }
            /**
             * <pre>
             *块设备内部唯一标识
             * </pre>
             *
             * <code>optional .one2data.rbtmqmsgcli.common.BlockDeviceKey dev_key = 1;</code>
             */
            public cn.keptdata.one2data.header.message.protobuf.common.Node.BlockDeviceKeyOrBuilder getDevKeyOrBuilder() {
                return getDevKey();
            }

            public static final int BACKUP_STATE_FIELD_NUMBER = 2;
            private int backupState_;
            /**
             * <pre>
             *块设备备份状态
             * </pre>
             *
             * <code>optional .one2data.rbtmqmsgcli.client.BackupState backup_state = 2;</code>
             */
            public int getBackupStateValue() {
                return backupState_;
            }
            /**
             * <pre>
             *块设备备份状态
             * </pre>
             *
             * <code>optional .one2data.rbtmqmsgcli.client.BackupState backup_state = 2;</code>
             */
            public cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupState getBackupState() {
                cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupState result = cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupState.valueOf(backupState_);
                return result == null ? cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupState.UNRECOGNIZED : result;
            }

            private byte memoizedIsInitialized = -1;
            public final boolean isInitialized() {
                byte isInitialized = memoizedIsInitialized;
                if (isInitialized == 1) return true;
                if (isInitialized == 0) return false;

                memoizedIsInitialized = 1;
                return true;
            }

            public void writeTo(com.google.protobuf.CodedOutputStream output)
                    throws java.io.IOException {
                if (devKey_ != null) {
                    output.writeMessage(1, getDevKey());
                }
                if (backupState_ != cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupState.BS_INITIAL.getNumber()) {
                    output.writeEnum(2, backupState_);
                }
            }

            public int getSerializedSize() {
                int size = memoizedSize;
                if (size != -1) return size;

                size = 0;
                if (devKey_ != null) {
                    size += com.google.protobuf.CodedOutputStream
                            .computeMessageSize(1, getDevKey());
                }
                if (backupState_ != cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupState.BS_INITIAL.getNumber()) {
                    size += com.google.protobuf.CodedOutputStream
                            .computeEnumSize(2, backupState_);
                }
                memoizedSize = size;
                return size;
            }

            private static final long serialVersionUID = 0L;
            @Override
            public boolean equals(final Object obj) {
                if (obj == this) {
                    return true;
                }
                if (!(obj instanceof cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupStateReport.HardwareBackupState)) {
                    return super.equals(obj);
                }
                cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupStateReport.HardwareBackupState other = (cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupStateReport.HardwareBackupState) obj;

                boolean result = true;
                result = result && (hasDevKey() == other.hasDevKey());
                if (hasDevKey()) {
                    result = result && getDevKey()
                            .equals(other.getDevKey());
                }
                result = result && backupState_ == other.backupState_;
                return result;
            }

            @Override
            public int hashCode() {
                if (memoizedHashCode != 0) {
                    return memoizedHashCode;
                }
                int hash = 41;
                hash = (19 * hash) + getDescriptorForType().hashCode();
                if (hasDevKey()) {
                    hash = (37 * hash) + DEV_KEY_FIELD_NUMBER;
                    hash = (53 * hash) + getDevKey().hashCode();
                }
                hash = (37 * hash) + BACKUP_STATE_FIELD_NUMBER;
                hash = (53 * hash) + backupState_;
                hash = (29 * hash) + unknownFields.hashCode();
                memoizedHashCode = hash;
                return hash;
            }

            public static cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupStateReport.HardwareBackupState parseFrom(
                    com.google.protobuf.ByteString data)
                    throws com.google.protobuf.InvalidProtocolBufferException {
                return PARSER.parseFrom(data);
            }
            public static cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupStateReport.HardwareBackupState parseFrom(
                    com.google.protobuf.ByteString data,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws com.google.protobuf.InvalidProtocolBufferException {
                return PARSER.parseFrom(data, extensionRegistry);
            }
            public static cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupStateReport.HardwareBackupState parseFrom(byte[] data)
                    throws com.google.protobuf.InvalidProtocolBufferException {
                return PARSER.parseFrom(data);
            }
            public static cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupStateReport.HardwareBackupState parseFrom(
                    byte[] data,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws com.google.protobuf.InvalidProtocolBufferException {
                return PARSER.parseFrom(data, extensionRegistry);
            }
            public static cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupStateReport.HardwareBackupState parseFrom(java.io.InputStream input)
                    throws java.io.IOException {
                return com.google.protobuf.GeneratedMessageV3
                        .parseWithIOException(PARSER, input);
            }
            public static cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupStateReport.HardwareBackupState parseFrom(
                    java.io.InputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws java.io.IOException {
                return com.google.protobuf.GeneratedMessageV3
                        .parseWithIOException(PARSER, input, extensionRegistry);
            }
            public static cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupStateReport.HardwareBackupState parseDelimitedFrom(java.io.InputStream input)
                    throws java.io.IOException {
                return com.google.protobuf.GeneratedMessageV3
                        .parseDelimitedWithIOException(PARSER, input);
            }
            public static cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupStateReport.HardwareBackupState parseDelimitedFrom(
                    java.io.InputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws java.io.IOException {
                return com.google.protobuf.GeneratedMessageV3
                        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
            }
            public static cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupStateReport.HardwareBackupState parseFrom(
                    com.google.protobuf.CodedInputStream input)
                    throws java.io.IOException {
                return com.google.protobuf.GeneratedMessageV3
                        .parseWithIOException(PARSER, input);
            }
            public static cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupStateReport.HardwareBackupState parseFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws java.io.IOException {
                return com.google.protobuf.GeneratedMessageV3
                        .parseWithIOException(PARSER, input, extensionRegistry);
            }

            public Builder newBuilderForType() { return newBuilder(); }
            public static Builder newBuilder() {
                return DEFAULT_INSTANCE.toBuilder();
            }
            public static Builder newBuilder(cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupStateReport.HardwareBackupState prototype) {
                return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
            }
            public Builder toBuilder() {
                return this == DEFAULT_INSTANCE
                        ? new Builder() : new Builder().mergeFrom(this);
            }

            @Override
            protected Builder newBuilderForType(
                    BuilderParent parent) {
                Builder builder = new Builder(parent);
                return builder;
            }
            /**
             * Protobuf type {@code one2data.rbtmqmsgcli.client.BackupStateReport.HardwareBackupState}
             */
            public static final class Builder extends
                    com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
                    // @@protoc_insertion_point(builder_implements:one2data.rbtmqmsgcli.client.BackupStateReport.HardwareBackupState)
                    cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupStateReport.HardwareBackupStateOrBuilder {
                public static final com.google.protobuf.Descriptors.Descriptor
                getDescriptor() {
                    return cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.internal_static_one2data_rbtmqmsgcli_client_BackupStateReport_HardwareBackupState_descriptor;
                }

                protected FieldAccessorTable
                internalGetFieldAccessorTable() {
                    return cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.internal_static_one2data_rbtmqmsgcli_client_BackupStateReport_HardwareBackupState_fieldAccessorTable
                            .ensureFieldAccessorsInitialized(
                                    cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupStateReport.HardwareBackupState.class, cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupStateReport.HardwareBackupState.Builder.class);
                }

                // Construct using cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupStateReport.HardwareBackupState.newBuilder()
                private Builder() {
                    maybeForceBuilderInitialization();
                }

                private Builder(
                        BuilderParent parent) {
                    super(parent);
                    maybeForceBuilderInitialization();
                }
                private void maybeForceBuilderInitialization() {
                    if (com.google.protobuf.GeneratedMessageV3
                            .alwaysUseFieldBuilders) {
                    }
                }
                public Builder clear() {
                    super.clear();
                    if (devKeyBuilder_ == null) {
                        devKey_ = null;
                    } else {
                        devKey_ = null;
                        devKeyBuilder_ = null;
                    }
                    backupState_ = 0;

                    return this;
                }

                public com.google.protobuf.Descriptors.Descriptor
                getDescriptorForType() {
                    return cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.internal_static_one2data_rbtmqmsgcli_client_BackupStateReport_HardwareBackupState_descriptor;
                }

                public cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupStateReport.HardwareBackupState getDefaultInstanceForType() {
                    return cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupStateReport.HardwareBackupState.getDefaultInstance();
                }

                public cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupStateReport.HardwareBackupState build() {
                    cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupStateReport.HardwareBackupState result = buildPartial();
                    if (!result.isInitialized()) {
                        throw newUninitializedMessageException(result);
                    }
                    return result;
                }

                public cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupStateReport.HardwareBackupState buildPartial() {
                    cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupStateReport.HardwareBackupState result = new cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupStateReport.HardwareBackupState(this);
                    if (devKeyBuilder_ == null) {
                        result.devKey_ = devKey_;
                    } else {
                        result.devKey_ = devKeyBuilder_.build();
                    }
                    result.backupState_ = backupState_;
                    onBuilt();
                    return result;
                }

                public Builder clone() {
                    return (Builder) super.clone();
                }
                public Builder setField(
                        com.google.protobuf.Descriptors.FieldDescriptor field,
                        Object value) {
                    return (Builder) super.setField(field, value);
                }
                public Builder clearField(
                        com.google.protobuf.Descriptors.FieldDescriptor field) {
                    return (Builder) super.clearField(field);
                }
                public Builder clearOneof(
                        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
                    return (Builder) super.clearOneof(oneof);
                }
                public Builder setRepeatedField(
                        com.google.protobuf.Descriptors.FieldDescriptor field,
                        int index, Object value) {
                    return (Builder) super.setRepeatedField(field, index, value);
                }
                public Builder addRepeatedField(
                        com.google.protobuf.Descriptors.FieldDescriptor field,
                        Object value) {
                    return (Builder) super.addRepeatedField(field, value);
                }
                public Builder mergeFrom(com.google.protobuf.Message other) {
                    if (other instanceof cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupStateReport.HardwareBackupState) {
                        return mergeFrom((cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupStateReport.HardwareBackupState)other);
                    } else {
                        super.mergeFrom(other);
                        return this;
                    }
                }

                public Builder mergeFrom(cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupStateReport.HardwareBackupState other) {
                    if (other == cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupStateReport.HardwareBackupState.getDefaultInstance()) return this;
                    if (other.hasDevKey()) {
                        mergeDevKey(other.getDevKey());
                    }
                    if (other.backupState_ != 0) {
                        setBackupStateValue(other.getBackupStateValue());
                    }
                    onChanged();
                    return this;
                }

                public final boolean isInitialized() {
                    return true;
                }

                public Builder mergeFrom(
                        com.google.protobuf.CodedInputStream input,
                        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                        throws java.io.IOException {
                    cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupStateReport.HardwareBackupState parsedMessage = null;
                    try {
                        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
                    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                        parsedMessage = (cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupStateReport.HardwareBackupState) e.getUnfinishedMessage();
                        throw e.unwrapIOException();
                    } finally {
                        if (parsedMessage != null) {
                            mergeFrom(parsedMessage);
                        }
                    }
                    return this;
                }

                private cn.keptdata.one2data.header.message.protobuf.common.Node.BlockDeviceKey devKey_ = null;
                private com.google.protobuf.SingleFieldBuilderV3<
                        cn.keptdata.one2data.header.message.protobuf.common.Node.BlockDeviceKey, cn.keptdata.one2data.header.message.protobuf.common.Node.BlockDeviceKey.Builder, cn.keptdata.one2data.header.message.protobuf.common.Node.BlockDeviceKeyOrBuilder> devKeyBuilder_;
                /**
                 * <pre>
                 *块设备内部唯一标识
                 * </pre>
                 *
                 * <code>optional .one2data.rbtmqmsgcli.common.BlockDeviceKey dev_key = 1;</code>
                 */
                public boolean hasDevKey() {
                    return devKeyBuilder_ != null || devKey_ != null;
                }
                /**
                 * <pre>
                 *块设备内部唯一标识
                 * </pre>
                 *
                 * <code>optional .one2data.rbtmqmsgcli.common.BlockDeviceKey dev_key = 1;</code>
                 */
                public cn.keptdata.one2data.header.message.protobuf.common.Node.BlockDeviceKey getDevKey() {
                    if (devKeyBuilder_ == null) {
                        return devKey_ == null ? cn.keptdata.one2data.header.message.protobuf.common.Node.BlockDeviceKey.getDefaultInstance() : devKey_;
                    } else {
                        return devKeyBuilder_.getMessage();
                    }
                }
                /**
                 * <pre>
                 *块设备内部唯一标识
                 * </pre>
                 *
                 * <code>optional .one2data.rbtmqmsgcli.common.BlockDeviceKey dev_key = 1;</code>
                 */
                public Builder setDevKey(cn.keptdata.one2data.header.message.protobuf.common.Node.BlockDeviceKey value) {
                    if (devKeyBuilder_ == null) {
                        if (value == null) {
                            throw new NullPointerException();
                        }
                        devKey_ = value;
                        onChanged();
                    } else {
                        devKeyBuilder_.setMessage(value);
                    }

                    return this;
                }
                /**
                 * <pre>
                 *块设备内部唯一标识
                 * </pre>
                 *
                 * <code>optional .one2data.rbtmqmsgcli.common.BlockDeviceKey dev_key = 1;</code>
                 */
                public Builder setDevKey(
                        cn.keptdata.one2data.header.message.protobuf.common.Node.BlockDeviceKey.Builder builderForValue) {
                    if (devKeyBuilder_ == null) {
                        devKey_ = builderForValue.build();
                        onChanged();
                    } else {
                        devKeyBuilder_.setMessage(builderForValue.build());
                    }

                    return this;
                }
                /**
                 * <pre>
                 *块设备内部唯一标识
                 * </pre>
                 *
                 * <code>optional .one2data.rbtmqmsgcli.common.BlockDeviceKey dev_key = 1;</code>
                 */
                public Builder mergeDevKey(cn.keptdata.one2data.header.message.protobuf.common.Node.BlockDeviceKey value) {
                    if (devKeyBuilder_ == null) {
                        if (devKey_ != null) {
                            devKey_ =
                                    cn.keptdata.one2data.header.message.protobuf.common.Node.BlockDeviceKey.newBuilder(devKey_).mergeFrom(value).buildPartial();
                        } else {
                            devKey_ = value;
                        }
                        onChanged();
                    } else {
                        devKeyBuilder_.mergeFrom(value);
                    }

                    return this;
                }
                /**
                 * <pre>
                 *块设备内部唯一标识
                 * </pre>
                 *
                 * <code>optional .one2data.rbtmqmsgcli.common.BlockDeviceKey dev_key = 1;</code>
                 */
                public Builder clearDevKey() {
                    if (devKeyBuilder_ == null) {
                        devKey_ = null;
                        onChanged();
                    } else {
                        devKey_ = null;
                        devKeyBuilder_ = null;
                    }

                    return this;
                }
                /**
                 * <pre>
                 *块设备内部唯一标识
                 * </pre>
                 *
                 * <code>optional .one2data.rbtmqmsgcli.common.BlockDeviceKey dev_key = 1;</code>
                 */
                public cn.keptdata.one2data.header.message.protobuf.common.Node.BlockDeviceKey.Builder getDevKeyBuilder() {

                    onChanged();
                    return getDevKeyFieldBuilder().getBuilder();
                }
                /**
                 * <pre>
                 *块设备内部唯一标识
                 * </pre>
                 *
                 * <code>optional .one2data.rbtmqmsgcli.common.BlockDeviceKey dev_key = 1;</code>
                 */
                public cn.keptdata.one2data.header.message.protobuf.common.Node.BlockDeviceKeyOrBuilder getDevKeyOrBuilder() {
                    if (devKeyBuilder_ != null) {
                        return devKeyBuilder_.getMessageOrBuilder();
                    } else {
                        return devKey_ == null ?
                                cn.keptdata.one2data.header.message.protobuf.common.Node.BlockDeviceKey.getDefaultInstance() : devKey_;
                    }
                }
                /**
                 * <pre>
                 *块设备内部唯一标识
                 * </pre>
                 *
                 * <code>optional .one2data.rbtmqmsgcli.common.BlockDeviceKey dev_key = 1;</code>
                 */
                private com.google.protobuf.SingleFieldBuilderV3<
                        cn.keptdata.one2data.header.message.protobuf.common.Node.BlockDeviceKey, cn.keptdata.one2data.header.message.protobuf.common.Node.BlockDeviceKey.Builder, cn.keptdata.one2data.header.message.protobuf.common.Node.BlockDeviceKeyOrBuilder>
                getDevKeyFieldBuilder() {
                    if (devKeyBuilder_ == null) {
                        devKeyBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                                cn.keptdata.one2data.header.message.protobuf.common.Node.BlockDeviceKey, cn.keptdata.one2data.header.message.protobuf.common.Node.BlockDeviceKey.Builder, cn.keptdata.one2data.header.message.protobuf.common.Node.BlockDeviceKeyOrBuilder>(
                                getDevKey(),
                                getParentForChildren(),
                                isClean());
                        devKey_ = null;
                    }
                    return devKeyBuilder_;
                }

                private int backupState_ = 0;
                /**
                 * <pre>
                 *块设备备份状态
                 * </pre>
                 *
                 * <code>optional .one2data.rbtmqmsgcli.client.BackupState backup_state = 2;</code>
                 */
                public int getBackupStateValue() {
                    return backupState_;
                }
                /**
                 * <pre>
                 *块设备备份状态
                 * </pre>
                 *
                 * <code>optional .one2data.rbtmqmsgcli.client.BackupState backup_state = 2;</code>
                 */
                public Builder setBackupStateValue(int value) {
                    backupState_ = value;
                    onChanged();
                    return this;
                }
                /**
                 * <pre>
                 *块设备备份状态
                 * </pre>
                 *
                 * <code>optional .one2data.rbtmqmsgcli.client.BackupState backup_state = 2;</code>
                 */
                public cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupState getBackupState() {
                    cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupState result = cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupState.valueOf(backupState_);
                    return result == null ? cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupState.UNRECOGNIZED : result;
                }
                /**
                 * <pre>
                 *块设备备份状态
                 * </pre>
                 *
                 * <code>optional .one2data.rbtmqmsgcli.client.BackupState backup_state = 2;</code>
                 */
                public Builder setBackupState(cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupState value) {
                    if (value == null) {
                        throw new NullPointerException();
                    }

                    backupState_ = value.getNumber();
                    onChanged();
                    return this;
                }
                /**
                 * <pre>
                 *块设备备份状态
                 * </pre>
                 *
                 * <code>optional .one2data.rbtmqmsgcli.client.BackupState backup_state = 2;</code>
                 */
                public Builder clearBackupState() {

                    backupState_ = 0;
                    onChanged();
                    return this;
                }
                public final Builder setUnknownFields(
                        final com.google.protobuf.UnknownFieldSet unknownFields) {
                    return this;
                }

                public final Builder mergeUnknownFields(
                        final com.google.protobuf.UnknownFieldSet unknownFields) {
                    return this;
                }


                // @@protoc_insertion_point(builder_scope:one2data.rbtmqmsgcli.client.BackupStateReport.HardwareBackupState)
            }

            // @@protoc_insertion_point(class_scope:one2data.rbtmqmsgcli.client.BackupStateReport.HardwareBackupState)
            private static final cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupStateReport.HardwareBackupState DEFAULT_INSTANCE;
            static {
                DEFAULT_INSTANCE = new cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupStateReport.HardwareBackupState();
            }

            public static cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupStateReport.HardwareBackupState getDefaultInstance() {
                return DEFAULT_INSTANCE;
            }

            private static final com.google.protobuf.Parser<HardwareBackupState>
                    PARSER = new com.google.protobuf.AbstractParser<HardwareBackupState>() {
                public HardwareBackupState parsePartialFrom(
                        com.google.protobuf.CodedInputStream input,
                        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                        throws com.google.protobuf.InvalidProtocolBufferException {
                    return new HardwareBackupState(input, extensionRegistry);
                }
            };

            public static com.google.protobuf.Parser<HardwareBackupState> parser() {
                return PARSER;
            }

            @Override
            public com.google.protobuf.Parser<HardwareBackupState> getParserForType() {
                return PARSER;
            }

            public cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupStateReport.HardwareBackupState getDefaultInstanceForType() {
                return DEFAULT_INSTANCE;
            }

        }

        private int bitField0_;
        public static final int DEVICE_UUID_KEY_FIELD_NUMBER = 1;
        private volatile Object deviceUuidKey_;
        /**
         * <pre>
         *备份Agent 内部唯一ID
         * </pre>
         *
         * <code>optional string device_uuid_key = 1;</code>
         */
        public String getDeviceUuidKey() {
            Object ref = deviceUuidKey_;
            if (ref instanceof String) {
                return (String) ref;
            } else {
                com.google.protobuf.ByteString bs =
                        (com.google.protobuf.ByteString) ref;
                String s = bs.toStringUtf8();
                deviceUuidKey_ = s;
                return s;
            }
        }
        /**
         * <pre>
         *备份Agent 内部唯一ID
         * </pre>
         *
         * <code>optional string device_uuid_key = 1;</code>
         */
        public com.google.protobuf.ByteString
        getDeviceUuidKeyBytes() {
            Object ref = deviceUuidKey_;
            if (ref instanceof String) {
                com.google.protobuf.ByteString b =
                        com.google.protobuf.ByteString.copyFromUtf8(
                                (String) ref);
                deviceUuidKey_ = b;
                return b;
            } else {
                return (com.google.protobuf.ByteString) ref;
            }
        }

        public static final int HARDDISK_BACKUP_STATE_FIELD_NUMBER = 2;
        private java.util.List<cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupStateReport.HardwareBackupState> harddiskBackupState_;
        /**
         * <pre>
         *硬盘备份状态集合
         * </pre>
         *
         * <code>repeated .one2data.rbtmqmsgcli.client.BackupStateReport.HardwareBackupState harddisk_backup_state = 2;</code>
         */
        public java.util.List<cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupStateReport.HardwareBackupState> getHarddiskBackupStateList() {
            return harddiskBackupState_;
        }
        /**
         * <pre>
         *硬盘备份状态集合
         * </pre>
         *
         * <code>repeated .one2data.rbtmqmsgcli.client.BackupStateReport.HardwareBackupState harddisk_backup_state = 2;</code>
         */
        public java.util.List<? extends cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupStateReport.HardwareBackupStateOrBuilder>
        getHarddiskBackupStateOrBuilderList() {
            return harddiskBackupState_;
        }
        /**
         * <pre>
         *硬盘备份状态集合
         * </pre>
         *
         * <code>repeated .one2data.rbtmqmsgcli.client.BackupStateReport.HardwareBackupState harddisk_backup_state = 2;</code>
         */
        public int getHarddiskBackupStateCount() {
            return harddiskBackupState_.size();
        }
        /**
         * <pre>
         *硬盘备份状态集合
         * </pre>
         *
         * <code>repeated .one2data.rbtmqmsgcli.client.BackupStateReport.HardwareBackupState harddisk_backup_state = 2;</code>
         */
        public cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupStateReport.HardwareBackupState getHarddiskBackupState(int index) {
            return harddiskBackupState_.get(index);
        }
        /**
         * <pre>
         *硬盘备份状态集合
         * </pre>
         *
         * <code>repeated .one2data.rbtmqmsgcli.client.BackupStateReport.HardwareBackupState harddisk_backup_state = 2;</code>
         */
        public cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupStateReport.HardwareBackupStateOrBuilder getHarddiskBackupStateOrBuilder(
                int index) {
            return harddiskBackupState_.get(index);
        }

        public static final int PARTITION_BACKUP_STATE_FIELD_NUMBER = 3;
        private java.util.List<cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupStateReport.HardwareBackupState> partitionBackupState_;
        /**
         * <pre>
         *分区备份状态集合
         * </pre>
         *
         * <code>repeated .one2data.rbtmqmsgcli.client.BackupStateReport.HardwareBackupState partition_backup_state = 3;</code>
         */
        public java.util.List<cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupStateReport.HardwareBackupState> getPartitionBackupStateList() {
            return partitionBackupState_;
        }
        /**
         * <pre>
         *分区备份状态集合
         * </pre>
         *
         * <code>repeated .one2data.rbtmqmsgcli.client.BackupStateReport.HardwareBackupState partition_backup_state = 3;</code>
         */
        public java.util.List<? extends cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupStateReport.HardwareBackupStateOrBuilder>
        getPartitionBackupStateOrBuilderList() {
            return partitionBackupState_;
        }
        /**
         * <pre>
         *分区备份状态集合
         * </pre>
         *
         * <code>repeated .one2data.rbtmqmsgcli.client.BackupStateReport.HardwareBackupState partition_backup_state = 3;</code>
         */
        public int getPartitionBackupStateCount() {
            return partitionBackupState_.size();
        }
        /**
         * <pre>
         *分区备份状态集合
         * </pre>
         *
         * <code>repeated .one2data.rbtmqmsgcli.client.BackupStateReport.HardwareBackupState partition_backup_state = 3;</code>
         */
        public cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupStateReport.HardwareBackupState getPartitionBackupState(int index) {
            return partitionBackupState_.get(index);
        }
        /**
         * <pre>
         *分区备份状态集合
         * </pre>
         *
         * <code>repeated .one2data.rbtmqmsgcli.client.BackupStateReport.HardwareBackupState partition_backup_state = 3;</code>
         */
        public cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupStateReport.HardwareBackupStateOrBuilder getPartitionBackupStateOrBuilder(
                int index) {
            return partitionBackupState_.get(index);
        }

        public static final int LV_BACKUP_STATE_FIELD_NUMBER = 4;
        private java.util.List<cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupStateReport.HardwareBackupState> lvBackupState_;
        /**
         * <pre>
         *逻辑卷备份状态集合
         * </pre>
         *
         * <code>repeated .one2data.rbtmqmsgcli.client.BackupStateReport.HardwareBackupState lv_backup_state = 4;</code>
         */
        public java.util.List<cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupStateReport.HardwareBackupState> getLvBackupStateList() {
            return lvBackupState_;
        }
        /**
         * <pre>
         *逻辑卷备份状态集合
         * </pre>
         *
         * <code>repeated .one2data.rbtmqmsgcli.client.BackupStateReport.HardwareBackupState lv_backup_state = 4;</code>
         */
        public java.util.List<? extends cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupStateReport.HardwareBackupStateOrBuilder>
        getLvBackupStateOrBuilderList() {
            return lvBackupState_;
        }
        /**
         * <pre>
         *逻辑卷备份状态集合
         * </pre>
         *
         * <code>repeated .one2data.rbtmqmsgcli.client.BackupStateReport.HardwareBackupState lv_backup_state = 4;</code>
         */
        public int getLvBackupStateCount() {
            return lvBackupState_.size();
        }
        /**
         * <pre>
         *逻辑卷备份状态集合
         * </pre>
         *
         * <code>repeated .one2data.rbtmqmsgcli.client.BackupStateReport.HardwareBackupState lv_backup_state = 4;</code>
         */
        public cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupStateReport.HardwareBackupState getLvBackupState(int index) {
            return lvBackupState_.get(index);
        }
        /**
         * <pre>
         *逻辑卷备份状态集合
         * </pre>
         *
         * <code>repeated .one2data.rbtmqmsgcli.client.BackupStateReport.HardwareBackupState lv_backup_state = 4;</code>
         */
        public cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupStateReport.HardwareBackupStateOrBuilder getLvBackupStateOrBuilder(
                int index) {
            return lvBackupState_.get(index);
        }

        public static final int BACKUP_TASK_UUID_FIELD_NUMBER = 5;
        private volatile Object backupTaskUuid_;
        /**
         * <pre>
         *备份任务唯一ID
         * </pre>
         *
         * <code>optional string backup_task_uuid = 5;</code>
         */
        public String getBackupTaskUuid() {
            Object ref = backupTaskUuid_;
            if (ref instanceof String) {
                return (String) ref;
            } else {
                com.google.protobuf.ByteString bs =
                        (com.google.protobuf.ByteString) ref;
                String s = bs.toStringUtf8();
                backupTaskUuid_ = s;
                return s;
            }
        }
        /**
         * <pre>
         *备份任务唯一ID
         * </pre>
         *
         * <code>optional string backup_task_uuid = 5;</code>
         */
        public com.google.protobuf.ByteString
        getBackupTaskUuidBytes() {
            Object ref = backupTaskUuid_;
            if (ref instanceof String) {
                com.google.protobuf.ByteString b =
                        com.google.protobuf.ByteString.copyFromUtf8(
                                (String) ref);
                backupTaskUuid_ = b;
                return b;
            } else {
                return (com.google.protobuf.ByteString) ref;
            }
        }

        private byte memoizedIsInitialized = -1;
        public final boolean isInitialized() {
            byte isInitialized = memoizedIsInitialized;
            if (isInitialized == 1) return true;
            if (isInitialized == 0) return false;

            memoizedIsInitialized = 1;
            return true;
        }

        public void writeTo(com.google.protobuf.CodedOutputStream output)
                throws java.io.IOException {
            if (!getDeviceUuidKeyBytes().isEmpty()) {
                com.google.protobuf.GeneratedMessageV3.writeString(output, 1, deviceUuidKey_);
            }
            for (int i = 0; i < harddiskBackupState_.size(); i++) {
                output.writeMessage(2, harddiskBackupState_.get(i));
            }
            for (int i = 0; i < partitionBackupState_.size(); i++) {
                output.writeMessage(3, partitionBackupState_.get(i));
            }
            for (int i = 0; i < lvBackupState_.size(); i++) {
                output.writeMessage(4, lvBackupState_.get(i));
            }
            if (!getBackupTaskUuidBytes().isEmpty()) {
                com.google.protobuf.GeneratedMessageV3.writeString(output, 5, backupTaskUuid_);
            }
        }

        public int getSerializedSize() {
            int size = memoizedSize;
            if (size != -1) return size;

            size = 0;
            if (!getDeviceUuidKeyBytes().isEmpty()) {
                size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, deviceUuidKey_);
            }
            for (int i = 0; i < harddiskBackupState_.size(); i++) {
                size += com.google.protobuf.CodedOutputStream
                        .computeMessageSize(2, harddiskBackupState_.get(i));
            }
            for (int i = 0; i < partitionBackupState_.size(); i++) {
                size += com.google.protobuf.CodedOutputStream
                        .computeMessageSize(3, partitionBackupState_.get(i));
            }
            for (int i = 0; i < lvBackupState_.size(); i++) {
                size += com.google.protobuf.CodedOutputStream
                        .computeMessageSize(4, lvBackupState_.get(i));
            }
            if (!getBackupTaskUuidBytes().isEmpty()) {
                size += com.google.protobuf.GeneratedMessageV3.computeStringSize(5, backupTaskUuid_);
            }
            memoizedSize = size;
            return size;
        }

        private static final long serialVersionUID = 0L;
        @Override
        public boolean equals(final Object obj) {
            if (obj == this) {
                return true;
            }
            if (!(obj instanceof cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupStateReport)) {
                return super.equals(obj);
            }
            cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupStateReport other = (cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupStateReport) obj;

            boolean result = true;
            result = result && getDeviceUuidKey()
                    .equals(other.getDeviceUuidKey());
            result = result && getHarddiskBackupStateList()
                    .equals(other.getHarddiskBackupStateList());
            result = result && getPartitionBackupStateList()
                    .equals(other.getPartitionBackupStateList());
            result = result && getLvBackupStateList()
                    .equals(other.getLvBackupStateList());
            result = result && getBackupTaskUuid()
                    .equals(other.getBackupTaskUuid());
            return result;
        }

        @Override
        public int hashCode() {
            if (memoizedHashCode != 0) {
                return memoizedHashCode;
            }
            int hash = 41;
            hash = (19 * hash) + getDescriptorForType().hashCode();
            hash = (37 * hash) + DEVICE_UUID_KEY_FIELD_NUMBER;
            hash = (53 * hash) + getDeviceUuidKey().hashCode();
            if (getHarddiskBackupStateCount() > 0) {
                hash = (37 * hash) + HARDDISK_BACKUP_STATE_FIELD_NUMBER;
                hash = (53 * hash) + getHarddiskBackupStateList().hashCode();
            }
            if (getPartitionBackupStateCount() > 0) {
                hash = (37 * hash) + PARTITION_BACKUP_STATE_FIELD_NUMBER;
                hash = (53 * hash) + getPartitionBackupStateList().hashCode();
            }
            if (getLvBackupStateCount() > 0) {
                hash = (37 * hash) + LV_BACKUP_STATE_FIELD_NUMBER;
                hash = (53 * hash) + getLvBackupStateList().hashCode();
            }
            hash = (37 * hash) + BACKUP_TASK_UUID_FIELD_NUMBER;
            hash = (53 * hash) + getBackupTaskUuid().hashCode();
            hash = (29 * hash) + unknownFields.hashCode();
            memoizedHashCode = hash;
            return hash;
        }

        public static cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupStateReport parseFrom(
                com.google.protobuf.ByteString data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }
        public static cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupStateReport parseFrom(
                com.google.protobuf.ByteString data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }
        public static cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupStateReport parseFrom(byte[] data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }
        public static cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupStateReport parseFrom(
                byte[] data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }
        public static cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupStateReport parseFrom(java.io.InputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input);
        }
        public static cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupStateReport parseFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input, extensionRegistry);
        }
        public static cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupStateReport parseDelimitedFrom(java.io.InputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseDelimitedWithIOException(PARSER, input);
        }
        public static cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupStateReport parseDelimitedFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
        }
        public static cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupStateReport parseFrom(
                com.google.protobuf.CodedInputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input);
        }
        public static cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupStateReport parseFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input, extensionRegistry);
        }

        public Builder newBuilderForType() { return newBuilder(); }
        public static Builder newBuilder() {
            return DEFAULT_INSTANCE.toBuilder();
        }
        public static Builder newBuilder(cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupStateReport prototype) {
            return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }
        public Builder toBuilder() {
            return this == DEFAULT_INSTANCE
                    ? new Builder() : new Builder().mergeFrom(this);
        }

        @Override
        protected Builder newBuilderForType(
                BuilderParent parent) {
            Builder builder = new Builder(parent);
            return builder;
        }
        /**
         * <pre>
         *************客户端上报备份状态******************
         * </pre>
         *
         * Protobuf type {@code one2data.rbtmqmsgcli.client.BackupStateReport}
         */
        public static final class Builder extends
                com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
                // @@protoc_insertion_point(builder_implements:one2data.rbtmqmsgcli.client.BackupStateReport)
                cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupStateReportOrBuilder {
            public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
                return cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.internal_static_one2data_rbtmqmsgcli_client_BackupStateReport_descriptor;
            }

            protected FieldAccessorTable
            internalGetFieldAccessorTable() {
                return cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.internal_static_one2data_rbtmqmsgcli_client_BackupStateReport_fieldAccessorTable
                        .ensureFieldAccessorsInitialized(
                                cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupStateReport.class, cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupStateReport.Builder.class);
            }

            // Construct using cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupStateReport.newBuilder()
            private Builder() {
                maybeForceBuilderInitialization();
            }

            private Builder(
                    BuilderParent parent) {
                super(parent);
                maybeForceBuilderInitialization();
            }
            private void maybeForceBuilderInitialization() {
                if (com.google.protobuf.GeneratedMessageV3
                        .alwaysUseFieldBuilders) {
                    getHarddiskBackupStateFieldBuilder();
                    getPartitionBackupStateFieldBuilder();
                    getLvBackupStateFieldBuilder();
                }
            }
            public Builder clear() {
                super.clear();
                deviceUuidKey_ = "";

                if (harddiskBackupStateBuilder_ == null) {
                    harddiskBackupState_ = java.util.Collections.emptyList();
                    bitField0_ = (bitField0_ & ~0x00000002);
                } else {
                    harddiskBackupStateBuilder_.clear();
                }
                if (partitionBackupStateBuilder_ == null) {
                    partitionBackupState_ = java.util.Collections.emptyList();
                    bitField0_ = (bitField0_ & ~0x00000004);
                } else {
                    partitionBackupStateBuilder_.clear();
                }
                if (lvBackupStateBuilder_ == null) {
                    lvBackupState_ = java.util.Collections.emptyList();
                    bitField0_ = (bitField0_ & ~0x00000008);
                } else {
                    lvBackupStateBuilder_.clear();
                }
                backupTaskUuid_ = "";

                return this;
            }

            public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
                return cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.internal_static_one2data_rbtmqmsgcli_client_BackupStateReport_descriptor;
            }

            public cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupStateReport getDefaultInstanceForType() {
                return cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupStateReport.getDefaultInstance();
            }

            public cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupStateReport build() {
                cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupStateReport result = buildPartial();
                if (!result.isInitialized()) {
                    throw newUninitializedMessageException(result);
                }
                return result;
            }

            public cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupStateReport buildPartial() {
                cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupStateReport result = new cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupStateReport(this);
                int from_bitField0_ = bitField0_;
                int to_bitField0_ = 0;
                result.deviceUuidKey_ = deviceUuidKey_;
                if (harddiskBackupStateBuilder_ == null) {
                    if (((bitField0_ & 0x00000002) == 0x00000002)) {
                        harddiskBackupState_ = java.util.Collections.unmodifiableList(harddiskBackupState_);
                        bitField0_ = (bitField0_ & ~0x00000002);
                    }
                    result.harddiskBackupState_ = harddiskBackupState_;
                } else {
                    result.harddiskBackupState_ = harddiskBackupStateBuilder_.build();
                }
                if (partitionBackupStateBuilder_ == null) {
                    if (((bitField0_ & 0x00000004) == 0x00000004)) {
                        partitionBackupState_ = java.util.Collections.unmodifiableList(partitionBackupState_);
                        bitField0_ = (bitField0_ & ~0x00000004);
                    }
                    result.partitionBackupState_ = partitionBackupState_;
                } else {
                    result.partitionBackupState_ = partitionBackupStateBuilder_.build();
                }
                if (lvBackupStateBuilder_ == null) {
                    if (((bitField0_ & 0x00000008) == 0x00000008)) {
                        lvBackupState_ = java.util.Collections.unmodifiableList(lvBackupState_);
                        bitField0_ = (bitField0_ & ~0x00000008);
                    }
                    result.lvBackupState_ = lvBackupState_;
                } else {
                    result.lvBackupState_ = lvBackupStateBuilder_.build();
                }
                result.backupTaskUuid_ = backupTaskUuid_;
                result.bitField0_ = to_bitField0_;
                onBuilt();
                return result;
            }

            public Builder clone() {
                return (Builder) super.clone();
            }
            public Builder setField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    Object value) {
                return (Builder) super.setField(field, value);
            }
            public Builder clearField(
                    com.google.protobuf.Descriptors.FieldDescriptor field) {
                return (Builder) super.clearField(field);
            }
            public Builder clearOneof(
                    com.google.protobuf.Descriptors.OneofDescriptor oneof) {
                return (Builder) super.clearOneof(oneof);
            }
            public Builder setRepeatedField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    int index, Object value) {
                return (Builder) super.setRepeatedField(field, index, value);
            }
            public Builder addRepeatedField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    Object value) {
                return (Builder) super.addRepeatedField(field, value);
            }
            public Builder mergeFrom(com.google.protobuf.Message other) {
                if (other instanceof cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupStateReport) {
                    return mergeFrom((cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupStateReport)other);
                } else {
                    super.mergeFrom(other);
                    return this;
                }
            }

            public Builder mergeFrom(cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupStateReport other) {
                if (other == cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupStateReport.getDefaultInstance()) return this;
                if (!other.getDeviceUuidKey().isEmpty()) {
                    deviceUuidKey_ = other.deviceUuidKey_;
                    onChanged();
                }
                if (harddiskBackupStateBuilder_ == null) {
                    if (!other.harddiskBackupState_.isEmpty()) {
                        if (harddiskBackupState_.isEmpty()) {
                            harddiskBackupState_ = other.harddiskBackupState_;
                            bitField0_ = (bitField0_ & ~0x00000002);
                        } else {
                            ensureHarddiskBackupStateIsMutable();
                            harddiskBackupState_.addAll(other.harddiskBackupState_);
                        }
                        onChanged();
                    }
                } else {
                    if (!other.harddiskBackupState_.isEmpty()) {
                        if (harddiskBackupStateBuilder_.isEmpty()) {
                            harddiskBackupStateBuilder_.dispose();
                            harddiskBackupStateBuilder_ = null;
                            harddiskBackupState_ = other.harddiskBackupState_;
                            bitField0_ = (bitField0_ & ~0x00000002);
                            harddiskBackupStateBuilder_ =
                                    com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                                            getHarddiskBackupStateFieldBuilder() : null;
                        } else {
                            harddiskBackupStateBuilder_.addAllMessages(other.harddiskBackupState_);
                        }
                    }
                }
                if (partitionBackupStateBuilder_ == null) {
                    if (!other.partitionBackupState_.isEmpty()) {
                        if (partitionBackupState_.isEmpty()) {
                            partitionBackupState_ = other.partitionBackupState_;
                            bitField0_ = (bitField0_ & ~0x00000004);
                        } else {
                            ensurePartitionBackupStateIsMutable();
                            partitionBackupState_.addAll(other.partitionBackupState_);
                        }
                        onChanged();
                    }
                } else {
                    if (!other.partitionBackupState_.isEmpty()) {
                        if (partitionBackupStateBuilder_.isEmpty()) {
                            partitionBackupStateBuilder_.dispose();
                            partitionBackupStateBuilder_ = null;
                            partitionBackupState_ = other.partitionBackupState_;
                            bitField0_ = (bitField0_ & ~0x00000004);
                            partitionBackupStateBuilder_ =
                                    com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                                            getPartitionBackupStateFieldBuilder() : null;
                        } else {
                            partitionBackupStateBuilder_.addAllMessages(other.partitionBackupState_);
                        }
                    }
                }
                if (lvBackupStateBuilder_ == null) {
                    if (!other.lvBackupState_.isEmpty()) {
                        if (lvBackupState_.isEmpty()) {
                            lvBackupState_ = other.lvBackupState_;
                            bitField0_ = (bitField0_ & ~0x00000008);
                        } else {
                            ensureLvBackupStateIsMutable();
                            lvBackupState_.addAll(other.lvBackupState_);
                        }
                        onChanged();
                    }
                } else {
                    if (!other.lvBackupState_.isEmpty()) {
                        if (lvBackupStateBuilder_.isEmpty()) {
                            lvBackupStateBuilder_.dispose();
                            lvBackupStateBuilder_ = null;
                            lvBackupState_ = other.lvBackupState_;
                            bitField0_ = (bitField0_ & ~0x00000008);
                            lvBackupStateBuilder_ =
                                    com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                                            getLvBackupStateFieldBuilder() : null;
                        } else {
                            lvBackupStateBuilder_.addAllMessages(other.lvBackupState_);
                        }
                    }
                }
                if (!other.getBackupTaskUuid().isEmpty()) {
                    backupTaskUuid_ = other.backupTaskUuid_;
                    onChanged();
                }
                onChanged();
                return this;
            }

            public final boolean isInitialized() {
                return true;
            }

            public Builder mergeFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws java.io.IOException {
                cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupStateReport parsedMessage = null;
                try {
                    parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
                } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                    parsedMessage = (cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupStateReport) e.getUnfinishedMessage();
                    throw e.unwrapIOException();
                } finally {
                    if (parsedMessage != null) {
                        mergeFrom(parsedMessage);
                    }
                }
                return this;
            }
            private int bitField0_;

            private Object deviceUuidKey_ = "";
            /**
             * <pre>
             *备份Agent 内部唯一ID
             * </pre>
             *
             * <code>optional string device_uuid_key = 1;</code>
             */
            public String getDeviceUuidKey() {
                Object ref = deviceUuidKey_;
                if (!(ref instanceof String)) {
                    com.google.protobuf.ByteString bs =
                            (com.google.protobuf.ByteString) ref;
                    String s = bs.toStringUtf8();
                    deviceUuidKey_ = s;
                    return s;
                } else {
                    return (String) ref;
                }
            }
            /**
             * <pre>
             *备份Agent 内部唯一ID
             * </pre>
             *
             * <code>optional string device_uuid_key = 1;</code>
             */
            public com.google.protobuf.ByteString
            getDeviceUuidKeyBytes() {
                Object ref = deviceUuidKey_;
                if (ref instanceof String) {
                    com.google.protobuf.ByteString b =
                            com.google.protobuf.ByteString.copyFromUtf8(
                                    (String) ref);
                    deviceUuidKey_ = b;
                    return b;
                } else {
                    return (com.google.protobuf.ByteString) ref;
                }
            }
            /**
             * <pre>
             *备份Agent 内部唯一ID
             * </pre>
             *
             * <code>optional string device_uuid_key = 1;</code>
             */
            public Builder setDeviceUuidKey(
                    String value) {
                if (value == null) {
                    throw new NullPointerException();
                }

                deviceUuidKey_ = value;
                onChanged();
                return this;
            }
            /**
             * <pre>
             *备份Agent 内部唯一ID
             * </pre>
             *
             * <code>optional string device_uuid_key = 1;</code>
             */
            public Builder clearDeviceUuidKey() {

                deviceUuidKey_ = getDefaultInstance().getDeviceUuidKey();
                onChanged();
                return this;
            }
            /**
             * <pre>
             *备份Agent 内部唯一ID
             * </pre>
             *
             * <code>optional string device_uuid_key = 1;</code>
             */
            public Builder setDeviceUuidKeyBytes(
                    com.google.protobuf.ByteString value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                checkByteStringIsUtf8(value);

                deviceUuidKey_ = value;
                onChanged();
                return this;
            }

            private java.util.List<cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupStateReport.HardwareBackupState> harddiskBackupState_ =
                    java.util.Collections.emptyList();
            private void ensureHarddiskBackupStateIsMutable() {
                if (!((bitField0_ & 0x00000002) == 0x00000002)) {
                    harddiskBackupState_ = new java.util.ArrayList<cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupStateReport.HardwareBackupState>(harddiskBackupState_);
                    bitField0_ |= 0x00000002;
                }
            }

            private com.google.protobuf.RepeatedFieldBuilderV3<
                    cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupStateReport.HardwareBackupState, cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupStateReport.HardwareBackupState.Builder, cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupStateReport.HardwareBackupStateOrBuilder> harddiskBackupStateBuilder_;

            /**
             * <pre>
             *硬盘备份状态集合
             * </pre>
             *
             * <code>repeated .one2data.rbtmqmsgcli.client.BackupStateReport.HardwareBackupState harddisk_backup_state = 2;</code>
             */
            public java.util.List<cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupStateReport.HardwareBackupState> getHarddiskBackupStateList() {
                if (harddiskBackupStateBuilder_ == null) {
                    return java.util.Collections.unmodifiableList(harddiskBackupState_);
                } else {
                    return harddiskBackupStateBuilder_.getMessageList();
                }
            }
            /**
             * <pre>
             *硬盘备份状态集合
             * </pre>
             *
             * <code>repeated .one2data.rbtmqmsgcli.client.BackupStateReport.HardwareBackupState harddisk_backup_state = 2;</code>
             */
            public int getHarddiskBackupStateCount() {
                if (harddiskBackupStateBuilder_ == null) {
                    return harddiskBackupState_.size();
                } else {
                    return harddiskBackupStateBuilder_.getCount();
                }
            }
            /**
             * <pre>
             *硬盘备份状态集合
             * </pre>
             *
             * <code>repeated .one2data.rbtmqmsgcli.client.BackupStateReport.HardwareBackupState harddisk_backup_state = 2;</code>
             */
            public cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupStateReport.HardwareBackupState getHarddiskBackupState(int index) {
                if (harddiskBackupStateBuilder_ == null) {
                    return harddiskBackupState_.get(index);
                } else {
                    return harddiskBackupStateBuilder_.getMessage(index);
                }
            }
            /**
             * <pre>
             *硬盘备份状态集合
             * </pre>
             *
             * <code>repeated .one2data.rbtmqmsgcli.client.BackupStateReport.HardwareBackupState harddisk_backup_state = 2;</code>
             */
            public Builder setHarddiskBackupState(
                    int index, cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupStateReport.HardwareBackupState value) {
                if (harddiskBackupStateBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    ensureHarddiskBackupStateIsMutable();
                    harddiskBackupState_.set(index, value);
                    onChanged();
                } else {
                    harddiskBackupStateBuilder_.setMessage(index, value);
                }
                return this;
            }
            /**
             * <pre>
             *硬盘备份状态集合
             * </pre>
             *
             * <code>repeated .one2data.rbtmqmsgcli.client.BackupStateReport.HardwareBackupState harddisk_backup_state = 2;</code>
             */
            public Builder setHarddiskBackupState(
                    int index, cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupStateReport.HardwareBackupState.Builder builderForValue) {
                if (harddiskBackupStateBuilder_ == null) {
                    ensureHarddiskBackupStateIsMutable();
                    harddiskBackupState_.set(index, builderForValue.build());
                    onChanged();
                } else {
                    harddiskBackupStateBuilder_.setMessage(index, builderForValue.build());
                }
                return this;
            }
            /**
             * <pre>
             *硬盘备份状态集合
             * </pre>
             *
             * <code>repeated .one2data.rbtmqmsgcli.client.BackupStateReport.HardwareBackupState harddisk_backup_state = 2;</code>
             */
            public Builder addHarddiskBackupState(cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupStateReport.HardwareBackupState value) {
                if (harddiskBackupStateBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    ensureHarddiskBackupStateIsMutable();
                    harddiskBackupState_.add(value);
                    onChanged();
                } else {
                    harddiskBackupStateBuilder_.addMessage(value);
                }
                return this;
            }
            /**
             * <pre>
             *硬盘备份状态集合
             * </pre>
             *
             * <code>repeated .one2data.rbtmqmsgcli.client.BackupStateReport.HardwareBackupState harddisk_backup_state = 2;</code>
             */
            public Builder addHarddiskBackupState(
                    int index, cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupStateReport.HardwareBackupState value) {
                if (harddiskBackupStateBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    ensureHarddiskBackupStateIsMutable();
                    harddiskBackupState_.add(index, value);
                    onChanged();
                } else {
                    harddiskBackupStateBuilder_.addMessage(index, value);
                }
                return this;
            }
            /**
             * <pre>
             *硬盘备份状态集合
             * </pre>
             *
             * <code>repeated .one2data.rbtmqmsgcli.client.BackupStateReport.HardwareBackupState harddisk_backup_state = 2;</code>
             */
            public Builder addHarddiskBackupState(
                    cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupStateReport.HardwareBackupState.Builder builderForValue) {
                if (harddiskBackupStateBuilder_ == null) {
                    ensureHarddiskBackupStateIsMutable();
                    harddiskBackupState_.add(builderForValue.build());
                    onChanged();
                } else {
                    harddiskBackupStateBuilder_.addMessage(builderForValue.build());
                }
                return this;
            }
            /**
             * <pre>
             *硬盘备份状态集合
             * </pre>
             *
             * <code>repeated .one2data.rbtmqmsgcli.client.BackupStateReport.HardwareBackupState harddisk_backup_state = 2;</code>
             */
            public Builder addHarddiskBackupState(
                    int index, cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupStateReport.HardwareBackupState.Builder builderForValue) {
                if (harddiskBackupStateBuilder_ == null) {
                    ensureHarddiskBackupStateIsMutable();
                    harddiskBackupState_.add(index, builderForValue.build());
                    onChanged();
                } else {
                    harddiskBackupStateBuilder_.addMessage(index, builderForValue.build());
                }
                return this;
            }
            /**
             * <pre>
             *硬盘备份状态集合
             * </pre>
             *
             * <code>repeated .one2data.rbtmqmsgcli.client.BackupStateReport.HardwareBackupState harddisk_backup_state = 2;</code>
             */
            public Builder addAllHarddiskBackupState(
                    Iterable<? extends cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupStateReport.HardwareBackupState> values) {
                if (harddiskBackupStateBuilder_ == null) {
                    ensureHarddiskBackupStateIsMutable();
                    com.google.protobuf.AbstractMessageLite.Builder.addAll(
                            values, harddiskBackupState_);
                    onChanged();
                } else {
                    harddiskBackupStateBuilder_.addAllMessages(values);
                }
                return this;
            }
            /**
             * <pre>
             *硬盘备份状态集合
             * </pre>
             *
             * <code>repeated .one2data.rbtmqmsgcli.client.BackupStateReport.HardwareBackupState harddisk_backup_state = 2;</code>
             */
            public Builder clearHarddiskBackupState() {
                if (harddiskBackupStateBuilder_ == null) {
                    harddiskBackupState_ = java.util.Collections.emptyList();
                    bitField0_ = (bitField0_ & ~0x00000002);
                    onChanged();
                } else {
                    harddiskBackupStateBuilder_.clear();
                }
                return this;
            }
            /**
             * <pre>
             *硬盘备份状态集合
             * </pre>
             *
             * <code>repeated .one2data.rbtmqmsgcli.client.BackupStateReport.HardwareBackupState harddisk_backup_state = 2;</code>
             */
            public Builder removeHarddiskBackupState(int index) {
                if (harddiskBackupStateBuilder_ == null) {
                    ensureHarddiskBackupStateIsMutable();
                    harddiskBackupState_.remove(index);
                    onChanged();
                } else {
                    harddiskBackupStateBuilder_.remove(index);
                }
                return this;
            }
            /**
             * <pre>
             *硬盘备份状态集合
             * </pre>
             *
             * <code>repeated .one2data.rbtmqmsgcli.client.BackupStateReport.HardwareBackupState harddisk_backup_state = 2;</code>
             */
            public cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupStateReport.HardwareBackupState.Builder getHarddiskBackupStateBuilder(
                    int index) {
                return getHarddiskBackupStateFieldBuilder().getBuilder(index);
            }
            /**
             * <pre>
             *硬盘备份状态集合
             * </pre>
             *
             * <code>repeated .one2data.rbtmqmsgcli.client.BackupStateReport.HardwareBackupState harddisk_backup_state = 2;</code>
             */
            public cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupStateReport.HardwareBackupStateOrBuilder getHarddiskBackupStateOrBuilder(
                    int index) {
                if (harddiskBackupStateBuilder_ == null) {
                    return harddiskBackupState_.get(index);  } else {
                    return harddiskBackupStateBuilder_.getMessageOrBuilder(index);
                }
            }
            /**
             * <pre>
             *硬盘备份状态集合
             * </pre>
             *
             * <code>repeated .one2data.rbtmqmsgcli.client.BackupStateReport.HardwareBackupState harddisk_backup_state = 2;</code>
             */
            public java.util.List<? extends cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupStateReport.HardwareBackupStateOrBuilder>
            getHarddiskBackupStateOrBuilderList() {
                if (harddiskBackupStateBuilder_ != null) {
                    return harddiskBackupStateBuilder_.getMessageOrBuilderList();
                } else {
                    return java.util.Collections.unmodifiableList(harddiskBackupState_);
                }
            }
            /**
             * <pre>
             *硬盘备份状态集合
             * </pre>
             *
             * <code>repeated .one2data.rbtmqmsgcli.client.BackupStateReport.HardwareBackupState harddisk_backup_state = 2;</code>
             */
            public cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupStateReport.HardwareBackupState.Builder addHarddiskBackupStateBuilder() {
                return getHarddiskBackupStateFieldBuilder().addBuilder(
                        cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupStateReport.HardwareBackupState.getDefaultInstance());
            }
            /**
             * <pre>
             *硬盘备份状态集合
             * </pre>
             *
             * <code>repeated .one2data.rbtmqmsgcli.client.BackupStateReport.HardwareBackupState harddisk_backup_state = 2;</code>
             */
            public cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupStateReport.HardwareBackupState.Builder addHarddiskBackupStateBuilder(
                    int index) {
                return getHarddiskBackupStateFieldBuilder().addBuilder(
                        index, cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupStateReport.HardwareBackupState.getDefaultInstance());
            }
            /**
             * <pre>
             *硬盘备份状态集合
             * </pre>
             *
             * <code>repeated .one2data.rbtmqmsgcli.client.BackupStateReport.HardwareBackupState harddisk_backup_state = 2;</code>
             */
            public java.util.List<cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupStateReport.HardwareBackupState.Builder>
            getHarddiskBackupStateBuilderList() {
                return getHarddiskBackupStateFieldBuilder().getBuilderList();
            }
            private com.google.protobuf.RepeatedFieldBuilderV3<
                    cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupStateReport.HardwareBackupState, cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupStateReport.HardwareBackupState.Builder, cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupStateReport.HardwareBackupStateOrBuilder>
            getHarddiskBackupStateFieldBuilder() {
                if (harddiskBackupStateBuilder_ == null) {
                    harddiskBackupStateBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
                            cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupStateReport.HardwareBackupState, cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupStateReport.HardwareBackupState.Builder, cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupStateReport.HardwareBackupStateOrBuilder>(
                            harddiskBackupState_,
                            ((bitField0_ & 0x00000002) == 0x00000002),
                            getParentForChildren(),
                            isClean());
                    harddiskBackupState_ = null;
                }
                return harddiskBackupStateBuilder_;
            }

            private java.util.List<cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupStateReport.HardwareBackupState> partitionBackupState_ =
                    java.util.Collections.emptyList();
            private void ensurePartitionBackupStateIsMutable() {
                if (!((bitField0_ & 0x00000004) == 0x00000004)) {
                    partitionBackupState_ = new java.util.ArrayList<cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupStateReport.HardwareBackupState>(partitionBackupState_);
                    bitField0_ |= 0x00000004;
                }
            }

            private com.google.protobuf.RepeatedFieldBuilderV3<
                    cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupStateReport.HardwareBackupState, cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupStateReport.HardwareBackupState.Builder, cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupStateReport.HardwareBackupStateOrBuilder> partitionBackupStateBuilder_;

            /**
             * <pre>
             *分区备份状态集合
             * </pre>
             *
             * <code>repeated .one2data.rbtmqmsgcli.client.BackupStateReport.HardwareBackupState partition_backup_state = 3;</code>
             */
            public java.util.List<cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupStateReport.HardwareBackupState> getPartitionBackupStateList() {
                if (partitionBackupStateBuilder_ == null) {
                    return java.util.Collections.unmodifiableList(partitionBackupState_);
                } else {
                    return partitionBackupStateBuilder_.getMessageList();
                }
            }
            /**
             * <pre>
             *分区备份状态集合
             * </pre>
             *
             * <code>repeated .one2data.rbtmqmsgcli.client.BackupStateReport.HardwareBackupState partition_backup_state = 3;</code>
             */
            public int getPartitionBackupStateCount() {
                if (partitionBackupStateBuilder_ == null) {
                    return partitionBackupState_.size();
                } else {
                    return partitionBackupStateBuilder_.getCount();
                }
            }
            /**
             * <pre>
             *分区备份状态集合
             * </pre>
             *
             * <code>repeated .one2data.rbtmqmsgcli.client.BackupStateReport.HardwareBackupState partition_backup_state = 3;</code>
             */
            public cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupStateReport.HardwareBackupState getPartitionBackupState(int index) {
                if (partitionBackupStateBuilder_ == null) {
                    return partitionBackupState_.get(index);
                } else {
                    return partitionBackupStateBuilder_.getMessage(index);
                }
            }
            /**
             * <pre>
             *分区备份状态集合
             * </pre>
             *
             * <code>repeated .one2data.rbtmqmsgcli.client.BackupStateReport.HardwareBackupState partition_backup_state = 3;</code>
             */
            public Builder setPartitionBackupState(
                    int index, cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupStateReport.HardwareBackupState value) {
                if (partitionBackupStateBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    ensurePartitionBackupStateIsMutable();
                    partitionBackupState_.set(index, value);
                    onChanged();
                } else {
                    partitionBackupStateBuilder_.setMessage(index, value);
                }
                return this;
            }
            /**
             * <pre>
             *分区备份状态集合
             * </pre>
             *
             * <code>repeated .one2data.rbtmqmsgcli.client.BackupStateReport.HardwareBackupState partition_backup_state = 3;</code>
             */
            public Builder setPartitionBackupState(
                    int index, cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupStateReport.HardwareBackupState.Builder builderForValue) {
                if (partitionBackupStateBuilder_ == null) {
                    ensurePartitionBackupStateIsMutable();
                    partitionBackupState_.set(index, builderForValue.build());
                    onChanged();
                } else {
                    partitionBackupStateBuilder_.setMessage(index, builderForValue.build());
                }
                return this;
            }
            /**
             * <pre>
             *分区备份状态集合
             * </pre>
             *
             * <code>repeated .one2data.rbtmqmsgcli.client.BackupStateReport.HardwareBackupState partition_backup_state = 3;</code>
             */
            public Builder addPartitionBackupState(cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupStateReport.HardwareBackupState value) {
                if (partitionBackupStateBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    ensurePartitionBackupStateIsMutable();
                    partitionBackupState_.add(value);
                    onChanged();
                } else {
                    partitionBackupStateBuilder_.addMessage(value);
                }
                return this;
            }
            /**
             * <pre>
             *分区备份状态集合
             * </pre>
             *
             * <code>repeated .one2data.rbtmqmsgcli.client.BackupStateReport.HardwareBackupState partition_backup_state = 3;</code>
             */
            public Builder addPartitionBackupState(
                    int index, cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupStateReport.HardwareBackupState value) {
                if (partitionBackupStateBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    ensurePartitionBackupStateIsMutable();
                    partitionBackupState_.add(index, value);
                    onChanged();
                } else {
                    partitionBackupStateBuilder_.addMessage(index, value);
                }
                return this;
            }
            /**
             * <pre>
             *分区备份状态集合
             * </pre>
             *
             * <code>repeated .one2data.rbtmqmsgcli.client.BackupStateReport.HardwareBackupState partition_backup_state = 3;</code>
             */
            public Builder addPartitionBackupState(
                    cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupStateReport.HardwareBackupState.Builder builderForValue) {
                if (partitionBackupStateBuilder_ == null) {
                    ensurePartitionBackupStateIsMutable();
                    partitionBackupState_.add(builderForValue.build());
                    onChanged();
                } else {
                    partitionBackupStateBuilder_.addMessage(builderForValue.build());
                }
                return this;
            }
            /**
             * <pre>
             *分区备份状态集合
             * </pre>
             *
             * <code>repeated .one2data.rbtmqmsgcli.client.BackupStateReport.HardwareBackupState partition_backup_state = 3;</code>
             */
            public Builder addPartitionBackupState(
                    int index, cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupStateReport.HardwareBackupState.Builder builderForValue) {
                if (partitionBackupStateBuilder_ == null) {
                    ensurePartitionBackupStateIsMutable();
                    partitionBackupState_.add(index, builderForValue.build());
                    onChanged();
                } else {
                    partitionBackupStateBuilder_.addMessage(index, builderForValue.build());
                }
                return this;
            }
            /**
             * <pre>
             *分区备份状态集合
             * </pre>
             *
             * <code>repeated .one2data.rbtmqmsgcli.client.BackupStateReport.HardwareBackupState partition_backup_state = 3;</code>
             */
            public Builder addAllPartitionBackupState(
                    Iterable<? extends cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupStateReport.HardwareBackupState> values) {
                if (partitionBackupStateBuilder_ == null) {
                    ensurePartitionBackupStateIsMutable();
                    com.google.protobuf.AbstractMessageLite.Builder.addAll(
                            values, partitionBackupState_);
                    onChanged();
                } else {
                    partitionBackupStateBuilder_.addAllMessages(values);
                }
                return this;
            }
            /**
             * <pre>
             *分区备份状态集合
             * </pre>
             *
             * <code>repeated .one2data.rbtmqmsgcli.client.BackupStateReport.HardwareBackupState partition_backup_state = 3;</code>
             */
            public Builder clearPartitionBackupState() {
                if (partitionBackupStateBuilder_ == null) {
                    partitionBackupState_ = java.util.Collections.emptyList();
                    bitField0_ = (bitField0_ & ~0x00000004);
                    onChanged();
                } else {
                    partitionBackupStateBuilder_.clear();
                }
                return this;
            }
            /**
             * <pre>
             *分区备份状态集合
             * </pre>
             *
             * <code>repeated .one2data.rbtmqmsgcli.client.BackupStateReport.HardwareBackupState partition_backup_state = 3;</code>
             */
            public Builder removePartitionBackupState(int index) {
                if (partitionBackupStateBuilder_ == null) {
                    ensurePartitionBackupStateIsMutable();
                    partitionBackupState_.remove(index);
                    onChanged();
                } else {
                    partitionBackupStateBuilder_.remove(index);
                }
                return this;
            }
            /**
             * <pre>
             *分区备份状态集合
             * </pre>
             *
             * <code>repeated .one2data.rbtmqmsgcli.client.BackupStateReport.HardwareBackupState partition_backup_state = 3;</code>
             */
            public cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupStateReport.HardwareBackupState.Builder getPartitionBackupStateBuilder(
                    int index) {
                return getPartitionBackupStateFieldBuilder().getBuilder(index);
            }
            /**
             * <pre>
             *分区备份状态集合
             * </pre>
             *
             * <code>repeated .one2data.rbtmqmsgcli.client.BackupStateReport.HardwareBackupState partition_backup_state = 3;</code>
             */
            public cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupStateReport.HardwareBackupStateOrBuilder getPartitionBackupStateOrBuilder(
                    int index) {
                if (partitionBackupStateBuilder_ == null) {
                    return partitionBackupState_.get(index);  } else {
                    return partitionBackupStateBuilder_.getMessageOrBuilder(index);
                }
            }
            /**
             * <pre>
             *分区备份状态集合
             * </pre>
             *
             * <code>repeated .one2data.rbtmqmsgcli.client.BackupStateReport.HardwareBackupState partition_backup_state = 3;</code>
             */
            public java.util.List<? extends cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupStateReport.HardwareBackupStateOrBuilder>
            getPartitionBackupStateOrBuilderList() {
                if (partitionBackupStateBuilder_ != null) {
                    return partitionBackupStateBuilder_.getMessageOrBuilderList();
                } else {
                    return java.util.Collections.unmodifiableList(partitionBackupState_);
                }
            }
            /**
             * <pre>
             *分区备份状态集合
             * </pre>
             *
             * <code>repeated .one2data.rbtmqmsgcli.client.BackupStateReport.HardwareBackupState partition_backup_state = 3;</code>
             */
            public cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupStateReport.HardwareBackupState.Builder addPartitionBackupStateBuilder() {
                return getPartitionBackupStateFieldBuilder().addBuilder(
                        cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupStateReport.HardwareBackupState.getDefaultInstance());
            }
            /**
             * <pre>
             *分区备份状态集合
             * </pre>
             *
             * <code>repeated .one2data.rbtmqmsgcli.client.BackupStateReport.HardwareBackupState partition_backup_state = 3;</code>
             */
            public cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupStateReport.HardwareBackupState.Builder addPartitionBackupStateBuilder(
                    int index) {
                return getPartitionBackupStateFieldBuilder().addBuilder(
                        index, cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupStateReport.HardwareBackupState.getDefaultInstance());
            }
            /**
             * <pre>
             *分区备份状态集合
             * </pre>
             *
             * <code>repeated .one2data.rbtmqmsgcli.client.BackupStateReport.HardwareBackupState partition_backup_state = 3;</code>
             */
            public java.util.List<cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupStateReport.HardwareBackupState.Builder>
            getPartitionBackupStateBuilderList() {
                return getPartitionBackupStateFieldBuilder().getBuilderList();
            }
            private com.google.protobuf.RepeatedFieldBuilderV3<
                    cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupStateReport.HardwareBackupState, cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupStateReport.HardwareBackupState.Builder, cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupStateReport.HardwareBackupStateOrBuilder>
            getPartitionBackupStateFieldBuilder() {
                if (partitionBackupStateBuilder_ == null) {
                    partitionBackupStateBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
                            cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupStateReport.HardwareBackupState, cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupStateReport.HardwareBackupState.Builder, cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupStateReport.HardwareBackupStateOrBuilder>(
                            partitionBackupState_,
                            ((bitField0_ & 0x00000004) == 0x00000004),
                            getParentForChildren(),
                            isClean());
                    partitionBackupState_ = null;
                }
                return partitionBackupStateBuilder_;
            }

            private java.util.List<cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupStateReport.HardwareBackupState> lvBackupState_ =
                    java.util.Collections.emptyList();
            private void ensureLvBackupStateIsMutable() {
                if (!((bitField0_ & 0x00000008) == 0x00000008)) {
                    lvBackupState_ = new java.util.ArrayList<cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupStateReport.HardwareBackupState>(lvBackupState_);
                    bitField0_ |= 0x00000008;
                }
            }

            private com.google.protobuf.RepeatedFieldBuilderV3<
                    cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupStateReport.HardwareBackupState, cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupStateReport.HardwareBackupState.Builder, cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupStateReport.HardwareBackupStateOrBuilder> lvBackupStateBuilder_;

            /**
             * <pre>
             *逻辑卷备份状态集合
             * </pre>
             *
             * <code>repeated .one2data.rbtmqmsgcli.client.BackupStateReport.HardwareBackupState lv_backup_state = 4;</code>
             */
            public java.util.List<cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupStateReport.HardwareBackupState> getLvBackupStateList() {
                if (lvBackupStateBuilder_ == null) {
                    return java.util.Collections.unmodifiableList(lvBackupState_);
                } else {
                    return lvBackupStateBuilder_.getMessageList();
                }
            }
            /**
             * <pre>
             *逻辑卷备份状态集合
             * </pre>
             *
             * <code>repeated .one2data.rbtmqmsgcli.client.BackupStateReport.HardwareBackupState lv_backup_state = 4;</code>
             */
            public int getLvBackupStateCount() {
                if (lvBackupStateBuilder_ == null) {
                    return lvBackupState_.size();
                } else {
                    return lvBackupStateBuilder_.getCount();
                }
            }
            /**
             * <pre>
             *逻辑卷备份状态集合
             * </pre>
             *
             * <code>repeated .one2data.rbtmqmsgcli.client.BackupStateReport.HardwareBackupState lv_backup_state = 4;</code>
             */
            public cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupStateReport.HardwareBackupState getLvBackupState(int index) {
                if (lvBackupStateBuilder_ == null) {
                    return lvBackupState_.get(index);
                } else {
                    return lvBackupStateBuilder_.getMessage(index);
                }
            }
            /**
             * <pre>
             *逻辑卷备份状态集合
             * </pre>
             *
             * <code>repeated .one2data.rbtmqmsgcli.client.BackupStateReport.HardwareBackupState lv_backup_state = 4;</code>
             */
            public Builder setLvBackupState(
                    int index, cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupStateReport.HardwareBackupState value) {
                if (lvBackupStateBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    ensureLvBackupStateIsMutable();
                    lvBackupState_.set(index, value);
                    onChanged();
                } else {
                    lvBackupStateBuilder_.setMessage(index, value);
                }
                return this;
            }
            /**
             * <pre>
             *逻辑卷备份状态集合
             * </pre>
             *
             * <code>repeated .one2data.rbtmqmsgcli.client.BackupStateReport.HardwareBackupState lv_backup_state = 4;</code>
             */
            public Builder setLvBackupState(
                    int index, cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupStateReport.HardwareBackupState.Builder builderForValue) {
                if (lvBackupStateBuilder_ == null) {
                    ensureLvBackupStateIsMutable();
                    lvBackupState_.set(index, builderForValue.build());
                    onChanged();
                } else {
                    lvBackupStateBuilder_.setMessage(index, builderForValue.build());
                }
                return this;
            }
            /**
             * <pre>
             *逻辑卷备份状态集合
             * </pre>
             *
             * <code>repeated .one2data.rbtmqmsgcli.client.BackupStateReport.HardwareBackupState lv_backup_state = 4;</code>
             */
            public Builder addLvBackupState(cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupStateReport.HardwareBackupState value) {
                if (lvBackupStateBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    ensureLvBackupStateIsMutable();
                    lvBackupState_.add(value);
                    onChanged();
                } else {
                    lvBackupStateBuilder_.addMessage(value);
                }
                return this;
            }
            /**
             * <pre>
             *逻辑卷备份状态集合
             * </pre>
             *
             * <code>repeated .one2data.rbtmqmsgcli.client.BackupStateReport.HardwareBackupState lv_backup_state = 4;</code>
             */
            public Builder addLvBackupState(
                    int index, cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupStateReport.HardwareBackupState value) {
                if (lvBackupStateBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    ensureLvBackupStateIsMutable();
                    lvBackupState_.add(index, value);
                    onChanged();
                } else {
                    lvBackupStateBuilder_.addMessage(index, value);
                }
                return this;
            }
            /**
             * <pre>
             *逻辑卷备份状态集合
             * </pre>
             *
             * <code>repeated .one2data.rbtmqmsgcli.client.BackupStateReport.HardwareBackupState lv_backup_state = 4;</code>
             */
            public Builder addLvBackupState(
                    cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupStateReport.HardwareBackupState.Builder builderForValue) {
                if (lvBackupStateBuilder_ == null) {
                    ensureLvBackupStateIsMutable();
                    lvBackupState_.add(builderForValue.build());
                    onChanged();
                } else {
                    lvBackupStateBuilder_.addMessage(builderForValue.build());
                }
                return this;
            }
            /**
             * <pre>
             *逻辑卷备份状态集合
             * </pre>
             *
             * <code>repeated .one2data.rbtmqmsgcli.client.BackupStateReport.HardwareBackupState lv_backup_state = 4;</code>
             */
            public Builder addLvBackupState(
                    int index, cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupStateReport.HardwareBackupState.Builder builderForValue) {
                if (lvBackupStateBuilder_ == null) {
                    ensureLvBackupStateIsMutable();
                    lvBackupState_.add(index, builderForValue.build());
                    onChanged();
                } else {
                    lvBackupStateBuilder_.addMessage(index, builderForValue.build());
                }
                return this;
            }
            /**
             * <pre>
             *逻辑卷备份状态集合
             * </pre>
             *
             * <code>repeated .one2data.rbtmqmsgcli.client.BackupStateReport.HardwareBackupState lv_backup_state = 4;</code>
             */
            public Builder addAllLvBackupState(
                    Iterable<? extends cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupStateReport.HardwareBackupState> values) {
                if (lvBackupStateBuilder_ == null) {
                    ensureLvBackupStateIsMutable();
                    com.google.protobuf.AbstractMessageLite.Builder.addAll(
                            values, lvBackupState_);
                    onChanged();
                } else {
                    lvBackupStateBuilder_.addAllMessages(values);
                }
                return this;
            }
            /**
             * <pre>
             *逻辑卷备份状态集合
             * </pre>
             *
             * <code>repeated .one2data.rbtmqmsgcli.client.BackupStateReport.HardwareBackupState lv_backup_state = 4;</code>
             */
            public Builder clearLvBackupState() {
                if (lvBackupStateBuilder_ == null) {
                    lvBackupState_ = java.util.Collections.emptyList();
                    bitField0_ = (bitField0_ & ~0x00000008);
                    onChanged();
                } else {
                    lvBackupStateBuilder_.clear();
                }
                return this;
            }
            /**
             * <pre>
             *逻辑卷备份状态集合
             * </pre>
             *
             * <code>repeated .one2data.rbtmqmsgcli.client.BackupStateReport.HardwareBackupState lv_backup_state = 4;</code>
             */
            public Builder removeLvBackupState(int index) {
                if (lvBackupStateBuilder_ == null) {
                    ensureLvBackupStateIsMutable();
                    lvBackupState_.remove(index);
                    onChanged();
                } else {
                    lvBackupStateBuilder_.remove(index);
                }
                return this;
            }
            /**
             * <pre>
             *逻辑卷备份状态集合
             * </pre>
             *
             * <code>repeated .one2data.rbtmqmsgcli.client.BackupStateReport.HardwareBackupState lv_backup_state = 4;</code>
             */
            public cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupStateReport.HardwareBackupState.Builder getLvBackupStateBuilder(
                    int index) {
                return getLvBackupStateFieldBuilder().getBuilder(index);
            }
            /**
             * <pre>
             *逻辑卷备份状态集合
             * </pre>
             *
             * <code>repeated .one2data.rbtmqmsgcli.client.BackupStateReport.HardwareBackupState lv_backup_state = 4;</code>
             */
            public cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupStateReport.HardwareBackupStateOrBuilder getLvBackupStateOrBuilder(
                    int index) {
                if (lvBackupStateBuilder_ == null) {
                    return lvBackupState_.get(index);  } else {
                    return lvBackupStateBuilder_.getMessageOrBuilder(index);
                }
            }
            /**
             * <pre>
             *逻辑卷备份状态集合
             * </pre>
             *
             * <code>repeated .one2data.rbtmqmsgcli.client.BackupStateReport.HardwareBackupState lv_backup_state = 4;</code>
             */
            public java.util.List<? extends cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupStateReport.HardwareBackupStateOrBuilder>
            getLvBackupStateOrBuilderList() {
                if (lvBackupStateBuilder_ != null) {
                    return lvBackupStateBuilder_.getMessageOrBuilderList();
                } else {
                    return java.util.Collections.unmodifiableList(lvBackupState_);
                }
            }
            /**
             * <pre>
             *逻辑卷备份状态集合
             * </pre>
             *
             * <code>repeated .one2data.rbtmqmsgcli.client.BackupStateReport.HardwareBackupState lv_backup_state = 4;</code>
             */
            public cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupStateReport.HardwareBackupState.Builder addLvBackupStateBuilder() {
                return getLvBackupStateFieldBuilder().addBuilder(
                        cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupStateReport.HardwareBackupState.getDefaultInstance());
            }
            /**
             * <pre>
             *逻辑卷备份状态集合
             * </pre>
             *
             * <code>repeated .one2data.rbtmqmsgcli.client.BackupStateReport.HardwareBackupState lv_backup_state = 4;</code>
             */
            public cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupStateReport.HardwareBackupState.Builder addLvBackupStateBuilder(
                    int index) {
                return getLvBackupStateFieldBuilder().addBuilder(
                        index, cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupStateReport.HardwareBackupState.getDefaultInstance());
            }
            /**
             * <pre>
             *逻辑卷备份状态集合
             * </pre>
             *
             * <code>repeated .one2data.rbtmqmsgcli.client.BackupStateReport.HardwareBackupState lv_backup_state = 4;</code>
             */
            public java.util.List<cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupStateReport.HardwareBackupState.Builder>
            getLvBackupStateBuilderList() {
                return getLvBackupStateFieldBuilder().getBuilderList();
            }
            private com.google.protobuf.RepeatedFieldBuilderV3<
                    cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupStateReport.HardwareBackupState, cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupStateReport.HardwareBackupState.Builder, cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupStateReport.HardwareBackupStateOrBuilder>
            getLvBackupStateFieldBuilder() {
                if (lvBackupStateBuilder_ == null) {
                    lvBackupStateBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
                            cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupStateReport.HardwareBackupState, cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupStateReport.HardwareBackupState.Builder, cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupStateReport.HardwareBackupStateOrBuilder>(
                            lvBackupState_,
                            ((bitField0_ & 0x00000008) == 0x00000008),
                            getParentForChildren(),
                            isClean());
                    lvBackupState_ = null;
                }
                return lvBackupStateBuilder_;
            }

            private Object backupTaskUuid_ = "";
            /**
             * <pre>
             *备份任务唯一ID
             * </pre>
             *
             * <code>optional string backup_task_uuid = 5;</code>
             */
            public String getBackupTaskUuid() {
                Object ref = backupTaskUuid_;
                if (!(ref instanceof String)) {
                    com.google.protobuf.ByteString bs =
                            (com.google.protobuf.ByteString) ref;
                    String s = bs.toStringUtf8();
                    backupTaskUuid_ = s;
                    return s;
                } else {
                    return (String) ref;
                }
            }
            /**
             * <pre>
             *备份任务唯一ID
             * </pre>
             *
             * <code>optional string backup_task_uuid = 5;</code>
             */
            public com.google.protobuf.ByteString
            getBackupTaskUuidBytes() {
                Object ref = backupTaskUuid_;
                if (ref instanceof String) {
                    com.google.protobuf.ByteString b =
                            com.google.protobuf.ByteString.copyFromUtf8(
                                    (String) ref);
                    backupTaskUuid_ = b;
                    return b;
                } else {
                    return (com.google.protobuf.ByteString) ref;
                }
            }
            /**
             * <pre>
             *备份任务唯一ID
             * </pre>
             *
             * <code>optional string backup_task_uuid = 5;</code>
             */
            public Builder setBackupTaskUuid(
                    String value) {
                if (value == null) {
                    throw new NullPointerException();
                }

                backupTaskUuid_ = value;
                onChanged();
                return this;
            }
            /**
             * <pre>
             *备份任务唯一ID
             * </pre>
             *
             * <code>optional string backup_task_uuid = 5;</code>
             */
            public Builder clearBackupTaskUuid() {

                backupTaskUuid_ = getDefaultInstance().getBackupTaskUuid();
                onChanged();
                return this;
            }
            /**
             * <pre>
             *备份任务唯一ID
             * </pre>
             *
             * <code>optional string backup_task_uuid = 5;</code>
             */
            public Builder setBackupTaskUuidBytes(
                    com.google.protobuf.ByteString value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                checkByteStringIsUtf8(value);

                backupTaskUuid_ = value;
                onChanged();
                return this;
            }
            public final Builder setUnknownFields(
                    final com.google.protobuf.UnknownFieldSet unknownFields) {
                return this;
            }

            public final Builder mergeUnknownFields(
                    final com.google.protobuf.UnknownFieldSet unknownFields) {
                return this;
            }


            // @@protoc_insertion_point(builder_scope:one2data.rbtmqmsgcli.client.BackupStateReport)
        }

        // @@protoc_insertion_point(class_scope:one2data.rbtmqmsgcli.client.BackupStateReport)
        private static final cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupStateReport DEFAULT_INSTANCE;
        static {
            DEFAULT_INSTANCE = new cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupStateReport();
        }

        public static cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupStateReport getDefaultInstance() {
            return DEFAULT_INSTANCE;
        }

        private static final com.google.protobuf.Parser<BackupStateReport>
                PARSER = new com.google.protobuf.AbstractParser<BackupStateReport>() {
            public BackupStateReport parsePartialFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws com.google.protobuf.InvalidProtocolBufferException {
                return new BackupStateReport(input, extensionRegistry);
            }
        };

        public static com.google.protobuf.Parser<BackupStateReport> parser() {
            return PARSER;
        }

        @Override
        public com.google.protobuf.Parser<BackupStateReport> getParserForType() {
            return PARSER;
        }

        public cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupStateReport getDefaultInstanceForType() {
            return DEFAULT_INSTANCE;
        }

    }

    public interface BackupProgressOrBuilder extends
            // @@protoc_insertion_point(interface_extends:one2data.rbtmqmsgcli.client.BackupProgress)
            com.google.protobuf.MessageOrBuilder {

        /**
         * <pre>
         *备份任务唯一ID
         * </pre>
         *
         * <code>optional string backup_task_uuid = 1;</code>
         */
        String getBackupTaskUuid();
        /**
         * <pre>
         *备份任务唯一ID
         * </pre>
         *
         * <code>optional string backup_task_uuid = 1;</code>
         */
        com.google.protobuf.ByteString
        getBackupTaskUuidBytes();

        /**
         * <pre>
         *备份Agent 内部唯一ID,用于表示设备
         * </pre>
         *
         * <code>optional string device_uuid_key = 2;</code>
         */
        String getDeviceUuidKey();
        /**
         * <pre>
         *备份Agent 内部唯一ID,用于表示设备
         * </pre>
         *
         * <code>optional string device_uuid_key = 2;</code>
         */
        com.google.protobuf.ByteString
        getDeviceUuidKeyBytes();

        /**
         * <pre>
         *磁盘备份进度
         * </pre>
         *
         * <code>repeated .one2data.rbtmqmsgcli.client.BackupProgress.HardwareBackupProgress disk_backup_progress = 3;</code>
         */
        java.util.List<cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupProgress.HardwareBackupProgress>
        getDiskBackupProgressList();
        /**
         * <pre>
         *磁盘备份进度
         * </pre>
         *
         * <code>repeated .one2data.rbtmqmsgcli.client.BackupProgress.HardwareBackupProgress disk_backup_progress = 3;</code>
         */
        cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupProgress.HardwareBackupProgress getDiskBackupProgress(int index);
        /**
         * <pre>
         *磁盘备份进度
         * </pre>
         *
         * <code>repeated .one2data.rbtmqmsgcli.client.BackupProgress.HardwareBackupProgress disk_backup_progress = 3;</code>
         */
        int getDiskBackupProgressCount();
        /**
         * <pre>
         *磁盘备份进度
         * </pre>
         *
         * <code>repeated .one2data.rbtmqmsgcli.client.BackupProgress.HardwareBackupProgress disk_backup_progress = 3;</code>
         */
        java.util.List<? extends cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupProgress.HardwareBackupProgressOrBuilder>
        getDiskBackupProgressOrBuilderList();
        /**
         * <pre>
         *磁盘备份进度
         * </pre>
         *
         * <code>repeated .one2data.rbtmqmsgcli.client.BackupProgress.HardwareBackupProgress disk_backup_progress = 3;</code>
         */
        cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupProgress.HardwareBackupProgressOrBuilder getDiskBackupProgressOrBuilder(
                int index);

        /**
         * <pre>
         *分区备份进度
         * </pre>
         *
         * <code>repeated .one2data.rbtmqmsgcli.client.BackupProgress.HardwareBackupProgress partition_backup_progress = 4;</code>
         */
        java.util.List<cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupProgress.HardwareBackupProgress>
        getPartitionBackupProgressList();
        /**
         * <pre>
         *分区备份进度
         * </pre>
         *
         * <code>repeated .one2data.rbtmqmsgcli.client.BackupProgress.HardwareBackupProgress partition_backup_progress = 4;</code>
         */
        cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupProgress.HardwareBackupProgress getPartitionBackupProgress(int index);
        /**
         * <pre>
         *分区备份进度
         * </pre>
         *
         * <code>repeated .one2data.rbtmqmsgcli.client.BackupProgress.HardwareBackupProgress partition_backup_progress = 4;</code>
         */
        int getPartitionBackupProgressCount();
        /**
         * <pre>
         *分区备份进度
         * </pre>
         *
         * <code>repeated .one2data.rbtmqmsgcli.client.BackupProgress.HardwareBackupProgress partition_backup_progress = 4;</code>
         */
        java.util.List<? extends cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupProgress.HardwareBackupProgressOrBuilder>
        getPartitionBackupProgressOrBuilderList();
        /**
         * <pre>
         *分区备份进度
         * </pre>
         *
         * <code>repeated .one2data.rbtmqmsgcli.client.BackupProgress.HardwareBackupProgress partition_backup_progress = 4;</code>
         */
        cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupProgress.HardwareBackupProgressOrBuilder getPartitionBackupProgressOrBuilder(
                int index);

        /**
         * <pre>
         *逻辑卷备份进度
         * </pre>
         *
         * <code>repeated .one2data.rbtmqmsgcli.client.BackupProgress.HardwareBackupProgress lv_backup_progress = 5;</code>
         */
        java.util.List<cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupProgress.HardwareBackupProgress>
        getLvBackupProgressList();
        /**
         * <pre>
         *逻辑卷备份进度
         * </pre>
         *
         * <code>repeated .one2data.rbtmqmsgcli.client.BackupProgress.HardwareBackupProgress lv_backup_progress = 5;</code>
         */
        cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupProgress.HardwareBackupProgress getLvBackupProgress(int index);
        /**
         * <pre>
         *逻辑卷备份进度
         * </pre>
         *
         * <code>repeated .one2data.rbtmqmsgcli.client.BackupProgress.HardwareBackupProgress lv_backup_progress = 5;</code>
         */
        int getLvBackupProgressCount();
        /**
         * <pre>
         *逻辑卷备份进度
         * </pre>
         *
         * <code>repeated .one2data.rbtmqmsgcli.client.BackupProgress.HardwareBackupProgress lv_backup_progress = 5;</code>
         */
        java.util.List<? extends cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupProgress.HardwareBackupProgressOrBuilder>
        getLvBackupProgressOrBuilderList();
        /**
         * <pre>
         *逻辑卷备份进度
         * </pre>
         *
         * <code>repeated .one2data.rbtmqmsgcli.client.BackupProgress.HardwareBackupProgress lv_backup_progress = 5;</code>
         */
        cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupProgress.HardwareBackupProgressOrBuilder getLvBackupProgressOrBuilder(
                int index);

        /**
         * <pre>
         *备份任务总进度
         * </pre>
         *
         * <code>optional double total_progress = 6;</code>
         */
        double getTotalProgress();

        /**
         * <pre>
         *备份网速，即每秒通过网络发出的bit数
         * </pre>
         *
         * <code>optional int64 total_net_speed_bit = 7;</code>
         */
        long getTotalNetSpeedBit();

        /**
         * <pre>
         *备份磁盘速率，即每秒从磁盘读取的bit数
         * </pre>
         *
         * <code>optional int64 total_disk_speed_bit = 8;</code>
         */
        long getTotalDiskSpeedBit();
    }
    /**
     * <pre>
     *************客户端上报备份进度******************
     * </pre>
     *
     * Protobuf type {@code one2data.rbtmqmsgcli.client.BackupProgress}
     */
    public  static final class BackupProgress extends
            com.google.protobuf.GeneratedMessageV3 implements
            // @@protoc_insertion_point(message_implements:one2data.rbtmqmsgcli.client.BackupProgress)
            BackupProgressOrBuilder {
        // Use BackupProgress.newBuilder() to construct.
        private BackupProgress(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
            super(builder);
        }
        private BackupProgress() {
            backupTaskUuid_ = "";
            deviceUuidKey_ = "";
            diskBackupProgress_ = java.util.Collections.emptyList();
            partitionBackupProgress_ = java.util.Collections.emptyList();
            lvBackupProgress_ = java.util.Collections.emptyList();
            totalProgress_ = 0D;
            totalNetSpeedBit_ = 0L;
            totalDiskSpeedBit_ = 0L;
        }

        @Override
        public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
            return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
        }
        private BackupProgress(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            this();
            int mutable_bitField0_ = 0;
            try {
                boolean done = false;
                while (!done) {
                    int tag = input.readTag();
                    switch (tag) {
                        case 0:
                            done = true;
                            break;
                        default: {
                            if (!input.skipField(tag)) {
                                done = true;
                            }
                            break;
                        }
                        case 10: {
                            String s = input.readStringRequireUtf8();

                            backupTaskUuid_ = s;
                            break;
                        }
                        case 18: {
                            String s = input.readStringRequireUtf8();

                            deviceUuidKey_ = s;
                            break;
                        }
                        case 26: {
                            if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                                diskBackupProgress_ = new java.util.ArrayList<cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupProgress.HardwareBackupProgress>();
                                mutable_bitField0_ |= 0x00000004;
                            }
                            diskBackupProgress_.add(
                                    input.readMessage(cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupProgress.HardwareBackupProgress.parser(), extensionRegistry));
                            break;
                        }
                        case 34: {
                            if (!((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
                                partitionBackupProgress_ = new java.util.ArrayList<cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupProgress.HardwareBackupProgress>();
                                mutable_bitField0_ |= 0x00000008;
                            }
                            partitionBackupProgress_.add(
                                    input.readMessage(cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupProgress.HardwareBackupProgress.parser(), extensionRegistry));
                            break;
                        }
                        case 42: {
                            if (!((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
                                lvBackupProgress_ = new java.util.ArrayList<cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupProgress.HardwareBackupProgress>();
                                mutable_bitField0_ |= 0x00000010;
                            }
                            lvBackupProgress_.add(
                                    input.readMessage(cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupProgress.HardwareBackupProgress.parser(), extensionRegistry));
                            break;
                        }
                        case 49: {

                            totalProgress_ = input.readDouble();
                            break;
                        }
                        case 56: {

                            totalNetSpeedBit_ = input.readInt64();
                            break;
                        }
                        case 64: {

                            totalDiskSpeedBit_ = input.readInt64();
                            break;
                        }
                    }
                }
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(this);
            } catch (java.io.IOException e) {
                throw new com.google.protobuf.InvalidProtocolBufferException(
                        e).setUnfinishedMessage(this);
            } finally {
                if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                    diskBackupProgress_ = java.util.Collections.unmodifiableList(diskBackupProgress_);
                }
                if (((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
                    partitionBackupProgress_ = java.util.Collections.unmodifiableList(partitionBackupProgress_);
                }
                if (((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
                    lvBackupProgress_ = java.util.Collections.unmodifiableList(lvBackupProgress_);
                }
                makeExtensionsImmutable();
            }
        }
        public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
            return cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.internal_static_one2data_rbtmqmsgcli_client_BackupProgress_descriptor;
        }

        protected FieldAccessorTable
        internalGetFieldAccessorTable() {
            return cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.internal_static_one2data_rbtmqmsgcli_client_BackupProgress_fieldAccessorTable
                    .ensureFieldAccessorsInitialized(
                            cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupProgress.class, cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupProgress.Builder.class);
        }

        public interface HardwareBackupProgressOrBuilder extends
                // @@protoc_insertion_point(interface_extends:one2data.rbtmqmsgcli.client.BackupProgress.HardwareBackupProgress)
                com.google.protobuf.MessageOrBuilder {

            /**
             * <pre>
             *块设备内部唯一标识
             * </pre>
             *
             * <code>optional .one2data.rbtmqmsgcli.common.BlockDeviceKey dev_key = 1;</code>
             */
            boolean hasDevKey();
            /**
             * <pre>
             *块设备内部唯一标识
             * </pre>
             *
             * <code>optional .one2data.rbtmqmsgcli.common.BlockDeviceKey dev_key = 1;</code>
             */
            cn.keptdata.one2data.header.message.protobuf.common.Node.BlockDeviceKey getDevKey();
            /**
             * <pre>
             *块设备内部唯一标识
             * </pre>
             *
             * <code>optional .one2data.rbtmqmsgcli.common.BlockDeviceKey dev_key = 1;</code>
             */
            cn.keptdata.one2data.header.message.protobuf.common.Node.BlockDeviceKeyOrBuilder getDevKeyOrBuilder();

            /**
             * <pre>
             *块设备备份进度百分比
             * </pre>
             *
             * <code>optional double backup_progress = 2;</code>
             */
            double getBackupProgress();
        }
        /**
         * Protobuf type {@code one2data.rbtmqmsgcli.client.BackupProgress.HardwareBackupProgress}
         */
        public  static final class HardwareBackupProgress extends
                com.google.protobuf.GeneratedMessageV3 implements
                // @@protoc_insertion_point(message_implements:one2data.rbtmqmsgcli.client.BackupProgress.HardwareBackupProgress)
                HardwareBackupProgressOrBuilder {
            // Use HardwareBackupProgress.newBuilder() to construct.
            private HardwareBackupProgress(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
                super(builder);
            }
            private HardwareBackupProgress() {
                backupProgress_ = 0D;
            }

            @Override
            public final com.google.protobuf.UnknownFieldSet
            getUnknownFields() {
                return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
            }
            private HardwareBackupProgress(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws com.google.protobuf.InvalidProtocolBufferException {
                this();
                int mutable_bitField0_ = 0;
                try {
                    boolean done = false;
                    while (!done) {
                        int tag = input.readTag();
                        switch (tag) {
                            case 0:
                                done = true;
                                break;
                            default: {
                                if (!input.skipField(tag)) {
                                    done = true;
                                }
                                break;
                            }
                            case 10: {
                                cn.keptdata.one2data.header.message.protobuf.common.Node.BlockDeviceKey.Builder subBuilder = null;
                                if (devKey_ != null) {
                                    subBuilder = devKey_.toBuilder();
                                }
                                devKey_ = input.readMessage(cn.keptdata.one2data.header.message.protobuf.common.Node.BlockDeviceKey.parser(), extensionRegistry);
                                if (subBuilder != null) {
                                    subBuilder.mergeFrom(devKey_);
                                    devKey_ = subBuilder.buildPartial();
                                }

                                break;
                            }
                            case 17: {

                                backupProgress_ = input.readDouble();
                                break;
                            }
                        }
                    }
                } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                    throw e.setUnfinishedMessage(this);
                } catch (java.io.IOException e) {
                    throw new com.google.protobuf.InvalidProtocolBufferException(
                            e).setUnfinishedMessage(this);
                } finally {
                    makeExtensionsImmutable();
                }
            }
            public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
                return cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.internal_static_one2data_rbtmqmsgcli_client_BackupProgress_HardwareBackupProgress_descriptor;
            }

            protected FieldAccessorTable
            internalGetFieldAccessorTable() {
                return cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.internal_static_one2data_rbtmqmsgcli_client_BackupProgress_HardwareBackupProgress_fieldAccessorTable
                        .ensureFieldAccessorsInitialized(
                                cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupProgress.HardwareBackupProgress.class, cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupProgress.HardwareBackupProgress.Builder.class);
            }

            public static final int DEV_KEY_FIELD_NUMBER = 1;
            private cn.keptdata.one2data.header.message.protobuf.common.Node.BlockDeviceKey devKey_;
            /**
             * <pre>
             *块设备内部唯一标识
             * </pre>
             *
             * <code>optional .one2data.rbtmqmsgcli.common.BlockDeviceKey dev_key = 1;</code>
             */
            public boolean hasDevKey() {
                return devKey_ != null;
            }
            /**
             * <pre>
             *块设备内部唯一标识
             * </pre>
             *
             * <code>optional .one2data.rbtmqmsgcli.common.BlockDeviceKey dev_key = 1;</code>
             */
            public cn.keptdata.one2data.header.message.protobuf.common.Node.BlockDeviceKey getDevKey() {
                return devKey_ == null ? cn.keptdata.one2data.header.message.protobuf.common.Node.BlockDeviceKey.getDefaultInstance() : devKey_;
            }
            /**
             * <pre>
             *块设备内部唯一标识
             * </pre>
             *
             * <code>optional .one2data.rbtmqmsgcli.common.BlockDeviceKey dev_key = 1;</code>
             */
            public cn.keptdata.one2data.header.message.protobuf.common.Node.BlockDeviceKeyOrBuilder getDevKeyOrBuilder() {
                return getDevKey();
            }

            public static final int BACKUP_PROGRESS_FIELD_NUMBER = 2;
            private double backupProgress_;
            /**
             * <pre>
             *块设备备份进度百分比
             * </pre>
             *
             * <code>optional double backup_progress = 2;</code>
             */
            public double getBackupProgress() {
                return backupProgress_;
            }

            private byte memoizedIsInitialized = -1;
            public final boolean isInitialized() {
                byte isInitialized = memoizedIsInitialized;
                if (isInitialized == 1) return true;
                if (isInitialized == 0) return false;

                memoizedIsInitialized = 1;
                return true;
            }

            public void writeTo(com.google.protobuf.CodedOutputStream output)
                    throws java.io.IOException {
                if (devKey_ != null) {
                    output.writeMessage(1, getDevKey());
                }
                if (backupProgress_ != 0D) {
                    output.writeDouble(2, backupProgress_);
                }
            }

            public int getSerializedSize() {
                int size = memoizedSize;
                if (size != -1) return size;

                size = 0;
                if (devKey_ != null) {
                    size += com.google.protobuf.CodedOutputStream
                            .computeMessageSize(1, getDevKey());
                }
                if (backupProgress_ != 0D) {
                    size += com.google.protobuf.CodedOutputStream
                            .computeDoubleSize(2, backupProgress_);
                }
                memoizedSize = size;
                return size;
            }

            private static final long serialVersionUID = 0L;
            @Override
            public boolean equals(final Object obj) {
                if (obj == this) {
                    return true;
                }
                if (!(obj instanceof cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupProgress.HardwareBackupProgress)) {
                    return super.equals(obj);
                }
                cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupProgress.HardwareBackupProgress other = (cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupProgress.HardwareBackupProgress) obj;

                boolean result = true;
                result = result && (hasDevKey() == other.hasDevKey());
                if (hasDevKey()) {
                    result = result && getDevKey()
                            .equals(other.getDevKey());
                }
                result = result && (
                        Double.doubleToLongBits(getBackupProgress())
                                == Double.doubleToLongBits(
                                other.getBackupProgress()));
                return result;
            }

            @Override
            public int hashCode() {
                if (memoizedHashCode != 0) {
                    return memoizedHashCode;
                }
                int hash = 41;
                hash = (19 * hash) + getDescriptorForType().hashCode();
                if (hasDevKey()) {
                    hash = (37 * hash) + DEV_KEY_FIELD_NUMBER;
                    hash = (53 * hash) + getDevKey().hashCode();
                }
                hash = (37 * hash) + BACKUP_PROGRESS_FIELD_NUMBER;
                hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
                        Double.doubleToLongBits(getBackupProgress()));
                hash = (29 * hash) + unknownFields.hashCode();
                memoizedHashCode = hash;
                return hash;
            }

            public static cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupProgress.HardwareBackupProgress parseFrom(
                    com.google.protobuf.ByteString data)
                    throws com.google.protobuf.InvalidProtocolBufferException {
                return PARSER.parseFrom(data);
            }
            public static cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupProgress.HardwareBackupProgress parseFrom(
                    com.google.protobuf.ByteString data,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws com.google.protobuf.InvalidProtocolBufferException {
                return PARSER.parseFrom(data, extensionRegistry);
            }
            public static cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupProgress.HardwareBackupProgress parseFrom(byte[] data)
                    throws com.google.protobuf.InvalidProtocolBufferException {
                return PARSER.parseFrom(data);
            }
            public static cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupProgress.HardwareBackupProgress parseFrom(
                    byte[] data,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws com.google.protobuf.InvalidProtocolBufferException {
                return PARSER.parseFrom(data, extensionRegistry);
            }
            public static cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupProgress.HardwareBackupProgress parseFrom(java.io.InputStream input)
                    throws java.io.IOException {
                return com.google.protobuf.GeneratedMessageV3
                        .parseWithIOException(PARSER, input);
            }
            public static cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupProgress.HardwareBackupProgress parseFrom(
                    java.io.InputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws java.io.IOException {
                return com.google.protobuf.GeneratedMessageV3
                        .parseWithIOException(PARSER, input, extensionRegistry);
            }
            public static cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupProgress.HardwareBackupProgress parseDelimitedFrom(java.io.InputStream input)
                    throws java.io.IOException {
                return com.google.protobuf.GeneratedMessageV3
                        .parseDelimitedWithIOException(PARSER, input);
            }
            public static cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupProgress.HardwareBackupProgress parseDelimitedFrom(
                    java.io.InputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws java.io.IOException {
                return com.google.protobuf.GeneratedMessageV3
                        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
            }
            public static cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupProgress.HardwareBackupProgress parseFrom(
                    com.google.protobuf.CodedInputStream input)
                    throws java.io.IOException {
                return com.google.protobuf.GeneratedMessageV3
                        .parseWithIOException(PARSER, input);
            }
            public static cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupProgress.HardwareBackupProgress parseFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws java.io.IOException {
                return com.google.protobuf.GeneratedMessageV3
                        .parseWithIOException(PARSER, input, extensionRegistry);
            }

            public Builder newBuilderForType() { return newBuilder(); }
            public static Builder newBuilder() {
                return DEFAULT_INSTANCE.toBuilder();
            }
            public static Builder newBuilder(cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupProgress.HardwareBackupProgress prototype) {
                return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
            }
            public Builder toBuilder() {
                return this == DEFAULT_INSTANCE
                        ? new Builder() : new Builder().mergeFrom(this);
            }

            @Override
            protected Builder newBuilderForType(
                    BuilderParent parent) {
                Builder builder = new Builder(parent);
                return builder;
            }
            /**
             * Protobuf type {@code one2data.rbtmqmsgcli.client.BackupProgress.HardwareBackupProgress}
             */
            public static final class Builder extends
                    com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
                    // @@protoc_insertion_point(builder_implements:one2data.rbtmqmsgcli.client.BackupProgress.HardwareBackupProgress)
                    cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupProgress.HardwareBackupProgressOrBuilder {
                public static final com.google.protobuf.Descriptors.Descriptor
                getDescriptor() {
                    return cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.internal_static_one2data_rbtmqmsgcli_client_BackupProgress_HardwareBackupProgress_descriptor;
                }

                protected FieldAccessorTable
                internalGetFieldAccessorTable() {
                    return cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.internal_static_one2data_rbtmqmsgcli_client_BackupProgress_HardwareBackupProgress_fieldAccessorTable
                            .ensureFieldAccessorsInitialized(
                                    cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupProgress.HardwareBackupProgress.class, cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupProgress.HardwareBackupProgress.Builder.class);
                }

                // Construct using cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupProgress.HardwareBackupProgress.newBuilder()
                private Builder() {
                    maybeForceBuilderInitialization();
                }

                private Builder(
                        BuilderParent parent) {
                    super(parent);
                    maybeForceBuilderInitialization();
                }
                private void maybeForceBuilderInitialization() {
                    if (com.google.protobuf.GeneratedMessageV3
                            .alwaysUseFieldBuilders) {
                    }
                }
                public Builder clear() {
                    super.clear();
                    if (devKeyBuilder_ == null) {
                        devKey_ = null;
                    } else {
                        devKey_ = null;
                        devKeyBuilder_ = null;
                    }
                    backupProgress_ = 0D;

                    return this;
                }

                public com.google.protobuf.Descriptors.Descriptor
                getDescriptorForType() {
                    return cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.internal_static_one2data_rbtmqmsgcli_client_BackupProgress_HardwareBackupProgress_descriptor;
                }

                public cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupProgress.HardwareBackupProgress getDefaultInstanceForType() {
                    return cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupProgress.HardwareBackupProgress.getDefaultInstance();
                }

                public cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupProgress.HardwareBackupProgress build() {
                    cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupProgress.HardwareBackupProgress result = buildPartial();
                    if (!result.isInitialized()) {
                        throw newUninitializedMessageException(result);
                    }
                    return result;
                }

                public cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupProgress.HardwareBackupProgress buildPartial() {
                    cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupProgress.HardwareBackupProgress result = new cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupProgress.HardwareBackupProgress(this);
                    if (devKeyBuilder_ == null) {
                        result.devKey_ = devKey_;
                    } else {
                        result.devKey_ = devKeyBuilder_.build();
                    }
                    result.backupProgress_ = backupProgress_;
                    onBuilt();
                    return result;
                }

                public Builder clone() {
                    return (Builder) super.clone();
                }
                public Builder setField(
                        com.google.protobuf.Descriptors.FieldDescriptor field,
                        Object value) {
                    return (Builder) super.setField(field, value);
                }
                public Builder clearField(
                        com.google.protobuf.Descriptors.FieldDescriptor field) {
                    return (Builder) super.clearField(field);
                }
                public Builder clearOneof(
                        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
                    return (Builder) super.clearOneof(oneof);
                }
                public Builder setRepeatedField(
                        com.google.protobuf.Descriptors.FieldDescriptor field,
                        int index, Object value) {
                    return (Builder) super.setRepeatedField(field, index, value);
                }
                public Builder addRepeatedField(
                        com.google.protobuf.Descriptors.FieldDescriptor field,
                        Object value) {
                    return (Builder) super.addRepeatedField(field, value);
                }
                public Builder mergeFrom(com.google.protobuf.Message other) {
                    if (other instanceof cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupProgress.HardwareBackupProgress) {
                        return mergeFrom((cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupProgress.HardwareBackupProgress)other);
                    } else {
                        super.mergeFrom(other);
                        return this;
                    }
                }

                public Builder mergeFrom(cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupProgress.HardwareBackupProgress other) {
                    if (other == cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupProgress.HardwareBackupProgress.getDefaultInstance()) return this;
                    if (other.hasDevKey()) {
                        mergeDevKey(other.getDevKey());
                    }
                    if (other.getBackupProgress() != 0D) {
                        setBackupProgress(other.getBackupProgress());
                    }
                    onChanged();
                    return this;
                }

                public final boolean isInitialized() {
                    return true;
                }

                public Builder mergeFrom(
                        com.google.protobuf.CodedInputStream input,
                        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                        throws java.io.IOException {
                    cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupProgress.HardwareBackupProgress parsedMessage = null;
                    try {
                        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
                    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                        parsedMessage = (cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupProgress.HardwareBackupProgress) e.getUnfinishedMessage();
                        throw e.unwrapIOException();
                    } finally {
                        if (parsedMessage != null) {
                            mergeFrom(parsedMessage);
                        }
                    }
                    return this;
                }

                private cn.keptdata.one2data.header.message.protobuf.common.Node.BlockDeviceKey devKey_ = null;
                private com.google.protobuf.SingleFieldBuilderV3<
                        cn.keptdata.one2data.header.message.protobuf.common.Node.BlockDeviceKey, cn.keptdata.one2data.header.message.protobuf.common.Node.BlockDeviceKey.Builder, cn.keptdata.one2data.header.message.protobuf.common.Node.BlockDeviceKeyOrBuilder> devKeyBuilder_;
                /**
                 * <pre>
                 *块设备内部唯一标识
                 * </pre>
                 *
                 * <code>optional .one2data.rbtmqmsgcli.common.BlockDeviceKey dev_key = 1;</code>
                 */
                public boolean hasDevKey() {
                    return devKeyBuilder_ != null || devKey_ != null;
                }
                /**
                 * <pre>
                 *块设备内部唯一标识
                 * </pre>
                 *
                 * <code>optional .one2data.rbtmqmsgcli.common.BlockDeviceKey dev_key = 1;</code>
                 */
                public cn.keptdata.one2data.header.message.protobuf.common.Node.BlockDeviceKey getDevKey() {
                    if (devKeyBuilder_ == null) {
                        return devKey_ == null ? cn.keptdata.one2data.header.message.protobuf.common.Node.BlockDeviceKey.getDefaultInstance() : devKey_;
                    } else {
                        return devKeyBuilder_.getMessage();
                    }
                }
                /**
                 * <pre>
                 *块设备内部唯一标识
                 * </pre>
                 *
                 * <code>optional .one2data.rbtmqmsgcli.common.BlockDeviceKey dev_key = 1;</code>
                 */
                public Builder setDevKey(cn.keptdata.one2data.header.message.protobuf.common.Node.BlockDeviceKey value) {
                    if (devKeyBuilder_ == null) {
                        if (value == null) {
                            throw new NullPointerException();
                        }
                        devKey_ = value;
                        onChanged();
                    } else {
                        devKeyBuilder_.setMessage(value);
                    }

                    return this;
                }
                /**
                 * <pre>
                 *块设备内部唯一标识
                 * </pre>
                 *
                 * <code>optional .one2data.rbtmqmsgcli.common.BlockDeviceKey dev_key = 1;</code>
                 */
                public Builder setDevKey(
                        cn.keptdata.one2data.header.message.protobuf.common.Node.BlockDeviceKey.Builder builderForValue) {
                    if (devKeyBuilder_ == null) {
                        devKey_ = builderForValue.build();
                        onChanged();
                    } else {
                        devKeyBuilder_.setMessage(builderForValue.build());
                    }

                    return this;
                }
                /**
                 * <pre>
                 *块设备内部唯一标识
                 * </pre>
                 *
                 * <code>optional .one2data.rbtmqmsgcli.common.BlockDeviceKey dev_key = 1;</code>
                 */
                public Builder mergeDevKey(cn.keptdata.one2data.header.message.protobuf.common.Node.BlockDeviceKey value) {
                    if (devKeyBuilder_ == null) {
                        if (devKey_ != null) {
                            devKey_ =
                                    cn.keptdata.one2data.header.message.protobuf.common.Node.BlockDeviceKey.newBuilder(devKey_).mergeFrom(value).buildPartial();
                        } else {
                            devKey_ = value;
                        }
                        onChanged();
                    } else {
                        devKeyBuilder_.mergeFrom(value);
                    }

                    return this;
                }
                /**
                 * <pre>
                 *块设备内部唯一标识
                 * </pre>
                 *
                 * <code>optional .one2data.rbtmqmsgcli.common.BlockDeviceKey dev_key = 1;</code>
                 */
                public Builder clearDevKey() {
                    if (devKeyBuilder_ == null) {
                        devKey_ = null;
                        onChanged();
                    } else {
                        devKey_ = null;
                        devKeyBuilder_ = null;
                    }

                    return this;
                }
                /**
                 * <pre>
                 *块设备内部唯一标识
                 * </pre>
                 *
                 * <code>optional .one2data.rbtmqmsgcli.common.BlockDeviceKey dev_key = 1;</code>
                 */
                public cn.keptdata.one2data.header.message.protobuf.common.Node.BlockDeviceKey.Builder getDevKeyBuilder() {

                    onChanged();
                    return getDevKeyFieldBuilder().getBuilder();
                }
                /**
                 * <pre>
                 *块设备内部唯一标识
                 * </pre>
                 *
                 * <code>optional .one2data.rbtmqmsgcli.common.BlockDeviceKey dev_key = 1;</code>
                 */
                public cn.keptdata.one2data.header.message.protobuf.common.Node.BlockDeviceKeyOrBuilder getDevKeyOrBuilder() {
                    if (devKeyBuilder_ != null) {
                        return devKeyBuilder_.getMessageOrBuilder();
                    } else {
                        return devKey_ == null ?
                                cn.keptdata.one2data.header.message.protobuf.common.Node.BlockDeviceKey.getDefaultInstance() : devKey_;
                    }
                }
                /**
                 * <pre>
                 *块设备内部唯一标识
                 * </pre>
                 *
                 * <code>optional .one2data.rbtmqmsgcli.common.BlockDeviceKey dev_key = 1;</code>
                 */
                private com.google.protobuf.SingleFieldBuilderV3<
                        cn.keptdata.one2data.header.message.protobuf.common.Node.BlockDeviceKey, cn.keptdata.one2data.header.message.protobuf.common.Node.BlockDeviceKey.Builder, cn.keptdata.one2data.header.message.protobuf.common.Node.BlockDeviceKeyOrBuilder>
                getDevKeyFieldBuilder() {
                    if (devKeyBuilder_ == null) {
                        devKeyBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                                cn.keptdata.one2data.header.message.protobuf.common.Node.BlockDeviceKey, cn.keptdata.one2data.header.message.protobuf.common.Node.BlockDeviceKey.Builder, cn.keptdata.one2data.header.message.protobuf.common.Node.BlockDeviceKeyOrBuilder>(
                                getDevKey(),
                                getParentForChildren(),
                                isClean());
                        devKey_ = null;
                    }
                    return devKeyBuilder_;
                }

                private double backupProgress_ ;
                /**
                 * <pre>
                 *块设备备份进度百分比
                 * </pre>
                 *
                 * <code>optional double backup_progress = 2;</code>
                 */
                public double getBackupProgress() {
                    return backupProgress_;
                }
                /**
                 * <pre>
                 *块设备备份进度百分比
                 * </pre>
                 *
                 * <code>optional double backup_progress = 2;</code>
                 */
                public Builder setBackupProgress(double value) {

                    backupProgress_ = value;
                    onChanged();
                    return this;
                }
                /**
                 * <pre>
                 *块设备备份进度百分比
                 * </pre>
                 *
                 * <code>optional double backup_progress = 2;</code>
                 */
                public Builder clearBackupProgress() {

                    backupProgress_ = 0D;
                    onChanged();
                    return this;
                }
                public final Builder setUnknownFields(
                        final com.google.protobuf.UnknownFieldSet unknownFields) {
                    return this;
                }

                public final Builder mergeUnknownFields(
                        final com.google.protobuf.UnknownFieldSet unknownFields) {
                    return this;
                }


                // @@protoc_insertion_point(builder_scope:one2data.rbtmqmsgcli.client.BackupProgress.HardwareBackupProgress)
            }

            // @@protoc_insertion_point(class_scope:one2data.rbtmqmsgcli.client.BackupProgress.HardwareBackupProgress)
            private static final cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupProgress.HardwareBackupProgress DEFAULT_INSTANCE;
            static {
                DEFAULT_INSTANCE = new cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupProgress.HardwareBackupProgress();
            }

            public static cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupProgress.HardwareBackupProgress getDefaultInstance() {
                return DEFAULT_INSTANCE;
            }

            private static final com.google.protobuf.Parser<HardwareBackupProgress>
                    PARSER = new com.google.protobuf.AbstractParser<HardwareBackupProgress>() {
                public HardwareBackupProgress parsePartialFrom(
                        com.google.protobuf.CodedInputStream input,
                        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                        throws com.google.protobuf.InvalidProtocolBufferException {
                    return new HardwareBackupProgress(input, extensionRegistry);
                }
            };

            public static com.google.protobuf.Parser<HardwareBackupProgress> parser() {
                return PARSER;
            }

            @Override
            public com.google.protobuf.Parser<HardwareBackupProgress> getParserForType() {
                return PARSER;
            }

            public cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupProgress.HardwareBackupProgress getDefaultInstanceForType() {
                return DEFAULT_INSTANCE;
            }

        }

        private int bitField0_;
        public static final int BACKUP_TASK_UUID_FIELD_NUMBER = 1;
        private volatile Object backupTaskUuid_;
        /**
         * <pre>
         *备份任务唯一ID
         * </pre>
         *
         * <code>optional string backup_task_uuid = 1;</code>
         */
        public String getBackupTaskUuid() {
            Object ref = backupTaskUuid_;
            if (ref instanceof String) {
                return (String) ref;
            } else {
                com.google.protobuf.ByteString bs =
                        (com.google.protobuf.ByteString) ref;
                String s = bs.toStringUtf8();
                backupTaskUuid_ = s;
                return s;
            }
        }
        /**
         * <pre>
         *备份任务唯一ID
         * </pre>
         *
         * <code>optional string backup_task_uuid = 1;</code>
         */
        public com.google.protobuf.ByteString
        getBackupTaskUuidBytes() {
            Object ref = backupTaskUuid_;
            if (ref instanceof String) {
                com.google.protobuf.ByteString b =
                        com.google.protobuf.ByteString.copyFromUtf8(
                                (String) ref);
                backupTaskUuid_ = b;
                return b;
            } else {
                return (com.google.protobuf.ByteString) ref;
            }
        }

        public static final int DEVICE_UUID_KEY_FIELD_NUMBER = 2;
        private volatile Object deviceUuidKey_;
        /**
         * <pre>
         *备份Agent 内部唯一ID,用于表示设备
         * </pre>
         *
         * <code>optional string device_uuid_key = 2;</code>
         */
        public String getDeviceUuidKey() {
            Object ref = deviceUuidKey_;
            if (ref instanceof String) {
                return (String) ref;
            } else {
                com.google.protobuf.ByteString bs =
                        (com.google.protobuf.ByteString) ref;
                String s = bs.toStringUtf8();
                deviceUuidKey_ = s;
                return s;
            }
        }
        /**
         * <pre>
         *备份Agent 内部唯一ID,用于表示设备
         * </pre>
         *
         * <code>optional string device_uuid_key = 2;</code>
         */
        public com.google.protobuf.ByteString
        getDeviceUuidKeyBytes() {
            Object ref = deviceUuidKey_;
            if (ref instanceof String) {
                com.google.protobuf.ByteString b =
                        com.google.protobuf.ByteString.copyFromUtf8(
                                (String) ref);
                deviceUuidKey_ = b;
                return b;
            } else {
                return (com.google.protobuf.ByteString) ref;
            }
        }

        public static final int DISK_BACKUP_PROGRESS_FIELD_NUMBER = 3;
        private java.util.List<cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupProgress.HardwareBackupProgress> diskBackupProgress_;
        /**
         * <pre>
         *磁盘备份进度
         * </pre>
         *
         * <code>repeated .one2data.rbtmqmsgcli.client.BackupProgress.HardwareBackupProgress disk_backup_progress = 3;</code>
         */
        public java.util.List<cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupProgress.HardwareBackupProgress> getDiskBackupProgressList() {
            return diskBackupProgress_;
        }
        /**
         * <pre>
         *磁盘备份进度
         * </pre>
         *
         * <code>repeated .one2data.rbtmqmsgcli.client.BackupProgress.HardwareBackupProgress disk_backup_progress = 3;</code>
         */
        public java.util.List<? extends cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupProgress.HardwareBackupProgressOrBuilder>
        getDiskBackupProgressOrBuilderList() {
            return diskBackupProgress_;
        }
        /**
         * <pre>
         *磁盘备份进度
         * </pre>
         *
         * <code>repeated .one2data.rbtmqmsgcli.client.BackupProgress.HardwareBackupProgress disk_backup_progress = 3;</code>
         */
        public int getDiskBackupProgressCount() {
            return diskBackupProgress_.size();
        }
        /**
         * <pre>
         *磁盘备份进度
         * </pre>
         *
         * <code>repeated .one2data.rbtmqmsgcli.client.BackupProgress.HardwareBackupProgress disk_backup_progress = 3;</code>
         */
        public cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupProgress.HardwareBackupProgress getDiskBackupProgress(int index) {
            return diskBackupProgress_.get(index);
        }
        /**
         * <pre>
         *磁盘备份进度
         * </pre>
         *
         * <code>repeated .one2data.rbtmqmsgcli.client.BackupProgress.HardwareBackupProgress disk_backup_progress = 3;</code>
         */
        public cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupProgress.HardwareBackupProgressOrBuilder getDiskBackupProgressOrBuilder(
                int index) {
            return diskBackupProgress_.get(index);
        }

        public static final int PARTITION_BACKUP_PROGRESS_FIELD_NUMBER = 4;
        private java.util.List<cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupProgress.HardwareBackupProgress> partitionBackupProgress_;
        /**
         * <pre>
         *分区备份进度
         * </pre>
         *
         * <code>repeated .one2data.rbtmqmsgcli.client.BackupProgress.HardwareBackupProgress partition_backup_progress = 4;</code>
         */
        public java.util.List<cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupProgress.HardwareBackupProgress> getPartitionBackupProgressList() {
            return partitionBackupProgress_;
        }
        /**
         * <pre>
         *分区备份进度
         * </pre>
         *
         * <code>repeated .one2data.rbtmqmsgcli.client.BackupProgress.HardwareBackupProgress partition_backup_progress = 4;</code>
         */
        public java.util.List<? extends cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupProgress.HardwareBackupProgressOrBuilder>
        getPartitionBackupProgressOrBuilderList() {
            return partitionBackupProgress_;
        }
        /**
         * <pre>
         *分区备份进度
         * </pre>
         *
         * <code>repeated .one2data.rbtmqmsgcli.client.BackupProgress.HardwareBackupProgress partition_backup_progress = 4;</code>
         */
        public int getPartitionBackupProgressCount() {
            return partitionBackupProgress_.size();
        }
        /**
         * <pre>
         *分区备份进度
         * </pre>
         *
         * <code>repeated .one2data.rbtmqmsgcli.client.BackupProgress.HardwareBackupProgress partition_backup_progress = 4;</code>
         */
        public cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupProgress.HardwareBackupProgress getPartitionBackupProgress(int index) {
            return partitionBackupProgress_.get(index);
        }
        /**
         * <pre>
         *分区备份进度
         * </pre>
         *
         * <code>repeated .one2data.rbtmqmsgcli.client.BackupProgress.HardwareBackupProgress partition_backup_progress = 4;</code>
         */
        public cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupProgress.HardwareBackupProgressOrBuilder getPartitionBackupProgressOrBuilder(
                int index) {
            return partitionBackupProgress_.get(index);
        }

        public static final int LV_BACKUP_PROGRESS_FIELD_NUMBER = 5;
        private java.util.List<cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupProgress.HardwareBackupProgress> lvBackupProgress_;
        /**
         * <pre>
         *逻辑卷备份进度
         * </pre>
         *
         * <code>repeated .one2data.rbtmqmsgcli.client.BackupProgress.HardwareBackupProgress lv_backup_progress = 5;</code>
         */
        public java.util.List<cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupProgress.HardwareBackupProgress> getLvBackupProgressList() {
            return lvBackupProgress_;
        }
        /**
         * <pre>
         *逻辑卷备份进度
         * </pre>
         *
         * <code>repeated .one2data.rbtmqmsgcli.client.BackupProgress.HardwareBackupProgress lv_backup_progress = 5;</code>
         */
        public java.util.List<? extends cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupProgress.HardwareBackupProgressOrBuilder>
        getLvBackupProgressOrBuilderList() {
            return lvBackupProgress_;
        }
        /**
         * <pre>
         *逻辑卷备份进度
         * </pre>
         *
         * <code>repeated .one2data.rbtmqmsgcli.client.BackupProgress.HardwareBackupProgress lv_backup_progress = 5;</code>
         */
        public int getLvBackupProgressCount() {
            return lvBackupProgress_.size();
        }
        /**
         * <pre>
         *逻辑卷备份进度
         * </pre>
         *
         * <code>repeated .one2data.rbtmqmsgcli.client.BackupProgress.HardwareBackupProgress lv_backup_progress = 5;</code>
         */
        public cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupProgress.HardwareBackupProgress getLvBackupProgress(int index) {
            return lvBackupProgress_.get(index);
        }
        /**
         * <pre>
         *逻辑卷备份进度
         * </pre>
         *
         * <code>repeated .one2data.rbtmqmsgcli.client.BackupProgress.HardwareBackupProgress lv_backup_progress = 5;</code>
         */
        public cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupProgress.HardwareBackupProgressOrBuilder getLvBackupProgressOrBuilder(
                int index) {
            return lvBackupProgress_.get(index);
        }

        public static final int TOTAL_PROGRESS_FIELD_NUMBER = 6;
        private double totalProgress_;
        /**
         * <pre>
         *备份任务总进度
         * </pre>
         *
         * <code>optional double total_progress = 6;</code>
         */
        public double getTotalProgress() {
            return totalProgress_;
        }

        public static final int TOTAL_NET_SPEED_BIT_FIELD_NUMBER = 7;
        private long totalNetSpeedBit_;
        /**
         * <pre>
         *备份网速，即每秒通过网络发出的bit数
         * </pre>
         *
         * <code>optional int64 total_net_speed_bit = 7;</code>
         */
        public long getTotalNetSpeedBit() {
            return totalNetSpeedBit_;
        }

        public static final int TOTAL_DISK_SPEED_BIT_FIELD_NUMBER = 8;
        private long totalDiskSpeedBit_;
        /**
         * <pre>
         *备份磁盘速率，即每秒从磁盘读取的bit数
         * </pre>
         *
         * <code>optional int64 total_disk_speed_bit = 8;</code>
         */
        public long getTotalDiskSpeedBit() {
            return totalDiskSpeedBit_;
        }

        private byte memoizedIsInitialized = -1;
        public final boolean isInitialized() {
            byte isInitialized = memoizedIsInitialized;
            if (isInitialized == 1) return true;
            if (isInitialized == 0) return false;

            memoizedIsInitialized = 1;
            return true;
        }

        public void writeTo(com.google.protobuf.CodedOutputStream output)
                throws java.io.IOException {
            if (!getBackupTaskUuidBytes().isEmpty()) {
                com.google.protobuf.GeneratedMessageV3.writeString(output, 1, backupTaskUuid_);
            }
            if (!getDeviceUuidKeyBytes().isEmpty()) {
                com.google.protobuf.GeneratedMessageV3.writeString(output, 2, deviceUuidKey_);
            }
            for (int i = 0; i < diskBackupProgress_.size(); i++) {
                output.writeMessage(3, diskBackupProgress_.get(i));
            }
            for (int i = 0; i < partitionBackupProgress_.size(); i++) {
                output.writeMessage(4, partitionBackupProgress_.get(i));
            }
            for (int i = 0; i < lvBackupProgress_.size(); i++) {
                output.writeMessage(5, lvBackupProgress_.get(i));
            }
            if (totalProgress_ != 0D) {
                output.writeDouble(6, totalProgress_);
            }
            if (totalNetSpeedBit_ != 0L) {
                output.writeInt64(7, totalNetSpeedBit_);
            }
            if (totalDiskSpeedBit_ != 0L) {
                output.writeInt64(8, totalDiskSpeedBit_);
            }
        }

        public int getSerializedSize() {
            int size = memoizedSize;
            if (size != -1) return size;

            size = 0;
            if (!getBackupTaskUuidBytes().isEmpty()) {
                size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, backupTaskUuid_);
            }
            if (!getDeviceUuidKeyBytes().isEmpty()) {
                size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, deviceUuidKey_);
            }
            for (int i = 0; i < diskBackupProgress_.size(); i++) {
                size += com.google.protobuf.CodedOutputStream
                        .computeMessageSize(3, diskBackupProgress_.get(i));
            }
            for (int i = 0; i < partitionBackupProgress_.size(); i++) {
                size += com.google.protobuf.CodedOutputStream
                        .computeMessageSize(4, partitionBackupProgress_.get(i));
            }
            for (int i = 0; i < lvBackupProgress_.size(); i++) {
                size += com.google.protobuf.CodedOutputStream
                        .computeMessageSize(5, lvBackupProgress_.get(i));
            }
            if (totalProgress_ != 0D) {
                size += com.google.protobuf.CodedOutputStream
                        .computeDoubleSize(6, totalProgress_);
            }
            if (totalNetSpeedBit_ != 0L) {
                size += com.google.protobuf.CodedOutputStream
                        .computeInt64Size(7, totalNetSpeedBit_);
            }
            if (totalDiskSpeedBit_ != 0L) {
                size += com.google.protobuf.CodedOutputStream
                        .computeInt64Size(8, totalDiskSpeedBit_);
            }
            memoizedSize = size;
            return size;
        }

        private static final long serialVersionUID = 0L;
        @Override
        public boolean equals(final Object obj) {
            if (obj == this) {
                return true;
            }
            if (!(obj instanceof cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupProgress)) {
                return super.equals(obj);
            }
            cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupProgress other = (cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupProgress) obj;

            boolean result = true;
            result = result && getBackupTaskUuid()
                    .equals(other.getBackupTaskUuid());
            result = result && getDeviceUuidKey()
                    .equals(other.getDeviceUuidKey());
            result = result && getDiskBackupProgressList()
                    .equals(other.getDiskBackupProgressList());
            result = result && getPartitionBackupProgressList()
                    .equals(other.getPartitionBackupProgressList());
            result = result && getLvBackupProgressList()
                    .equals(other.getLvBackupProgressList());
            result = result && (
                    Double.doubleToLongBits(getTotalProgress())
                            == Double.doubleToLongBits(
                            other.getTotalProgress()));
            result = result && (getTotalNetSpeedBit()
                    == other.getTotalNetSpeedBit());
            result = result && (getTotalDiskSpeedBit()
                    == other.getTotalDiskSpeedBit());
            return result;
        }

        @Override
        public int hashCode() {
            if (memoizedHashCode != 0) {
                return memoizedHashCode;
            }
            int hash = 41;
            hash = (19 * hash) + getDescriptorForType().hashCode();
            hash = (37 * hash) + BACKUP_TASK_UUID_FIELD_NUMBER;
            hash = (53 * hash) + getBackupTaskUuid().hashCode();
            hash = (37 * hash) + DEVICE_UUID_KEY_FIELD_NUMBER;
            hash = (53 * hash) + getDeviceUuidKey().hashCode();
            if (getDiskBackupProgressCount() > 0) {
                hash = (37 * hash) + DISK_BACKUP_PROGRESS_FIELD_NUMBER;
                hash = (53 * hash) + getDiskBackupProgressList().hashCode();
            }
            if (getPartitionBackupProgressCount() > 0) {
                hash = (37 * hash) + PARTITION_BACKUP_PROGRESS_FIELD_NUMBER;
                hash = (53 * hash) + getPartitionBackupProgressList().hashCode();
            }
            if (getLvBackupProgressCount() > 0) {
                hash = (37 * hash) + LV_BACKUP_PROGRESS_FIELD_NUMBER;
                hash = (53 * hash) + getLvBackupProgressList().hashCode();
            }
            hash = (37 * hash) + TOTAL_PROGRESS_FIELD_NUMBER;
            hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
                    Double.doubleToLongBits(getTotalProgress()));
            hash = (37 * hash) + TOTAL_NET_SPEED_BIT_FIELD_NUMBER;
            hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
                    getTotalNetSpeedBit());
            hash = (37 * hash) + TOTAL_DISK_SPEED_BIT_FIELD_NUMBER;
            hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
                    getTotalDiskSpeedBit());
            hash = (29 * hash) + unknownFields.hashCode();
            memoizedHashCode = hash;
            return hash;
        }

        public static cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupProgress parseFrom(
                com.google.protobuf.ByteString data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }
        public static cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupProgress parseFrom(
                com.google.protobuf.ByteString data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }
        public static cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupProgress parseFrom(byte[] data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }
        public static cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupProgress parseFrom(
                byte[] data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }
        public static cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupProgress parseFrom(java.io.InputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input);
        }
        public static cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupProgress parseFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input, extensionRegistry);
        }
        public static cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupProgress parseDelimitedFrom(java.io.InputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseDelimitedWithIOException(PARSER, input);
        }
        public static cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupProgress parseDelimitedFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
        }
        public static cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupProgress parseFrom(
                com.google.protobuf.CodedInputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input);
        }
        public static cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupProgress parseFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input, extensionRegistry);
        }

        public Builder newBuilderForType() { return newBuilder(); }
        public static Builder newBuilder() {
            return DEFAULT_INSTANCE.toBuilder();
        }
        public static Builder newBuilder(cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupProgress prototype) {
            return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }
        public Builder toBuilder() {
            return this == DEFAULT_INSTANCE
                    ? new Builder() : new Builder().mergeFrom(this);
        }

        @Override
        protected Builder newBuilderForType(
                BuilderParent parent) {
            Builder builder = new Builder(parent);
            return builder;
        }
        /**
         * <pre>
         *************客户端上报备份进度******************
         * </pre>
         *
         * Protobuf type {@code one2data.rbtmqmsgcli.client.BackupProgress}
         */
        public static final class Builder extends
                com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
                // @@protoc_insertion_point(builder_implements:one2data.rbtmqmsgcli.client.BackupProgress)
                cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupProgressOrBuilder {
            public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
                return cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.internal_static_one2data_rbtmqmsgcli_client_BackupProgress_descriptor;
            }

            protected FieldAccessorTable
            internalGetFieldAccessorTable() {
                return cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.internal_static_one2data_rbtmqmsgcli_client_BackupProgress_fieldAccessorTable
                        .ensureFieldAccessorsInitialized(
                                cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupProgress.class, cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupProgress.Builder.class);
            }

            // Construct using cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupProgress.newBuilder()
            private Builder() {
                maybeForceBuilderInitialization();
            }

            private Builder(
                    BuilderParent parent) {
                super(parent);
                maybeForceBuilderInitialization();
            }
            private void maybeForceBuilderInitialization() {
                if (com.google.protobuf.GeneratedMessageV3
                        .alwaysUseFieldBuilders) {
                    getDiskBackupProgressFieldBuilder();
                    getPartitionBackupProgressFieldBuilder();
                    getLvBackupProgressFieldBuilder();
                }
            }
            public Builder clear() {
                super.clear();
                backupTaskUuid_ = "";

                deviceUuidKey_ = "";

                if (diskBackupProgressBuilder_ == null) {
                    diskBackupProgress_ = java.util.Collections.emptyList();
                    bitField0_ = (bitField0_ & ~0x00000004);
                } else {
                    diskBackupProgressBuilder_.clear();
                }
                if (partitionBackupProgressBuilder_ == null) {
                    partitionBackupProgress_ = java.util.Collections.emptyList();
                    bitField0_ = (bitField0_ & ~0x00000008);
                } else {
                    partitionBackupProgressBuilder_.clear();
                }
                if (lvBackupProgressBuilder_ == null) {
                    lvBackupProgress_ = java.util.Collections.emptyList();
                    bitField0_ = (bitField0_ & ~0x00000010);
                } else {
                    lvBackupProgressBuilder_.clear();
                }
                totalProgress_ = 0D;

                totalNetSpeedBit_ = 0L;

                totalDiskSpeedBit_ = 0L;

                return this;
            }

            public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
                return cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.internal_static_one2data_rbtmqmsgcli_client_BackupProgress_descriptor;
            }

            public cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupProgress getDefaultInstanceForType() {
                return cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupProgress.getDefaultInstance();
            }

            public cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupProgress build() {
                cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupProgress result = buildPartial();
                if (!result.isInitialized()) {
                    throw newUninitializedMessageException(result);
                }
                return result;
            }

            public cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupProgress buildPartial() {
                cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupProgress result = new cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupProgress(this);
                int from_bitField0_ = bitField0_;
                int to_bitField0_ = 0;
                result.backupTaskUuid_ = backupTaskUuid_;
                result.deviceUuidKey_ = deviceUuidKey_;
                if (diskBackupProgressBuilder_ == null) {
                    if (((bitField0_ & 0x00000004) == 0x00000004)) {
                        diskBackupProgress_ = java.util.Collections.unmodifiableList(diskBackupProgress_);
                        bitField0_ = (bitField0_ & ~0x00000004);
                    }
                    result.diskBackupProgress_ = diskBackupProgress_;
                } else {
                    result.diskBackupProgress_ = diskBackupProgressBuilder_.build();
                }
                if (partitionBackupProgressBuilder_ == null) {
                    if (((bitField0_ & 0x00000008) == 0x00000008)) {
                        partitionBackupProgress_ = java.util.Collections.unmodifiableList(partitionBackupProgress_);
                        bitField0_ = (bitField0_ & ~0x00000008);
                    }
                    result.partitionBackupProgress_ = partitionBackupProgress_;
                } else {
                    result.partitionBackupProgress_ = partitionBackupProgressBuilder_.build();
                }
                if (lvBackupProgressBuilder_ == null) {
                    if (((bitField0_ & 0x00000010) == 0x00000010)) {
                        lvBackupProgress_ = java.util.Collections.unmodifiableList(lvBackupProgress_);
                        bitField0_ = (bitField0_ & ~0x00000010);
                    }
                    result.lvBackupProgress_ = lvBackupProgress_;
                } else {
                    result.lvBackupProgress_ = lvBackupProgressBuilder_.build();
                }
                result.totalProgress_ = totalProgress_;
                result.totalNetSpeedBit_ = totalNetSpeedBit_;
                result.totalDiskSpeedBit_ = totalDiskSpeedBit_;
                result.bitField0_ = to_bitField0_;
                onBuilt();
                return result;
            }

            public Builder clone() {
                return (Builder) super.clone();
            }
            public Builder setField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    Object value) {
                return (Builder) super.setField(field, value);
            }
            public Builder clearField(
                    com.google.protobuf.Descriptors.FieldDescriptor field) {
                return (Builder) super.clearField(field);
            }
            public Builder clearOneof(
                    com.google.protobuf.Descriptors.OneofDescriptor oneof) {
                return (Builder) super.clearOneof(oneof);
            }
            public Builder setRepeatedField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    int index, Object value) {
                return (Builder) super.setRepeatedField(field, index, value);
            }
            public Builder addRepeatedField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    Object value) {
                return (Builder) super.addRepeatedField(field, value);
            }
            public Builder mergeFrom(com.google.protobuf.Message other) {
                if (other instanceof cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupProgress) {
                    return mergeFrom((cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupProgress)other);
                } else {
                    super.mergeFrom(other);
                    return this;
                }
            }

            public Builder mergeFrom(cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupProgress other) {
                if (other == cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupProgress.getDefaultInstance()) return this;
                if (!other.getBackupTaskUuid().isEmpty()) {
                    backupTaskUuid_ = other.backupTaskUuid_;
                    onChanged();
                }
                if (!other.getDeviceUuidKey().isEmpty()) {
                    deviceUuidKey_ = other.deviceUuidKey_;
                    onChanged();
                }
                if (diskBackupProgressBuilder_ == null) {
                    if (!other.diskBackupProgress_.isEmpty()) {
                        if (diskBackupProgress_.isEmpty()) {
                            diskBackupProgress_ = other.diskBackupProgress_;
                            bitField0_ = (bitField0_ & ~0x00000004);
                        } else {
                            ensureDiskBackupProgressIsMutable();
                            diskBackupProgress_.addAll(other.diskBackupProgress_);
                        }
                        onChanged();
                    }
                } else {
                    if (!other.diskBackupProgress_.isEmpty()) {
                        if (diskBackupProgressBuilder_.isEmpty()) {
                            diskBackupProgressBuilder_.dispose();
                            diskBackupProgressBuilder_ = null;
                            diskBackupProgress_ = other.diskBackupProgress_;
                            bitField0_ = (bitField0_ & ~0x00000004);
                            diskBackupProgressBuilder_ =
                                    com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                                            getDiskBackupProgressFieldBuilder() : null;
                        } else {
                            diskBackupProgressBuilder_.addAllMessages(other.diskBackupProgress_);
                        }
                    }
                }
                if (partitionBackupProgressBuilder_ == null) {
                    if (!other.partitionBackupProgress_.isEmpty()) {
                        if (partitionBackupProgress_.isEmpty()) {
                            partitionBackupProgress_ = other.partitionBackupProgress_;
                            bitField0_ = (bitField0_ & ~0x00000008);
                        } else {
                            ensurePartitionBackupProgressIsMutable();
                            partitionBackupProgress_.addAll(other.partitionBackupProgress_);
                        }
                        onChanged();
                    }
                } else {
                    if (!other.partitionBackupProgress_.isEmpty()) {
                        if (partitionBackupProgressBuilder_.isEmpty()) {
                            partitionBackupProgressBuilder_.dispose();
                            partitionBackupProgressBuilder_ = null;
                            partitionBackupProgress_ = other.partitionBackupProgress_;
                            bitField0_ = (bitField0_ & ~0x00000008);
                            partitionBackupProgressBuilder_ =
                                    com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                                            getPartitionBackupProgressFieldBuilder() : null;
                        } else {
                            partitionBackupProgressBuilder_.addAllMessages(other.partitionBackupProgress_);
                        }
                    }
                }
                if (lvBackupProgressBuilder_ == null) {
                    if (!other.lvBackupProgress_.isEmpty()) {
                        if (lvBackupProgress_.isEmpty()) {
                            lvBackupProgress_ = other.lvBackupProgress_;
                            bitField0_ = (bitField0_ & ~0x00000010);
                        } else {
                            ensureLvBackupProgressIsMutable();
                            lvBackupProgress_.addAll(other.lvBackupProgress_);
                        }
                        onChanged();
                    }
                } else {
                    if (!other.lvBackupProgress_.isEmpty()) {
                        if (lvBackupProgressBuilder_.isEmpty()) {
                            lvBackupProgressBuilder_.dispose();
                            lvBackupProgressBuilder_ = null;
                            lvBackupProgress_ = other.lvBackupProgress_;
                            bitField0_ = (bitField0_ & ~0x00000010);
                            lvBackupProgressBuilder_ =
                                    com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                                            getLvBackupProgressFieldBuilder() : null;
                        } else {
                            lvBackupProgressBuilder_.addAllMessages(other.lvBackupProgress_);
                        }
                    }
                }
                if (other.getTotalProgress() != 0D) {
                    setTotalProgress(other.getTotalProgress());
                }
                if (other.getTotalNetSpeedBit() != 0L) {
                    setTotalNetSpeedBit(other.getTotalNetSpeedBit());
                }
                if (other.getTotalDiskSpeedBit() != 0L) {
                    setTotalDiskSpeedBit(other.getTotalDiskSpeedBit());
                }
                onChanged();
                return this;
            }

            public final boolean isInitialized() {
                return true;
            }

            public Builder mergeFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws java.io.IOException {
                cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupProgress parsedMessage = null;
                try {
                    parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
                } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                    parsedMessage = (cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupProgress) e.getUnfinishedMessage();
                    throw e.unwrapIOException();
                } finally {
                    if (parsedMessage != null) {
                        mergeFrom(parsedMessage);
                    }
                }
                return this;
            }
            private int bitField0_;

            private Object backupTaskUuid_ = "";
            /**
             * <pre>
             *备份任务唯一ID
             * </pre>
             *
             * <code>optional string backup_task_uuid = 1;</code>
             */
            public String getBackupTaskUuid() {
                Object ref = backupTaskUuid_;
                if (!(ref instanceof String)) {
                    com.google.protobuf.ByteString bs =
                            (com.google.protobuf.ByteString) ref;
                    String s = bs.toStringUtf8();
                    backupTaskUuid_ = s;
                    return s;
                } else {
                    return (String) ref;
                }
            }
            /**
             * <pre>
             *备份任务唯一ID
             * </pre>
             *
             * <code>optional string backup_task_uuid = 1;</code>
             */
            public com.google.protobuf.ByteString
            getBackupTaskUuidBytes() {
                Object ref = backupTaskUuid_;
                if (ref instanceof String) {
                    com.google.protobuf.ByteString b =
                            com.google.protobuf.ByteString.copyFromUtf8(
                                    (String) ref);
                    backupTaskUuid_ = b;
                    return b;
                } else {
                    return (com.google.protobuf.ByteString) ref;
                }
            }
            /**
             * <pre>
             *备份任务唯一ID
             * </pre>
             *
             * <code>optional string backup_task_uuid = 1;</code>
             */
            public Builder setBackupTaskUuid(
                    String value) {
                if (value == null) {
                    throw new NullPointerException();
                }

                backupTaskUuid_ = value;
                onChanged();
                return this;
            }
            /**
             * <pre>
             *备份任务唯一ID
             * </pre>
             *
             * <code>optional string backup_task_uuid = 1;</code>
             */
            public Builder clearBackupTaskUuid() {

                backupTaskUuid_ = getDefaultInstance().getBackupTaskUuid();
                onChanged();
                return this;
            }
            /**
             * <pre>
             *备份任务唯一ID
             * </pre>
             *
             * <code>optional string backup_task_uuid = 1;</code>
             */
            public Builder setBackupTaskUuidBytes(
                    com.google.protobuf.ByteString value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                checkByteStringIsUtf8(value);

                backupTaskUuid_ = value;
                onChanged();
                return this;
            }

            private Object deviceUuidKey_ = "";
            /**
             * <pre>
             *备份Agent 内部唯一ID,用于表示设备
             * </pre>
             *
             * <code>optional string device_uuid_key = 2;</code>
             */
            public String getDeviceUuidKey() {
                Object ref = deviceUuidKey_;
                if (!(ref instanceof String)) {
                    com.google.protobuf.ByteString bs =
                            (com.google.protobuf.ByteString) ref;
                    String s = bs.toStringUtf8();
                    deviceUuidKey_ = s;
                    return s;
                } else {
                    return (String) ref;
                }
            }
            /**
             * <pre>
             *备份Agent 内部唯一ID,用于表示设备
             * </pre>
             *
             * <code>optional string device_uuid_key = 2;</code>
             */
            public com.google.protobuf.ByteString
            getDeviceUuidKeyBytes() {
                Object ref = deviceUuidKey_;
                if (ref instanceof String) {
                    com.google.protobuf.ByteString b =
                            com.google.protobuf.ByteString.copyFromUtf8(
                                    (String) ref);
                    deviceUuidKey_ = b;
                    return b;
                } else {
                    return (com.google.protobuf.ByteString) ref;
                }
            }
            /**
             * <pre>
             *备份Agent 内部唯一ID,用于表示设备
             * </pre>
             *
             * <code>optional string device_uuid_key = 2;</code>
             */
            public Builder setDeviceUuidKey(
                    String value) {
                if (value == null) {
                    throw new NullPointerException();
                }

                deviceUuidKey_ = value;
                onChanged();
                return this;
            }
            /**
             * <pre>
             *备份Agent 内部唯一ID,用于表示设备
             * </pre>
             *
             * <code>optional string device_uuid_key = 2;</code>
             */
            public Builder clearDeviceUuidKey() {

                deviceUuidKey_ = getDefaultInstance().getDeviceUuidKey();
                onChanged();
                return this;
            }
            /**
             * <pre>
             *备份Agent 内部唯一ID,用于表示设备
             * </pre>
             *
             * <code>optional string device_uuid_key = 2;</code>
             */
            public Builder setDeviceUuidKeyBytes(
                    com.google.protobuf.ByteString value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                checkByteStringIsUtf8(value);

                deviceUuidKey_ = value;
                onChanged();
                return this;
            }

            private java.util.List<cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupProgress.HardwareBackupProgress> diskBackupProgress_ =
                    java.util.Collections.emptyList();
            private void ensureDiskBackupProgressIsMutable() {
                if (!((bitField0_ & 0x00000004) == 0x00000004)) {
                    diskBackupProgress_ = new java.util.ArrayList<cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupProgress.HardwareBackupProgress>(diskBackupProgress_);
                    bitField0_ |= 0x00000004;
                }
            }

            private com.google.protobuf.RepeatedFieldBuilderV3<
                    cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupProgress.HardwareBackupProgress, cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupProgress.HardwareBackupProgress.Builder, cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupProgress.HardwareBackupProgressOrBuilder> diskBackupProgressBuilder_;

            /**
             * <pre>
             *磁盘备份进度
             * </pre>
             *
             * <code>repeated .one2data.rbtmqmsgcli.client.BackupProgress.HardwareBackupProgress disk_backup_progress = 3;</code>
             */
            public java.util.List<cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupProgress.HardwareBackupProgress> getDiskBackupProgressList() {
                if (diskBackupProgressBuilder_ == null) {
                    return java.util.Collections.unmodifiableList(diskBackupProgress_);
                } else {
                    return diskBackupProgressBuilder_.getMessageList();
                }
            }
            /**
             * <pre>
             *磁盘备份进度
             * </pre>
             *
             * <code>repeated .one2data.rbtmqmsgcli.client.BackupProgress.HardwareBackupProgress disk_backup_progress = 3;</code>
             */
            public int getDiskBackupProgressCount() {
                if (diskBackupProgressBuilder_ == null) {
                    return diskBackupProgress_.size();
                } else {
                    return diskBackupProgressBuilder_.getCount();
                }
            }
            /**
             * <pre>
             *磁盘备份进度
             * </pre>
             *
             * <code>repeated .one2data.rbtmqmsgcli.client.BackupProgress.HardwareBackupProgress disk_backup_progress = 3;</code>
             */
            public cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupProgress.HardwareBackupProgress getDiskBackupProgress(int index) {
                if (diskBackupProgressBuilder_ == null) {
                    return diskBackupProgress_.get(index);
                } else {
                    return diskBackupProgressBuilder_.getMessage(index);
                }
            }
            /**
             * <pre>
             *磁盘备份进度
             * </pre>
             *
             * <code>repeated .one2data.rbtmqmsgcli.client.BackupProgress.HardwareBackupProgress disk_backup_progress = 3;</code>
             */
            public Builder setDiskBackupProgress(
                    int index, cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupProgress.HardwareBackupProgress value) {
                if (diskBackupProgressBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    ensureDiskBackupProgressIsMutable();
                    diskBackupProgress_.set(index, value);
                    onChanged();
                } else {
                    diskBackupProgressBuilder_.setMessage(index, value);
                }
                return this;
            }
            /**
             * <pre>
             *磁盘备份进度
             * </pre>
             *
             * <code>repeated .one2data.rbtmqmsgcli.client.BackupProgress.HardwareBackupProgress disk_backup_progress = 3;</code>
             */
            public Builder setDiskBackupProgress(
                    int index, cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupProgress.HardwareBackupProgress.Builder builderForValue) {
                if (diskBackupProgressBuilder_ == null) {
                    ensureDiskBackupProgressIsMutable();
                    diskBackupProgress_.set(index, builderForValue.build());
                    onChanged();
                } else {
                    diskBackupProgressBuilder_.setMessage(index, builderForValue.build());
                }
                return this;
            }
            /**
             * <pre>
             *磁盘备份进度
             * </pre>
             *
             * <code>repeated .one2data.rbtmqmsgcli.client.BackupProgress.HardwareBackupProgress disk_backup_progress = 3;</code>
             */
            public Builder addDiskBackupProgress(cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupProgress.HardwareBackupProgress value) {
                if (diskBackupProgressBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    ensureDiskBackupProgressIsMutable();
                    diskBackupProgress_.add(value);
                    onChanged();
                } else {
                    diskBackupProgressBuilder_.addMessage(value);
                }
                return this;
            }
            /**
             * <pre>
             *磁盘备份进度
             * </pre>
             *
             * <code>repeated .one2data.rbtmqmsgcli.client.BackupProgress.HardwareBackupProgress disk_backup_progress = 3;</code>
             */
            public Builder addDiskBackupProgress(
                    int index, cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupProgress.HardwareBackupProgress value) {
                if (diskBackupProgressBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    ensureDiskBackupProgressIsMutable();
                    diskBackupProgress_.add(index, value);
                    onChanged();
                } else {
                    diskBackupProgressBuilder_.addMessage(index, value);
                }
                return this;
            }
            /**
             * <pre>
             *磁盘备份进度
             * </pre>
             *
             * <code>repeated .one2data.rbtmqmsgcli.client.BackupProgress.HardwareBackupProgress disk_backup_progress = 3;</code>
             */
            public Builder addDiskBackupProgress(
                    cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupProgress.HardwareBackupProgress.Builder builderForValue) {
                if (diskBackupProgressBuilder_ == null) {
                    ensureDiskBackupProgressIsMutable();
                    diskBackupProgress_.add(builderForValue.build());
                    onChanged();
                } else {
                    diskBackupProgressBuilder_.addMessage(builderForValue.build());
                }
                return this;
            }
            /**
             * <pre>
             *磁盘备份进度
             * </pre>
             *
             * <code>repeated .one2data.rbtmqmsgcli.client.BackupProgress.HardwareBackupProgress disk_backup_progress = 3;</code>
             */
            public Builder addDiskBackupProgress(
                    int index, cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupProgress.HardwareBackupProgress.Builder builderForValue) {
                if (diskBackupProgressBuilder_ == null) {
                    ensureDiskBackupProgressIsMutable();
                    diskBackupProgress_.add(index, builderForValue.build());
                    onChanged();
                } else {
                    diskBackupProgressBuilder_.addMessage(index, builderForValue.build());
                }
                return this;
            }
            /**
             * <pre>
             *磁盘备份进度
             * </pre>
             *
             * <code>repeated .one2data.rbtmqmsgcli.client.BackupProgress.HardwareBackupProgress disk_backup_progress = 3;</code>
             */
            public Builder addAllDiskBackupProgress(
                    Iterable<? extends cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupProgress.HardwareBackupProgress> values) {
                if (diskBackupProgressBuilder_ == null) {
                    ensureDiskBackupProgressIsMutable();
                    com.google.protobuf.AbstractMessageLite.Builder.addAll(
                            values, diskBackupProgress_);
                    onChanged();
                } else {
                    diskBackupProgressBuilder_.addAllMessages(values);
                }
                return this;
            }
            /**
             * <pre>
             *磁盘备份进度
             * </pre>
             *
             * <code>repeated .one2data.rbtmqmsgcli.client.BackupProgress.HardwareBackupProgress disk_backup_progress = 3;</code>
             */
            public Builder clearDiskBackupProgress() {
                if (diskBackupProgressBuilder_ == null) {
                    diskBackupProgress_ = java.util.Collections.emptyList();
                    bitField0_ = (bitField0_ & ~0x00000004);
                    onChanged();
                } else {
                    diskBackupProgressBuilder_.clear();
                }
                return this;
            }
            /**
             * <pre>
             *磁盘备份进度
             * </pre>
             *
             * <code>repeated .one2data.rbtmqmsgcli.client.BackupProgress.HardwareBackupProgress disk_backup_progress = 3;</code>
             */
            public Builder removeDiskBackupProgress(int index) {
                if (diskBackupProgressBuilder_ == null) {
                    ensureDiskBackupProgressIsMutable();
                    diskBackupProgress_.remove(index);
                    onChanged();
                } else {
                    diskBackupProgressBuilder_.remove(index);
                }
                return this;
            }
            /**
             * <pre>
             *磁盘备份进度
             * </pre>
             *
             * <code>repeated .one2data.rbtmqmsgcli.client.BackupProgress.HardwareBackupProgress disk_backup_progress = 3;</code>
             */
            public cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupProgress.HardwareBackupProgress.Builder getDiskBackupProgressBuilder(
                    int index) {
                return getDiskBackupProgressFieldBuilder().getBuilder(index);
            }
            /**
             * <pre>
             *磁盘备份进度
             * </pre>
             *
             * <code>repeated .one2data.rbtmqmsgcli.client.BackupProgress.HardwareBackupProgress disk_backup_progress = 3;</code>
             */
            public cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupProgress.HardwareBackupProgressOrBuilder getDiskBackupProgressOrBuilder(
                    int index) {
                if (diskBackupProgressBuilder_ == null) {
                    return diskBackupProgress_.get(index);  } else {
                    return diskBackupProgressBuilder_.getMessageOrBuilder(index);
                }
            }
            /**
             * <pre>
             *磁盘备份进度
             * </pre>
             *
             * <code>repeated .one2data.rbtmqmsgcli.client.BackupProgress.HardwareBackupProgress disk_backup_progress = 3;</code>
             */
            public java.util.List<? extends cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupProgress.HardwareBackupProgressOrBuilder>
            getDiskBackupProgressOrBuilderList() {
                if (diskBackupProgressBuilder_ != null) {
                    return diskBackupProgressBuilder_.getMessageOrBuilderList();
                } else {
                    return java.util.Collections.unmodifiableList(diskBackupProgress_);
                }
            }
            /**
             * <pre>
             *磁盘备份进度
             * </pre>
             *
             * <code>repeated .one2data.rbtmqmsgcli.client.BackupProgress.HardwareBackupProgress disk_backup_progress = 3;</code>
             */
            public cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupProgress.HardwareBackupProgress.Builder addDiskBackupProgressBuilder() {
                return getDiskBackupProgressFieldBuilder().addBuilder(
                        cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupProgress.HardwareBackupProgress.getDefaultInstance());
            }
            /**
             * <pre>
             *磁盘备份进度
             * </pre>
             *
             * <code>repeated .one2data.rbtmqmsgcli.client.BackupProgress.HardwareBackupProgress disk_backup_progress = 3;</code>
             */
            public cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupProgress.HardwareBackupProgress.Builder addDiskBackupProgressBuilder(
                    int index) {
                return getDiskBackupProgressFieldBuilder().addBuilder(
                        index, cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupProgress.HardwareBackupProgress.getDefaultInstance());
            }
            /**
             * <pre>
             *磁盘备份进度
             * </pre>
             *
             * <code>repeated .one2data.rbtmqmsgcli.client.BackupProgress.HardwareBackupProgress disk_backup_progress = 3;</code>
             */
            public java.util.List<cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupProgress.HardwareBackupProgress.Builder>
            getDiskBackupProgressBuilderList() {
                return getDiskBackupProgressFieldBuilder().getBuilderList();
            }
            private com.google.protobuf.RepeatedFieldBuilderV3<
                    cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupProgress.HardwareBackupProgress, cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupProgress.HardwareBackupProgress.Builder, cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupProgress.HardwareBackupProgressOrBuilder>
            getDiskBackupProgressFieldBuilder() {
                if (diskBackupProgressBuilder_ == null) {
                    diskBackupProgressBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
                            cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupProgress.HardwareBackupProgress, cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupProgress.HardwareBackupProgress.Builder, cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupProgress.HardwareBackupProgressOrBuilder>(
                            diskBackupProgress_,
                            ((bitField0_ & 0x00000004) == 0x00000004),
                            getParentForChildren(),
                            isClean());
                    diskBackupProgress_ = null;
                }
                return diskBackupProgressBuilder_;
            }

            private java.util.List<cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupProgress.HardwareBackupProgress> partitionBackupProgress_ =
                    java.util.Collections.emptyList();
            private void ensurePartitionBackupProgressIsMutable() {
                if (!((bitField0_ & 0x00000008) == 0x00000008)) {
                    partitionBackupProgress_ = new java.util.ArrayList<cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupProgress.HardwareBackupProgress>(partitionBackupProgress_);
                    bitField0_ |= 0x00000008;
                }
            }

            private com.google.protobuf.RepeatedFieldBuilderV3<
                    cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupProgress.HardwareBackupProgress, cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupProgress.HardwareBackupProgress.Builder, cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupProgress.HardwareBackupProgressOrBuilder> partitionBackupProgressBuilder_;

            /**
             * <pre>
             *分区备份进度
             * </pre>
             *
             * <code>repeated .one2data.rbtmqmsgcli.client.BackupProgress.HardwareBackupProgress partition_backup_progress = 4;</code>
             */
            public java.util.List<cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupProgress.HardwareBackupProgress> getPartitionBackupProgressList() {
                if (partitionBackupProgressBuilder_ == null) {
                    return java.util.Collections.unmodifiableList(partitionBackupProgress_);
                } else {
                    return partitionBackupProgressBuilder_.getMessageList();
                }
            }
            /**
             * <pre>
             *分区备份进度
             * </pre>
             *
             * <code>repeated .one2data.rbtmqmsgcli.client.BackupProgress.HardwareBackupProgress partition_backup_progress = 4;</code>
             */
            public int getPartitionBackupProgressCount() {
                if (partitionBackupProgressBuilder_ == null) {
                    return partitionBackupProgress_.size();
                } else {
                    return partitionBackupProgressBuilder_.getCount();
                }
            }
            /**
             * <pre>
             *分区备份进度
             * </pre>
             *
             * <code>repeated .one2data.rbtmqmsgcli.client.BackupProgress.HardwareBackupProgress partition_backup_progress = 4;</code>
             */
            public cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupProgress.HardwareBackupProgress getPartitionBackupProgress(int index) {
                if (partitionBackupProgressBuilder_ == null) {
                    return partitionBackupProgress_.get(index);
                } else {
                    return partitionBackupProgressBuilder_.getMessage(index);
                }
            }
            /**
             * <pre>
             *分区备份进度
             * </pre>
             *
             * <code>repeated .one2data.rbtmqmsgcli.client.BackupProgress.HardwareBackupProgress partition_backup_progress = 4;</code>
             */
            public Builder setPartitionBackupProgress(
                    int index, cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupProgress.HardwareBackupProgress value) {
                if (partitionBackupProgressBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    ensurePartitionBackupProgressIsMutable();
                    partitionBackupProgress_.set(index, value);
                    onChanged();
                } else {
                    partitionBackupProgressBuilder_.setMessage(index, value);
                }
                return this;
            }
            /**
             * <pre>
             *分区备份进度
             * </pre>
             *
             * <code>repeated .one2data.rbtmqmsgcli.client.BackupProgress.HardwareBackupProgress partition_backup_progress = 4;</code>
             */
            public Builder setPartitionBackupProgress(
                    int index, cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupProgress.HardwareBackupProgress.Builder builderForValue) {
                if (partitionBackupProgressBuilder_ == null) {
                    ensurePartitionBackupProgressIsMutable();
                    partitionBackupProgress_.set(index, builderForValue.build());
                    onChanged();
                } else {
                    partitionBackupProgressBuilder_.setMessage(index, builderForValue.build());
                }
                return this;
            }
            /**
             * <pre>
             *分区备份进度
             * </pre>
             *
             * <code>repeated .one2data.rbtmqmsgcli.client.BackupProgress.HardwareBackupProgress partition_backup_progress = 4;</code>
             */
            public Builder addPartitionBackupProgress(cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupProgress.HardwareBackupProgress value) {
                if (partitionBackupProgressBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    ensurePartitionBackupProgressIsMutable();
                    partitionBackupProgress_.add(value);
                    onChanged();
                } else {
                    partitionBackupProgressBuilder_.addMessage(value);
                }
                return this;
            }
            /**
             * <pre>
             *分区备份进度
             * </pre>
             *
             * <code>repeated .one2data.rbtmqmsgcli.client.BackupProgress.HardwareBackupProgress partition_backup_progress = 4;</code>
             */
            public Builder addPartitionBackupProgress(
                    int index, cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupProgress.HardwareBackupProgress value) {
                if (partitionBackupProgressBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    ensurePartitionBackupProgressIsMutable();
                    partitionBackupProgress_.add(index, value);
                    onChanged();
                } else {
                    partitionBackupProgressBuilder_.addMessage(index, value);
                }
                return this;
            }
            /**
             * <pre>
             *分区备份进度
             * </pre>
             *
             * <code>repeated .one2data.rbtmqmsgcli.client.BackupProgress.HardwareBackupProgress partition_backup_progress = 4;</code>
             */
            public Builder addPartitionBackupProgress(
                    cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupProgress.HardwareBackupProgress.Builder builderForValue) {
                if (partitionBackupProgressBuilder_ == null) {
                    ensurePartitionBackupProgressIsMutable();
                    partitionBackupProgress_.add(builderForValue.build());
                    onChanged();
                } else {
                    partitionBackupProgressBuilder_.addMessage(builderForValue.build());
                }
                return this;
            }
            /**
             * <pre>
             *分区备份进度
             * </pre>
             *
             * <code>repeated .one2data.rbtmqmsgcli.client.BackupProgress.HardwareBackupProgress partition_backup_progress = 4;</code>
             */
            public Builder addPartitionBackupProgress(
                    int index, cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupProgress.HardwareBackupProgress.Builder builderForValue) {
                if (partitionBackupProgressBuilder_ == null) {
                    ensurePartitionBackupProgressIsMutable();
                    partitionBackupProgress_.add(index, builderForValue.build());
                    onChanged();
                } else {
                    partitionBackupProgressBuilder_.addMessage(index, builderForValue.build());
                }
                return this;
            }
            /**
             * <pre>
             *分区备份进度
             * </pre>
             *
             * <code>repeated .one2data.rbtmqmsgcli.client.BackupProgress.HardwareBackupProgress partition_backup_progress = 4;</code>
             */
            public Builder addAllPartitionBackupProgress(
                    Iterable<? extends cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupProgress.HardwareBackupProgress> values) {
                if (partitionBackupProgressBuilder_ == null) {
                    ensurePartitionBackupProgressIsMutable();
                    com.google.protobuf.AbstractMessageLite.Builder.addAll(
                            values, partitionBackupProgress_);
                    onChanged();
                } else {
                    partitionBackupProgressBuilder_.addAllMessages(values);
                }
                return this;
            }
            /**
             * <pre>
             *分区备份进度
             * </pre>
             *
             * <code>repeated .one2data.rbtmqmsgcli.client.BackupProgress.HardwareBackupProgress partition_backup_progress = 4;</code>
             */
            public Builder clearPartitionBackupProgress() {
                if (partitionBackupProgressBuilder_ == null) {
                    partitionBackupProgress_ = java.util.Collections.emptyList();
                    bitField0_ = (bitField0_ & ~0x00000008);
                    onChanged();
                } else {
                    partitionBackupProgressBuilder_.clear();
                }
                return this;
            }
            /**
             * <pre>
             *分区备份进度
             * </pre>
             *
             * <code>repeated .one2data.rbtmqmsgcli.client.BackupProgress.HardwareBackupProgress partition_backup_progress = 4;</code>
             */
            public Builder removePartitionBackupProgress(int index) {
                if (partitionBackupProgressBuilder_ == null) {
                    ensurePartitionBackupProgressIsMutable();
                    partitionBackupProgress_.remove(index);
                    onChanged();
                } else {
                    partitionBackupProgressBuilder_.remove(index);
                }
                return this;
            }
            /**
             * <pre>
             *分区备份进度
             * </pre>
             *
             * <code>repeated .one2data.rbtmqmsgcli.client.BackupProgress.HardwareBackupProgress partition_backup_progress = 4;</code>
             */
            public cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupProgress.HardwareBackupProgress.Builder getPartitionBackupProgressBuilder(
                    int index) {
                return getPartitionBackupProgressFieldBuilder().getBuilder(index);
            }
            /**
             * <pre>
             *分区备份进度
             * </pre>
             *
             * <code>repeated .one2data.rbtmqmsgcli.client.BackupProgress.HardwareBackupProgress partition_backup_progress = 4;</code>
             */
            public cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupProgress.HardwareBackupProgressOrBuilder getPartitionBackupProgressOrBuilder(
                    int index) {
                if (partitionBackupProgressBuilder_ == null) {
                    return partitionBackupProgress_.get(index);  } else {
                    return partitionBackupProgressBuilder_.getMessageOrBuilder(index);
                }
            }
            /**
             * <pre>
             *分区备份进度
             * </pre>
             *
             * <code>repeated .one2data.rbtmqmsgcli.client.BackupProgress.HardwareBackupProgress partition_backup_progress = 4;</code>
             */
            public java.util.List<? extends cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupProgress.HardwareBackupProgressOrBuilder>
            getPartitionBackupProgressOrBuilderList() {
                if (partitionBackupProgressBuilder_ != null) {
                    return partitionBackupProgressBuilder_.getMessageOrBuilderList();
                } else {
                    return java.util.Collections.unmodifiableList(partitionBackupProgress_);
                }
            }
            /**
             * <pre>
             *分区备份进度
             * </pre>
             *
             * <code>repeated .one2data.rbtmqmsgcli.client.BackupProgress.HardwareBackupProgress partition_backup_progress = 4;</code>
             */
            public cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupProgress.HardwareBackupProgress.Builder addPartitionBackupProgressBuilder() {
                return getPartitionBackupProgressFieldBuilder().addBuilder(
                        cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupProgress.HardwareBackupProgress.getDefaultInstance());
            }
            /**
             * <pre>
             *分区备份进度
             * </pre>
             *
             * <code>repeated .one2data.rbtmqmsgcli.client.BackupProgress.HardwareBackupProgress partition_backup_progress = 4;</code>
             */
            public cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupProgress.HardwareBackupProgress.Builder addPartitionBackupProgressBuilder(
                    int index) {
                return getPartitionBackupProgressFieldBuilder().addBuilder(
                        index, cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupProgress.HardwareBackupProgress.getDefaultInstance());
            }
            /**
             * <pre>
             *分区备份进度
             * </pre>
             *
             * <code>repeated .one2data.rbtmqmsgcli.client.BackupProgress.HardwareBackupProgress partition_backup_progress = 4;</code>
             */
            public java.util.List<cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupProgress.HardwareBackupProgress.Builder>
            getPartitionBackupProgressBuilderList() {
                return getPartitionBackupProgressFieldBuilder().getBuilderList();
            }
            private com.google.protobuf.RepeatedFieldBuilderV3<
                    cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupProgress.HardwareBackupProgress, cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupProgress.HardwareBackupProgress.Builder, cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupProgress.HardwareBackupProgressOrBuilder>
            getPartitionBackupProgressFieldBuilder() {
                if (partitionBackupProgressBuilder_ == null) {
                    partitionBackupProgressBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
                            cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupProgress.HardwareBackupProgress, cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupProgress.HardwareBackupProgress.Builder, cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupProgress.HardwareBackupProgressOrBuilder>(
                            partitionBackupProgress_,
                            ((bitField0_ & 0x00000008) == 0x00000008),
                            getParentForChildren(),
                            isClean());
                    partitionBackupProgress_ = null;
                }
                return partitionBackupProgressBuilder_;
            }

            private java.util.List<cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupProgress.HardwareBackupProgress> lvBackupProgress_ =
                    java.util.Collections.emptyList();
            private void ensureLvBackupProgressIsMutable() {
                if (!((bitField0_ & 0x00000010) == 0x00000010)) {
                    lvBackupProgress_ = new java.util.ArrayList<cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupProgress.HardwareBackupProgress>(lvBackupProgress_);
                    bitField0_ |= 0x00000010;
                }
            }

            private com.google.protobuf.RepeatedFieldBuilderV3<
                    cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupProgress.HardwareBackupProgress, cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupProgress.HardwareBackupProgress.Builder, cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupProgress.HardwareBackupProgressOrBuilder> lvBackupProgressBuilder_;

            /**
             * <pre>
             *逻辑卷备份进度
             * </pre>
             *
             * <code>repeated .one2data.rbtmqmsgcli.client.BackupProgress.HardwareBackupProgress lv_backup_progress = 5;</code>
             */
            public java.util.List<cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupProgress.HardwareBackupProgress> getLvBackupProgressList() {
                if (lvBackupProgressBuilder_ == null) {
                    return java.util.Collections.unmodifiableList(lvBackupProgress_);
                } else {
                    return lvBackupProgressBuilder_.getMessageList();
                }
            }
            /**
             * <pre>
             *逻辑卷备份进度
             * </pre>
             *
             * <code>repeated .one2data.rbtmqmsgcli.client.BackupProgress.HardwareBackupProgress lv_backup_progress = 5;</code>
             */
            public int getLvBackupProgressCount() {
                if (lvBackupProgressBuilder_ == null) {
                    return lvBackupProgress_.size();
                } else {
                    return lvBackupProgressBuilder_.getCount();
                }
            }
            /**
             * <pre>
             *逻辑卷备份进度
             * </pre>
             *
             * <code>repeated .one2data.rbtmqmsgcli.client.BackupProgress.HardwareBackupProgress lv_backup_progress = 5;</code>
             */
            public cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupProgress.HardwareBackupProgress getLvBackupProgress(int index) {
                if (lvBackupProgressBuilder_ == null) {
                    return lvBackupProgress_.get(index);
                } else {
                    return lvBackupProgressBuilder_.getMessage(index);
                }
            }
            /**
             * <pre>
             *逻辑卷备份进度
             * </pre>
             *
             * <code>repeated .one2data.rbtmqmsgcli.client.BackupProgress.HardwareBackupProgress lv_backup_progress = 5;</code>
             */
            public Builder setLvBackupProgress(
                    int index, cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupProgress.HardwareBackupProgress value) {
                if (lvBackupProgressBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    ensureLvBackupProgressIsMutable();
                    lvBackupProgress_.set(index, value);
                    onChanged();
                } else {
                    lvBackupProgressBuilder_.setMessage(index, value);
                }
                return this;
            }
            /**
             * <pre>
             *逻辑卷备份进度
             * </pre>
             *
             * <code>repeated .one2data.rbtmqmsgcli.client.BackupProgress.HardwareBackupProgress lv_backup_progress = 5;</code>
             */
            public Builder setLvBackupProgress(
                    int index, cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupProgress.HardwareBackupProgress.Builder builderForValue) {
                if (lvBackupProgressBuilder_ == null) {
                    ensureLvBackupProgressIsMutable();
                    lvBackupProgress_.set(index, builderForValue.build());
                    onChanged();
                } else {
                    lvBackupProgressBuilder_.setMessage(index, builderForValue.build());
                }
                return this;
            }
            /**
             * <pre>
             *逻辑卷备份进度
             * </pre>
             *
             * <code>repeated .one2data.rbtmqmsgcli.client.BackupProgress.HardwareBackupProgress lv_backup_progress = 5;</code>
             */
            public Builder addLvBackupProgress(cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupProgress.HardwareBackupProgress value) {
                if (lvBackupProgressBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    ensureLvBackupProgressIsMutable();
                    lvBackupProgress_.add(value);
                    onChanged();
                } else {
                    lvBackupProgressBuilder_.addMessage(value);
                }
                return this;
            }
            /**
             * <pre>
             *逻辑卷备份进度
             * </pre>
             *
             * <code>repeated .one2data.rbtmqmsgcli.client.BackupProgress.HardwareBackupProgress lv_backup_progress = 5;</code>
             */
            public Builder addLvBackupProgress(
                    int index, cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupProgress.HardwareBackupProgress value) {
                if (lvBackupProgressBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    ensureLvBackupProgressIsMutable();
                    lvBackupProgress_.add(index, value);
                    onChanged();
                } else {
                    lvBackupProgressBuilder_.addMessage(index, value);
                }
                return this;
            }
            /**
             * <pre>
             *逻辑卷备份进度
             * </pre>
             *
             * <code>repeated .one2data.rbtmqmsgcli.client.BackupProgress.HardwareBackupProgress lv_backup_progress = 5;</code>
             */
            public Builder addLvBackupProgress(
                    cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupProgress.HardwareBackupProgress.Builder builderForValue) {
                if (lvBackupProgressBuilder_ == null) {
                    ensureLvBackupProgressIsMutable();
                    lvBackupProgress_.add(builderForValue.build());
                    onChanged();
                } else {
                    lvBackupProgressBuilder_.addMessage(builderForValue.build());
                }
                return this;
            }
            /**
             * <pre>
             *逻辑卷备份进度
             * </pre>
             *
             * <code>repeated .one2data.rbtmqmsgcli.client.BackupProgress.HardwareBackupProgress lv_backup_progress = 5;</code>
             */
            public Builder addLvBackupProgress(
                    int index, cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupProgress.HardwareBackupProgress.Builder builderForValue) {
                if (lvBackupProgressBuilder_ == null) {
                    ensureLvBackupProgressIsMutable();
                    lvBackupProgress_.add(index, builderForValue.build());
                    onChanged();
                } else {
                    lvBackupProgressBuilder_.addMessage(index, builderForValue.build());
                }
                return this;
            }
            /**
             * <pre>
             *逻辑卷备份进度
             * </pre>
             *
             * <code>repeated .one2data.rbtmqmsgcli.client.BackupProgress.HardwareBackupProgress lv_backup_progress = 5;</code>
             */
            public Builder addAllLvBackupProgress(
                    Iterable<? extends cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupProgress.HardwareBackupProgress> values) {
                if (lvBackupProgressBuilder_ == null) {
                    ensureLvBackupProgressIsMutable();
                    com.google.protobuf.AbstractMessageLite.Builder.addAll(
                            values, lvBackupProgress_);
                    onChanged();
                } else {
                    lvBackupProgressBuilder_.addAllMessages(values);
                }
                return this;
            }
            /**
             * <pre>
             *逻辑卷备份进度
             * </pre>
             *
             * <code>repeated .one2data.rbtmqmsgcli.client.BackupProgress.HardwareBackupProgress lv_backup_progress = 5;</code>
             */
            public Builder clearLvBackupProgress() {
                if (lvBackupProgressBuilder_ == null) {
                    lvBackupProgress_ = java.util.Collections.emptyList();
                    bitField0_ = (bitField0_ & ~0x00000010);
                    onChanged();
                } else {
                    lvBackupProgressBuilder_.clear();
                }
                return this;
            }
            /**
             * <pre>
             *逻辑卷备份进度
             * </pre>
             *
             * <code>repeated .one2data.rbtmqmsgcli.client.BackupProgress.HardwareBackupProgress lv_backup_progress = 5;</code>
             */
            public Builder removeLvBackupProgress(int index) {
                if (lvBackupProgressBuilder_ == null) {
                    ensureLvBackupProgressIsMutable();
                    lvBackupProgress_.remove(index);
                    onChanged();
                } else {
                    lvBackupProgressBuilder_.remove(index);
                }
                return this;
            }
            /**
             * <pre>
             *逻辑卷备份进度
             * </pre>
             *
             * <code>repeated .one2data.rbtmqmsgcli.client.BackupProgress.HardwareBackupProgress lv_backup_progress = 5;</code>
             */
            public cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupProgress.HardwareBackupProgress.Builder getLvBackupProgressBuilder(
                    int index) {
                return getLvBackupProgressFieldBuilder().getBuilder(index);
            }
            /**
             * <pre>
             *逻辑卷备份进度
             * </pre>
             *
             * <code>repeated .one2data.rbtmqmsgcli.client.BackupProgress.HardwareBackupProgress lv_backup_progress = 5;</code>
             */
            public cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupProgress.HardwareBackupProgressOrBuilder getLvBackupProgressOrBuilder(
                    int index) {
                if (lvBackupProgressBuilder_ == null) {
                    return lvBackupProgress_.get(index);  } else {
                    return lvBackupProgressBuilder_.getMessageOrBuilder(index);
                }
            }
            /**
             * <pre>
             *逻辑卷备份进度
             * </pre>
             *
             * <code>repeated .one2data.rbtmqmsgcli.client.BackupProgress.HardwareBackupProgress lv_backup_progress = 5;</code>
             */
            public java.util.List<? extends cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupProgress.HardwareBackupProgressOrBuilder>
            getLvBackupProgressOrBuilderList() {
                if (lvBackupProgressBuilder_ != null) {
                    return lvBackupProgressBuilder_.getMessageOrBuilderList();
                } else {
                    return java.util.Collections.unmodifiableList(lvBackupProgress_);
                }
            }
            /**
             * <pre>
             *逻辑卷备份进度
             * </pre>
             *
             * <code>repeated .one2data.rbtmqmsgcli.client.BackupProgress.HardwareBackupProgress lv_backup_progress = 5;</code>
             */
            public cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupProgress.HardwareBackupProgress.Builder addLvBackupProgressBuilder() {
                return getLvBackupProgressFieldBuilder().addBuilder(
                        cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupProgress.HardwareBackupProgress.getDefaultInstance());
            }
            /**
             * <pre>
             *逻辑卷备份进度
             * </pre>
             *
             * <code>repeated .one2data.rbtmqmsgcli.client.BackupProgress.HardwareBackupProgress lv_backup_progress = 5;</code>
             */
            public cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupProgress.HardwareBackupProgress.Builder addLvBackupProgressBuilder(
                    int index) {
                return getLvBackupProgressFieldBuilder().addBuilder(
                        index, cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupProgress.HardwareBackupProgress.getDefaultInstance());
            }
            /**
             * <pre>
             *逻辑卷备份进度
             * </pre>
             *
             * <code>repeated .one2data.rbtmqmsgcli.client.BackupProgress.HardwareBackupProgress lv_backup_progress = 5;</code>
             */
            public java.util.List<cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupProgress.HardwareBackupProgress.Builder>
            getLvBackupProgressBuilderList() {
                return getLvBackupProgressFieldBuilder().getBuilderList();
            }
            private com.google.protobuf.RepeatedFieldBuilderV3<
                    cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupProgress.HardwareBackupProgress, cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupProgress.HardwareBackupProgress.Builder, cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupProgress.HardwareBackupProgressOrBuilder>
            getLvBackupProgressFieldBuilder() {
                if (lvBackupProgressBuilder_ == null) {
                    lvBackupProgressBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
                            cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupProgress.HardwareBackupProgress, cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupProgress.HardwareBackupProgress.Builder, cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupProgress.HardwareBackupProgressOrBuilder>(
                            lvBackupProgress_,
                            ((bitField0_ & 0x00000010) == 0x00000010),
                            getParentForChildren(),
                            isClean());
                    lvBackupProgress_ = null;
                }
                return lvBackupProgressBuilder_;
            }

            private double totalProgress_ ;
            /**
             * <pre>
             *备份任务总进度
             * </pre>
             *
             * <code>optional double total_progress = 6;</code>
             */
            public double getTotalProgress() {
                return totalProgress_;
            }
            /**
             * <pre>
             *备份任务总进度
             * </pre>
             *
             * <code>optional double total_progress = 6;</code>
             */
            public Builder setTotalProgress(double value) {

                totalProgress_ = value;
                onChanged();
                return this;
            }
            /**
             * <pre>
             *备份任务总进度
             * </pre>
             *
             * <code>optional double total_progress = 6;</code>
             */
            public Builder clearTotalProgress() {

                totalProgress_ = 0D;
                onChanged();
                return this;
            }

            private long totalNetSpeedBit_ ;
            /**
             * <pre>
             *备份网速，即每秒通过网络发出的bit数
             * </pre>
             *
             * <code>optional int64 total_net_speed_bit = 7;</code>
             */
            public long getTotalNetSpeedBit() {
                return totalNetSpeedBit_;
            }
            /**
             * <pre>
             *备份网速，即每秒通过网络发出的bit数
             * </pre>
             *
             * <code>optional int64 total_net_speed_bit = 7;</code>
             */
            public Builder setTotalNetSpeedBit(long value) {

                totalNetSpeedBit_ = value;
                onChanged();
                return this;
            }
            /**
             * <pre>
             *备份网速，即每秒通过网络发出的bit数
             * </pre>
             *
             * <code>optional int64 total_net_speed_bit = 7;</code>
             */
            public Builder clearTotalNetSpeedBit() {

                totalNetSpeedBit_ = 0L;
                onChanged();
                return this;
            }

            private long totalDiskSpeedBit_ ;
            /**
             * <pre>
             *备份磁盘速率，即每秒从磁盘读取的bit数
             * </pre>
             *
             * <code>optional int64 total_disk_speed_bit = 8;</code>
             */
            public long getTotalDiskSpeedBit() {
                return totalDiskSpeedBit_;
            }
            /**
             * <pre>
             *备份磁盘速率，即每秒从磁盘读取的bit数
             * </pre>
             *
             * <code>optional int64 total_disk_speed_bit = 8;</code>
             */
            public Builder setTotalDiskSpeedBit(long value) {

                totalDiskSpeedBit_ = value;
                onChanged();
                return this;
            }
            /**
             * <pre>
             *备份磁盘速率，即每秒从磁盘读取的bit数
             * </pre>
             *
             * <code>optional int64 total_disk_speed_bit = 8;</code>
             */
            public Builder clearTotalDiskSpeedBit() {

                totalDiskSpeedBit_ = 0L;
                onChanged();
                return this;
            }
            public final Builder setUnknownFields(
                    final com.google.protobuf.UnknownFieldSet unknownFields) {
                return this;
            }

            public final Builder mergeUnknownFields(
                    final com.google.protobuf.UnknownFieldSet unknownFields) {
                return this;
            }


            // @@protoc_insertion_point(builder_scope:one2data.rbtmqmsgcli.client.BackupProgress)
        }

        // @@protoc_insertion_point(class_scope:one2data.rbtmqmsgcli.client.BackupProgress)
        private static final cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupProgress DEFAULT_INSTANCE;
        static {
            DEFAULT_INSTANCE = new cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupProgress();
        }

        public static cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupProgress getDefaultInstance() {
            return DEFAULT_INSTANCE;
        }

        private static final com.google.protobuf.Parser<BackupProgress>
                PARSER = new com.google.protobuf.AbstractParser<BackupProgress>() {
            public BackupProgress parsePartialFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws com.google.protobuf.InvalidProtocolBufferException {
                return new BackupProgress(input, extensionRegistry);
            }
        };

        public static com.google.protobuf.Parser<BackupProgress> parser() {
            return PARSER;
        }

        @Override
        public com.google.protobuf.Parser<BackupProgress> getParserForType() {
            return PARSER;
        }

        public cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupProgress getDefaultInstanceForType() {
            return DEFAULT_INSTANCE;
        }

    }

    public interface NoEnoughAuthorizedLunCapacityReportOrBuilder extends
            // @@protoc_insertion_point(interface_extends:one2data.rbtmqmsgcli.client.NoEnoughAuthorizedLunCapacityReport)
            com.google.protobuf.MessageOrBuilder {

        /**
         * <pre>
         *备份任务唯一ID
         * </pre>
         *
         * <code>optional string backup_task_uuid = 1;</code>
         */
        String getBackupTaskUuid();
        /**
         * <pre>
         *备份任务唯一ID
         * </pre>
         *
         * <code>optional string backup_task_uuid = 1;</code>
         */
        com.google.protobuf.ByteString
        getBackupTaskUuidBytes();
    }
    /**
     * <pre>
     *************客户端主动上报备份存储容量超出限额******************
     * </pre>
     *
     * Protobuf type {@code one2data.rbtmqmsgcli.client.NoEnoughAuthorizedLunCapacityReport}
     */
    public  static final class NoEnoughAuthorizedLunCapacityReport extends
            com.google.protobuf.GeneratedMessageV3 implements
            // @@protoc_insertion_point(message_implements:one2data.rbtmqmsgcli.client.NoEnoughAuthorizedLunCapacityReport)
            NoEnoughAuthorizedLunCapacityReportOrBuilder {
        // Use NoEnoughAuthorizedLunCapacityReport.newBuilder() to construct.
        private NoEnoughAuthorizedLunCapacityReport(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
            super(builder);
        }
        private NoEnoughAuthorizedLunCapacityReport() {
            backupTaskUuid_ = "";
        }

        @Override
        public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
            return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
        }
        private NoEnoughAuthorizedLunCapacityReport(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            this();
            int mutable_bitField0_ = 0;
            try {
                boolean done = false;
                while (!done) {
                    int tag = input.readTag();
                    switch (tag) {
                        case 0:
                            done = true;
                            break;
                        default: {
                            if (!input.skipField(tag)) {
                                done = true;
                            }
                            break;
                        }
                        case 10: {
                            String s = input.readStringRequireUtf8();

                            backupTaskUuid_ = s;
                            break;
                        }
                    }
                }
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(this);
            } catch (java.io.IOException e) {
                throw new com.google.protobuf.InvalidProtocolBufferException(
                        e).setUnfinishedMessage(this);
            } finally {
                makeExtensionsImmutable();
            }
        }
        public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
            return cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.internal_static_one2data_rbtmqmsgcli_client_NoEnoughAuthorizedLunCapacityReport_descriptor;
        }

        protected FieldAccessorTable
        internalGetFieldAccessorTable() {
            return cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.internal_static_one2data_rbtmqmsgcli_client_NoEnoughAuthorizedLunCapacityReport_fieldAccessorTable
                    .ensureFieldAccessorsInitialized(
                            cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.NoEnoughAuthorizedLunCapacityReport.class, cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.NoEnoughAuthorizedLunCapacityReport.Builder.class);
        }

        public static final int BACKUP_TASK_UUID_FIELD_NUMBER = 1;
        private volatile Object backupTaskUuid_;
        /**
         * <pre>
         *备份任务唯一ID
         * </pre>
         *
         * <code>optional string backup_task_uuid = 1;</code>
         */
        public String getBackupTaskUuid() {
            Object ref = backupTaskUuid_;
            if (ref instanceof String) {
                return (String) ref;
            } else {
                com.google.protobuf.ByteString bs =
                        (com.google.protobuf.ByteString) ref;
                String s = bs.toStringUtf8();
                backupTaskUuid_ = s;
                return s;
            }
        }
        /**
         * <pre>
         *备份任务唯一ID
         * </pre>
         *
         * <code>optional string backup_task_uuid = 1;</code>
         */
        public com.google.protobuf.ByteString
        getBackupTaskUuidBytes() {
            Object ref = backupTaskUuid_;
            if (ref instanceof String) {
                com.google.protobuf.ByteString b =
                        com.google.protobuf.ByteString.copyFromUtf8(
                                (String) ref);
                backupTaskUuid_ = b;
                return b;
            } else {
                return (com.google.protobuf.ByteString) ref;
            }
        }

        private byte memoizedIsInitialized = -1;
        public final boolean isInitialized() {
            byte isInitialized = memoizedIsInitialized;
            if (isInitialized == 1) return true;
            if (isInitialized == 0) return false;

            memoizedIsInitialized = 1;
            return true;
        }

        public void writeTo(com.google.protobuf.CodedOutputStream output)
                throws java.io.IOException {
            if (!getBackupTaskUuidBytes().isEmpty()) {
                com.google.protobuf.GeneratedMessageV3.writeString(output, 1, backupTaskUuid_);
            }
        }

        public int getSerializedSize() {
            int size = memoizedSize;
            if (size != -1) return size;

            size = 0;
            if (!getBackupTaskUuidBytes().isEmpty()) {
                size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, backupTaskUuid_);
            }
            memoizedSize = size;
            return size;
        }

        private static final long serialVersionUID = 0L;
        @Override
        public boolean equals(final Object obj) {
            if (obj == this) {
                return true;
            }
            if (!(obj instanceof cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.NoEnoughAuthorizedLunCapacityReport)) {
                return super.equals(obj);
            }
            cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.NoEnoughAuthorizedLunCapacityReport other = (cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.NoEnoughAuthorizedLunCapacityReport) obj;

            boolean result = true;
            result = result && getBackupTaskUuid()
                    .equals(other.getBackupTaskUuid());
            return result;
        }

        @Override
        public int hashCode() {
            if (memoizedHashCode != 0) {
                return memoizedHashCode;
            }
            int hash = 41;
            hash = (19 * hash) + getDescriptorForType().hashCode();
            hash = (37 * hash) + BACKUP_TASK_UUID_FIELD_NUMBER;
            hash = (53 * hash) + getBackupTaskUuid().hashCode();
            hash = (29 * hash) + unknownFields.hashCode();
            memoizedHashCode = hash;
            return hash;
        }

        public static cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.NoEnoughAuthorizedLunCapacityReport parseFrom(
                com.google.protobuf.ByteString data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }
        public static cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.NoEnoughAuthorizedLunCapacityReport parseFrom(
                com.google.protobuf.ByteString data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }
        public static cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.NoEnoughAuthorizedLunCapacityReport parseFrom(byte[] data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }
        public static cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.NoEnoughAuthorizedLunCapacityReport parseFrom(
                byte[] data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }
        public static cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.NoEnoughAuthorizedLunCapacityReport parseFrom(java.io.InputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input);
        }
        public static cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.NoEnoughAuthorizedLunCapacityReport parseFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input, extensionRegistry);
        }
        public static cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.NoEnoughAuthorizedLunCapacityReport parseDelimitedFrom(java.io.InputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseDelimitedWithIOException(PARSER, input);
        }
        public static cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.NoEnoughAuthorizedLunCapacityReport parseDelimitedFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
        }
        public static cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.NoEnoughAuthorizedLunCapacityReport parseFrom(
                com.google.protobuf.CodedInputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input);
        }
        public static cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.NoEnoughAuthorizedLunCapacityReport parseFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input, extensionRegistry);
        }

        public Builder newBuilderForType() { return newBuilder(); }
        public static Builder newBuilder() {
            return DEFAULT_INSTANCE.toBuilder();
        }
        public static Builder newBuilder(cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.NoEnoughAuthorizedLunCapacityReport prototype) {
            return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }
        public Builder toBuilder() {
            return this == DEFAULT_INSTANCE
                    ? new Builder() : new Builder().mergeFrom(this);
        }

        @Override
        protected Builder newBuilderForType(
                BuilderParent parent) {
            Builder builder = new Builder(parent);
            return builder;
        }
        /**
         * <pre>
         *************客户端主动上报备份存储容量超出限额******************
         * </pre>
         *
         * Protobuf type {@code one2data.rbtmqmsgcli.client.NoEnoughAuthorizedLunCapacityReport}
         */
        public static final class Builder extends
                com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
                // @@protoc_insertion_point(builder_implements:one2data.rbtmqmsgcli.client.NoEnoughAuthorizedLunCapacityReport)
                cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.NoEnoughAuthorizedLunCapacityReportOrBuilder {
            public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
                return cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.internal_static_one2data_rbtmqmsgcli_client_NoEnoughAuthorizedLunCapacityReport_descriptor;
            }

            protected FieldAccessorTable
            internalGetFieldAccessorTable() {
                return cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.internal_static_one2data_rbtmqmsgcli_client_NoEnoughAuthorizedLunCapacityReport_fieldAccessorTable
                        .ensureFieldAccessorsInitialized(
                                cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.NoEnoughAuthorizedLunCapacityReport.class, cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.NoEnoughAuthorizedLunCapacityReport.Builder.class);
            }

            // Construct using cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.NoEnoughAuthorizedLunCapacityReport.newBuilder()
            private Builder() {
                maybeForceBuilderInitialization();
            }

            private Builder(
                    BuilderParent parent) {
                super(parent);
                maybeForceBuilderInitialization();
            }
            private void maybeForceBuilderInitialization() {
                if (com.google.protobuf.GeneratedMessageV3
                        .alwaysUseFieldBuilders) {
                }
            }
            public Builder clear() {
                super.clear();
                backupTaskUuid_ = "";

                return this;
            }

            public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
                return cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.internal_static_one2data_rbtmqmsgcli_client_NoEnoughAuthorizedLunCapacityReport_descriptor;
            }

            public cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.NoEnoughAuthorizedLunCapacityReport getDefaultInstanceForType() {
                return cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.NoEnoughAuthorizedLunCapacityReport.getDefaultInstance();
            }

            public cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.NoEnoughAuthorizedLunCapacityReport build() {
                cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.NoEnoughAuthorizedLunCapacityReport result = buildPartial();
                if (!result.isInitialized()) {
                    throw newUninitializedMessageException(result);
                }
                return result;
            }

            public cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.NoEnoughAuthorizedLunCapacityReport buildPartial() {
                cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.NoEnoughAuthorizedLunCapacityReport result = new cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.NoEnoughAuthorizedLunCapacityReport(this);
                result.backupTaskUuid_ = backupTaskUuid_;
                onBuilt();
                return result;
            }

            public Builder clone() {
                return (Builder) super.clone();
            }
            public Builder setField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    Object value) {
                return (Builder) super.setField(field, value);
            }
            public Builder clearField(
                    com.google.protobuf.Descriptors.FieldDescriptor field) {
                return (Builder) super.clearField(field);
            }
            public Builder clearOneof(
                    com.google.protobuf.Descriptors.OneofDescriptor oneof) {
                return (Builder) super.clearOneof(oneof);
            }
            public Builder setRepeatedField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    int index, Object value) {
                return (Builder) super.setRepeatedField(field, index, value);
            }
            public Builder addRepeatedField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    Object value) {
                return (Builder) super.addRepeatedField(field, value);
            }
            public Builder mergeFrom(com.google.protobuf.Message other) {
                if (other instanceof cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.NoEnoughAuthorizedLunCapacityReport) {
                    return mergeFrom((cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.NoEnoughAuthorizedLunCapacityReport)other);
                } else {
                    super.mergeFrom(other);
                    return this;
                }
            }

            public Builder mergeFrom(cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.NoEnoughAuthorizedLunCapacityReport other) {
                if (other == cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.NoEnoughAuthorizedLunCapacityReport.getDefaultInstance()) return this;
                if (!other.getBackupTaskUuid().isEmpty()) {
                    backupTaskUuid_ = other.backupTaskUuid_;
                    onChanged();
                }
                onChanged();
                return this;
            }

            public final boolean isInitialized() {
                return true;
            }

            public Builder mergeFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws java.io.IOException {
                cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.NoEnoughAuthorizedLunCapacityReport parsedMessage = null;
                try {
                    parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
                } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                    parsedMessage = (cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.NoEnoughAuthorizedLunCapacityReport) e.getUnfinishedMessage();
                    throw e.unwrapIOException();
                } finally {
                    if (parsedMessage != null) {
                        mergeFrom(parsedMessage);
                    }
                }
                return this;
            }

            private Object backupTaskUuid_ = "";
            /**
             * <pre>
             *备份任务唯一ID
             * </pre>
             *
             * <code>optional string backup_task_uuid = 1;</code>
             */
            public String getBackupTaskUuid() {
                Object ref = backupTaskUuid_;
                if (!(ref instanceof String)) {
                    com.google.protobuf.ByteString bs =
                            (com.google.protobuf.ByteString) ref;
                    String s = bs.toStringUtf8();
                    backupTaskUuid_ = s;
                    return s;
                } else {
                    return (String) ref;
                }
            }
            /**
             * <pre>
             *备份任务唯一ID
             * </pre>
             *
             * <code>optional string backup_task_uuid = 1;</code>
             */
            public com.google.protobuf.ByteString
            getBackupTaskUuidBytes() {
                Object ref = backupTaskUuid_;
                if (ref instanceof String) {
                    com.google.protobuf.ByteString b =
                            com.google.protobuf.ByteString.copyFromUtf8(
                                    (String) ref);
                    backupTaskUuid_ = b;
                    return b;
                } else {
                    return (com.google.protobuf.ByteString) ref;
                }
            }
            /**
             * <pre>
             *备份任务唯一ID
             * </pre>
             *
             * <code>optional string backup_task_uuid = 1;</code>
             */
            public Builder setBackupTaskUuid(
                    String value) {
                if (value == null) {
                    throw new NullPointerException();
                }

                backupTaskUuid_ = value;
                onChanged();
                return this;
            }
            /**
             * <pre>
             *备份任务唯一ID
             * </pre>
             *
             * <code>optional string backup_task_uuid = 1;</code>
             */
            public Builder clearBackupTaskUuid() {

                backupTaskUuid_ = getDefaultInstance().getBackupTaskUuid();
                onChanged();
                return this;
            }
            /**
             * <pre>
             *备份任务唯一ID
             * </pre>
             *
             * <code>optional string backup_task_uuid = 1;</code>
             */
            public Builder setBackupTaskUuidBytes(
                    com.google.protobuf.ByteString value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                checkByteStringIsUtf8(value);

                backupTaskUuid_ = value;
                onChanged();
                return this;
            }
            public final Builder setUnknownFields(
                    final com.google.protobuf.UnknownFieldSet unknownFields) {
                return this;
            }

            public final Builder mergeUnknownFields(
                    final com.google.protobuf.UnknownFieldSet unknownFields) {
                return this;
            }


            // @@protoc_insertion_point(builder_scope:one2data.rbtmqmsgcli.client.NoEnoughAuthorizedLunCapacityReport)
        }

        // @@protoc_insertion_point(class_scope:one2data.rbtmqmsgcli.client.NoEnoughAuthorizedLunCapacityReport)
        private static final cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.NoEnoughAuthorizedLunCapacityReport DEFAULT_INSTANCE;
        static {
            DEFAULT_INSTANCE = new cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.NoEnoughAuthorizedLunCapacityReport();
        }

        public static cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.NoEnoughAuthorizedLunCapacityReport getDefaultInstance() {
            return DEFAULT_INSTANCE;
        }

        private static final com.google.protobuf.Parser<NoEnoughAuthorizedLunCapacityReport>
                PARSER = new com.google.protobuf.AbstractParser<NoEnoughAuthorizedLunCapacityReport>() {
            public NoEnoughAuthorizedLunCapacityReport parsePartialFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws com.google.protobuf.InvalidProtocolBufferException {
                return new NoEnoughAuthorizedLunCapacityReport(input, extensionRegistry);
            }
        };

        public static com.google.protobuf.Parser<NoEnoughAuthorizedLunCapacityReport> parser() {
            return PARSER;
        }

        @Override
        public com.google.protobuf.Parser<NoEnoughAuthorizedLunCapacityReport> getParserForType() {
            return PARSER;
        }

        public cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.NoEnoughAuthorizedLunCapacityReport getDefaultInstanceForType() {
            return DEFAULT_INSTANCE;
        }

    }

    public interface SyncIndexInfoReportOrBuilder extends
            // @@protoc_insertion_point(interface_extends:one2data.rbtmqmsgcli.client.SyncIndexInfoReport)
            com.google.protobuf.MessageOrBuilder {

        /**
         * <code>optional .one2data.rbtmqmsgcli.common.BaseAck base_ack = 1;</code>
         */
        boolean hasBaseAck();
        /**
         * <code>optional .one2data.rbtmqmsgcli.common.BaseAck base_ack = 1;</code>
         */
        cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck getBaseAck();
        /**
         * <code>optional .one2data.rbtmqmsgcli.common.BaseAck base_ack = 1;</code>
         */
        cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAckOrBuilder getBaseAckOrBuilder();

        /**
         * <pre>
         *存储lun 唯一ID
         * </pre>
         *
         * <code>optional string backup_task_uuid = 2;</code>
         */
        String getBackupTaskUuid();
        /**
         * <pre>
         *存储lun 唯一ID
         * </pre>
         *
         * <code>optional string backup_task_uuid = 2;</code>
         */
        com.google.protobuf.ByteString
        getBackupTaskUuidBytes();

        /**
         * <pre>
         *数据同步开始的时间戳(服务端)
         * </pre>
         *
         * <code>optional int64 sync_data_start_timestamp_second_server = 3;</code>
         */
        long getSyncDataStartTimestampSecondServer();

        /**
         * <pre>
         *客户端数据同步完成的时间戳
         * </pre>
         *
         * <code>optional int64 sync_data_finish_timestamp_second_client = 4;</code>
         */
        long getSyncDataFinishTimestampSecondClient();

        /**
         * <pre>
         *同步索引信息
         * </pre>
         *
         * <code>repeated .one2data.rbtmqmsgcli.client.SyncIndexInfo sync_index_info = 5;</code>
         */
        java.util.List<cn.keptdata.one2data.header.message.protobuf.client.BackupMessage.SyncIndexInfo>
        getSyncIndexInfoList();
        /**
         * <pre>
         *同步索引信息
         * </pre>
         *
         * <code>repeated .one2data.rbtmqmsgcli.client.SyncIndexInfo sync_index_info = 5;</code>
         */
        cn.keptdata.one2data.header.message.protobuf.client.BackupMessage.SyncIndexInfo getSyncIndexInfo(int index);
        /**
         * <pre>
         *同步索引信息
         * </pre>
         *
         * <code>repeated .one2data.rbtmqmsgcli.client.SyncIndexInfo sync_index_info = 5;</code>
         */
        int getSyncIndexInfoCount();
        /**
         * <pre>
         *同步索引信息
         * </pre>
         *
         * <code>repeated .one2data.rbtmqmsgcli.client.SyncIndexInfo sync_index_info = 5;</code>
         */
        java.util.List<? extends cn.keptdata.one2data.header.message.protobuf.client.BackupMessage.SyncIndexInfoOrBuilder>
        getSyncIndexInfoOrBuilderList();
        /**
         * <pre>
         *同步索引信息
         * </pre>
         *
         * <code>repeated .one2data.rbtmqmsgcli.client.SyncIndexInfo sync_index_info = 5;</code>
         */
        cn.keptdata.one2data.header.message.protobuf.client.BackupMessage.SyncIndexInfoOrBuilder getSyncIndexInfoOrBuilder(
                int index);

        /**
         * <pre>
         *索引数据可靠性（安全值,0-100）
         * </pre>
         *
         * <code>optional int64 data_reliability = 6;</code>
         */
        long getDataReliability();

        /**
         * <pre>
         *本次同步完成的数据量(Byte)
         * </pre>
         *
         * <code>optional int64 sync_data_size_byte = 7;</code>
         */
        long getSyncDataSizeByte();

        /**
         * <pre>
         *本次同步耗费时间(毫秒)
         * </pre>
         *
         * <code>optional int64 duration_millis = 8;</code>
         */
        long getDurationMillis();

        /**
         * <pre>
         *细粒度同步索引信息
         * </pre>
         *
         * <code>repeated .one2data.rbtmqmsgcli.client.SyncIndexInfoReport.FineGrainedSyncIndexInfo fine_grained_sync_index_info = 9;</code>
         */
        java.util.List<cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.SyncIndexInfoReport.FineGrainedSyncIndexInfo>
        getFineGrainedSyncIndexInfoList();
        /**
         * <pre>
         *细粒度同步索引信息
         * </pre>
         *
         * <code>repeated .one2data.rbtmqmsgcli.client.SyncIndexInfoReport.FineGrainedSyncIndexInfo fine_grained_sync_index_info = 9;</code>
         */
        cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.SyncIndexInfoReport.FineGrainedSyncIndexInfo getFineGrainedSyncIndexInfo(int index);
        /**
         * <pre>
         *细粒度同步索引信息
         * </pre>
         *
         * <code>repeated .one2data.rbtmqmsgcli.client.SyncIndexInfoReport.FineGrainedSyncIndexInfo fine_grained_sync_index_info = 9;</code>
         */
        int getFineGrainedSyncIndexInfoCount();
        /**
         * <pre>
         *细粒度同步索引信息
         * </pre>
         *
         * <code>repeated .one2data.rbtmqmsgcli.client.SyncIndexInfoReport.FineGrainedSyncIndexInfo fine_grained_sync_index_info = 9;</code>
         */
        java.util.List<? extends cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.SyncIndexInfoReport.FineGrainedSyncIndexInfoOrBuilder>
        getFineGrainedSyncIndexInfoOrBuilderList();
        /**
         * <pre>
         *细粒度同步索引信息
         * </pre>
         *
         * <code>repeated .one2data.rbtmqmsgcli.client.SyncIndexInfoReport.FineGrainedSyncIndexInfo fine_grained_sync_index_info = 9;</code>
         */
        cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.SyncIndexInfoReport.FineGrainedSyncIndexInfoOrBuilder getFineGrainedSyncIndexInfoOrBuilder(
                int index);
    }
    /**
     * <pre>
     *************客户端上报索引文件创建结果******************
     * </pre>
     *
     * Protobuf type {@code one2data.rbtmqmsgcli.client.SyncIndexInfoReport}
     */
    public  static final class SyncIndexInfoReport extends
            com.google.protobuf.GeneratedMessageV3 implements
            // @@protoc_insertion_point(message_implements:one2data.rbtmqmsgcli.client.SyncIndexInfoReport)
            SyncIndexInfoReportOrBuilder {
        // Use SyncIndexInfoReport.newBuilder() to construct.
        private SyncIndexInfoReport(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
            super(builder);
        }
        private SyncIndexInfoReport() {
            backupTaskUuid_ = "";
            syncDataStartTimestampSecondServer_ = 0L;
            syncDataFinishTimestampSecondClient_ = 0L;
            syncIndexInfo_ = java.util.Collections.emptyList();
            dataReliability_ = 0L;
            syncDataSizeByte_ = 0L;
            durationMillis_ = 0L;
            fineGrainedSyncIndexInfo_ = java.util.Collections.emptyList();
        }

        @Override
        public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
            return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
        }
        private SyncIndexInfoReport(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            this();
            int mutable_bitField0_ = 0;
            try {
                boolean done = false;
                while (!done) {
                    int tag = input.readTag();
                    switch (tag) {
                        case 0:
                            done = true;
                            break;
                        default: {
                            if (!input.skipField(tag)) {
                                done = true;
                            }
                            break;
                        }
                        case 10: {
                            cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck.Builder subBuilder = null;
                            if (baseAck_ != null) {
                                subBuilder = baseAck_.toBuilder();
                            }
                            baseAck_ = input.readMessage(cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck.parser(), extensionRegistry);
                            if (subBuilder != null) {
                                subBuilder.mergeFrom(baseAck_);
                                baseAck_ = subBuilder.buildPartial();
                            }

                            break;
                        }
                        case 18: {
                            String s = input.readStringRequireUtf8();

                            backupTaskUuid_ = s;
                            break;
                        }
                        case 24: {

                            syncDataStartTimestampSecondServer_ = input.readInt64();
                            break;
                        }
                        case 32: {

                            syncDataFinishTimestampSecondClient_ = input.readInt64();
                            break;
                        }
                        case 42: {
                            if (!((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
                                syncIndexInfo_ = new java.util.ArrayList<cn.keptdata.one2data.header.message.protobuf.client.BackupMessage.SyncIndexInfo>();
                                mutable_bitField0_ |= 0x00000010;
                            }
                            syncIndexInfo_.add(
                                    input.readMessage(cn.keptdata.one2data.header.message.protobuf.client.BackupMessage.SyncIndexInfo.parser(), extensionRegistry));
                            break;
                        }
                        case 48: {

                            dataReliability_ = input.readInt64();
                            break;
                        }
                        case 56: {

                            syncDataSizeByte_ = input.readInt64();
                            break;
                        }
                        case 64: {

                            durationMillis_ = input.readInt64();
                            break;
                        }
                        case 74: {
                            if (!((mutable_bitField0_ & 0x00000100) == 0x00000100)) {
                                fineGrainedSyncIndexInfo_ = new java.util.ArrayList<cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.SyncIndexInfoReport.FineGrainedSyncIndexInfo>();
                                mutable_bitField0_ |= 0x00000100;
                            }
                            fineGrainedSyncIndexInfo_.add(
                                    input.readMessage(cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.SyncIndexInfoReport.FineGrainedSyncIndexInfo.parser(), extensionRegistry));
                            break;
                        }
                    }
                }
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(this);
            } catch (java.io.IOException e) {
                throw new com.google.protobuf.InvalidProtocolBufferException(
                        e).setUnfinishedMessage(this);
            } finally {
                if (((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
                    syncIndexInfo_ = java.util.Collections.unmodifiableList(syncIndexInfo_);
                }
                if (((mutable_bitField0_ & 0x00000100) == 0x00000100)) {
                    fineGrainedSyncIndexInfo_ = java.util.Collections.unmodifiableList(fineGrainedSyncIndexInfo_);
                }
                makeExtensionsImmutable();
            }
        }
        public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
            return cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.internal_static_one2data_rbtmqmsgcli_client_SyncIndexInfoReport_descriptor;
        }

        protected FieldAccessorTable
        internalGetFieldAccessorTable() {
            return cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.internal_static_one2data_rbtmqmsgcli_client_SyncIndexInfoReport_fieldAccessorTable
                    .ensureFieldAccessorsInitialized(
                            cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.SyncIndexInfoReport.class, cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.SyncIndexInfoReport.Builder.class);
        }

        public interface FineGrainedSyncIndexInfoOrBuilder extends
                // @@protoc_insertion_point(interface_extends:one2data.rbtmqmsgcli.client.SyncIndexInfoReport.FineGrainedSyncIndexInfo)
                com.google.protobuf.MessageOrBuilder {

            /**
             * <code>optional int64 sync_data_start_timestamp_us_server = 1;</code>
             */
            long getSyncDataStartTimestampUsServer();

            /**
             * <code>optional int64 sync_data_finish_timestamp_us_client = 2;</code>
             */
            long getSyncDataFinishTimestampUsClient();

            /**
             * <code>repeated .one2data.rbtmqmsgcli.client.SyncIndexInfo sync_index_info = 3;</code>
             */
            java.util.List<cn.keptdata.one2data.header.message.protobuf.client.BackupMessage.SyncIndexInfo>
            getSyncIndexInfoList();
            /**
             * <code>repeated .one2data.rbtmqmsgcli.client.SyncIndexInfo sync_index_info = 3;</code>
             */
            cn.keptdata.one2data.header.message.protobuf.client.BackupMessage.SyncIndexInfo getSyncIndexInfo(int index);
            /**
             * <code>repeated .one2data.rbtmqmsgcli.client.SyncIndexInfo sync_index_info = 3;</code>
             */
            int getSyncIndexInfoCount();
            /**
             * <code>repeated .one2data.rbtmqmsgcli.client.SyncIndexInfo sync_index_info = 3;</code>
             */
            java.util.List<? extends cn.keptdata.one2data.header.message.protobuf.client.BackupMessage.SyncIndexInfoOrBuilder>
            getSyncIndexInfoOrBuilderList();
            /**
             * <code>repeated .one2data.rbtmqmsgcli.client.SyncIndexInfo sync_index_info = 3;</code>
             */
            cn.keptdata.one2data.header.message.protobuf.client.BackupMessage.SyncIndexInfoOrBuilder getSyncIndexInfoOrBuilder(
                    int index);

            /**
             * <code>optional int64 data_reliability = 4;</code>
             */
            long getDataReliability();

            /**
             * <code>optional int64 sync_data_size_byte = 5;</code>
             */
            long getSyncDataSizeByte();

            /**
             * <code>optional int64 duration_us = 6;</code>
             */
            long getDurationUs();
        }
        /**
         * <pre>
         *细粒度同步索引信息
         * </pre>
         *
         * Protobuf type {@code one2data.rbtmqmsgcli.client.SyncIndexInfoReport.FineGrainedSyncIndexInfo}
         */
        public  static final class FineGrainedSyncIndexInfo extends
                com.google.protobuf.GeneratedMessageV3 implements
                // @@protoc_insertion_point(message_implements:one2data.rbtmqmsgcli.client.SyncIndexInfoReport.FineGrainedSyncIndexInfo)
                FineGrainedSyncIndexInfoOrBuilder {
            // Use FineGrainedSyncIndexInfo.newBuilder() to construct.
            private FineGrainedSyncIndexInfo(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
                super(builder);
            }
            private FineGrainedSyncIndexInfo() {
                syncDataStartTimestampUsServer_ = 0L;
                syncDataFinishTimestampUsClient_ = 0L;
                syncIndexInfo_ = java.util.Collections.emptyList();
                dataReliability_ = 0L;
                syncDataSizeByte_ = 0L;
                durationUs_ = 0L;
            }

            @Override
            public final com.google.protobuf.UnknownFieldSet
            getUnknownFields() {
                return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
            }
            private FineGrainedSyncIndexInfo(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws com.google.protobuf.InvalidProtocolBufferException {
                this();
                int mutable_bitField0_ = 0;
                try {
                    boolean done = false;
                    while (!done) {
                        int tag = input.readTag();
                        switch (tag) {
                            case 0:
                                done = true;
                                break;
                            default: {
                                if (!input.skipField(tag)) {
                                    done = true;
                                }
                                break;
                            }
                            case 8: {

                                syncDataStartTimestampUsServer_ = input.readInt64();
                                break;
                            }
                            case 16: {

                                syncDataFinishTimestampUsClient_ = input.readInt64();
                                break;
                            }
                            case 26: {
                                if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                                    syncIndexInfo_ = new java.util.ArrayList<cn.keptdata.one2data.header.message.protobuf.client.BackupMessage.SyncIndexInfo>();
                                    mutable_bitField0_ |= 0x00000004;
                                }
                                syncIndexInfo_.add(
                                        input.readMessage(cn.keptdata.one2data.header.message.protobuf.client.BackupMessage.SyncIndexInfo.parser(), extensionRegistry));
                                break;
                            }
                            case 32: {

                                dataReliability_ = input.readInt64();
                                break;
                            }
                            case 40: {

                                syncDataSizeByte_ = input.readInt64();
                                break;
                            }
                            case 48: {

                                durationUs_ = input.readInt64();
                                break;
                            }
                        }
                    }
                } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                    throw e.setUnfinishedMessage(this);
                } catch (java.io.IOException e) {
                    throw new com.google.protobuf.InvalidProtocolBufferException(
                            e).setUnfinishedMessage(this);
                } finally {
                    if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                        syncIndexInfo_ = java.util.Collections.unmodifiableList(syncIndexInfo_);
                    }
                    makeExtensionsImmutable();
                }
            }
            public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
                return cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.internal_static_one2data_rbtmqmsgcli_client_SyncIndexInfoReport_FineGrainedSyncIndexInfo_descriptor;
            }

            protected FieldAccessorTable
            internalGetFieldAccessorTable() {
                return cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.internal_static_one2data_rbtmqmsgcli_client_SyncIndexInfoReport_FineGrainedSyncIndexInfo_fieldAccessorTable
                        .ensureFieldAccessorsInitialized(
                                cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.SyncIndexInfoReport.FineGrainedSyncIndexInfo.class, cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.SyncIndexInfoReport.FineGrainedSyncIndexInfo.Builder.class);
            }

            private int bitField0_;
            public static final int SYNC_DATA_START_TIMESTAMP_US_SERVER_FIELD_NUMBER = 1;
            private long syncDataStartTimestampUsServer_;
            /**
             * <code>optional int64 sync_data_start_timestamp_us_server = 1;</code>
             */
            public long getSyncDataStartTimestampUsServer() {
                return syncDataStartTimestampUsServer_;
            }

            public static final int SYNC_DATA_FINISH_TIMESTAMP_US_CLIENT_FIELD_NUMBER = 2;
            private long syncDataFinishTimestampUsClient_;
            /**
             * <code>optional int64 sync_data_finish_timestamp_us_client = 2;</code>
             */
            public long getSyncDataFinishTimestampUsClient() {
                return syncDataFinishTimestampUsClient_;
            }

            public static final int SYNC_INDEX_INFO_FIELD_NUMBER = 3;
            private java.util.List<cn.keptdata.one2data.header.message.protobuf.client.BackupMessage.SyncIndexInfo> syncIndexInfo_;
            /**
             * <code>repeated .one2data.rbtmqmsgcli.client.SyncIndexInfo sync_index_info = 3;</code>
             */
            public java.util.List<cn.keptdata.one2data.header.message.protobuf.client.BackupMessage.SyncIndexInfo> getSyncIndexInfoList() {
                return syncIndexInfo_;
            }
            /**
             * <code>repeated .one2data.rbtmqmsgcli.client.SyncIndexInfo sync_index_info = 3;</code>
             */
            public java.util.List<? extends cn.keptdata.one2data.header.message.protobuf.client.BackupMessage.SyncIndexInfoOrBuilder>
            getSyncIndexInfoOrBuilderList() {
                return syncIndexInfo_;
            }
            /**
             * <code>repeated .one2data.rbtmqmsgcli.client.SyncIndexInfo sync_index_info = 3;</code>
             */
            public int getSyncIndexInfoCount() {
                return syncIndexInfo_.size();
            }
            /**
             * <code>repeated .one2data.rbtmqmsgcli.client.SyncIndexInfo sync_index_info = 3;</code>
             */
            public cn.keptdata.one2data.header.message.protobuf.client.BackupMessage.SyncIndexInfo getSyncIndexInfo(int index) {
                return syncIndexInfo_.get(index);
            }
            /**
             * <code>repeated .one2data.rbtmqmsgcli.client.SyncIndexInfo sync_index_info = 3;</code>
             */
            public cn.keptdata.one2data.header.message.protobuf.client.BackupMessage.SyncIndexInfoOrBuilder getSyncIndexInfoOrBuilder(
                    int index) {
                return syncIndexInfo_.get(index);
            }

            public static final int DATA_RELIABILITY_FIELD_NUMBER = 4;
            private long dataReliability_;
            /**
             * <code>optional int64 data_reliability = 4;</code>
             */
            public long getDataReliability() {
                return dataReliability_;
            }

            public static final int SYNC_DATA_SIZE_BYTE_FIELD_NUMBER = 5;
            private long syncDataSizeByte_;
            /**
             * <code>optional int64 sync_data_size_byte = 5;</code>
             */
            public long getSyncDataSizeByte() {
                return syncDataSizeByte_;
            }

            public static final int DURATION_US_FIELD_NUMBER = 6;
            private long durationUs_;
            /**
             * <code>optional int64 duration_us = 6;</code>
             */
            public long getDurationUs() {
                return durationUs_;
            }

            private byte memoizedIsInitialized = -1;
            public final boolean isInitialized() {
                byte isInitialized = memoizedIsInitialized;
                if (isInitialized == 1) return true;
                if (isInitialized == 0) return false;

                memoizedIsInitialized = 1;
                return true;
            }

            public void writeTo(com.google.protobuf.CodedOutputStream output)
                    throws java.io.IOException {
                if (syncDataStartTimestampUsServer_ != 0L) {
                    output.writeInt64(1, syncDataStartTimestampUsServer_);
                }
                if (syncDataFinishTimestampUsClient_ != 0L) {
                    output.writeInt64(2, syncDataFinishTimestampUsClient_);
                }
                for (int i = 0; i < syncIndexInfo_.size(); i++) {
                    output.writeMessage(3, syncIndexInfo_.get(i));
                }
                if (dataReliability_ != 0L) {
                    output.writeInt64(4, dataReliability_);
                }
                if (syncDataSizeByte_ != 0L) {
                    output.writeInt64(5, syncDataSizeByte_);
                }
                if (durationUs_ != 0L) {
                    output.writeInt64(6, durationUs_);
                }
            }

            public int getSerializedSize() {
                int size = memoizedSize;
                if (size != -1) return size;

                size = 0;
                if (syncDataStartTimestampUsServer_ != 0L) {
                    size += com.google.protobuf.CodedOutputStream
                            .computeInt64Size(1, syncDataStartTimestampUsServer_);
                }
                if (syncDataFinishTimestampUsClient_ != 0L) {
                    size += com.google.protobuf.CodedOutputStream
                            .computeInt64Size(2, syncDataFinishTimestampUsClient_);
                }
                for (int i = 0; i < syncIndexInfo_.size(); i++) {
                    size += com.google.protobuf.CodedOutputStream
                            .computeMessageSize(3, syncIndexInfo_.get(i));
                }
                if (dataReliability_ != 0L) {
                    size += com.google.protobuf.CodedOutputStream
                            .computeInt64Size(4, dataReliability_);
                }
                if (syncDataSizeByte_ != 0L) {
                    size += com.google.protobuf.CodedOutputStream
                            .computeInt64Size(5, syncDataSizeByte_);
                }
                if (durationUs_ != 0L) {
                    size += com.google.protobuf.CodedOutputStream
                            .computeInt64Size(6, durationUs_);
                }
                memoizedSize = size;
                return size;
            }

            private static final long serialVersionUID = 0L;
            @Override
            public boolean equals(final Object obj) {
                if (obj == this) {
                    return true;
                }
                if (!(obj instanceof cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.SyncIndexInfoReport.FineGrainedSyncIndexInfo)) {
                    return super.equals(obj);
                }
                cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.SyncIndexInfoReport.FineGrainedSyncIndexInfo other = (cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.SyncIndexInfoReport.FineGrainedSyncIndexInfo) obj;

                boolean result = true;
                result = result && (getSyncDataStartTimestampUsServer()
                        == other.getSyncDataStartTimestampUsServer());
                result = result && (getSyncDataFinishTimestampUsClient()
                        == other.getSyncDataFinishTimestampUsClient());
                result = result && getSyncIndexInfoList()
                        .equals(other.getSyncIndexInfoList());
                result = result && (getDataReliability()
                        == other.getDataReliability());
                result = result && (getSyncDataSizeByte()
                        == other.getSyncDataSizeByte());
                result = result && (getDurationUs()
                        == other.getDurationUs());
                return result;
            }

            @Override
            public int hashCode() {
                if (memoizedHashCode != 0) {
                    return memoizedHashCode;
                }
                int hash = 41;
                hash = (19 * hash) + getDescriptorForType().hashCode();
                hash = (37 * hash) + SYNC_DATA_START_TIMESTAMP_US_SERVER_FIELD_NUMBER;
                hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
                        getSyncDataStartTimestampUsServer());
                hash = (37 * hash) + SYNC_DATA_FINISH_TIMESTAMP_US_CLIENT_FIELD_NUMBER;
                hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
                        getSyncDataFinishTimestampUsClient());
                if (getSyncIndexInfoCount() > 0) {
                    hash = (37 * hash) + SYNC_INDEX_INFO_FIELD_NUMBER;
                    hash = (53 * hash) + getSyncIndexInfoList().hashCode();
                }
                hash = (37 * hash) + DATA_RELIABILITY_FIELD_NUMBER;
                hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
                        getDataReliability());
                hash = (37 * hash) + SYNC_DATA_SIZE_BYTE_FIELD_NUMBER;
                hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
                        getSyncDataSizeByte());
                hash = (37 * hash) + DURATION_US_FIELD_NUMBER;
                hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
                        getDurationUs());
                hash = (29 * hash) + unknownFields.hashCode();
                memoizedHashCode = hash;
                return hash;
            }

            public static cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.SyncIndexInfoReport.FineGrainedSyncIndexInfo parseFrom(
                    com.google.protobuf.ByteString data)
                    throws com.google.protobuf.InvalidProtocolBufferException {
                return PARSER.parseFrom(data);
            }
            public static cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.SyncIndexInfoReport.FineGrainedSyncIndexInfo parseFrom(
                    com.google.protobuf.ByteString data,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws com.google.protobuf.InvalidProtocolBufferException {
                return PARSER.parseFrom(data, extensionRegistry);
            }
            public static cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.SyncIndexInfoReport.FineGrainedSyncIndexInfo parseFrom(byte[] data)
                    throws com.google.protobuf.InvalidProtocolBufferException {
                return PARSER.parseFrom(data);
            }
            public static cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.SyncIndexInfoReport.FineGrainedSyncIndexInfo parseFrom(
                    byte[] data,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws com.google.protobuf.InvalidProtocolBufferException {
                return PARSER.parseFrom(data, extensionRegistry);
            }
            public static cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.SyncIndexInfoReport.FineGrainedSyncIndexInfo parseFrom(java.io.InputStream input)
                    throws java.io.IOException {
                return com.google.protobuf.GeneratedMessageV3
                        .parseWithIOException(PARSER, input);
            }
            public static cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.SyncIndexInfoReport.FineGrainedSyncIndexInfo parseFrom(
                    java.io.InputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws java.io.IOException {
                return com.google.protobuf.GeneratedMessageV3
                        .parseWithIOException(PARSER, input, extensionRegistry);
            }
            public static cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.SyncIndexInfoReport.FineGrainedSyncIndexInfo parseDelimitedFrom(java.io.InputStream input)
                    throws java.io.IOException {
                return com.google.protobuf.GeneratedMessageV3
                        .parseDelimitedWithIOException(PARSER, input);
            }
            public static cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.SyncIndexInfoReport.FineGrainedSyncIndexInfo parseDelimitedFrom(
                    java.io.InputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws java.io.IOException {
                return com.google.protobuf.GeneratedMessageV3
                        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
            }
            public static cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.SyncIndexInfoReport.FineGrainedSyncIndexInfo parseFrom(
                    com.google.protobuf.CodedInputStream input)
                    throws java.io.IOException {
                return com.google.protobuf.GeneratedMessageV3
                        .parseWithIOException(PARSER, input);
            }
            public static cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.SyncIndexInfoReport.FineGrainedSyncIndexInfo parseFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws java.io.IOException {
                return com.google.protobuf.GeneratedMessageV3
                        .parseWithIOException(PARSER, input, extensionRegistry);
            }

            public Builder newBuilderForType() { return newBuilder(); }
            public static Builder newBuilder() {
                return DEFAULT_INSTANCE.toBuilder();
            }
            public static Builder newBuilder(cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.SyncIndexInfoReport.FineGrainedSyncIndexInfo prototype) {
                return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
            }
            public Builder toBuilder() {
                return this == DEFAULT_INSTANCE
                        ? new Builder() : new Builder().mergeFrom(this);
            }

            @Override
            protected Builder newBuilderForType(
                    BuilderParent parent) {
                Builder builder = new Builder(parent);
                return builder;
            }
            /**
             * <pre>
             *细粒度同步索引信息
             * </pre>
             *
             * Protobuf type {@code one2data.rbtmqmsgcli.client.SyncIndexInfoReport.FineGrainedSyncIndexInfo}
             */
            public static final class Builder extends
                    com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
                    // @@protoc_insertion_point(builder_implements:one2data.rbtmqmsgcli.client.SyncIndexInfoReport.FineGrainedSyncIndexInfo)
                    cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.SyncIndexInfoReport.FineGrainedSyncIndexInfoOrBuilder {
                public static final com.google.protobuf.Descriptors.Descriptor
                getDescriptor() {
                    return cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.internal_static_one2data_rbtmqmsgcli_client_SyncIndexInfoReport_FineGrainedSyncIndexInfo_descriptor;
                }

                protected FieldAccessorTable
                internalGetFieldAccessorTable() {
                    return cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.internal_static_one2data_rbtmqmsgcli_client_SyncIndexInfoReport_FineGrainedSyncIndexInfo_fieldAccessorTable
                            .ensureFieldAccessorsInitialized(
                                    cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.SyncIndexInfoReport.FineGrainedSyncIndexInfo.class, cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.SyncIndexInfoReport.FineGrainedSyncIndexInfo.Builder.class);
                }

                // Construct using cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.SyncIndexInfoReport.FineGrainedSyncIndexInfo.newBuilder()
                private Builder() {
                    maybeForceBuilderInitialization();
                }

                private Builder(
                        BuilderParent parent) {
                    super(parent);
                    maybeForceBuilderInitialization();
                }
                private void maybeForceBuilderInitialization() {
                    if (com.google.protobuf.GeneratedMessageV3
                            .alwaysUseFieldBuilders) {
                        getSyncIndexInfoFieldBuilder();
                    }
                }
                public Builder clear() {
                    super.clear();
                    syncDataStartTimestampUsServer_ = 0L;

                    syncDataFinishTimestampUsClient_ = 0L;

                    if (syncIndexInfoBuilder_ == null) {
                        syncIndexInfo_ = java.util.Collections.emptyList();
                        bitField0_ = (bitField0_ & ~0x00000004);
                    } else {
                        syncIndexInfoBuilder_.clear();
                    }
                    dataReliability_ = 0L;

                    syncDataSizeByte_ = 0L;

                    durationUs_ = 0L;

                    return this;
                }

                public com.google.protobuf.Descriptors.Descriptor
                getDescriptorForType() {
                    return cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.internal_static_one2data_rbtmqmsgcli_client_SyncIndexInfoReport_FineGrainedSyncIndexInfo_descriptor;
                }

                public cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.SyncIndexInfoReport.FineGrainedSyncIndexInfo getDefaultInstanceForType() {
                    return cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.SyncIndexInfoReport.FineGrainedSyncIndexInfo.getDefaultInstance();
                }

                public cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.SyncIndexInfoReport.FineGrainedSyncIndexInfo build() {
                    cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.SyncIndexInfoReport.FineGrainedSyncIndexInfo result = buildPartial();
                    if (!result.isInitialized()) {
                        throw newUninitializedMessageException(result);
                    }
                    return result;
                }

                public cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.SyncIndexInfoReport.FineGrainedSyncIndexInfo buildPartial() {
                    cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.SyncIndexInfoReport.FineGrainedSyncIndexInfo result = new cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.SyncIndexInfoReport.FineGrainedSyncIndexInfo(this);
                    int from_bitField0_ = bitField0_;
                    int to_bitField0_ = 0;
                    result.syncDataStartTimestampUsServer_ = syncDataStartTimestampUsServer_;
                    result.syncDataFinishTimestampUsClient_ = syncDataFinishTimestampUsClient_;
                    if (syncIndexInfoBuilder_ == null) {
                        if (((bitField0_ & 0x00000004) == 0x00000004)) {
                            syncIndexInfo_ = java.util.Collections.unmodifiableList(syncIndexInfo_);
                            bitField0_ = (bitField0_ & ~0x00000004);
                        }
                        result.syncIndexInfo_ = syncIndexInfo_;
                    } else {
                        result.syncIndexInfo_ = syncIndexInfoBuilder_.build();
                    }
                    result.dataReliability_ = dataReliability_;
                    result.syncDataSizeByte_ = syncDataSizeByte_;
                    result.durationUs_ = durationUs_;
                    result.bitField0_ = to_bitField0_;
                    onBuilt();
                    return result;
                }

                public Builder clone() {
                    return (Builder) super.clone();
                }
                public Builder setField(
                        com.google.protobuf.Descriptors.FieldDescriptor field,
                        Object value) {
                    return (Builder) super.setField(field, value);
                }
                public Builder clearField(
                        com.google.protobuf.Descriptors.FieldDescriptor field) {
                    return (Builder) super.clearField(field);
                }
                public Builder clearOneof(
                        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
                    return (Builder) super.clearOneof(oneof);
                }
                public Builder setRepeatedField(
                        com.google.protobuf.Descriptors.FieldDescriptor field,
                        int index, Object value) {
                    return (Builder) super.setRepeatedField(field, index, value);
                }
                public Builder addRepeatedField(
                        com.google.protobuf.Descriptors.FieldDescriptor field,
                        Object value) {
                    return (Builder) super.addRepeatedField(field, value);
                }
                public Builder mergeFrom(com.google.protobuf.Message other) {
                    if (other instanceof cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.SyncIndexInfoReport.FineGrainedSyncIndexInfo) {
                        return mergeFrom((cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.SyncIndexInfoReport.FineGrainedSyncIndexInfo)other);
                    } else {
                        super.mergeFrom(other);
                        return this;
                    }
                }

                public Builder mergeFrom(cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.SyncIndexInfoReport.FineGrainedSyncIndexInfo other) {
                    if (other == cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.SyncIndexInfoReport.FineGrainedSyncIndexInfo.getDefaultInstance()) return this;
                    if (other.getSyncDataStartTimestampUsServer() != 0L) {
                        setSyncDataStartTimestampUsServer(other.getSyncDataStartTimestampUsServer());
                    }
                    if (other.getSyncDataFinishTimestampUsClient() != 0L) {
                        setSyncDataFinishTimestampUsClient(other.getSyncDataFinishTimestampUsClient());
                    }
                    if (syncIndexInfoBuilder_ == null) {
                        if (!other.syncIndexInfo_.isEmpty()) {
                            if (syncIndexInfo_.isEmpty()) {
                                syncIndexInfo_ = other.syncIndexInfo_;
                                bitField0_ = (bitField0_ & ~0x00000004);
                            } else {
                                ensureSyncIndexInfoIsMutable();
                                syncIndexInfo_.addAll(other.syncIndexInfo_);
                            }
                            onChanged();
                        }
                    } else {
                        if (!other.syncIndexInfo_.isEmpty()) {
                            if (syncIndexInfoBuilder_.isEmpty()) {
                                syncIndexInfoBuilder_.dispose();
                                syncIndexInfoBuilder_ = null;
                                syncIndexInfo_ = other.syncIndexInfo_;
                                bitField0_ = (bitField0_ & ~0x00000004);
                                syncIndexInfoBuilder_ =
                                        com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                                                getSyncIndexInfoFieldBuilder() : null;
                            } else {
                                syncIndexInfoBuilder_.addAllMessages(other.syncIndexInfo_);
                            }
                        }
                    }
                    if (other.getDataReliability() != 0L) {
                        setDataReliability(other.getDataReliability());
                    }
                    if (other.getSyncDataSizeByte() != 0L) {
                        setSyncDataSizeByte(other.getSyncDataSizeByte());
                    }
                    if (other.getDurationUs() != 0L) {
                        setDurationUs(other.getDurationUs());
                    }
                    onChanged();
                    return this;
                }

                public final boolean isInitialized() {
                    return true;
                }

                public Builder mergeFrom(
                        com.google.protobuf.CodedInputStream input,
                        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                        throws java.io.IOException {
                    cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.SyncIndexInfoReport.FineGrainedSyncIndexInfo parsedMessage = null;
                    try {
                        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
                    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                        parsedMessage = (cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.SyncIndexInfoReport.FineGrainedSyncIndexInfo) e.getUnfinishedMessage();
                        throw e.unwrapIOException();
                    } finally {
                        if (parsedMessage != null) {
                            mergeFrom(parsedMessage);
                        }
                    }
                    return this;
                }
                private int bitField0_;

                private long syncDataStartTimestampUsServer_ ;
                /**
                 * <code>optional int64 sync_data_start_timestamp_us_server = 1;</code>
                 */
                public long getSyncDataStartTimestampUsServer() {
                    return syncDataStartTimestampUsServer_;
                }
                /**
                 * <code>optional int64 sync_data_start_timestamp_us_server = 1;</code>
                 */
                public Builder setSyncDataStartTimestampUsServer(long value) {

                    syncDataStartTimestampUsServer_ = value;
                    onChanged();
                    return this;
                }
                /**
                 * <code>optional int64 sync_data_start_timestamp_us_server = 1;</code>
                 */
                public Builder clearSyncDataStartTimestampUsServer() {

                    syncDataStartTimestampUsServer_ = 0L;
                    onChanged();
                    return this;
                }

                private long syncDataFinishTimestampUsClient_ ;
                /**
                 * <code>optional int64 sync_data_finish_timestamp_us_client = 2;</code>
                 */
                public long getSyncDataFinishTimestampUsClient() {
                    return syncDataFinishTimestampUsClient_;
                }
                /**
                 * <code>optional int64 sync_data_finish_timestamp_us_client = 2;</code>
                 */
                public Builder setSyncDataFinishTimestampUsClient(long value) {

                    syncDataFinishTimestampUsClient_ = value;
                    onChanged();
                    return this;
                }
                /**
                 * <code>optional int64 sync_data_finish_timestamp_us_client = 2;</code>
                 */
                public Builder clearSyncDataFinishTimestampUsClient() {

                    syncDataFinishTimestampUsClient_ = 0L;
                    onChanged();
                    return this;
                }

                private java.util.List<cn.keptdata.one2data.header.message.protobuf.client.BackupMessage.SyncIndexInfo> syncIndexInfo_ =
                        java.util.Collections.emptyList();
                private void ensureSyncIndexInfoIsMutable() {
                    if (!((bitField0_ & 0x00000004) == 0x00000004)) {
                        syncIndexInfo_ = new java.util.ArrayList<cn.keptdata.one2data.header.message.protobuf.client.BackupMessage.SyncIndexInfo>(syncIndexInfo_);
                        bitField0_ |= 0x00000004;
                    }
                }

                private com.google.protobuf.RepeatedFieldBuilderV3<
                        cn.keptdata.one2data.header.message.protobuf.client.BackupMessage.SyncIndexInfo, cn.keptdata.one2data.header.message.protobuf.client.BackupMessage.SyncIndexInfo.Builder, cn.keptdata.one2data.header.message.protobuf.client.BackupMessage.SyncIndexInfoOrBuilder> syncIndexInfoBuilder_;

                /**
                 * <code>repeated .one2data.rbtmqmsgcli.client.SyncIndexInfo sync_index_info = 3;</code>
                 */
                public java.util.List<cn.keptdata.one2data.header.message.protobuf.client.BackupMessage.SyncIndexInfo> getSyncIndexInfoList() {
                    if (syncIndexInfoBuilder_ == null) {
                        return java.util.Collections.unmodifiableList(syncIndexInfo_);
                    } else {
                        return syncIndexInfoBuilder_.getMessageList();
                    }
                }
                /**
                 * <code>repeated .one2data.rbtmqmsgcli.client.SyncIndexInfo sync_index_info = 3;</code>
                 */
                public int getSyncIndexInfoCount() {
                    if (syncIndexInfoBuilder_ == null) {
                        return syncIndexInfo_.size();
                    } else {
                        return syncIndexInfoBuilder_.getCount();
                    }
                }
                /**
                 * <code>repeated .one2data.rbtmqmsgcli.client.SyncIndexInfo sync_index_info = 3;</code>
                 */
                public cn.keptdata.one2data.header.message.protobuf.client.BackupMessage.SyncIndexInfo getSyncIndexInfo(int index) {
                    if (syncIndexInfoBuilder_ == null) {
                        return syncIndexInfo_.get(index);
                    } else {
                        return syncIndexInfoBuilder_.getMessage(index);
                    }
                }
                /**
                 * <code>repeated .one2data.rbtmqmsgcli.client.SyncIndexInfo sync_index_info = 3;</code>
                 */
                public Builder setSyncIndexInfo(
                        int index, cn.keptdata.one2data.header.message.protobuf.client.BackupMessage.SyncIndexInfo value) {
                    if (syncIndexInfoBuilder_ == null) {
                        if (value == null) {
                            throw new NullPointerException();
                        }
                        ensureSyncIndexInfoIsMutable();
                        syncIndexInfo_.set(index, value);
                        onChanged();
                    } else {
                        syncIndexInfoBuilder_.setMessage(index, value);
                    }
                    return this;
                }
                /**
                 * <code>repeated .one2data.rbtmqmsgcli.client.SyncIndexInfo sync_index_info = 3;</code>
                 */
                public Builder setSyncIndexInfo(
                        int index, cn.keptdata.one2data.header.message.protobuf.client.BackupMessage.SyncIndexInfo.Builder builderForValue) {
                    if (syncIndexInfoBuilder_ == null) {
                        ensureSyncIndexInfoIsMutable();
                        syncIndexInfo_.set(index, builderForValue.build());
                        onChanged();
                    } else {
                        syncIndexInfoBuilder_.setMessage(index, builderForValue.build());
                    }
                    return this;
                }
                /**
                 * <code>repeated .one2data.rbtmqmsgcli.client.SyncIndexInfo sync_index_info = 3;</code>
                 */
                public Builder addSyncIndexInfo(cn.keptdata.one2data.header.message.protobuf.client.BackupMessage.SyncIndexInfo value) {
                    if (syncIndexInfoBuilder_ == null) {
                        if (value == null) {
                            throw new NullPointerException();
                        }
                        ensureSyncIndexInfoIsMutable();
                        syncIndexInfo_.add(value);
                        onChanged();
                    } else {
                        syncIndexInfoBuilder_.addMessage(value);
                    }
                    return this;
                }
                /**
                 * <code>repeated .one2data.rbtmqmsgcli.client.SyncIndexInfo sync_index_info = 3;</code>
                 */
                public Builder addSyncIndexInfo(
                        int index, cn.keptdata.one2data.header.message.protobuf.client.BackupMessage.SyncIndexInfo value) {
                    if (syncIndexInfoBuilder_ == null) {
                        if (value == null) {
                            throw new NullPointerException();
                        }
                        ensureSyncIndexInfoIsMutable();
                        syncIndexInfo_.add(index, value);
                        onChanged();
                    } else {
                        syncIndexInfoBuilder_.addMessage(index, value);
                    }
                    return this;
                }
                /**
                 * <code>repeated .one2data.rbtmqmsgcli.client.SyncIndexInfo sync_index_info = 3;</code>
                 */
                public Builder addSyncIndexInfo(
                        cn.keptdata.one2data.header.message.protobuf.client.BackupMessage.SyncIndexInfo.Builder builderForValue) {
                    if (syncIndexInfoBuilder_ == null) {
                        ensureSyncIndexInfoIsMutable();
                        syncIndexInfo_.add(builderForValue.build());
                        onChanged();
                    } else {
                        syncIndexInfoBuilder_.addMessage(builderForValue.build());
                    }
                    return this;
                }
                /**
                 * <code>repeated .one2data.rbtmqmsgcli.client.SyncIndexInfo sync_index_info = 3;</code>
                 */
                public Builder addSyncIndexInfo(
                        int index, cn.keptdata.one2data.header.message.protobuf.client.BackupMessage.SyncIndexInfo.Builder builderForValue) {
                    if (syncIndexInfoBuilder_ == null) {
                        ensureSyncIndexInfoIsMutable();
                        syncIndexInfo_.add(index, builderForValue.build());
                        onChanged();
                    } else {
                        syncIndexInfoBuilder_.addMessage(index, builderForValue.build());
                    }
                    return this;
                }
                /**
                 * <code>repeated .one2data.rbtmqmsgcli.client.SyncIndexInfo sync_index_info = 3;</code>
                 */
                public Builder addAllSyncIndexInfo(
                        Iterable<? extends cn.keptdata.one2data.header.message.protobuf.client.BackupMessage.SyncIndexInfo> values) {
                    if (syncIndexInfoBuilder_ == null) {
                        ensureSyncIndexInfoIsMutable();
                        com.google.protobuf.AbstractMessageLite.Builder.addAll(
                                values, syncIndexInfo_);
                        onChanged();
                    } else {
                        syncIndexInfoBuilder_.addAllMessages(values);
                    }
                    return this;
                }
                /**
                 * <code>repeated .one2data.rbtmqmsgcli.client.SyncIndexInfo sync_index_info = 3;</code>
                 */
                public Builder clearSyncIndexInfo() {
                    if (syncIndexInfoBuilder_ == null) {
                        syncIndexInfo_ = java.util.Collections.emptyList();
                        bitField0_ = (bitField0_ & ~0x00000004);
                        onChanged();
                    } else {
                        syncIndexInfoBuilder_.clear();
                    }
                    return this;
                }
                /**
                 * <code>repeated .one2data.rbtmqmsgcli.client.SyncIndexInfo sync_index_info = 3;</code>
                 */
                public Builder removeSyncIndexInfo(int index) {
                    if (syncIndexInfoBuilder_ == null) {
                        ensureSyncIndexInfoIsMutable();
                        syncIndexInfo_.remove(index);
                        onChanged();
                    } else {
                        syncIndexInfoBuilder_.remove(index);
                    }
                    return this;
                }
                /**
                 * <code>repeated .one2data.rbtmqmsgcli.client.SyncIndexInfo sync_index_info = 3;</code>
                 */
                public cn.keptdata.one2data.header.message.protobuf.client.BackupMessage.SyncIndexInfo.Builder getSyncIndexInfoBuilder(
                        int index) {
                    return getSyncIndexInfoFieldBuilder().getBuilder(index);
                }
                /**
                 * <code>repeated .one2data.rbtmqmsgcli.client.SyncIndexInfo sync_index_info = 3;</code>
                 */
                public cn.keptdata.one2data.header.message.protobuf.client.BackupMessage.SyncIndexInfoOrBuilder getSyncIndexInfoOrBuilder(
                        int index) {
                    if (syncIndexInfoBuilder_ == null) {
                        return syncIndexInfo_.get(index);  } else {
                        return syncIndexInfoBuilder_.getMessageOrBuilder(index);
                    }
                }
                /**
                 * <code>repeated .one2data.rbtmqmsgcli.client.SyncIndexInfo sync_index_info = 3;</code>
                 */
                public java.util.List<? extends cn.keptdata.one2data.header.message.protobuf.client.BackupMessage.SyncIndexInfoOrBuilder>
                getSyncIndexInfoOrBuilderList() {
                    if (syncIndexInfoBuilder_ != null) {
                        return syncIndexInfoBuilder_.getMessageOrBuilderList();
                    } else {
                        return java.util.Collections.unmodifiableList(syncIndexInfo_);
                    }
                }
                /**
                 * <code>repeated .one2data.rbtmqmsgcli.client.SyncIndexInfo sync_index_info = 3;</code>
                 */
                public cn.keptdata.one2data.header.message.protobuf.client.BackupMessage.SyncIndexInfo.Builder addSyncIndexInfoBuilder() {
                    return getSyncIndexInfoFieldBuilder().addBuilder(
                            cn.keptdata.one2data.header.message.protobuf.client.BackupMessage.SyncIndexInfo.getDefaultInstance());
                }
                /**
                 * <code>repeated .one2data.rbtmqmsgcli.client.SyncIndexInfo sync_index_info = 3;</code>
                 */
                public cn.keptdata.one2data.header.message.protobuf.client.BackupMessage.SyncIndexInfo.Builder addSyncIndexInfoBuilder(
                        int index) {
                    return getSyncIndexInfoFieldBuilder().addBuilder(
                            index, cn.keptdata.one2data.header.message.protobuf.client.BackupMessage.SyncIndexInfo.getDefaultInstance());
                }
                /**
                 * <code>repeated .one2data.rbtmqmsgcli.client.SyncIndexInfo sync_index_info = 3;</code>
                 */
                public java.util.List<cn.keptdata.one2data.header.message.protobuf.client.BackupMessage.SyncIndexInfo.Builder>
                getSyncIndexInfoBuilderList() {
                    return getSyncIndexInfoFieldBuilder().getBuilderList();
                }
                private com.google.protobuf.RepeatedFieldBuilderV3<
                        cn.keptdata.one2data.header.message.protobuf.client.BackupMessage.SyncIndexInfo, cn.keptdata.one2data.header.message.protobuf.client.BackupMessage.SyncIndexInfo.Builder, cn.keptdata.one2data.header.message.protobuf.client.BackupMessage.SyncIndexInfoOrBuilder>
                getSyncIndexInfoFieldBuilder() {
                    if (syncIndexInfoBuilder_ == null) {
                        syncIndexInfoBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
                                cn.keptdata.one2data.header.message.protobuf.client.BackupMessage.SyncIndexInfo, cn.keptdata.one2data.header.message.protobuf.client.BackupMessage.SyncIndexInfo.Builder, cn.keptdata.one2data.header.message.protobuf.client.BackupMessage.SyncIndexInfoOrBuilder>(
                                syncIndexInfo_,
                                ((bitField0_ & 0x00000004) == 0x00000004),
                                getParentForChildren(),
                                isClean());
                        syncIndexInfo_ = null;
                    }
                    return syncIndexInfoBuilder_;
                }

                private long dataReliability_ ;
                /**
                 * <code>optional int64 data_reliability = 4;</code>
                 */
                public long getDataReliability() {
                    return dataReliability_;
                }
                /**
                 * <code>optional int64 data_reliability = 4;</code>
                 */
                public Builder setDataReliability(long value) {

                    dataReliability_ = value;
                    onChanged();
                    return this;
                }
                /**
                 * <code>optional int64 data_reliability = 4;</code>
                 */
                public Builder clearDataReliability() {

                    dataReliability_ = 0L;
                    onChanged();
                    return this;
                }

                private long syncDataSizeByte_ ;
                /**
                 * <code>optional int64 sync_data_size_byte = 5;</code>
                 */
                public long getSyncDataSizeByte() {
                    return syncDataSizeByte_;
                }
                /**
                 * <code>optional int64 sync_data_size_byte = 5;</code>
                 */
                public Builder setSyncDataSizeByte(long value) {

                    syncDataSizeByte_ = value;
                    onChanged();
                    return this;
                }
                /**
                 * <code>optional int64 sync_data_size_byte = 5;</code>
                 */
                public Builder clearSyncDataSizeByte() {

                    syncDataSizeByte_ = 0L;
                    onChanged();
                    return this;
                }

                private long durationUs_ ;
                /**
                 * <code>optional int64 duration_us = 6;</code>
                 */
                public long getDurationUs() {
                    return durationUs_;
                }
                /**
                 * <code>optional int64 duration_us = 6;</code>
                 */
                public Builder setDurationUs(long value) {

                    durationUs_ = value;
                    onChanged();
                    return this;
                }
                /**
                 * <code>optional int64 duration_us = 6;</code>
                 */
                public Builder clearDurationUs() {

                    durationUs_ = 0L;
                    onChanged();
                    return this;
                }
                public final Builder setUnknownFields(
                        final com.google.protobuf.UnknownFieldSet unknownFields) {
                    return this;
                }

                public final Builder mergeUnknownFields(
                        final com.google.protobuf.UnknownFieldSet unknownFields) {
                    return this;
                }


                // @@protoc_insertion_point(builder_scope:one2data.rbtmqmsgcli.client.SyncIndexInfoReport.FineGrainedSyncIndexInfo)
            }

            // @@protoc_insertion_point(class_scope:one2data.rbtmqmsgcli.client.SyncIndexInfoReport.FineGrainedSyncIndexInfo)
            private static final cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.SyncIndexInfoReport.FineGrainedSyncIndexInfo DEFAULT_INSTANCE;
            static {
                DEFAULT_INSTANCE = new cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.SyncIndexInfoReport.FineGrainedSyncIndexInfo();
            }

            public static cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.SyncIndexInfoReport.FineGrainedSyncIndexInfo getDefaultInstance() {
                return DEFAULT_INSTANCE;
            }

            private static final com.google.protobuf.Parser<FineGrainedSyncIndexInfo>
                    PARSER = new com.google.protobuf.AbstractParser<FineGrainedSyncIndexInfo>() {
                public FineGrainedSyncIndexInfo parsePartialFrom(
                        com.google.protobuf.CodedInputStream input,
                        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                        throws com.google.protobuf.InvalidProtocolBufferException {
                    return new FineGrainedSyncIndexInfo(input, extensionRegistry);
                }
            };

            public static com.google.protobuf.Parser<FineGrainedSyncIndexInfo> parser() {
                return PARSER;
            }

            @Override
            public com.google.protobuf.Parser<FineGrainedSyncIndexInfo> getParserForType() {
                return PARSER;
            }

            public cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.SyncIndexInfoReport.FineGrainedSyncIndexInfo getDefaultInstanceForType() {
                return DEFAULT_INSTANCE;
            }

        }

        private int bitField0_;
        public static final int BASE_ACK_FIELD_NUMBER = 1;
        private cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck baseAck_;
        /**
         * <code>optional .one2data.rbtmqmsgcli.common.BaseAck base_ack = 1;</code>
         */
        public boolean hasBaseAck() {
            return baseAck_ != null;
        }
        /**
         * <code>optional .one2data.rbtmqmsgcli.common.BaseAck base_ack = 1;</code>
         */
        public cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck getBaseAck() {
            return baseAck_ == null ? cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck.getDefaultInstance() : baseAck_;
        }
        /**
         * <code>optional .one2data.rbtmqmsgcli.common.BaseAck base_ack = 1;</code>
         */
        public cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAckOrBuilder getBaseAckOrBuilder() {
            return getBaseAck();
        }

        public static final int BACKUP_TASK_UUID_FIELD_NUMBER = 2;
        private volatile Object backupTaskUuid_;
        /**
         * <pre>
         *存储lun 唯一ID
         * </pre>
         *
         * <code>optional string backup_task_uuid = 2;</code>
         */
        public String getBackupTaskUuid() {
            Object ref = backupTaskUuid_;
            if (ref instanceof String) {
                return (String) ref;
            } else {
                com.google.protobuf.ByteString bs =
                        (com.google.protobuf.ByteString) ref;
                String s = bs.toStringUtf8();
                backupTaskUuid_ = s;
                return s;
            }
        }
        /**
         * <pre>
         *存储lun 唯一ID
         * </pre>
         *
         * <code>optional string backup_task_uuid = 2;</code>
         */
        public com.google.protobuf.ByteString
        getBackupTaskUuidBytes() {
            Object ref = backupTaskUuid_;
            if (ref instanceof String) {
                com.google.protobuf.ByteString b =
                        com.google.protobuf.ByteString.copyFromUtf8(
                                (String) ref);
                backupTaskUuid_ = b;
                return b;
            } else {
                return (com.google.protobuf.ByteString) ref;
            }
        }

        public static final int SYNC_DATA_START_TIMESTAMP_SECOND_SERVER_FIELD_NUMBER = 3;
        private long syncDataStartTimestampSecondServer_;
        /**
         * <pre>
         *数据同步开始的时间戳(服务端)
         * </pre>
         *
         * <code>optional int64 sync_data_start_timestamp_second_server = 3;</code>
         */
        public long getSyncDataStartTimestampSecondServer() {
            return syncDataStartTimestampSecondServer_;
        }

        public static final int SYNC_DATA_FINISH_TIMESTAMP_SECOND_CLIENT_FIELD_NUMBER = 4;
        private long syncDataFinishTimestampSecondClient_;
        /**
         * <pre>
         *客户端数据同步完成的时间戳
         * </pre>
         *
         * <code>optional int64 sync_data_finish_timestamp_second_client = 4;</code>
         */
        public long getSyncDataFinishTimestampSecondClient() {
            return syncDataFinishTimestampSecondClient_;
        }

        public static final int SYNC_INDEX_INFO_FIELD_NUMBER = 5;
        private java.util.List<cn.keptdata.one2data.header.message.protobuf.client.BackupMessage.SyncIndexInfo> syncIndexInfo_;
        /**
         * <pre>
         *同步索引信息
         * </pre>
         *
         * <code>repeated .one2data.rbtmqmsgcli.client.SyncIndexInfo sync_index_info = 5;</code>
         */
        public java.util.List<cn.keptdata.one2data.header.message.protobuf.client.BackupMessage.SyncIndexInfo> getSyncIndexInfoList() {
            return syncIndexInfo_;
        }
        /**
         * <pre>
         *同步索引信息
         * </pre>
         *
         * <code>repeated .one2data.rbtmqmsgcli.client.SyncIndexInfo sync_index_info = 5;</code>
         */
        public java.util.List<? extends cn.keptdata.one2data.header.message.protobuf.client.BackupMessage.SyncIndexInfoOrBuilder>
        getSyncIndexInfoOrBuilderList() {
            return syncIndexInfo_;
        }
        /**
         * <pre>
         *同步索引信息
         * </pre>
         *
         * <code>repeated .one2data.rbtmqmsgcli.client.SyncIndexInfo sync_index_info = 5;</code>
         */
        public int getSyncIndexInfoCount() {
            return syncIndexInfo_.size();
        }
        /**
         * <pre>
         *同步索引信息
         * </pre>
         *
         * <code>repeated .one2data.rbtmqmsgcli.client.SyncIndexInfo sync_index_info = 5;</code>
         */
        public cn.keptdata.one2data.header.message.protobuf.client.BackupMessage.SyncIndexInfo getSyncIndexInfo(int index) {
            return syncIndexInfo_.get(index);
        }
        /**
         * <pre>
         *同步索引信息
         * </pre>
         *
         * <code>repeated .one2data.rbtmqmsgcli.client.SyncIndexInfo sync_index_info = 5;</code>
         */
        public cn.keptdata.one2data.header.message.protobuf.client.BackupMessage.SyncIndexInfoOrBuilder getSyncIndexInfoOrBuilder(
                int index) {
            return syncIndexInfo_.get(index);
        }

        public static final int DATA_RELIABILITY_FIELD_NUMBER = 6;
        private long dataReliability_;
        /**
         * <pre>
         *索引数据可靠性（安全值,0-100）
         * </pre>
         *
         * <code>optional int64 data_reliability = 6;</code>
         */
        public long getDataReliability() {
            return dataReliability_;
        }

        public static final int SYNC_DATA_SIZE_BYTE_FIELD_NUMBER = 7;
        private long syncDataSizeByte_;
        /**
         * <pre>
         *本次同步完成的数据量(Byte)
         * </pre>
         *
         * <code>optional int64 sync_data_size_byte = 7;</code>
         */
        public long getSyncDataSizeByte() {
            return syncDataSizeByte_;
        }

        public static final int DURATION_MILLIS_FIELD_NUMBER = 8;
        private long durationMillis_;
        /**
         * <pre>
         *本次同步耗费时间(毫秒)
         * </pre>
         *
         * <code>optional int64 duration_millis = 8;</code>
         */
        public long getDurationMillis() {
            return durationMillis_;
        }

        public static final int FINE_GRAINED_SYNC_INDEX_INFO_FIELD_NUMBER = 9;
        private java.util.List<cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.SyncIndexInfoReport.FineGrainedSyncIndexInfo> fineGrainedSyncIndexInfo_;
        /**
         * <pre>
         *细粒度同步索引信息
         * </pre>
         *
         * <code>repeated .one2data.rbtmqmsgcli.client.SyncIndexInfoReport.FineGrainedSyncIndexInfo fine_grained_sync_index_info = 9;</code>
         */
        public java.util.List<cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.SyncIndexInfoReport.FineGrainedSyncIndexInfo> getFineGrainedSyncIndexInfoList() {
            return fineGrainedSyncIndexInfo_;
        }
        /**
         * <pre>
         *细粒度同步索引信息
         * </pre>
         *
         * <code>repeated .one2data.rbtmqmsgcli.client.SyncIndexInfoReport.FineGrainedSyncIndexInfo fine_grained_sync_index_info = 9;</code>
         */
        public java.util.List<? extends cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.SyncIndexInfoReport.FineGrainedSyncIndexInfoOrBuilder>
        getFineGrainedSyncIndexInfoOrBuilderList() {
            return fineGrainedSyncIndexInfo_;
        }
        /**
         * <pre>
         *细粒度同步索引信息
         * </pre>
         *
         * <code>repeated .one2data.rbtmqmsgcli.client.SyncIndexInfoReport.FineGrainedSyncIndexInfo fine_grained_sync_index_info = 9;</code>
         */
        public int getFineGrainedSyncIndexInfoCount() {
            return fineGrainedSyncIndexInfo_.size();
        }
        /**
         * <pre>
         *细粒度同步索引信息
         * </pre>
         *
         * <code>repeated .one2data.rbtmqmsgcli.client.SyncIndexInfoReport.FineGrainedSyncIndexInfo fine_grained_sync_index_info = 9;</code>
         */
        public cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.SyncIndexInfoReport.FineGrainedSyncIndexInfo getFineGrainedSyncIndexInfo(int index) {
            return fineGrainedSyncIndexInfo_.get(index);
        }
        /**
         * <pre>
         *细粒度同步索引信息
         * </pre>
         *
         * <code>repeated .one2data.rbtmqmsgcli.client.SyncIndexInfoReport.FineGrainedSyncIndexInfo fine_grained_sync_index_info = 9;</code>
         */
        public cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.SyncIndexInfoReport.FineGrainedSyncIndexInfoOrBuilder getFineGrainedSyncIndexInfoOrBuilder(
                int index) {
            return fineGrainedSyncIndexInfo_.get(index);
        }

        private byte memoizedIsInitialized = -1;
        public final boolean isInitialized() {
            byte isInitialized = memoizedIsInitialized;
            if (isInitialized == 1) return true;
            if (isInitialized == 0) return false;

            memoizedIsInitialized = 1;
            return true;
        }

        public void writeTo(com.google.protobuf.CodedOutputStream output)
                throws java.io.IOException {
            if (baseAck_ != null) {
                output.writeMessage(1, getBaseAck());
            }
            if (!getBackupTaskUuidBytes().isEmpty()) {
                com.google.protobuf.GeneratedMessageV3.writeString(output, 2, backupTaskUuid_);
            }
            if (syncDataStartTimestampSecondServer_ != 0L) {
                output.writeInt64(3, syncDataStartTimestampSecondServer_);
            }
            if (syncDataFinishTimestampSecondClient_ != 0L) {
                output.writeInt64(4, syncDataFinishTimestampSecondClient_);
            }
            for (int i = 0; i < syncIndexInfo_.size(); i++) {
                output.writeMessage(5, syncIndexInfo_.get(i));
            }
            if (dataReliability_ != 0L) {
                output.writeInt64(6, dataReliability_);
            }
            if (syncDataSizeByte_ != 0L) {
                output.writeInt64(7, syncDataSizeByte_);
            }
            if (durationMillis_ != 0L) {
                output.writeInt64(8, durationMillis_);
            }
            for (int i = 0; i < fineGrainedSyncIndexInfo_.size(); i++) {
                output.writeMessage(9, fineGrainedSyncIndexInfo_.get(i));
            }
        }

        public int getSerializedSize() {
            int size = memoizedSize;
            if (size != -1) return size;

            size = 0;
            if (baseAck_ != null) {
                size += com.google.protobuf.CodedOutputStream
                        .computeMessageSize(1, getBaseAck());
            }
            if (!getBackupTaskUuidBytes().isEmpty()) {
                size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, backupTaskUuid_);
            }
            if (syncDataStartTimestampSecondServer_ != 0L) {
                size += com.google.protobuf.CodedOutputStream
                        .computeInt64Size(3, syncDataStartTimestampSecondServer_);
            }
            if (syncDataFinishTimestampSecondClient_ != 0L) {
                size += com.google.protobuf.CodedOutputStream
                        .computeInt64Size(4, syncDataFinishTimestampSecondClient_);
            }
            for (int i = 0; i < syncIndexInfo_.size(); i++) {
                size += com.google.protobuf.CodedOutputStream
                        .computeMessageSize(5, syncIndexInfo_.get(i));
            }
            if (dataReliability_ != 0L) {
                size += com.google.protobuf.CodedOutputStream
                        .computeInt64Size(6, dataReliability_);
            }
            if (syncDataSizeByte_ != 0L) {
                size += com.google.protobuf.CodedOutputStream
                        .computeInt64Size(7, syncDataSizeByte_);
            }
            if (durationMillis_ != 0L) {
                size += com.google.protobuf.CodedOutputStream
                        .computeInt64Size(8, durationMillis_);
            }
            for (int i = 0; i < fineGrainedSyncIndexInfo_.size(); i++) {
                size += com.google.protobuf.CodedOutputStream
                        .computeMessageSize(9, fineGrainedSyncIndexInfo_.get(i));
            }
            memoizedSize = size;
            return size;
        }

        private static final long serialVersionUID = 0L;
        @Override
        public boolean equals(final Object obj) {
            if (obj == this) {
                return true;
            }
            if (!(obj instanceof cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.SyncIndexInfoReport)) {
                return super.equals(obj);
            }
            cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.SyncIndexInfoReport other = (cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.SyncIndexInfoReport) obj;

            boolean result = true;
            result = result && (hasBaseAck() == other.hasBaseAck());
            if (hasBaseAck()) {
                result = result && getBaseAck()
                        .equals(other.getBaseAck());
            }
            result = result && getBackupTaskUuid()
                    .equals(other.getBackupTaskUuid());
            result = result && (getSyncDataStartTimestampSecondServer()
                    == other.getSyncDataStartTimestampSecondServer());
            result = result && (getSyncDataFinishTimestampSecondClient()
                    == other.getSyncDataFinishTimestampSecondClient());
            result = result && getSyncIndexInfoList()
                    .equals(other.getSyncIndexInfoList());
            result = result && (getDataReliability()
                    == other.getDataReliability());
            result = result && (getSyncDataSizeByte()
                    == other.getSyncDataSizeByte());
            result = result && (getDurationMillis()
                    == other.getDurationMillis());
            result = result && getFineGrainedSyncIndexInfoList()
                    .equals(other.getFineGrainedSyncIndexInfoList());
            return result;
        }

        @Override
        public int hashCode() {
            if (memoizedHashCode != 0) {
                return memoizedHashCode;
            }
            int hash = 41;
            hash = (19 * hash) + getDescriptorForType().hashCode();
            if (hasBaseAck()) {
                hash = (37 * hash) + BASE_ACK_FIELD_NUMBER;
                hash = (53 * hash) + getBaseAck().hashCode();
            }
            hash = (37 * hash) + BACKUP_TASK_UUID_FIELD_NUMBER;
            hash = (53 * hash) + getBackupTaskUuid().hashCode();
            hash = (37 * hash) + SYNC_DATA_START_TIMESTAMP_SECOND_SERVER_FIELD_NUMBER;
            hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
                    getSyncDataStartTimestampSecondServer());
            hash = (37 * hash) + SYNC_DATA_FINISH_TIMESTAMP_SECOND_CLIENT_FIELD_NUMBER;
            hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
                    getSyncDataFinishTimestampSecondClient());
            if (getSyncIndexInfoCount() > 0) {
                hash = (37 * hash) + SYNC_INDEX_INFO_FIELD_NUMBER;
                hash = (53 * hash) + getSyncIndexInfoList().hashCode();
            }
            hash = (37 * hash) + DATA_RELIABILITY_FIELD_NUMBER;
            hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
                    getDataReliability());
            hash = (37 * hash) + SYNC_DATA_SIZE_BYTE_FIELD_NUMBER;
            hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
                    getSyncDataSizeByte());
            hash = (37 * hash) + DURATION_MILLIS_FIELD_NUMBER;
            hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
                    getDurationMillis());
            if (getFineGrainedSyncIndexInfoCount() > 0) {
                hash = (37 * hash) + FINE_GRAINED_SYNC_INDEX_INFO_FIELD_NUMBER;
                hash = (53 * hash) + getFineGrainedSyncIndexInfoList().hashCode();
            }
            hash = (29 * hash) + unknownFields.hashCode();
            memoizedHashCode = hash;
            return hash;
        }

        public static cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.SyncIndexInfoReport parseFrom(
                com.google.protobuf.ByteString data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }
        public static cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.SyncIndexInfoReport parseFrom(
                com.google.protobuf.ByteString data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }
        public static cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.SyncIndexInfoReport parseFrom(byte[] data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }
        public static cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.SyncIndexInfoReport parseFrom(
                byte[] data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }
        public static cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.SyncIndexInfoReport parseFrom(java.io.InputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input);
        }
        public static cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.SyncIndexInfoReport parseFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input, extensionRegistry);
        }
        public static cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.SyncIndexInfoReport parseDelimitedFrom(java.io.InputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseDelimitedWithIOException(PARSER, input);
        }
        public static cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.SyncIndexInfoReport parseDelimitedFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
        }
        public static cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.SyncIndexInfoReport parseFrom(
                com.google.protobuf.CodedInputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input);
        }
        public static cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.SyncIndexInfoReport parseFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input, extensionRegistry);
        }

        public Builder newBuilderForType() { return newBuilder(); }
        public static Builder newBuilder() {
            return DEFAULT_INSTANCE.toBuilder();
        }
        public static Builder newBuilder(cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.SyncIndexInfoReport prototype) {
            return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }
        public Builder toBuilder() {
            return this == DEFAULT_INSTANCE
                    ? new Builder() : new Builder().mergeFrom(this);
        }

        @Override
        protected Builder newBuilderForType(
                BuilderParent parent) {
            Builder builder = new Builder(parent);
            return builder;
        }
        /**
         * <pre>
         *************客户端上报索引文件创建结果******************
         * </pre>
         *
         * Protobuf type {@code one2data.rbtmqmsgcli.client.SyncIndexInfoReport}
         */
        public static final class Builder extends
                com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
                // @@protoc_insertion_point(builder_implements:one2data.rbtmqmsgcli.client.SyncIndexInfoReport)
                cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.SyncIndexInfoReportOrBuilder {
            public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
                return cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.internal_static_one2data_rbtmqmsgcli_client_SyncIndexInfoReport_descriptor;
            }

            protected FieldAccessorTable
            internalGetFieldAccessorTable() {
                return cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.internal_static_one2data_rbtmqmsgcli_client_SyncIndexInfoReport_fieldAccessorTable
                        .ensureFieldAccessorsInitialized(
                                cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.SyncIndexInfoReport.class, cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.SyncIndexInfoReport.Builder.class);
            }

            // Construct using cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.SyncIndexInfoReport.newBuilder()
            private Builder() {
                maybeForceBuilderInitialization();
            }

            private Builder(
                    BuilderParent parent) {
                super(parent);
                maybeForceBuilderInitialization();
            }
            private void maybeForceBuilderInitialization() {
                if (com.google.protobuf.GeneratedMessageV3
                        .alwaysUseFieldBuilders) {
                    getSyncIndexInfoFieldBuilder();
                    getFineGrainedSyncIndexInfoFieldBuilder();
                }
            }
            public Builder clear() {
                super.clear();
                if (baseAckBuilder_ == null) {
                    baseAck_ = null;
                } else {
                    baseAck_ = null;
                    baseAckBuilder_ = null;
                }
                backupTaskUuid_ = "";

                syncDataStartTimestampSecondServer_ = 0L;

                syncDataFinishTimestampSecondClient_ = 0L;

                if (syncIndexInfoBuilder_ == null) {
                    syncIndexInfo_ = java.util.Collections.emptyList();
                    bitField0_ = (bitField0_ & ~0x00000010);
                } else {
                    syncIndexInfoBuilder_.clear();
                }
                dataReliability_ = 0L;

                syncDataSizeByte_ = 0L;

                durationMillis_ = 0L;

                if (fineGrainedSyncIndexInfoBuilder_ == null) {
                    fineGrainedSyncIndexInfo_ = java.util.Collections.emptyList();
                    bitField0_ = (bitField0_ & ~0x00000100);
                } else {
                    fineGrainedSyncIndexInfoBuilder_.clear();
                }
                return this;
            }

            public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
                return cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.internal_static_one2data_rbtmqmsgcli_client_SyncIndexInfoReport_descriptor;
            }

            public cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.SyncIndexInfoReport getDefaultInstanceForType() {
                return cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.SyncIndexInfoReport.getDefaultInstance();
            }

            public cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.SyncIndexInfoReport build() {
                cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.SyncIndexInfoReport result = buildPartial();
                if (!result.isInitialized()) {
                    throw newUninitializedMessageException(result);
                }
                return result;
            }

            public cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.SyncIndexInfoReport buildPartial() {
                cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.SyncIndexInfoReport result = new cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.SyncIndexInfoReport(this);
                int from_bitField0_ = bitField0_;
                int to_bitField0_ = 0;
                if (baseAckBuilder_ == null) {
                    result.baseAck_ = baseAck_;
                } else {
                    result.baseAck_ = baseAckBuilder_.build();
                }
                result.backupTaskUuid_ = backupTaskUuid_;
                result.syncDataStartTimestampSecondServer_ = syncDataStartTimestampSecondServer_;
                result.syncDataFinishTimestampSecondClient_ = syncDataFinishTimestampSecondClient_;
                if (syncIndexInfoBuilder_ == null) {
                    if (((bitField0_ & 0x00000010) == 0x00000010)) {
                        syncIndexInfo_ = java.util.Collections.unmodifiableList(syncIndexInfo_);
                        bitField0_ = (bitField0_ & ~0x00000010);
                    }
                    result.syncIndexInfo_ = syncIndexInfo_;
                } else {
                    result.syncIndexInfo_ = syncIndexInfoBuilder_.build();
                }
                result.dataReliability_ = dataReliability_;
                result.syncDataSizeByte_ = syncDataSizeByte_;
                result.durationMillis_ = durationMillis_;
                if (fineGrainedSyncIndexInfoBuilder_ == null) {
                    if (((bitField0_ & 0x00000100) == 0x00000100)) {
                        fineGrainedSyncIndexInfo_ = java.util.Collections.unmodifiableList(fineGrainedSyncIndexInfo_);
                        bitField0_ = (bitField0_ & ~0x00000100);
                    }
                    result.fineGrainedSyncIndexInfo_ = fineGrainedSyncIndexInfo_;
                } else {
                    result.fineGrainedSyncIndexInfo_ = fineGrainedSyncIndexInfoBuilder_.build();
                }
                result.bitField0_ = to_bitField0_;
                onBuilt();
                return result;
            }

            public Builder clone() {
                return (Builder) super.clone();
            }
            public Builder setField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    Object value) {
                return (Builder) super.setField(field, value);
            }
            public Builder clearField(
                    com.google.protobuf.Descriptors.FieldDescriptor field) {
                return (Builder) super.clearField(field);
            }
            public Builder clearOneof(
                    com.google.protobuf.Descriptors.OneofDescriptor oneof) {
                return (Builder) super.clearOneof(oneof);
            }
            public Builder setRepeatedField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    int index, Object value) {
                return (Builder) super.setRepeatedField(field, index, value);
            }
            public Builder addRepeatedField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    Object value) {
                return (Builder) super.addRepeatedField(field, value);
            }
            public Builder mergeFrom(com.google.protobuf.Message other) {
                if (other instanceof cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.SyncIndexInfoReport) {
                    return mergeFrom((cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.SyncIndexInfoReport)other);
                } else {
                    super.mergeFrom(other);
                    return this;
                }
            }

            public Builder mergeFrom(cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.SyncIndexInfoReport other) {
                if (other == cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.SyncIndexInfoReport.getDefaultInstance()) return this;
                if (other.hasBaseAck()) {
                    mergeBaseAck(other.getBaseAck());
                }
                if (!other.getBackupTaskUuid().isEmpty()) {
                    backupTaskUuid_ = other.backupTaskUuid_;
                    onChanged();
                }
                if (other.getSyncDataStartTimestampSecondServer() != 0L) {
                    setSyncDataStartTimestampSecondServer(other.getSyncDataStartTimestampSecondServer());
                }
                if (other.getSyncDataFinishTimestampSecondClient() != 0L) {
                    setSyncDataFinishTimestampSecondClient(other.getSyncDataFinishTimestampSecondClient());
                }
                if (syncIndexInfoBuilder_ == null) {
                    if (!other.syncIndexInfo_.isEmpty()) {
                        if (syncIndexInfo_.isEmpty()) {
                            syncIndexInfo_ = other.syncIndexInfo_;
                            bitField0_ = (bitField0_ & ~0x00000010);
                        } else {
                            ensureSyncIndexInfoIsMutable();
                            syncIndexInfo_.addAll(other.syncIndexInfo_);
                        }
                        onChanged();
                    }
                } else {
                    if (!other.syncIndexInfo_.isEmpty()) {
                        if (syncIndexInfoBuilder_.isEmpty()) {
                            syncIndexInfoBuilder_.dispose();
                            syncIndexInfoBuilder_ = null;
                            syncIndexInfo_ = other.syncIndexInfo_;
                            bitField0_ = (bitField0_ & ~0x00000010);
                            syncIndexInfoBuilder_ =
                                    com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                                            getSyncIndexInfoFieldBuilder() : null;
                        } else {
                            syncIndexInfoBuilder_.addAllMessages(other.syncIndexInfo_);
                        }
                    }
                }
                if (other.getDataReliability() != 0L) {
                    setDataReliability(other.getDataReliability());
                }
                if (other.getSyncDataSizeByte() != 0L) {
                    setSyncDataSizeByte(other.getSyncDataSizeByte());
                }
                if (other.getDurationMillis() != 0L) {
                    setDurationMillis(other.getDurationMillis());
                }
                if (fineGrainedSyncIndexInfoBuilder_ == null) {
                    if (!other.fineGrainedSyncIndexInfo_.isEmpty()) {
                        if (fineGrainedSyncIndexInfo_.isEmpty()) {
                            fineGrainedSyncIndexInfo_ = other.fineGrainedSyncIndexInfo_;
                            bitField0_ = (bitField0_ & ~0x00000100);
                        } else {
                            ensureFineGrainedSyncIndexInfoIsMutable();
                            fineGrainedSyncIndexInfo_.addAll(other.fineGrainedSyncIndexInfo_);
                        }
                        onChanged();
                    }
                } else {
                    if (!other.fineGrainedSyncIndexInfo_.isEmpty()) {
                        if (fineGrainedSyncIndexInfoBuilder_.isEmpty()) {
                            fineGrainedSyncIndexInfoBuilder_.dispose();
                            fineGrainedSyncIndexInfoBuilder_ = null;
                            fineGrainedSyncIndexInfo_ = other.fineGrainedSyncIndexInfo_;
                            bitField0_ = (bitField0_ & ~0x00000100);
                            fineGrainedSyncIndexInfoBuilder_ =
                                    com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                                            getFineGrainedSyncIndexInfoFieldBuilder() : null;
                        } else {
                            fineGrainedSyncIndexInfoBuilder_.addAllMessages(other.fineGrainedSyncIndexInfo_);
                        }
                    }
                }
                onChanged();
                return this;
            }

            public final boolean isInitialized() {
                return true;
            }

            public Builder mergeFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws java.io.IOException {
                cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.SyncIndexInfoReport parsedMessage = null;
                try {
                    parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
                } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                    parsedMessage = (cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.SyncIndexInfoReport) e.getUnfinishedMessage();
                    throw e.unwrapIOException();
                } finally {
                    if (parsedMessage != null) {
                        mergeFrom(parsedMessage);
                    }
                }
                return this;
            }
            private int bitField0_;

            private cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck baseAck_ = null;
            private com.google.protobuf.SingleFieldBuilderV3<
                    cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck, cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck.Builder, cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAckOrBuilder> baseAckBuilder_;
            /**
             * <code>optional .one2data.rbtmqmsgcli.common.BaseAck base_ack = 1;</code>
             */
            public boolean hasBaseAck() {
                return baseAckBuilder_ != null || baseAck_ != null;
            }
            /**
             * <code>optional .one2data.rbtmqmsgcli.common.BaseAck base_ack = 1;</code>
             */
            public cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck getBaseAck() {
                if (baseAckBuilder_ == null) {
                    return baseAck_ == null ? cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck.getDefaultInstance() : baseAck_;
                } else {
                    return baseAckBuilder_.getMessage();
                }
            }
            /**
             * <code>optional .one2data.rbtmqmsgcli.common.BaseAck base_ack = 1;</code>
             */
            public Builder setBaseAck(cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck value) {
                if (baseAckBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    baseAck_ = value;
                    onChanged();
                } else {
                    baseAckBuilder_.setMessage(value);
                }

                return this;
            }
            /**
             * <code>optional .one2data.rbtmqmsgcli.common.BaseAck base_ack = 1;</code>
             */
            public Builder setBaseAck(
                    cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck.Builder builderForValue) {
                if (baseAckBuilder_ == null) {
                    baseAck_ = builderForValue.build();
                    onChanged();
                } else {
                    baseAckBuilder_.setMessage(builderForValue.build());
                }

                return this;
            }
            /**
             * <code>optional .one2data.rbtmqmsgcli.common.BaseAck base_ack = 1;</code>
             */
            public Builder mergeBaseAck(cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck value) {
                if (baseAckBuilder_ == null) {
                    if (baseAck_ != null) {
                        baseAck_ =
                                cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck.newBuilder(baseAck_).mergeFrom(value).buildPartial();
                    } else {
                        baseAck_ = value;
                    }
                    onChanged();
                } else {
                    baseAckBuilder_.mergeFrom(value);
                }

                return this;
            }
            /**
             * <code>optional .one2data.rbtmqmsgcli.common.BaseAck base_ack = 1;</code>
             */
            public Builder clearBaseAck() {
                if (baseAckBuilder_ == null) {
                    baseAck_ = null;
                    onChanged();
                } else {
                    baseAck_ = null;
                    baseAckBuilder_ = null;
                }

                return this;
            }
            /**
             * <code>optional .one2data.rbtmqmsgcli.common.BaseAck base_ack = 1;</code>
             */
            public cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck.Builder getBaseAckBuilder() {

                onChanged();
                return getBaseAckFieldBuilder().getBuilder();
            }
            /**
             * <code>optional .one2data.rbtmqmsgcli.common.BaseAck base_ack = 1;</code>
             */
            public cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAckOrBuilder getBaseAckOrBuilder() {
                if (baseAckBuilder_ != null) {
                    return baseAckBuilder_.getMessageOrBuilder();
                } else {
                    return baseAck_ == null ?
                            cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck.getDefaultInstance() : baseAck_;
                }
            }
            /**
             * <code>optional .one2data.rbtmqmsgcli.common.BaseAck base_ack = 1;</code>
             */
            private com.google.protobuf.SingleFieldBuilderV3<
                    cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck, cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck.Builder, cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAckOrBuilder>
            getBaseAckFieldBuilder() {
                if (baseAckBuilder_ == null) {
                    baseAckBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                            cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck, cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck.Builder, cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAckOrBuilder>(
                            getBaseAck(),
                            getParentForChildren(),
                            isClean());
                    baseAck_ = null;
                }
                return baseAckBuilder_;
            }

            private Object backupTaskUuid_ = "";
            /**
             * <pre>
             *存储lun 唯一ID
             * </pre>
             *
             * <code>optional string backup_task_uuid = 2;</code>
             */
            public String getBackupTaskUuid() {
                Object ref = backupTaskUuid_;
                if (!(ref instanceof String)) {
                    com.google.protobuf.ByteString bs =
                            (com.google.protobuf.ByteString) ref;
                    String s = bs.toStringUtf8();
                    backupTaskUuid_ = s;
                    return s;
                } else {
                    return (String) ref;
                }
            }
            /**
             * <pre>
             *存储lun 唯一ID
             * </pre>
             *
             * <code>optional string backup_task_uuid = 2;</code>
             */
            public com.google.protobuf.ByteString
            getBackupTaskUuidBytes() {
                Object ref = backupTaskUuid_;
                if (ref instanceof String) {
                    com.google.protobuf.ByteString b =
                            com.google.protobuf.ByteString.copyFromUtf8(
                                    (String) ref);
                    backupTaskUuid_ = b;
                    return b;
                } else {
                    return (com.google.protobuf.ByteString) ref;
                }
            }
            /**
             * <pre>
             *存储lun 唯一ID
             * </pre>
             *
             * <code>optional string backup_task_uuid = 2;</code>
             */
            public Builder setBackupTaskUuid(
                    String value) {
                if (value == null) {
                    throw new NullPointerException();
                }

                backupTaskUuid_ = value;
                onChanged();
                return this;
            }
            /**
             * <pre>
             *存储lun 唯一ID
             * </pre>
             *
             * <code>optional string backup_task_uuid = 2;</code>
             */
            public Builder clearBackupTaskUuid() {

                backupTaskUuid_ = getDefaultInstance().getBackupTaskUuid();
                onChanged();
                return this;
            }
            /**
             * <pre>
             *存储lun 唯一ID
             * </pre>
             *
             * <code>optional string backup_task_uuid = 2;</code>
             */
            public Builder setBackupTaskUuidBytes(
                    com.google.protobuf.ByteString value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                checkByteStringIsUtf8(value);

                backupTaskUuid_ = value;
                onChanged();
                return this;
            }

            private long syncDataStartTimestampSecondServer_ ;
            /**
             * <pre>
             *数据同步开始的时间戳(服务端)
             * </pre>
             *
             * <code>optional int64 sync_data_start_timestamp_second_server = 3;</code>
             */
            public long getSyncDataStartTimestampSecondServer() {
                return syncDataStartTimestampSecondServer_;
            }
            /**
             * <pre>
             *数据同步开始的时间戳(服务端)
             * </pre>
             *
             * <code>optional int64 sync_data_start_timestamp_second_server = 3;</code>
             */
            public Builder setSyncDataStartTimestampSecondServer(long value) {

                syncDataStartTimestampSecondServer_ = value;
                onChanged();
                return this;
            }
            /**
             * <pre>
             *数据同步开始的时间戳(服务端)
             * </pre>
             *
             * <code>optional int64 sync_data_start_timestamp_second_server = 3;</code>
             */
            public Builder clearSyncDataStartTimestampSecondServer() {

                syncDataStartTimestampSecondServer_ = 0L;
                onChanged();
                return this;
            }

            private long syncDataFinishTimestampSecondClient_ ;
            /**
             * <pre>
             *客户端数据同步完成的时间戳
             * </pre>
             *
             * <code>optional int64 sync_data_finish_timestamp_second_client = 4;</code>
             */
            public long getSyncDataFinishTimestampSecondClient() {
                return syncDataFinishTimestampSecondClient_;
            }
            /**
             * <pre>
             *客户端数据同步完成的时间戳
             * </pre>
             *
             * <code>optional int64 sync_data_finish_timestamp_second_client = 4;</code>
             */
            public Builder setSyncDataFinishTimestampSecondClient(long value) {

                syncDataFinishTimestampSecondClient_ = value;
                onChanged();
                return this;
            }
            /**
             * <pre>
             *客户端数据同步完成的时间戳
             * </pre>
             *
             * <code>optional int64 sync_data_finish_timestamp_second_client = 4;</code>
             */
            public Builder clearSyncDataFinishTimestampSecondClient() {

                syncDataFinishTimestampSecondClient_ = 0L;
                onChanged();
                return this;
            }

            private java.util.List<cn.keptdata.one2data.header.message.protobuf.client.BackupMessage.SyncIndexInfo> syncIndexInfo_ =
                    java.util.Collections.emptyList();
            private void ensureSyncIndexInfoIsMutable() {
                if (!((bitField0_ & 0x00000010) == 0x00000010)) {
                    syncIndexInfo_ = new java.util.ArrayList<cn.keptdata.one2data.header.message.protobuf.client.BackupMessage.SyncIndexInfo>(syncIndexInfo_);
                    bitField0_ |= 0x00000010;
                }
            }

            private com.google.protobuf.RepeatedFieldBuilderV3<
                    cn.keptdata.one2data.header.message.protobuf.client.BackupMessage.SyncIndexInfo, cn.keptdata.one2data.header.message.protobuf.client.BackupMessage.SyncIndexInfo.Builder, cn.keptdata.one2data.header.message.protobuf.client.BackupMessage.SyncIndexInfoOrBuilder> syncIndexInfoBuilder_;

            /**
             * <pre>
             *同步索引信息
             * </pre>
             *
             * <code>repeated .one2data.rbtmqmsgcli.client.SyncIndexInfo sync_index_info = 5;</code>
             */
            public java.util.List<cn.keptdata.one2data.header.message.protobuf.client.BackupMessage.SyncIndexInfo> getSyncIndexInfoList() {
                if (syncIndexInfoBuilder_ == null) {
                    return java.util.Collections.unmodifiableList(syncIndexInfo_);
                } else {
                    return syncIndexInfoBuilder_.getMessageList();
                }
            }
            /**
             * <pre>
             *同步索引信息
             * </pre>
             *
             * <code>repeated .one2data.rbtmqmsgcli.client.SyncIndexInfo sync_index_info = 5;</code>
             */
            public int getSyncIndexInfoCount() {
                if (syncIndexInfoBuilder_ == null) {
                    return syncIndexInfo_.size();
                } else {
                    return syncIndexInfoBuilder_.getCount();
                }
            }
            /**
             * <pre>
             *同步索引信息
             * </pre>
             *
             * <code>repeated .one2data.rbtmqmsgcli.client.SyncIndexInfo sync_index_info = 5;</code>
             */
            public cn.keptdata.one2data.header.message.protobuf.client.BackupMessage.SyncIndexInfo getSyncIndexInfo(int index) {
                if (syncIndexInfoBuilder_ == null) {
                    return syncIndexInfo_.get(index);
                } else {
                    return syncIndexInfoBuilder_.getMessage(index);
                }
            }
            /**
             * <pre>
             *同步索引信息
             * </pre>
             *
             * <code>repeated .one2data.rbtmqmsgcli.client.SyncIndexInfo sync_index_info = 5;</code>
             */
            public Builder setSyncIndexInfo(
                    int index, cn.keptdata.one2data.header.message.protobuf.client.BackupMessage.SyncIndexInfo value) {
                if (syncIndexInfoBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    ensureSyncIndexInfoIsMutable();
                    syncIndexInfo_.set(index, value);
                    onChanged();
                } else {
                    syncIndexInfoBuilder_.setMessage(index, value);
                }
                return this;
            }
            /**
             * <pre>
             *同步索引信息
             * </pre>
             *
             * <code>repeated .one2data.rbtmqmsgcli.client.SyncIndexInfo sync_index_info = 5;</code>
             */
            public Builder setSyncIndexInfo(
                    int index, cn.keptdata.one2data.header.message.protobuf.client.BackupMessage.SyncIndexInfo.Builder builderForValue) {
                if (syncIndexInfoBuilder_ == null) {
                    ensureSyncIndexInfoIsMutable();
                    syncIndexInfo_.set(index, builderForValue.build());
                    onChanged();
                } else {
                    syncIndexInfoBuilder_.setMessage(index, builderForValue.build());
                }
                return this;
            }
            /**
             * <pre>
             *同步索引信息
             * </pre>
             *
             * <code>repeated .one2data.rbtmqmsgcli.client.SyncIndexInfo sync_index_info = 5;</code>
             */
            public Builder addSyncIndexInfo(cn.keptdata.one2data.header.message.protobuf.client.BackupMessage.SyncIndexInfo value) {
                if (syncIndexInfoBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    ensureSyncIndexInfoIsMutable();
                    syncIndexInfo_.add(value);
                    onChanged();
                } else {
                    syncIndexInfoBuilder_.addMessage(value);
                }
                return this;
            }
            /**
             * <pre>
             *同步索引信息
             * </pre>
             *
             * <code>repeated .one2data.rbtmqmsgcli.client.SyncIndexInfo sync_index_info = 5;</code>
             */
            public Builder addSyncIndexInfo(
                    int index, cn.keptdata.one2data.header.message.protobuf.client.BackupMessage.SyncIndexInfo value) {
                if (syncIndexInfoBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    ensureSyncIndexInfoIsMutable();
                    syncIndexInfo_.add(index, value);
                    onChanged();
                } else {
                    syncIndexInfoBuilder_.addMessage(index, value);
                }
                return this;
            }
            /**
             * <pre>
             *同步索引信息
             * </pre>
             *
             * <code>repeated .one2data.rbtmqmsgcli.client.SyncIndexInfo sync_index_info = 5;</code>
             */
            public Builder addSyncIndexInfo(
                    cn.keptdata.one2data.header.message.protobuf.client.BackupMessage.SyncIndexInfo.Builder builderForValue) {
                if (syncIndexInfoBuilder_ == null) {
                    ensureSyncIndexInfoIsMutable();
                    syncIndexInfo_.add(builderForValue.build());
                    onChanged();
                } else {
                    syncIndexInfoBuilder_.addMessage(builderForValue.build());
                }
                return this;
            }
            /**
             * <pre>
             *同步索引信息
             * </pre>
             *
             * <code>repeated .one2data.rbtmqmsgcli.client.SyncIndexInfo sync_index_info = 5;</code>
             */
            public Builder addSyncIndexInfo(
                    int index, cn.keptdata.one2data.header.message.protobuf.client.BackupMessage.SyncIndexInfo.Builder builderForValue) {
                if (syncIndexInfoBuilder_ == null) {
                    ensureSyncIndexInfoIsMutable();
                    syncIndexInfo_.add(index, builderForValue.build());
                    onChanged();
                } else {
                    syncIndexInfoBuilder_.addMessage(index, builderForValue.build());
                }
                return this;
            }
            /**
             * <pre>
             *同步索引信息
             * </pre>
             *
             * <code>repeated .one2data.rbtmqmsgcli.client.SyncIndexInfo sync_index_info = 5;</code>
             */
            public Builder addAllSyncIndexInfo(
                    Iterable<? extends cn.keptdata.one2data.header.message.protobuf.client.BackupMessage.SyncIndexInfo> values) {
                if (syncIndexInfoBuilder_ == null) {
                    ensureSyncIndexInfoIsMutable();
                    com.google.protobuf.AbstractMessageLite.Builder.addAll(
                            values, syncIndexInfo_);
                    onChanged();
                } else {
                    syncIndexInfoBuilder_.addAllMessages(values);
                }
                return this;
            }
            /**
             * <pre>
             *同步索引信息
             * </pre>
             *
             * <code>repeated .one2data.rbtmqmsgcli.client.SyncIndexInfo sync_index_info = 5;</code>
             */
            public Builder clearSyncIndexInfo() {
                if (syncIndexInfoBuilder_ == null) {
                    syncIndexInfo_ = java.util.Collections.emptyList();
                    bitField0_ = (bitField0_ & ~0x00000010);
                    onChanged();
                } else {
                    syncIndexInfoBuilder_.clear();
                }
                return this;
            }
            /**
             * <pre>
             *同步索引信息
             * </pre>
             *
             * <code>repeated .one2data.rbtmqmsgcli.client.SyncIndexInfo sync_index_info = 5;</code>
             */
            public Builder removeSyncIndexInfo(int index) {
                if (syncIndexInfoBuilder_ == null) {
                    ensureSyncIndexInfoIsMutable();
                    syncIndexInfo_.remove(index);
                    onChanged();
                } else {
                    syncIndexInfoBuilder_.remove(index);
                }
                return this;
            }
            /**
             * <pre>
             *同步索引信息
             * </pre>
             *
             * <code>repeated .one2data.rbtmqmsgcli.client.SyncIndexInfo sync_index_info = 5;</code>
             */
            public cn.keptdata.one2data.header.message.protobuf.client.BackupMessage.SyncIndexInfo.Builder getSyncIndexInfoBuilder(
                    int index) {
                return getSyncIndexInfoFieldBuilder().getBuilder(index);
            }
            /**
             * <pre>
             *同步索引信息
             * </pre>
             *
             * <code>repeated .one2data.rbtmqmsgcli.client.SyncIndexInfo sync_index_info = 5;</code>
             */
            public cn.keptdata.one2data.header.message.protobuf.client.BackupMessage.SyncIndexInfoOrBuilder getSyncIndexInfoOrBuilder(
                    int index) {
                if (syncIndexInfoBuilder_ == null) {
                    return syncIndexInfo_.get(index);  } else {
                    return syncIndexInfoBuilder_.getMessageOrBuilder(index);
                }
            }
            /**
             * <pre>
             *同步索引信息
             * </pre>
             *
             * <code>repeated .one2data.rbtmqmsgcli.client.SyncIndexInfo sync_index_info = 5;</code>
             */
            public java.util.List<? extends cn.keptdata.one2data.header.message.protobuf.client.BackupMessage.SyncIndexInfoOrBuilder>
            getSyncIndexInfoOrBuilderList() {
                if (syncIndexInfoBuilder_ != null) {
                    return syncIndexInfoBuilder_.getMessageOrBuilderList();
                } else {
                    return java.util.Collections.unmodifiableList(syncIndexInfo_);
                }
            }
            /**
             * <pre>
             *同步索引信息
             * </pre>
             *
             * <code>repeated .one2data.rbtmqmsgcli.client.SyncIndexInfo sync_index_info = 5;</code>
             */
            public cn.keptdata.one2data.header.message.protobuf.client.BackupMessage.SyncIndexInfo.Builder addSyncIndexInfoBuilder() {
                return getSyncIndexInfoFieldBuilder().addBuilder(
                        cn.keptdata.one2data.header.message.protobuf.client.BackupMessage.SyncIndexInfo.getDefaultInstance());
            }
            /**
             * <pre>
             *同步索引信息
             * </pre>
             *
             * <code>repeated .one2data.rbtmqmsgcli.client.SyncIndexInfo sync_index_info = 5;</code>
             */
            public cn.keptdata.one2data.header.message.protobuf.client.BackupMessage.SyncIndexInfo.Builder addSyncIndexInfoBuilder(
                    int index) {
                return getSyncIndexInfoFieldBuilder().addBuilder(
                        index, cn.keptdata.one2data.header.message.protobuf.client.BackupMessage.SyncIndexInfo.getDefaultInstance());
            }
            /**
             * <pre>
             *同步索引信息
             * </pre>
             *
             * <code>repeated .one2data.rbtmqmsgcli.client.SyncIndexInfo sync_index_info = 5;</code>
             */
            public java.util.List<cn.keptdata.one2data.header.message.protobuf.client.BackupMessage.SyncIndexInfo.Builder>
            getSyncIndexInfoBuilderList() {
                return getSyncIndexInfoFieldBuilder().getBuilderList();
            }
            private com.google.protobuf.RepeatedFieldBuilderV3<
                    cn.keptdata.one2data.header.message.protobuf.client.BackupMessage.SyncIndexInfo, cn.keptdata.one2data.header.message.protobuf.client.BackupMessage.SyncIndexInfo.Builder, cn.keptdata.one2data.header.message.protobuf.client.BackupMessage.SyncIndexInfoOrBuilder>
            getSyncIndexInfoFieldBuilder() {
                if (syncIndexInfoBuilder_ == null) {
                    syncIndexInfoBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
                            cn.keptdata.one2data.header.message.protobuf.client.BackupMessage.SyncIndexInfo, cn.keptdata.one2data.header.message.protobuf.client.BackupMessage.SyncIndexInfo.Builder, cn.keptdata.one2data.header.message.protobuf.client.BackupMessage.SyncIndexInfoOrBuilder>(
                            syncIndexInfo_,
                            ((bitField0_ & 0x00000010) == 0x00000010),
                            getParentForChildren(),
                            isClean());
                    syncIndexInfo_ = null;
                }
                return syncIndexInfoBuilder_;
            }

            private long dataReliability_ ;
            /**
             * <pre>
             *索引数据可靠性（安全值,0-100）
             * </pre>
             *
             * <code>optional int64 data_reliability = 6;</code>
             */
            public long getDataReliability() {
                return dataReliability_;
            }
            /**
             * <pre>
             *索引数据可靠性（安全值,0-100）
             * </pre>
             *
             * <code>optional int64 data_reliability = 6;</code>
             */
            public Builder setDataReliability(long value) {

                dataReliability_ = value;
                onChanged();
                return this;
            }
            /**
             * <pre>
             *索引数据可靠性（安全值,0-100）
             * </pre>
             *
             * <code>optional int64 data_reliability = 6;</code>
             */
            public Builder clearDataReliability() {

                dataReliability_ = 0L;
                onChanged();
                return this;
            }

            private long syncDataSizeByte_ ;
            /**
             * <pre>
             *本次同步完成的数据量(Byte)
             * </pre>
             *
             * <code>optional int64 sync_data_size_byte = 7;</code>
             */
            public long getSyncDataSizeByte() {
                return syncDataSizeByte_;
            }
            /**
             * <pre>
             *本次同步完成的数据量(Byte)
             * </pre>
             *
             * <code>optional int64 sync_data_size_byte = 7;</code>
             */
            public Builder setSyncDataSizeByte(long value) {

                syncDataSizeByte_ = value;
                onChanged();
                return this;
            }
            /**
             * <pre>
             *本次同步完成的数据量(Byte)
             * </pre>
             *
             * <code>optional int64 sync_data_size_byte = 7;</code>
             */
            public Builder clearSyncDataSizeByte() {

                syncDataSizeByte_ = 0L;
                onChanged();
                return this;
            }

            private long durationMillis_ ;
            /**
             * <pre>
             *本次同步耗费时间(毫秒)
             * </pre>
             *
             * <code>optional int64 duration_millis = 8;</code>
             */
            public long getDurationMillis() {
                return durationMillis_;
            }
            /**
             * <pre>
             *本次同步耗费时间(毫秒)
             * </pre>
             *
             * <code>optional int64 duration_millis = 8;</code>
             */
            public Builder setDurationMillis(long value) {

                durationMillis_ = value;
                onChanged();
                return this;
            }
            /**
             * <pre>
             *本次同步耗费时间(毫秒)
             * </pre>
             *
             * <code>optional int64 duration_millis = 8;</code>
             */
            public Builder clearDurationMillis() {

                durationMillis_ = 0L;
                onChanged();
                return this;
            }

            private java.util.List<cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.SyncIndexInfoReport.FineGrainedSyncIndexInfo> fineGrainedSyncIndexInfo_ =
                    java.util.Collections.emptyList();
            private void ensureFineGrainedSyncIndexInfoIsMutable() {
                if (!((bitField0_ & 0x00000100) == 0x00000100)) {
                    fineGrainedSyncIndexInfo_ = new java.util.ArrayList<cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.SyncIndexInfoReport.FineGrainedSyncIndexInfo>(fineGrainedSyncIndexInfo_);
                    bitField0_ |= 0x00000100;
                }
            }

            private com.google.protobuf.RepeatedFieldBuilderV3<
                    cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.SyncIndexInfoReport.FineGrainedSyncIndexInfo, cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.SyncIndexInfoReport.FineGrainedSyncIndexInfo.Builder, cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.SyncIndexInfoReport.FineGrainedSyncIndexInfoOrBuilder> fineGrainedSyncIndexInfoBuilder_;

            /**
             * <pre>
             *细粒度同步索引信息
             * </pre>
             *
             * <code>repeated .one2data.rbtmqmsgcli.client.SyncIndexInfoReport.FineGrainedSyncIndexInfo fine_grained_sync_index_info = 9;</code>
             */
            public java.util.List<cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.SyncIndexInfoReport.FineGrainedSyncIndexInfo> getFineGrainedSyncIndexInfoList() {
                if (fineGrainedSyncIndexInfoBuilder_ == null) {
                    return java.util.Collections.unmodifiableList(fineGrainedSyncIndexInfo_);
                } else {
                    return fineGrainedSyncIndexInfoBuilder_.getMessageList();
                }
            }
            /**
             * <pre>
             *细粒度同步索引信息
             * </pre>
             *
             * <code>repeated .one2data.rbtmqmsgcli.client.SyncIndexInfoReport.FineGrainedSyncIndexInfo fine_grained_sync_index_info = 9;</code>
             */
            public int getFineGrainedSyncIndexInfoCount() {
                if (fineGrainedSyncIndexInfoBuilder_ == null) {
                    return fineGrainedSyncIndexInfo_.size();
                } else {
                    return fineGrainedSyncIndexInfoBuilder_.getCount();
                }
            }
            /**
             * <pre>
             *细粒度同步索引信息
             * </pre>
             *
             * <code>repeated .one2data.rbtmqmsgcli.client.SyncIndexInfoReport.FineGrainedSyncIndexInfo fine_grained_sync_index_info = 9;</code>
             */
            public cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.SyncIndexInfoReport.FineGrainedSyncIndexInfo getFineGrainedSyncIndexInfo(int index) {
                if (fineGrainedSyncIndexInfoBuilder_ == null) {
                    return fineGrainedSyncIndexInfo_.get(index);
                } else {
                    return fineGrainedSyncIndexInfoBuilder_.getMessage(index);
                }
            }
            /**
             * <pre>
             *细粒度同步索引信息
             * </pre>
             *
             * <code>repeated .one2data.rbtmqmsgcli.client.SyncIndexInfoReport.FineGrainedSyncIndexInfo fine_grained_sync_index_info = 9;</code>
             */
            public Builder setFineGrainedSyncIndexInfo(
                    int index, cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.SyncIndexInfoReport.FineGrainedSyncIndexInfo value) {
                if (fineGrainedSyncIndexInfoBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    ensureFineGrainedSyncIndexInfoIsMutable();
                    fineGrainedSyncIndexInfo_.set(index, value);
                    onChanged();
                } else {
                    fineGrainedSyncIndexInfoBuilder_.setMessage(index, value);
                }
                return this;
            }
            /**
             * <pre>
             *细粒度同步索引信息
             * </pre>
             *
             * <code>repeated .one2data.rbtmqmsgcli.client.SyncIndexInfoReport.FineGrainedSyncIndexInfo fine_grained_sync_index_info = 9;</code>
             */
            public Builder setFineGrainedSyncIndexInfo(
                    int index, cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.SyncIndexInfoReport.FineGrainedSyncIndexInfo.Builder builderForValue) {
                if (fineGrainedSyncIndexInfoBuilder_ == null) {
                    ensureFineGrainedSyncIndexInfoIsMutable();
                    fineGrainedSyncIndexInfo_.set(index, builderForValue.build());
                    onChanged();
                } else {
                    fineGrainedSyncIndexInfoBuilder_.setMessage(index, builderForValue.build());
                }
                return this;
            }
            /**
             * <pre>
             *细粒度同步索引信息
             * </pre>
             *
             * <code>repeated .one2data.rbtmqmsgcli.client.SyncIndexInfoReport.FineGrainedSyncIndexInfo fine_grained_sync_index_info = 9;</code>
             */
            public Builder addFineGrainedSyncIndexInfo(cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.SyncIndexInfoReport.FineGrainedSyncIndexInfo value) {
                if (fineGrainedSyncIndexInfoBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    ensureFineGrainedSyncIndexInfoIsMutable();
                    fineGrainedSyncIndexInfo_.add(value);
                    onChanged();
                } else {
                    fineGrainedSyncIndexInfoBuilder_.addMessage(value);
                }
                return this;
            }
            /**
             * <pre>
             *细粒度同步索引信息
             * </pre>
             *
             * <code>repeated .one2data.rbtmqmsgcli.client.SyncIndexInfoReport.FineGrainedSyncIndexInfo fine_grained_sync_index_info = 9;</code>
             */
            public Builder addFineGrainedSyncIndexInfo(
                    int index, cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.SyncIndexInfoReport.FineGrainedSyncIndexInfo value) {
                if (fineGrainedSyncIndexInfoBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    ensureFineGrainedSyncIndexInfoIsMutable();
                    fineGrainedSyncIndexInfo_.add(index, value);
                    onChanged();
                } else {
                    fineGrainedSyncIndexInfoBuilder_.addMessage(index, value);
                }
                return this;
            }
            /**
             * <pre>
             *细粒度同步索引信息
             * </pre>
             *
             * <code>repeated .one2data.rbtmqmsgcli.client.SyncIndexInfoReport.FineGrainedSyncIndexInfo fine_grained_sync_index_info = 9;</code>
             */
            public Builder addFineGrainedSyncIndexInfo(
                    cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.SyncIndexInfoReport.FineGrainedSyncIndexInfo.Builder builderForValue) {
                if (fineGrainedSyncIndexInfoBuilder_ == null) {
                    ensureFineGrainedSyncIndexInfoIsMutable();
                    fineGrainedSyncIndexInfo_.add(builderForValue.build());
                    onChanged();
                } else {
                    fineGrainedSyncIndexInfoBuilder_.addMessage(builderForValue.build());
                }
                return this;
            }
            /**
             * <pre>
             *细粒度同步索引信息
             * </pre>
             *
             * <code>repeated .one2data.rbtmqmsgcli.client.SyncIndexInfoReport.FineGrainedSyncIndexInfo fine_grained_sync_index_info = 9;</code>
             */
            public Builder addFineGrainedSyncIndexInfo(
                    int index, cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.SyncIndexInfoReport.FineGrainedSyncIndexInfo.Builder builderForValue) {
                if (fineGrainedSyncIndexInfoBuilder_ == null) {
                    ensureFineGrainedSyncIndexInfoIsMutable();
                    fineGrainedSyncIndexInfo_.add(index, builderForValue.build());
                    onChanged();
                } else {
                    fineGrainedSyncIndexInfoBuilder_.addMessage(index, builderForValue.build());
                }
                return this;
            }
            /**
             * <pre>
             *细粒度同步索引信息
             * </pre>
             *
             * <code>repeated .one2data.rbtmqmsgcli.client.SyncIndexInfoReport.FineGrainedSyncIndexInfo fine_grained_sync_index_info = 9;</code>
             */
            public Builder addAllFineGrainedSyncIndexInfo(
                    Iterable<? extends cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.SyncIndexInfoReport.FineGrainedSyncIndexInfo> values) {
                if (fineGrainedSyncIndexInfoBuilder_ == null) {
                    ensureFineGrainedSyncIndexInfoIsMutable();
                    com.google.protobuf.AbstractMessageLite.Builder.addAll(
                            values, fineGrainedSyncIndexInfo_);
                    onChanged();
                } else {
                    fineGrainedSyncIndexInfoBuilder_.addAllMessages(values);
                }
                return this;
            }
            /**
             * <pre>
             *细粒度同步索引信息
             * </pre>
             *
             * <code>repeated .one2data.rbtmqmsgcli.client.SyncIndexInfoReport.FineGrainedSyncIndexInfo fine_grained_sync_index_info = 9;</code>
             */
            public Builder clearFineGrainedSyncIndexInfo() {
                if (fineGrainedSyncIndexInfoBuilder_ == null) {
                    fineGrainedSyncIndexInfo_ = java.util.Collections.emptyList();
                    bitField0_ = (bitField0_ & ~0x00000100);
                    onChanged();
                } else {
                    fineGrainedSyncIndexInfoBuilder_.clear();
                }
                return this;
            }
            /**
             * <pre>
             *细粒度同步索引信息
             * </pre>
             *
             * <code>repeated .one2data.rbtmqmsgcli.client.SyncIndexInfoReport.FineGrainedSyncIndexInfo fine_grained_sync_index_info = 9;</code>
             */
            public Builder removeFineGrainedSyncIndexInfo(int index) {
                if (fineGrainedSyncIndexInfoBuilder_ == null) {
                    ensureFineGrainedSyncIndexInfoIsMutable();
                    fineGrainedSyncIndexInfo_.remove(index);
                    onChanged();
                } else {
                    fineGrainedSyncIndexInfoBuilder_.remove(index);
                }
                return this;
            }
            /**
             * <pre>
             *细粒度同步索引信息
             * </pre>
             *
             * <code>repeated .one2data.rbtmqmsgcli.client.SyncIndexInfoReport.FineGrainedSyncIndexInfo fine_grained_sync_index_info = 9;</code>
             */
            public cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.SyncIndexInfoReport.FineGrainedSyncIndexInfo.Builder getFineGrainedSyncIndexInfoBuilder(
                    int index) {
                return getFineGrainedSyncIndexInfoFieldBuilder().getBuilder(index);
            }
            /**
             * <pre>
             *细粒度同步索引信息
             * </pre>
             *
             * <code>repeated .one2data.rbtmqmsgcli.client.SyncIndexInfoReport.FineGrainedSyncIndexInfo fine_grained_sync_index_info = 9;</code>
             */
            public cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.SyncIndexInfoReport.FineGrainedSyncIndexInfoOrBuilder getFineGrainedSyncIndexInfoOrBuilder(
                    int index) {
                if (fineGrainedSyncIndexInfoBuilder_ == null) {
                    return fineGrainedSyncIndexInfo_.get(index);  } else {
                    return fineGrainedSyncIndexInfoBuilder_.getMessageOrBuilder(index);
                }
            }
            /**
             * <pre>
             *细粒度同步索引信息
             * </pre>
             *
             * <code>repeated .one2data.rbtmqmsgcli.client.SyncIndexInfoReport.FineGrainedSyncIndexInfo fine_grained_sync_index_info = 9;</code>
             */
            public java.util.List<? extends cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.SyncIndexInfoReport.FineGrainedSyncIndexInfoOrBuilder>
            getFineGrainedSyncIndexInfoOrBuilderList() {
                if (fineGrainedSyncIndexInfoBuilder_ != null) {
                    return fineGrainedSyncIndexInfoBuilder_.getMessageOrBuilderList();
                } else {
                    return java.util.Collections.unmodifiableList(fineGrainedSyncIndexInfo_);
                }
            }
            /**
             * <pre>
             *细粒度同步索引信息
             * </pre>
             *
             * <code>repeated .one2data.rbtmqmsgcli.client.SyncIndexInfoReport.FineGrainedSyncIndexInfo fine_grained_sync_index_info = 9;</code>
             */
            public cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.SyncIndexInfoReport.FineGrainedSyncIndexInfo.Builder addFineGrainedSyncIndexInfoBuilder() {
                return getFineGrainedSyncIndexInfoFieldBuilder().addBuilder(
                        cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.SyncIndexInfoReport.FineGrainedSyncIndexInfo.getDefaultInstance());
            }
            /**
             * <pre>
             *细粒度同步索引信息
             * </pre>
             *
             * <code>repeated .one2data.rbtmqmsgcli.client.SyncIndexInfoReport.FineGrainedSyncIndexInfo fine_grained_sync_index_info = 9;</code>
             */
            public cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.SyncIndexInfoReport.FineGrainedSyncIndexInfo.Builder addFineGrainedSyncIndexInfoBuilder(
                    int index) {
                return getFineGrainedSyncIndexInfoFieldBuilder().addBuilder(
                        index, cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.SyncIndexInfoReport.FineGrainedSyncIndexInfo.getDefaultInstance());
            }
            /**
             * <pre>
             *细粒度同步索引信息
             * </pre>
             *
             * <code>repeated .one2data.rbtmqmsgcli.client.SyncIndexInfoReport.FineGrainedSyncIndexInfo fine_grained_sync_index_info = 9;</code>
             */
            public java.util.List<cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.SyncIndexInfoReport.FineGrainedSyncIndexInfo.Builder>
            getFineGrainedSyncIndexInfoBuilderList() {
                return getFineGrainedSyncIndexInfoFieldBuilder().getBuilderList();
            }
            private com.google.protobuf.RepeatedFieldBuilderV3<
                    cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.SyncIndexInfoReport.FineGrainedSyncIndexInfo, cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.SyncIndexInfoReport.FineGrainedSyncIndexInfo.Builder, cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.SyncIndexInfoReport.FineGrainedSyncIndexInfoOrBuilder>
            getFineGrainedSyncIndexInfoFieldBuilder() {
                if (fineGrainedSyncIndexInfoBuilder_ == null) {
                    fineGrainedSyncIndexInfoBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
                            cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.SyncIndexInfoReport.FineGrainedSyncIndexInfo, cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.SyncIndexInfoReport.FineGrainedSyncIndexInfo.Builder, cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.SyncIndexInfoReport.FineGrainedSyncIndexInfoOrBuilder>(
                            fineGrainedSyncIndexInfo_,
                            ((bitField0_ & 0x00000100) == 0x00000100),
                            getParentForChildren(),
                            isClean());
                    fineGrainedSyncIndexInfo_ = null;
                }
                return fineGrainedSyncIndexInfoBuilder_;
            }
            public final Builder setUnknownFields(
                    final com.google.protobuf.UnknownFieldSet unknownFields) {
                return this;
            }

            public final Builder mergeUnknownFields(
                    final com.google.protobuf.UnknownFieldSet unknownFields) {
                return this;
            }


            // @@protoc_insertion_point(builder_scope:one2data.rbtmqmsgcli.client.SyncIndexInfoReport)
        }

        // @@protoc_insertion_point(class_scope:one2data.rbtmqmsgcli.client.SyncIndexInfoReport)
        private static final cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.SyncIndexInfoReport DEFAULT_INSTANCE;
        static {
            DEFAULT_INSTANCE = new cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.SyncIndexInfoReport();
        }

        public static cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.SyncIndexInfoReport getDefaultInstance() {
            return DEFAULT_INSTANCE;
        }

        private static final com.google.protobuf.Parser<SyncIndexInfoReport>
                PARSER = new com.google.protobuf.AbstractParser<SyncIndexInfoReport>() {
            public SyncIndexInfoReport parsePartialFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws com.google.protobuf.InvalidProtocolBufferException {
                return new SyncIndexInfoReport(input, extensionRegistry);
            }
        };

        public static com.google.protobuf.Parser<SyncIndexInfoReport> parser() {
            return PARSER;
        }

        @Override
        public com.google.protobuf.Parser<SyncIndexInfoReport> getParserForType() {
            return PARSER;
        }

        public cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.SyncIndexInfoReport getDefaultInstanceForType() {
            return DEFAULT_INSTANCE;
        }

    }

    public interface BackupServiceReadyReportOrBuilder extends
            // @@protoc_insertion_point(interface_extends:one2data.rbtmqmsgcli.client.BackupServiceReadyReport)
            com.google.protobuf.MessageOrBuilder {

        /**
         * <pre>
         *备份Agent 内部唯一ID,用于表示设备
         * </pre>
         *
         * <code>optional string device_uuid_key = 1;</code>
         */
        String getDeviceUuidKey();
        /**
         * <pre>
         *备份Agent 内部唯一ID,用于表示设备
         * </pre>
         *
         * <code>optional string device_uuid_key = 1;</code>
         */
        com.google.protobuf.ByteString
        getDeviceUuidKeyBytes();

        /**
         * <pre>
         * 服务状态: 当服务状态不为 NONE 时，可能存在数据丢失
         * Web 需要根据当前备份任务的状态决定是否进行校验
         * </pre>
         *
         * <code>optional .one2data.rbtmqmsgcli.client.BackupServiceReadyReport.ServiceStatus status = 2;</code>
         */
        int getStatusValue();
        /**
         * <pre>
         * 服务状态: 当服务状态不为 NONE 时，可能存在数据丢失
         * Web 需要根据当前备份任务的状态决定是否进行校验
         * </pre>
         *
         * <code>optional .one2data.rbtmqmsgcli.client.BackupServiceReadyReport.ServiceStatus status = 2;</code>
         */
        cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupServiceReadyReport.ServiceStatus getStatus();
    }
    /**
     * <pre>
     *************客户端备份服务准备就绪状态上报******************
     * </pre>
     *
     * Protobuf type {@code one2data.rbtmqmsgcli.client.BackupServiceReadyReport}
     */
    public  static final class BackupServiceReadyReport extends
            com.google.protobuf.GeneratedMessageV3 implements
            // @@protoc_insertion_point(message_implements:one2data.rbtmqmsgcli.client.BackupServiceReadyReport)
            BackupServiceReadyReportOrBuilder {
        // Use BackupServiceReadyReport.newBuilder() to construct.
        private BackupServiceReadyReport(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
            super(builder);
        }
        private BackupServiceReadyReport() {
            deviceUuidKey_ = "";
            status_ = 0;
        }

        @Override
        public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
            return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
        }
        private BackupServiceReadyReport(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            this();
            int mutable_bitField0_ = 0;
            try {
                boolean done = false;
                while (!done) {
                    int tag = input.readTag();
                    switch (tag) {
                        case 0:
                            done = true;
                            break;
                        default: {
                            if (!input.skipField(tag)) {
                                done = true;
                            }
                            break;
                        }
                        case 10: {
                            String s = input.readStringRequireUtf8();

                            deviceUuidKey_ = s;
                            break;
                        }
                        case 16: {
                            int rawValue = input.readEnum();

                            status_ = rawValue;
                            break;
                        }
                    }
                }
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(this);
            } catch (java.io.IOException e) {
                throw new com.google.protobuf.InvalidProtocolBufferException(
                        e).setUnfinishedMessage(this);
            } finally {
                makeExtensionsImmutable();
            }
        }
        public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
            return cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.internal_static_one2data_rbtmqmsgcli_client_BackupServiceReadyReport_descriptor;
        }

        protected FieldAccessorTable
        internalGetFieldAccessorTable() {
            return cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.internal_static_one2data_rbtmqmsgcli_client_BackupServiceReadyReport_fieldAccessorTable
                    .ensureFieldAccessorsInitialized(
                            cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupServiceReadyReport.class, cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupServiceReadyReport.Builder.class);
        }

        /**
         * Protobuf enum {@code one2data.rbtmqmsgcli.client.BackupServiceReadyReport.ServiceStatus}
         */
        public enum ServiceStatus
                implements com.google.protobuf.ProtocolMessageEnum {
            /**
             * <pre>
             * 正常
             * </pre>
             *
             * <code>SS_NONE = 0;</code>
             */
            SS_NONE(0),
            /**
             * <pre>
             * 系统重启
             * </pre>
             *
             * <code>SS_SYSTEM_RESTART = 1;</code>
             */
            SS_SYSTEM_RESTART(1),
            /**
             * <pre>
             * 服务异常退出
             * </pre>
             *
             * <code>SS_SERVICE_ABORMAL_EXIT = 2;</code>
             */
            SS_SERVICE_ABORMAL_EXIT(2),
            UNRECOGNIZED(-1),
            ;

            /**
             * <pre>
             * 正常
             * </pre>
             *
             * <code>SS_NONE = 0;</code>
             */
            public static final int SS_NONE_VALUE = 0;
            /**
             * <pre>
             * 系统重启
             * </pre>
             *
             * <code>SS_SYSTEM_RESTART = 1;</code>
             */
            public static final int SS_SYSTEM_RESTART_VALUE = 1;
            /**
             * <pre>
             * 服务异常退出
             * </pre>
             *
             * <code>SS_SERVICE_ABORMAL_EXIT = 2;</code>
             */
            public static final int SS_SERVICE_ABORMAL_EXIT_VALUE = 2;


            public final int getNumber() {
                if (this == UNRECOGNIZED) {
                    throw new IllegalArgumentException(
                            "Can't get the number of an unknown enum value.");
                }
                return value;
            }

            /**
             * @deprecated Use {@link #forNumber(int)} instead.
             */
            @Deprecated
            public static ServiceStatus valueOf(int value) {
                return forNumber(value);
            }

            public static ServiceStatus forNumber(int value) {
                switch (value) {
                    case 0: return SS_NONE;
                    case 1: return SS_SYSTEM_RESTART;
                    case 2: return SS_SERVICE_ABORMAL_EXIT;
                    default: return null;
                }
            }

            public static com.google.protobuf.Internal.EnumLiteMap<ServiceStatus>
            internalGetValueMap() {
                return internalValueMap;
            }
            private static final com.google.protobuf.Internal.EnumLiteMap<
                    ServiceStatus> internalValueMap =
                    new com.google.protobuf.Internal.EnumLiteMap<ServiceStatus>() {
                        public ServiceStatus findValueByNumber(int number) {
                            return ServiceStatus.forNumber(number);
                        }
                    };

            public final com.google.protobuf.Descriptors.EnumValueDescriptor
            getValueDescriptor() {
                return getDescriptor().getValues().get(ordinal());
            }
            public final com.google.protobuf.Descriptors.EnumDescriptor
            getDescriptorForType() {
                return getDescriptor();
            }
            public static final com.google.protobuf.Descriptors.EnumDescriptor
            getDescriptor() {
                return cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupServiceReadyReport.getDescriptor().getEnumTypes().get(0);
            }

            private static final ServiceStatus[] VALUES = values();

            public static ServiceStatus valueOf(
                    com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
                if (desc.getType() != getDescriptor()) {
                    throw new IllegalArgumentException(
                            "EnumValueDescriptor is not for this type.");
                }
                if (desc.getIndex() == -1) {
                    return UNRECOGNIZED;
                }
                return VALUES[desc.getIndex()];
            }

            private final int value;

            private ServiceStatus(int value) {
                this.value = value;
            }

            // @@protoc_insertion_point(enum_scope:one2data.rbtmqmsgcli.client.BackupServiceReadyReport.ServiceStatus)
        }

        public static final int DEVICE_UUID_KEY_FIELD_NUMBER = 1;
        private volatile Object deviceUuidKey_;
        /**
         * <pre>
         *备份Agent 内部唯一ID,用于表示设备
         * </pre>
         *
         * <code>optional string device_uuid_key = 1;</code>
         */
        public String getDeviceUuidKey() {
            Object ref = deviceUuidKey_;
            if (ref instanceof String) {
                return (String) ref;
            } else {
                com.google.protobuf.ByteString bs =
                        (com.google.protobuf.ByteString) ref;
                String s = bs.toStringUtf8();
                deviceUuidKey_ = s;
                return s;
            }
        }
        /**
         * <pre>
         *备份Agent 内部唯一ID,用于表示设备
         * </pre>
         *
         * <code>optional string device_uuid_key = 1;</code>
         */
        public com.google.protobuf.ByteString
        getDeviceUuidKeyBytes() {
            Object ref = deviceUuidKey_;
            if (ref instanceof String) {
                com.google.protobuf.ByteString b =
                        com.google.protobuf.ByteString.copyFromUtf8(
                                (String) ref);
                deviceUuidKey_ = b;
                return b;
            } else {
                return (com.google.protobuf.ByteString) ref;
            }
        }

        public static final int STATUS_FIELD_NUMBER = 2;
        private int status_;
        /**
         * <pre>
         * 服务状态: 当服务状态不为 NONE 时，可能存在数据丢失
         * Web 需要根据当前备份任务的状态决定是否进行校验
         * </pre>
         *
         * <code>optional .one2data.rbtmqmsgcli.client.BackupServiceReadyReport.ServiceStatus status = 2;</code>
         */
        public int getStatusValue() {
            return status_;
        }
        /**
         * <pre>
         * 服务状态: 当服务状态不为 NONE 时，可能存在数据丢失
         * Web 需要根据当前备份任务的状态决定是否进行校验
         * </pre>
         *
         * <code>optional .one2data.rbtmqmsgcli.client.BackupServiceReadyReport.ServiceStatus status = 2;</code>
         */
        public cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupServiceReadyReport.ServiceStatus getStatus() {
            cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupServiceReadyReport.ServiceStatus result = cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupServiceReadyReport.ServiceStatus.valueOf(status_);
            return result == null ? cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupServiceReadyReport.ServiceStatus.UNRECOGNIZED : result;
        }

        private byte memoizedIsInitialized = -1;
        public final boolean isInitialized() {
            byte isInitialized = memoizedIsInitialized;
            if (isInitialized == 1) return true;
            if (isInitialized == 0) return false;

            memoizedIsInitialized = 1;
            return true;
        }

        public void writeTo(com.google.protobuf.CodedOutputStream output)
                throws java.io.IOException {
            if (!getDeviceUuidKeyBytes().isEmpty()) {
                com.google.protobuf.GeneratedMessageV3.writeString(output, 1, deviceUuidKey_);
            }
            if (status_ != cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupServiceReadyReport.ServiceStatus.SS_NONE.getNumber()) {
                output.writeEnum(2, status_);
            }
        }

        public int getSerializedSize() {
            int size = memoizedSize;
            if (size != -1) return size;

            size = 0;
            if (!getDeviceUuidKeyBytes().isEmpty()) {
                size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, deviceUuidKey_);
            }
            if (status_ != cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupServiceReadyReport.ServiceStatus.SS_NONE.getNumber()) {
                size += com.google.protobuf.CodedOutputStream
                        .computeEnumSize(2, status_);
            }
            memoizedSize = size;
            return size;
        }

        private static final long serialVersionUID = 0L;
        @Override
        public boolean equals(final Object obj) {
            if (obj == this) {
                return true;
            }
            if (!(obj instanceof cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupServiceReadyReport)) {
                return super.equals(obj);
            }
            cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupServiceReadyReport other = (cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupServiceReadyReport) obj;

            boolean result = true;
            result = result && getDeviceUuidKey()
                    .equals(other.getDeviceUuidKey());
            result = result && status_ == other.status_;
            return result;
        }

        @Override
        public int hashCode() {
            if (memoizedHashCode != 0) {
                return memoizedHashCode;
            }
            int hash = 41;
            hash = (19 * hash) + getDescriptorForType().hashCode();
            hash = (37 * hash) + DEVICE_UUID_KEY_FIELD_NUMBER;
            hash = (53 * hash) + getDeviceUuidKey().hashCode();
            hash = (37 * hash) + STATUS_FIELD_NUMBER;
            hash = (53 * hash) + status_;
            hash = (29 * hash) + unknownFields.hashCode();
            memoizedHashCode = hash;
            return hash;
        }

        public static cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupServiceReadyReport parseFrom(
                com.google.protobuf.ByteString data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }
        public static cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupServiceReadyReport parseFrom(
                com.google.protobuf.ByteString data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }
        public static cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupServiceReadyReport parseFrom(byte[] data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }
        public static cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupServiceReadyReport parseFrom(
                byte[] data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }
        public static cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupServiceReadyReport parseFrom(java.io.InputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input);
        }
        public static cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupServiceReadyReport parseFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input, extensionRegistry);
        }
        public static cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupServiceReadyReport parseDelimitedFrom(java.io.InputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseDelimitedWithIOException(PARSER, input);
        }
        public static cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupServiceReadyReport parseDelimitedFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
        }
        public static cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupServiceReadyReport parseFrom(
                com.google.protobuf.CodedInputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input);
        }
        public static cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupServiceReadyReport parseFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input, extensionRegistry);
        }

        public Builder newBuilderForType() { return newBuilder(); }
        public static Builder newBuilder() {
            return DEFAULT_INSTANCE.toBuilder();
        }
        public static Builder newBuilder(cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupServiceReadyReport prototype) {
            return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }
        public Builder toBuilder() {
            return this == DEFAULT_INSTANCE
                    ? new Builder() : new Builder().mergeFrom(this);
        }

        @Override
        protected Builder newBuilderForType(
                BuilderParent parent) {
            Builder builder = new Builder(parent);
            return builder;
        }
        /**
         * <pre>
         *************客户端备份服务准备就绪状态上报******************
         * </pre>
         *
         * Protobuf type {@code one2data.rbtmqmsgcli.client.BackupServiceReadyReport}
         */
        public static final class Builder extends
                com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
                // @@protoc_insertion_point(builder_implements:one2data.rbtmqmsgcli.client.BackupServiceReadyReport)
                cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupServiceReadyReportOrBuilder {
            public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
                return cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.internal_static_one2data_rbtmqmsgcli_client_BackupServiceReadyReport_descriptor;
            }

            protected FieldAccessorTable
            internalGetFieldAccessorTable() {
                return cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.internal_static_one2data_rbtmqmsgcli_client_BackupServiceReadyReport_fieldAccessorTable
                        .ensureFieldAccessorsInitialized(
                                cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupServiceReadyReport.class, cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupServiceReadyReport.Builder.class);
            }

            // Construct using cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupServiceReadyReport.newBuilder()
            private Builder() {
                maybeForceBuilderInitialization();
            }

            private Builder(
                    BuilderParent parent) {
                super(parent);
                maybeForceBuilderInitialization();
            }
            private void maybeForceBuilderInitialization() {
                if (com.google.protobuf.GeneratedMessageV3
                        .alwaysUseFieldBuilders) {
                }
            }
            public Builder clear() {
                super.clear();
                deviceUuidKey_ = "";

                status_ = 0;

                return this;
            }

            public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
                return cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.internal_static_one2data_rbtmqmsgcli_client_BackupServiceReadyReport_descriptor;
            }

            public cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupServiceReadyReport getDefaultInstanceForType() {
                return cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupServiceReadyReport.getDefaultInstance();
            }

            public cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupServiceReadyReport build() {
                cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupServiceReadyReport result = buildPartial();
                if (!result.isInitialized()) {
                    throw newUninitializedMessageException(result);
                }
                return result;
            }

            public cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupServiceReadyReport buildPartial() {
                cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupServiceReadyReport result = new cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupServiceReadyReport(this);
                result.deviceUuidKey_ = deviceUuidKey_;
                result.status_ = status_;
                onBuilt();
                return result;
            }

            public Builder clone() {
                return (Builder) super.clone();
            }
            public Builder setField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    Object value) {
                return (Builder) super.setField(field, value);
            }
            public Builder clearField(
                    com.google.protobuf.Descriptors.FieldDescriptor field) {
                return (Builder) super.clearField(field);
            }
            public Builder clearOneof(
                    com.google.protobuf.Descriptors.OneofDescriptor oneof) {
                return (Builder) super.clearOneof(oneof);
            }
            public Builder setRepeatedField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    int index, Object value) {
                return (Builder) super.setRepeatedField(field, index, value);
            }
            public Builder addRepeatedField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    Object value) {
                return (Builder) super.addRepeatedField(field, value);
            }
            public Builder mergeFrom(com.google.protobuf.Message other) {
                if (other instanceof cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupServiceReadyReport) {
                    return mergeFrom((cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupServiceReadyReport)other);
                } else {
                    super.mergeFrom(other);
                    return this;
                }
            }

            public Builder mergeFrom(cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupServiceReadyReport other) {
                if (other == cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupServiceReadyReport.getDefaultInstance()) return this;
                if (!other.getDeviceUuidKey().isEmpty()) {
                    deviceUuidKey_ = other.deviceUuidKey_;
                    onChanged();
                }
                if (other.status_ != 0) {
                    setStatusValue(other.getStatusValue());
                }
                onChanged();
                return this;
            }

            public final boolean isInitialized() {
                return true;
            }

            public Builder mergeFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws java.io.IOException {
                cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupServiceReadyReport parsedMessage = null;
                try {
                    parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
                } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                    parsedMessage = (cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupServiceReadyReport) e.getUnfinishedMessage();
                    throw e.unwrapIOException();
                } finally {
                    if (parsedMessage != null) {
                        mergeFrom(parsedMessage);
                    }
                }
                return this;
            }

            private Object deviceUuidKey_ = "";
            /**
             * <pre>
             *备份Agent 内部唯一ID,用于表示设备
             * </pre>
             *
             * <code>optional string device_uuid_key = 1;</code>
             */
            public String getDeviceUuidKey() {
                Object ref = deviceUuidKey_;
                if (!(ref instanceof String)) {
                    com.google.protobuf.ByteString bs =
                            (com.google.protobuf.ByteString) ref;
                    String s = bs.toStringUtf8();
                    deviceUuidKey_ = s;
                    return s;
                } else {
                    return (String) ref;
                }
            }
            /**
             * <pre>
             *备份Agent 内部唯一ID,用于表示设备
             * </pre>
             *
             * <code>optional string device_uuid_key = 1;</code>
             */
            public com.google.protobuf.ByteString
            getDeviceUuidKeyBytes() {
                Object ref = deviceUuidKey_;
                if (ref instanceof String) {
                    com.google.protobuf.ByteString b =
                            com.google.protobuf.ByteString.copyFromUtf8(
                                    (String) ref);
                    deviceUuidKey_ = b;
                    return b;
                } else {
                    return (com.google.protobuf.ByteString) ref;
                }
            }
            /**
             * <pre>
             *备份Agent 内部唯一ID,用于表示设备
             * </pre>
             *
             * <code>optional string device_uuid_key = 1;</code>
             */
            public Builder setDeviceUuidKey(
                    String value) {
                if (value == null) {
                    throw new NullPointerException();
                }

                deviceUuidKey_ = value;
                onChanged();
                return this;
            }
            /**
             * <pre>
             *备份Agent 内部唯一ID,用于表示设备
             * </pre>
             *
             * <code>optional string device_uuid_key = 1;</code>
             */
            public Builder clearDeviceUuidKey() {

                deviceUuidKey_ = getDefaultInstance().getDeviceUuidKey();
                onChanged();
                return this;
            }
            /**
             * <pre>
             *备份Agent 内部唯一ID,用于表示设备
             * </pre>
             *
             * <code>optional string device_uuid_key = 1;</code>
             */
            public Builder setDeviceUuidKeyBytes(
                    com.google.protobuf.ByteString value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                checkByteStringIsUtf8(value);

                deviceUuidKey_ = value;
                onChanged();
                return this;
            }

            private int status_ = 0;
            /**
             * <pre>
             * 服务状态: 当服务状态不为 NONE 时，可能存在数据丢失
             * Web 需要根据当前备份任务的状态决定是否进行校验
             * </pre>
             *
             * <code>optional .one2data.rbtmqmsgcli.client.BackupServiceReadyReport.ServiceStatus status = 2;</code>
             */
            public int getStatusValue() {
                return status_;
            }
            /**
             * <pre>
             * 服务状态: 当服务状态不为 NONE 时，可能存在数据丢失
             * Web 需要根据当前备份任务的状态决定是否进行校验
             * </pre>
             *
             * <code>optional .one2data.rbtmqmsgcli.client.BackupServiceReadyReport.ServiceStatus status = 2;</code>
             */
            public Builder setStatusValue(int value) {
                status_ = value;
                onChanged();
                return this;
            }
            /**
             * <pre>
             * 服务状态: 当服务状态不为 NONE 时，可能存在数据丢失
             * Web 需要根据当前备份任务的状态决定是否进行校验
             * </pre>
             *
             * <code>optional .one2data.rbtmqmsgcli.client.BackupServiceReadyReport.ServiceStatus status = 2;</code>
             */
            public cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupServiceReadyReport.ServiceStatus getStatus() {
                cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupServiceReadyReport.ServiceStatus result = cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupServiceReadyReport.ServiceStatus.valueOf(status_);
                return result == null ? cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupServiceReadyReport.ServiceStatus.UNRECOGNIZED : result;
            }
            /**
             * <pre>
             * 服务状态: 当服务状态不为 NONE 时，可能存在数据丢失
             * Web 需要根据当前备份任务的状态决定是否进行校验
             * </pre>
             *
             * <code>optional .one2data.rbtmqmsgcli.client.BackupServiceReadyReport.ServiceStatus status = 2;</code>
             */
            public Builder setStatus(cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupServiceReadyReport.ServiceStatus value) {
                if (value == null) {
                    throw new NullPointerException();
                }

                status_ = value.getNumber();
                onChanged();
                return this;
            }
            /**
             * <pre>
             * 服务状态: 当服务状态不为 NONE 时，可能存在数据丢失
             * Web 需要根据当前备份任务的状态决定是否进行校验
             * </pre>
             *
             * <code>optional .one2data.rbtmqmsgcli.client.BackupServiceReadyReport.ServiceStatus status = 2;</code>
             */
            public Builder clearStatus() {

                status_ = 0;
                onChanged();
                return this;
            }
            public final Builder setUnknownFields(
                    final com.google.protobuf.UnknownFieldSet unknownFields) {
                return this;
            }

            public final Builder mergeUnknownFields(
                    final com.google.protobuf.UnknownFieldSet unknownFields) {
                return this;
            }


            // @@protoc_insertion_point(builder_scope:one2data.rbtmqmsgcli.client.BackupServiceReadyReport)
        }

        // @@protoc_insertion_point(class_scope:one2data.rbtmqmsgcli.client.BackupServiceReadyReport)
        private static final cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupServiceReadyReport DEFAULT_INSTANCE;
        static {
            DEFAULT_INSTANCE = new cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupServiceReadyReport();
        }

        public static cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupServiceReadyReport getDefaultInstance() {
            return DEFAULT_INSTANCE;
        }

        private static final com.google.protobuf.Parser<BackupServiceReadyReport>
                PARSER = new com.google.protobuf.AbstractParser<BackupServiceReadyReport>() {
            public BackupServiceReadyReport parsePartialFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws com.google.protobuf.InvalidProtocolBufferException {
                return new BackupServiceReadyReport(input, extensionRegistry);
            }
        };

        public static com.google.protobuf.Parser<BackupServiceReadyReport> parser() {
            return PARSER;
        }

        @Override
        public com.google.protobuf.Parser<BackupServiceReadyReport> getParserForType() {
            return PARSER;
        }

        public cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.BackupServiceReadyReport getDefaultInstanceForType() {
            return DEFAULT_INSTANCE;
        }

    }

    public interface RequestDeviceClusterTypeOrBuilder extends
            // @@protoc_insertion_point(interface_extends:one2data.rbtmqmsgcli.client.RequestDeviceClusterType)
            com.google.protobuf.MessageOrBuilder {

        /**
         * <pre>
         *设备内部唯一ID
         * </pre>
         *
         * <code>optional string device_uuid_key = 1;</code>
         */
        String getDeviceUuidKey();
        /**
         * <pre>
         *设备内部唯一ID
         * </pre>
         *
         * <code>optional string device_uuid_key = 1;</code>
         */
        com.google.protobuf.ByteString
        getDeviceUuidKeyBytes();
    }
    /**
     * <pre>
     *WEB-Client 请求设备集群类型
     * </pre>
     *
     * Protobuf type {@code one2data.rbtmqmsgcli.client.RequestDeviceClusterType}
     */
    public  static final class RequestDeviceClusterType extends
            com.google.protobuf.GeneratedMessageV3 implements
            // @@protoc_insertion_point(message_implements:one2data.rbtmqmsgcli.client.RequestDeviceClusterType)
            RequestDeviceClusterTypeOrBuilder {
        // Use RequestDeviceClusterType.newBuilder() to construct.
        private RequestDeviceClusterType(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
            super(builder);
        }
        private RequestDeviceClusterType() {
            deviceUuidKey_ = "";
        }

        @Override
        public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
            return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
        }
        private RequestDeviceClusterType(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            this();
            int mutable_bitField0_ = 0;
            try {
                boolean done = false;
                while (!done) {
                    int tag = input.readTag();
                    switch (tag) {
                        case 0:
                            done = true;
                            break;
                        default: {
                            if (!input.skipField(tag)) {
                                done = true;
                            }
                            break;
                        }
                        case 10: {
                            String s = input.readStringRequireUtf8();

                            deviceUuidKey_ = s;
                            break;
                        }
                    }
                }
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(this);
            } catch (java.io.IOException e) {
                throw new com.google.protobuf.InvalidProtocolBufferException(
                        e).setUnfinishedMessage(this);
            } finally {
                makeExtensionsImmutable();
            }
        }
        public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
            return cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.internal_static_one2data_rbtmqmsgcli_client_RequestDeviceClusterType_descriptor;
        }

        protected FieldAccessorTable
        internalGetFieldAccessorTable() {
            return cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.internal_static_one2data_rbtmqmsgcli_client_RequestDeviceClusterType_fieldAccessorTable
                    .ensureFieldAccessorsInitialized(
                            cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.RequestDeviceClusterType.class, cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.RequestDeviceClusterType.Builder.class);
        }

        public static final int DEVICE_UUID_KEY_FIELD_NUMBER = 1;
        private volatile Object deviceUuidKey_;
        /**
         * <pre>
         *设备内部唯一ID
         * </pre>
         *
         * <code>optional string device_uuid_key = 1;</code>
         */
        public String getDeviceUuidKey() {
            Object ref = deviceUuidKey_;
            if (ref instanceof String) {
                return (String) ref;
            } else {
                com.google.protobuf.ByteString bs =
                        (com.google.protobuf.ByteString) ref;
                String s = bs.toStringUtf8();
                deviceUuidKey_ = s;
                return s;
            }
        }
        /**
         * <pre>
         *设备内部唯一ID
         * </pre>
         *
         * <code>optional string device_uuid_key = 1;</code>
         */
        public com.google.protobuf.ByteString
        getDeviceUuidKeyBytes() {
            Object ref = deviceUuidKey_;
            if (ref instanceof String) {
                com.google.protobuf.ByteString b =
                        com.google.protobuf.ByteString.copyFromUtf8(
                                (String) ref);
                deviceUuidKey_ = b;
                return b;
            } else {
                return (com.google.protobuf.ByteString) ref;
            }
        }

        private byte memoizedIsInitialized = -1;
        public final boolean isInitialized() {
            byte isInitialized = memoizedIsInitialized;
            if (isInitialized == 1) return true;
            if (isInitialized == 0) return false;

            memoizedIsInitialized = 1;
            return true;
        }

        public void writeTo(com.google.protobuf.CodedOutputStream output)
                throws java.io.IOException {
            if (!getDeviceUuidKeyBytes().isEmpty()) {
                com.google.protobuf.GeneratedMessageV3.writeString(output, 1, deviceUuidKey_);
            }
        }

        public int getSerializedSize() {
            int size = memoizedSize;
            if (size != -1) return size;

            size = 0;
            if (!getDeviceUuidKeyBytes().isEmpty()) {
                size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, deviceUuidKey_);
            }
            memoizedSize = size;
            return size;
        }

        private static final long serialVersionUID = 0L;
        @Override
        public boolean equals(final Object obj) {
            if (obj == this) {
                return true;
            }
            if (!(obj instanceof cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.RequestDeviceClusterType)) {
                return super.equals(obj);
            }
            cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.RequestDeviceClusterType other = (cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.RequestDeviceClusterType) obj;

            boolean result = true;
            result = result && getDeviceUuidKey()
                    .equals(other.getDeviceUuidKey());
            return result;
        }

        @Override
        public int hashCode() {
            if (memoizedHashCode != 0) {
                return memoizedHashCode;
            }
            int hash = 41;
            hash = (19 * hash) + getDescriptorForType().hashCode();
            hash = (37 * hash) + DEVICE_UUID_KEY_FIELD_NUMBER;
            hash = (53 * hash) + getDeviceUuidKey().hashCode();
            hash = (29 * hash) + unknownFields.hashCode();
            memoizedHashCode = hash;
            return hash;
        }

        public static cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.RequestDeviceClusterType parseFrom(
                com.google.protobuf.ByteString data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }
        public static cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.RequestDeviceClusterType parseFrom(
                com.google.protobuf.ByteString data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }
        public static cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.RequestDeviceClusterType parseFrom(byte[] data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }
        public static cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.RequestDeviceClusterType parseFrom(
                byte[] data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }
        public static cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.RequestDeviceClusterType parseFrom(java.io.InputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input);
        }
        public static cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.RequestDeviceClusterType parseFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input, extensionRegistry);
        }
        public static cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.RequestDeviceClusterType parseDelimitedFrom(java.io.InputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseDelimitedWithIOException(PARSER, input);
        }
        public static cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.RequestDeviceClusterType parseDelimitedFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
        }
        public static cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.RequestDeviceClusterType parseFrom(
                com.google.protobuf.CodedInputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input);
        }
        public static cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.RequestDeviceClusterType parseFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input, extensionRegistry);
        }

        public Builder newBuilderForType() { return newBuilder(); }
        public static Builder newBuilder() {
            return DEFAULT_INSTANCE.toBuilder();
        }
        public static Builder newBuilder(cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.RequestDeviceClusterType prototype) {
            return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }
        public Builder toBuilder() {
            return this == DEFAULT_INSTANCE
                    ? new Builder() : new Builder().mergeFrom(this);
        }

        @Override
        protected Builder newBuilderForType(
                BuilderParent parent) {
            Builder builder = new Builder(parent);
            return builder;
        }
        /**
         * <pre>
         *WEB-Client 请求设备集群类型
         * </pre>
         *
         * Protobuf type {@code one2data.rbtmqmsgcli.client.RequestDeviceClusterType}
         */
        public static final class Builder extends
                com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
                // @@protoc_insertion_point(builder_implements:one2data.rbtmqmsgcli.client.RequestDeviceClusterType)
                cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.RequestDeviceClusterTypeOrBuilder {
            public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
                return cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.internal_static_one2data_rbtmqmsgcli_client_RequestDeviceClusterType_descriptor;
            }

            protected FieldAccessorTable
            internalGetFieldAccessorTable() {
                return cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.internal_static_one2data_rbtmqmsgcli_client_RequestDeviceClusterType_fieldAccessorTable
                        .ensureFieldAccessorsInitialized(
                                cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.RequestDeviceClusterType.class, cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.RequestDeviceClusterType.Builder.class);
            }

            // Construct using cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.RequestDeviceClusterType.newBuilder()
            private Builder() {
                maybeForceBuilderInitialization();
            }

            private Builder(
                    BuilderParent parent) {
                super(parent);
                maybeForceBuilderInitialization();
            }
            private void maybeForceBuilderInitialization() {
                if (com.google.protobuf.GeneratedMessageV3
                        .alwaysUseFieldBuilders) {
                }
            }
            public Builder clear() {
                super.clear();
                deviceUuidKey_ = "";

                return this;
            }

            public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
                return cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.internal_static_one2data_rbtmqmsgcli_client_RequestDeviceClusterType_descriptor;
            }

            public cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.RequestDeviceClusterType getDefaultInstanceForType() {
                return cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.RequestDeviceClusterType.getDefaultInstance();
            }

            public cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.RequestDeviceClusterType build() {
                cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.RequestDeviceClusterType result = buildPartial();
                if (!result.isInitialized()) {
                    throw newUninitializedMessageException(result);
                }
                return result;
            }

            public cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.RequestDeviceClusterType buildPartial() {
                cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.RequestDeviceClusterType result = new cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.RequestDeviceClusterType(this);
                result.deviceUuidKey_ = deviceUuidKey_;
                onBuilt();
                return result;
            }

            public Builder clone() {
                return (Builder) super.clone();
            }
            public Builder setField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    Object value) {
                return (Builder) super.setField(field, value);
            }
            public Builder clearField(
                    com.google.protobuf.Descriptors.FieldDescriptor field) {
                return (Builder) super.clearField(field);
            }
            public Builder clearOneof(
                    com.google.protobuf.Descriptors.OneofDescriptor oneof) {
                return (Builder) super.clearOneof(oneof);
            }
            public Builder setRepeatedField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    int index, Object value) {
                return (Builder) super.setRepeatedField(field, index, value);
            }
            public Builder addRepeatedField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    Object value) {
                return (Builder) super.addRepeatedField(field, value);
            }
            public Builder mergeFrom(com.google.protobuf.Message other) {
                if (other instanceof cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.RequestDeviceClusterType) {
                    return mergeFrom((cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.RequestDeviceClusterType)other);
                } else {
                    super.mergeFrom(other);
                    return this;
                }
            }

            public Builder mergeFrom(cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.RequestDeviceClusterType other) {
                if (other == cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.RequestDeviceClusterType.getDefaultInstance()) return this;
                if (!other.getDeviceUuidKey().isEmpty()) {
                    deviceUuidKey_ = other.deviceUuidKey_;
                    onChanged();
                }
                onChanged();
                return this;
            }

            public final boolean isInitialized() {
                return true;
            }

            public Builder mergeFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws java.io.IOException {
                cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.RequestDeviceClusterType parsedMessage = null;
                try {
                    parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
                } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                    parsedMessage = (cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.RequestDeviceClusterType) e.getUnfinishedMessage();
                    throw e.unwrapIOException();
                } finally {
                    if (parsedMessage != null) {
                        mergeFrom(parsedMessage);
                    }
                }
                return this;
            }

            private Object deviceUuidKey_ = "";
            /**
             * <pre>
             *设备内部唯一ID
             * </pre>
             *
             * <code>optional string device_uuid_key = 1;</code>
             */
            public String getDeviceUuidKey() {
                Object ref = deviceUuidKey_;
                if (!(ref instanceof String)) {
                    com.google.protobuf.ByteString bs =
                            (com.google.protobuf.ByteString) ref;
                    String s = bs.toStringUtf8();
                    deviceUuidKey_ = s;
                    return s;
                } else {
                    return (String) ref;
                }
            }
            /**
             * <pre>
             *设备内部唯一ID
             * </pre>
             *
             * <code>optional string device_uuid_key = 1;</code>
             */
            public com.google.protobuf.ByteString
            getDeviceUuidKeyBytes() {
                Object ref = deviceUuidKey_;
                if (ref instanceof String) {
                    com.google.protobuf.ByteString b =
                            com.google.protobuf.ByteString.copyFromUtf8(
                                    (String) ref);
                    deviceUuidKey_ = b;
                    return b;
                } else {
                    return (com.google.protobuf.ByteString) ref;
                }
            }
            /**
             * <pre>
             *设备内部唯一ID
             * </pre>
             *
             * <code>optional string device_uuid_key = 1;</code>
             */
            public Builder setDeviceUuidKey(
                    String value) {
                if (value == null) {
                    throw new NullPointerException();
                }

                deviceUuidKey_ = value;
                onChanged();
                return this;
            }
            /**
             * <pre>
             *设备内部唯一ID
             * </pre>
             *
             * <code>optional string device_uuid_key = 1;</code>
             */
            public Builder clearDeviceUuidKey() {

                deviceUuidKey_ = getDefaultInstance().getDeviceUuidKey();
                onChanged();
                return this;
            }
            /**
             * <pre>
             *设备内部唯一ID
             * </pre>
             *
             * <code>optional string device_uuid_key = 1;</code>
             */
            public Builder setDeviceUuidKeyBytes(
                    com.google.protobuf.ByteString value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                checkByteStringIsUtf8(value);

                deviceUuidKey_ = value;
                onChanged();
                return this;
            }
            public final Builder setUnknownFields(
                    final com.google.protobuf.UnknownFieldSet unknownFields) {
                return this;
            }

            public final Builder mergeUnknownFields(
                    final com.google.protobuf.UnknownFieldSet unknownFields) {
                return this;
            }


            // @@protoc_insertion_point(builder_scope:one2data.rbtmqmsgcli.client.RequestDeviceClusterType)
        }

        // @@protoc_insertion_point(class_scope:one2data.rbtmqmsgcli.client.RequestDeviceClusterType)
        private static final cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.RequestDeviceClusterType DEFAULT_INSTANCE;
        static {
            DEFAULT_INSTANCE = new cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.RequestDeviceClusterType();
        }

        public static cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.RequestDeviceClusterType getDefaultInstance() {
            return DEFAULT_INSTANCE;
        }

        private static final com.google.protobuf.Parser<RequestDeviceClusterType>
                PARSER = new com.google.protobuf.AbstractParser<RequestDeviceClusterType>() {
            public RequestDeviceClusterType parsePartialFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws com.google.protobuf.InvalidProtocolBufferException {
                return new RequestDeviceClusterType(input, extensionRegistry);
            }
        };

        public static com.google.protobuf.Parser<RequestDeviceClusterType> parser() {
            return PARSER;
        }

        @Override
        public com.google.protobuf.Parser<RequestDeviceClusterType> getParserForType() {
            return PARSER;
        }

        public cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.RequestDeviceClusterType getDefaultInstanceForType() {
            return DEFAULT_INSTANCE;
        }

    }

    public interface RequestDeviceClusterTypeAckOrBuilder extends
            // @@protoc_insertion_point(interface_extends:one2data.rbtmqmsgcli.client.RequestDeviceClusterTypeAck)
            com.google.protobuf.MessageOrBuilder {

        /**
         * <code>optional string device_uuid_key = 1;</code>
         */
        String getDeviceUuidKey();
        /**
         * <code>optional string device_uuid_key = 1;</code>
         */
        com.google.protobuf.ByteString
        getDeviceUuidKeyBytes();

        /**
         * <code>optional .one2data.rbtmqmsgcli.client.ClusterType cluster_type = 2;</code>
         */
        int getClusterTypeValue();
        /**
         * <code>optional .one2data.rbtmqmsgcli.client.ClusterType cluster_type = 2;</code>
         */
        cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.ClusterType getClusterType();
    }
    /**
     * <pre>
     *Client -&gt; WEB 响应集群类型
     * </pre>
     *
     * Protobuf type {@code one2data.rbtmqmsgcli.client.RequestDeviceClusterTypeAck}
     */
    public  static final class RequestDeviceClusterTypeAck extends
            com.google.protobuf.GeneratedMessageV3 implements
            // @@protoc_insertion_point(message_implements:one2data.rbtmqmsgcli.client.RequestDeviceClusterTypeAck)
            RequestDeviceClusterTypeAckOrBuilder {
        // Use RequestDeviceClusterTypeAck.newBuilder() to construct.
        private RequestDeviceClusterTypeAck(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
            super(builder);
        }
        private RequestDeviceClusterTypeAck() {
            deviceUuidKey_ = "";
            clusterType_ = 0;
        }

        @Override
        public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
            return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
        }
        private RequestDeviceClusterTypeAck(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            this();
            int mutable_bitField0_ = 0;
            try {
                boolean done = false;
                while (!done) {
                    int tag = input.readTag();
                    switch (tag) {
                        case 0:
                            done = true;
                            break;
                        default: {
                            if (!input.skipField(tag)) {
                                done = true;
                            }
                            break;
                        }
                        case 10: {
                            String s = input.readStringRequireUtf8();

                            deviceUuidKey_ = s;
                            break;
                        }
                        case 16: {
                            int rawValue = input.readEnum();

                            clusterType_ = rawValue;
                            break;
                        }
                    }
                }
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(this);
            } catch (java.io.IOException e) {
                throw new com.google.protobuf.InvalidProtocolBufferException(
                        e).setUnfinishedMessage(this);
            } finally {
                makeExtensionsImmutable();
            }
        }
        public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
            return cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.internal_static_one2data_rbtmqmsgcli_client_RequestDeviceClusterTypeAck_descriptor;
        }

        protected FieldAccessorTable
        internalGetFieldAccessorTable() {
            return cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.internal_static_one2data_rbtmqmsgcli_client_RequestDeviceClusterTypeAck_fieldAccessorTable
                    .ensureFieldAccessorsInitialized(
                            cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.RequestDeviceClusterTypeAck.class, cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.RequestDeviceClusterTypeAck.Builder.class);
        }

        public static final int DEVICE_UUID_KEY_FIELD_NUMBER = 1;
        private volatile Object deviceUuidKey_;
        /**
         * <code>optional string device_uuid_key = 1;</code>
         */
        public String getDeviceUuidKey() {
            Object ref = deviceUuidKey_;
            if (ref instanceof String) {
                return (String) ref;
            } else {
                com.google.protobuf.ByteString bs =
                        (com.google.protobuf.ByteString) ref;
                String s = bs.toStringUtf8();
                deviceUuidKey_ = s;
                return s;
            }
        }
        /**
         * <code>optional string device_uuid_key = 1;</code>
         */
        public com.google.protobuf.ByteString
        getDeviceUuidKeyBytes() {
            Object ref = deviceUuidKey_;
            if (ref instanceof String) {
                com.google.protobuf.ByteString b =
                        com.google.protobuf.ByteString.copyFromUtf8(
                                (String) ref);
                deviceUuidKey_ = b;
                return b;
            } else {
                return (com.google.protobuf.ByteString) ref;
            }
        }

        public static final int CLUSTER_TYPE_FIELD_NUMBER = 2;
        private int clusterType_;
        /**
         * <code>optional .one2data.rbtmqmsgcli.client.ClusterType cluster_type = 2;</code>
         */
        public int getClusterTypeValue() {
            return clusterType_;
        }
        /**
         * <code>optional .one2data.rbtmqmsgcli.client.ClusterType cluster_type = 2;</code>
         */
        public cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.ClusterType getClusterType() {
            cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.ClusterType result = cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.ClusterType.valueOf(clusterType_);
            return result == null ? cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.ClusterType.UNRECOGNIZED : result;
        }

        private byte memoizedIsInitialized = -1;
        public final boolean isInitialized() {
            byte isInitialized = memoizedIsInitialized;
            if (isInitialized == 1) return true;
            if (isInitialized == 0) return false;

            memoizedIsInitialized = 1;
            return true;
        }

        public void writeTo(com.google.protobuf.CodedOutputStream output)
                throws java.io.IOException {
            if (!getDeviceUuidKeyBytes().isEmpty()) {
                com.google.protobuf.GeneratedMessageV3.writeString(output, 1, deviceUuidKey_);
            }
            if (clusterType_ != cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.ClusterType.CT_NORMAL.getNumber()) {
                output.writeEnum(2, clusterType_);
            }
        }

        public int getSerializedSize() {
            int size = memoizedSize;
            if (size != -1) return size;

            size = 0;
            if (!getDeviceUuidKeyBytes().isEmpty()) {
                size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, deviceUuidKey_);
            }
            if (clusterType_ != cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.ClusterType.CT_NORMAL.getNumber()) {
                size += com.google.protobuf.CodedOutputStream
                        .computeEnumSize(2, clusterType_);
            }
            memoizedSize = size;
            return size;
        }

        private static final long serialVersionUID = 0L;
        @Override
        public boolean equals(final Object obj) {
            if (obj == this) {
                return true;
            }
            if (!(obj instanceof cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.RequestDeviceClusterTypeAck)) {
                return super.equals(obj);
            }
            cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.RequestDeviceClusterTypeAck other = (cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.RequestDeviceClusterTypeAck) obj;

            boolean result = true;
            result = result && getDeviceUuidKey()
                    .equals(other.getDeviceUuidKey());
            result = result && clusterType_ == other.clusterType_;
            return result;
        }

        @Override
        public int hashCode() {
            if (memoizedHashCode != 0) {
                return memoizedHashCode;
            }
            int hash = 41;
            hash = (19 * hash) + getDescriptorForType().hashCode();
            hash = (37 * hash) + DEVICE_UUID_KEY_FIELD_NUMBER;
            hash = (53 * hash) + getDeviceUuidKey().hashCode();
            hash = (37 * hash) + CLUSTER_TYPE_FIELD_NUMBER;
            hash = (53 * hash) + clusterType_;
            hash = (29 * hash) + unknownFields.hashCode();
            memoizedHashCode = hash;
            return hash;
        }

        public static cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.RequestDeviceClusterTypeAck parseFrom(
                com.google.protobuf.ByteString data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }
        public static cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.RequestDeviceClusterTypeAck parseFrom(
                com.google.protobuf.ByteString data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }
        public static cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.RequestDeviceClusterTypeAck parseFrom(byte[] data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }
        public static cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.RequestDeviceClusterTypeAck parseFrom(
                byte[] data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }
        public static cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.RequestDeviceClusterTypeAck parseFrom(java.io.InputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input);
        }
        public static cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.RequestDeviceClusterTypeAck parseFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input, extensionRegistry);
        }
        public static cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.RequestDeviceClusterTypeAck parseDelimitedFrom(java.io.InputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseDelimitedWithIOException(PARSER, input);
        }
        public static cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.RequestDeviceClusterTypeAck parseDelimitedFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
        }
        public static cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.RequestDeviceClusterTypeAck parseFrom(
                com.google.protobuf.CodedInputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input);
        }
        public static cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.RequestDeviceClusterTypeAck parseFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input, extensionRegistry);
        }

        public Builder newBuilderForType() { return newBuilder(); }
        public static Builder newBuilder() {
            return DEFAULT_INSTANCE.toBuilder();
        }
        public static Builder newBuilder(cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.RequestDeviceClusterTypeAck prototype) {
            return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }
        public Builder toBuilder() {
            return this == DEFAULT_INSTANCE
                    ? new Builder() : new Builder().mergeFrom(this);
        }

        @Override
        protected Builder newBuilderForType(
                BuilderParent parent) {
            Builder builder = new Builder(parent);
            return builder;
        }
        /**
         * <pre>
         *Client -&gt; WEB 响应集群类型
         * </pre>
         *
         * Protobuf type {@code one2data.rbtmqmsgcli.client.RequestDeviceClusterTypeAck}
         */
        public static final class Builder extends
                com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
                // @@protoc_insertion_point(builder_implements:one2data.rbtmqmsgcli.client.RequestDeviceClusterTypeAck)
                cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.RequestDeviceClusterTypeAckOrBuilder {
            public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
                return cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.internal_static_one2data_rbtmqmsgcli_client_RequestDeviceClusterTypeAck_descriptor;
            }

            protected FieldAccessorTable
            internalGetFieldAccessorTable() {
                return cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.internal_static_one2data_rbtmqmsgcli_client_RequestDeviceClusterTypeAck_fieldAccessorTable
                        .ensureFieldAccessorsInitialized(
                                cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.RequestDeviceClusterTypeAck.class, cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.RequestDeviceClusterTypeAck.Builder.class);
            }

            // Construct using cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.RequestDeviceClusterTypeAck.newBuilder()
            private Builder() {
                maybeForceBuilderInitialization();
            }

            private Builder(
                    BuilderParent parent) {
                super(parent);
                maybeForceBuilderInitialization();
            }
            private void maybeForceBuilderInitialization() {
                if (com.google.protobuf.GeneratedMessageV3
                        .alwaysUseFieldBuilders) {
                }
            }
            public Builder clear() {
                super.clear();
                deviceUuidKey_ = "";

                clusterType_ = 0;

                return this;
            }

            public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
                return cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.internal_static_one2data_rbtmqmsgcli_client_RequestDeviceClusterTypeAck_descriptor;
            }

            public cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.RequestDeviceClusterTypeAck getDefaultInstanceForType() {
                return cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.RequestDeviceClusterTypeAck.getDefaultInstance();
            }

            public cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.RequestDeviceClusterTypeAck build() {
                cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.RequestDeviceClusterTypeAck result = buildPartial();
                if (!result.isInitialized()) {
                    throw newUninitializedMessageException(result);
                }
                return result;
            }

            public cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.RequestDeviceClusterTypeAck buildPartial() {
                cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.RequestDeviceClusterTypeAck result = new cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.RequestDeviceClusterTypeAck(this);
                result.deviceUuidKey_ = deviceUuidKey_;
                result.clusterType_ = clusterType_;
                onBuilt();
                return result;
            }

            public Builder clone() {
                return (Builder) super.clone();
            }
            public Builder setField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    Object value) {
                return (Builder) super.setField(field, value);
            }
            public Builder clearField(
                    com.google.protobuf.Descriptors.FieldDescriptor field) {
                return (Builder) super.clearField(field);
            }
            public Builder clearOneof(
                    com.google.protobuf.Descriptors.OneofDescriptor oneof) {
                return (Builder) super.clearOneof(oneof);
            }
            public Builder setRepeatedField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    int index, Object value) {
                return (Builder) super.setRepeatedField(field, index, value);
            }
            public Builder addRepeatedField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    Object value) {
                return (Builder) super.addRepeatedField(field, value);
            }
            public Builder mergeFrom(com.google.protobuf.Message other) {
                if (other instanceof cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.RequestDeviceClusterTypeAck) {
                    return mergeFrom((cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.RequestDeviceClusterTypeAck)other);
                } else {
                    super.mergeFrom(other);
                    return this;
                }
            }

            public Builder mergeFrom(cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.RequestDeviceClusterTypeAck other) {
                if (other == cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.RequestDeviceClusterTypeAck.getDefaultInstance()) return this;
                if (!other.getDeviceUuidKey().isEmpty()) {
                    deviceUuidKey_ = other.deviceUuidKey_;
                    onChanged();
                }
                if (other.clusterType_ != 0) {
                    setClusterTypeValue(other.getClusterTypeValue());
                }
                onChanged();
                return this;
            }

            public final boolean isInitialized() {
                return true;
            }

            public Builder mergeFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws java.io.IOException {
                cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.RequestDeviceClusterTypeAck parsedMessage = null;
                try {
                    parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
                } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                    parsedMessage = (cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.RequestDeviceClusterTypeAck) e.getUnfinishedMessage();
                    throw e.unwrapIOException();
                } finally {
                    if (parsedMessage != null) {
                        mergeFrom(parsedMessage);
                    }
                }
                return this;
            }

            private Object deviceUuidKey_ = "";
            /**
             * <code>optional string device_uuid_key = 1;</code>
             */
            public String getDeviceUuidKey() {
                Object ref = deviceUuidKey_;
                if (!(ref instanceof String)) {
                    com.google.protobuf.ByteString bs =
                            (com.google.protobuf.ByteString) ref;
                    String s = bs.toStringUtf8();
                    deviceUuidKey_ = s;
                    return s;
                } else {
                    return (String) ref;
                }
            }
            /**
             * <code>optional string device_uuid_key = 1;</code>
             */
            public com.google.protobuf.ByteString
            getDeviceUuidKeyBytes() {
                Object ref = deviceUuidKey_;
                if (ref instanceof String) {
                    com.google.protobuf.ByteString b =
                            com.google.protobuf.ByteString.copyFromUtf8(
                                    (String) ref);
                    deviceUuidKey_ = b;
                    return b;
                } else {
                    return (com.google.protobuf.ByteString) ref;
                }
            }
            /**
             * <code>optional string device_uuid_key = 1;</code>
             */
            public Builder setDeviceUuidKey(
                    String value) {
                if (value == null) {
                    throw new NullPointerException();
                }

                deviceUuidKey_ = value;
                onChanged();
                return this;
            }
            /**
             * <code>optional string device_uuid_key = 1;</code>
             */
            public Builder clearDeviceUuidKey() {

                deviceUuidKey_ = getDefaultInstance().getDeviceUuidKey();
                onChanged();
                return this;
            }
            /**
             * <code>optional string device_uuid_key = 1;</code>
             */
            public Builder setDeviceUuidKeyBytes(
                    com.google.protobuf.ByteString value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                checkByteStringIsUtf8(value);

                deviceUuidKey_ = value;
                onChanged();
                return this;
            }

            private int clusterType_ = 0;
            /**
             * <code>optional .one2data.rbtmqmsgcli.client.ClusterType cluster_type = 2;</code>
             */
            public int getClusterTypeValue() {
                return clusterType_;
            }
            /**
             * <code>optional .one2data.rbtmqmsgcli.client.ClusterType cluster_type = 2;</code>
             */
            public Builder setClusterTypeValue(int value) {
                clusterType_ = value;
                onChanged();
                return this;
            }
            /**
             * <code>optional .one2data.rbtmqmsgcli.client.ClusterType cluster_type = 2;</code>
             */
            public cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.ClusterType getClusterType() {
                cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.ClusterType result = cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.ClusterType.valueOf(clusterType_);
                return result == null ? cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.ClusterType.UNRECOGNIZED : result;
            }
            /**
             * <code>optional .one2data.rbtmqmsgcli.client.ClusterType cluster_type = 2;</code>
             */
            public Builder setClusterType(cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.ClusterType value) {
                if (value == null) {
                    throw new NullPointerException();
                }

                clusterType_ = value.getNumber();
                onChanged();
                return this;
            }
            /**
             * <code>optional .one2data.rbtmqmsgcli.client.ClusterType cluster_type = 2;</code>
             */
            public Builder clearClusterType() {

                clusterType_ = 0;
                onChanged();
                return this;
            }
            public final Builder setUnknownFields(
                    final com.google.protobuf.UnknownFieldSet unknownFields) {
                return this;
            }

            public final Builder mergeUnknownFields(
                    final com.google.protobuf.UnknownFieldSet unknownFields) {
                return this;
            }


            // @@protoc_insertion_point(builder_scope:one2data.rbtmqmsgcli.client.RequestDeviceClusterTypeAck)
        }

        // @@protoc_insertion_point(class_scope:one2data.rbtmqmsgcli.client.RequestDeviceClusterTypeAck)
        private static final cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.RequestDeviceClusterTypeAck DEFAULT_INSTANCE;
        static {
            DEFAULT_INSTANCE = new cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.RequestDeviceClusterTypeAck();
        }

        public static cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.RequestDeviceClusterTypeAck getDefaultInstance() {
            return DEFAULT_INSTANCE;
        }

        private static final com.google.protobuf.Parser<RequestDeviceClusterTypeAck>
                PARSER = new com.google.protobuf.AbstractParser<RequestDeviceClusterTypeAck>() {
            public RequestDeviceClusterTypeAck parsePartialFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws com.google.protobuf.InvalidProtocolBufferException {
                return new RequestDeviceClusterTypeAck(input, extensionRegistry);
            }
        };

        public static com.google.protobuf.Parser<RequestDeviceClusterTypeAck> parser() {
            return PARSER;
        }

        @Override
        public com.google.protobuf.Parser<RequestDeviceClusterTypeAck> getParserForType() {
            return PARSER;
        }

        public cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.RequestDeviceClusterTypeAck getDefaultInstanceForType() {
            return DEFAULT_INSTANCE;
        }

    }

    public interface ResetAgentEnvironmentOrBuilder extends
            // @@protoc_insertion_point(interface_extends:one2data.rbtmqmsgcli.client.ResetAgentEnvironment)
            com.google.protobuf.MessageOrBuilder {

        /**
         * <pre>
         *当前代理关联的备份业务唯一ID
         * </pre>
         *
         * <code>optional string backup_task_uuid = 1;</code>
         */
        String getBackupTaskUuid();
        /**
         * <pre>
         *当前代理关联的备份业务唯一ID
         * </pre>
         *
         * <code>optional string backup_task_uuid = 1;</code>
         */
        com.google.protobuf.ByteString
        getBackupTaskUuidBytes();

        /**
         * <pre>
         *代理设备内部唯一ID
         * </pre>
         *
         * <code>optional string device_uuid_key = 2;</code>
         */
        String getDeviceUuidKey();
        /**
         * <pre>
         *代理设备内部唯一ID
         * </pre>
         *
         * <code>optional string device_uuid_key = 2;</code>
         */
        com.google.protobuf.ByteString
        getDeviceUuidKeyBytes();
    }
    /**
     * <pre>
     *重置备份代理环境
     * </pre>
     *
     * Protobuf type {@code one2data.rbtmqmsgcli.client.ResetAgentEnvironment}
     */
    public  static final class ResetAgentEnvironment extends
            com.google.protobuf.GeneratedMessageV3 implements
            // @@protoc_insertion_point(message_implements:one2data.rbtmqmsgcli.client.ResetAgentEnvironment)
            ResetAgentEnvironmentOrBuilder {
        // Use ResetAgentEnvironment.newBuilder() to construct.
        private ResetAgentEnvironment(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
            super(builder);
        }
        private ResetAgentEnvironment() {
            backupTaskUuid_ = "";
            deviceUuidKey_ = "";
        }

        @Override
        public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
            return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
        }
        private ResetAgentEnvironment(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            this();
            int mutable_bitField0_ = 0;
            try {
                boolean done = false;
                while (!done) {
                    int tag = input.readTag();
                    switch (tag) {
                        case 0:
                            done = true;
                            break;
                        default: {
                            if (!input.skipField(tag)) {
                                done = true;
                            }
                            break;
                        }
                        case 10: {
                            String s = input.readStringRequireUtf8();

                            backupTaskUuid_ = s;
                            break;
                        }
                        case 18: {
                            String s = input.readStringRequireUtf8();

                            deviceUuidKey_ = s;
                            break;
                        }
                    }
                }
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(this);
            } catch (java.io.IOException e) {
                throw new com.google.protobuf.InvalidProtocolBufferException(
                        e).setUnfinishedMessage(this);
            } finally {
                makeExtensionsImmutable();
            }
        }
        public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
            return cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.internal_static_one2data_rbtmqmsgcli_client_ResetAgentEnvironment_descriptor;
        }

        protected FieldAccessorTable
        internalGetFieldAccessorTable() {
            return cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.internal_static_one2data_rbtmqmsgcli_client_ResetAgentEnvironment_fieldAccessorTable
                    .ensureFieldAccessorsInitialized(
                            cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.ResetAgentEnvironment.class, cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.ResetAgentEnvironment.Builder.class);
        }

        public static final int BACKUP_TASK_UUID_FIELD_NUMBER = 1;
        private volatile Object backupTaskUuid_;
        /**
         * <pre>
         *当前代理关联的备份业务唯一ID
         * </pre>
         *
         * <code>optional string backup_task_uuid = 1;</code>
         */
        public String getBackupTaskUuid() {
            Object ref = backupTaskUuid_;
            if (ref instanceof String) {
                return (String) ref;
            } else {
                com.google.protobuf.ByteString bs =
                        (com.google.protobuf.ByteString) ref;
                String s = bs.toStringUtf8();
                backupTaskUuid_ = s;
                return s;
            }
        }
        /**
         * <pre>
         *当前代理关联的备份业务唯一ID
         * </pre>
         *
         * <code>optional string backup_task_uuid = 1;</code>
         */
        public com.google.protobuf.ByteString
        getBackupTaskUuidBytes() {
            Object ref = backupTaskUuid_;
            if (ref instanceof String) {
                com.google.protobuf.ByteString b =
                        com.google.protobuf.ByteString.copyFromUtf8(
                                (String) ref);
                backupTaskUuid_ = b;
                return b;
            } else {
                return (com.google.protobuf.ByteString) ref;
            }
        }

        public static final int DEVICE_UUID_KEY_FIELD_NUMBER = 2;
        private volatile Object deviceUuidKey_;
        /**
         * <pre>
         *代理设备内部唯一ID
         * </pre>
         *
         * <code>optional string device_uuid_key = 2;</code>
         */
        public String getDeviceUuidKey() {
            Object ref = deviceUuidKey_;
            if (ref instanceof String) {
                return (String) ref;
            } else {
                com.google.protobuf.ByteString bs =
                        (com.google.protobuf.ByteString) ref;
                String s = bs.toStringUtf8();
                deviceUuidKey_ = s;
                return s;
            }
        }
        /**
         * <pre>
         *代理设备内部唯一ID
         * </pre>
         *
         * <code>optional string device_uuid_key = 2;</code>
         */
        public com.google.protobuf.ByteString
        getDeviceUuidKeyBytes() {
            Object ref = deviceUuidKey_;
            if (ref instanceof String) {
                com.google.protobuf.ByteString b =
                        com.google.protobuf.ByteString.copyFromUtf8(
                                (String) ref);
                deviceUuidKey_ = b;
                return b;
            } else {
                return (com.google.protobuf.ByteString) ref;
            }
        }

        private byte memoizedIsInitialized = -1;
        public final boolean isInitialized() {
            byte isInitialized = memoizedIsInitialized;
            if (isInitialized == 1) return true;
            if (isInitialized == 0) return false;

            memoizedIsInitialized = 1;
            return true;
        }

        public void writeTo(com.google.protobuf.CodedOutputStream output)
                throws java.io.IOException {
            if (!getBackupTaskUuidBytes().isEmpty()) {
                com.google.protobuf.GeneratedMessageV3.writeString(output, 1, backupTaskUuid_);
            }
            if (!getDeviceUuidKeyBytes().isEmpty()) {
                com.google.protobuf.GeneratedMessageV3.writeString(output, 2, deviceUuidKey_);
            }
        }

        public int getSerializedSize() {
            int size = memoizedSize;
            if (size != -1) return size;

            size = 0;
            if (!getBackupTaskUuidBytes().isEmpty()) {
                size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, backupTaskUuid_);
            }
            if (!getDeviceUuidKeyBytes().isEmpty()) {
                size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, deviceUuidKey_);
            }
            memoizedSize = size;
            return size;
        }

        private static final long serialVersionUID = 0L;
        @Override
        public boolean equals(final Object obj) {
            if (obj == this) {
                return true;
            }
            if (!(obj instanceof cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.ResetAgentEnvironment)) {
                return super.equals(obj);
            }
            cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.ResetAgentEnvironment other = (cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.ResetAgentEnvironment) obj;

            boolean result = true;
            result = result && getBackupTaskUuid()
                    .equals(other.getBackupTaskUuid());
            result = result && getDeviceUuidKey()
                    .equals(other.getDeviceUuidKey());
            return result;
        }

        @Override
        public int hashCode() {
            if (memoizedHashCode != 0) {
                return memoizedHashCode;
            }
            int hash = 41;
            hash = (19 * hash) + getDescriptorForType().hashCode();
            hash = (37 * hash) + BACKUP_TASK_UUID_FIELD_NUMBER;
            hash = (53 * hash) + getBackupTaskUuid().hashCode();
            hash = (37 * hash) + DEVICE_UUID_KEY_FIELD_NUMBER;
            hash = (53 * hash) + getDeviceUuidKey().hashCode();
            hash = (29 * hash) + unknownFields.hashCode();
            memoizedHashCode = hash;
            return hash;
        }

        public static cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.ResetAgentEnvironment parseFrom(
                com.google.protobuf.ByteString data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }
        public static cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.ResetAgentEnvironment parseFrom(
                com.google.protobuf.ByteString data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }
        public static cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.ResetAgentEnvironment parseFrom(byte[] data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }
        public static cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.ResetAgentEnvironment parseFrom(
                byte[] data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }
        public static cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.ResetAgentEnvironment parseFrom(java.io.InputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input);
        }
        public static cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.ResetAgentEnvironment parseFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input, extensionRegistry);
        }
        public static cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.ResetAgentEnvironment parseDelimitedFrom(java.io.InputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseDelimitedWithIOException(PARSER, input);
        }
        public static cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.ResetAgentEnvironment parseDelimitedFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
        }
        public static cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.ResetAgentEnvironment parseFrom(
                com.google.protobuf.CodedInputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input);
        }
        public static cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.ResetAgentEnvironment parseFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input, extensionRegistry);
        }

        public Builder newBuilderForType() { return newBuilder(); }
        public static Builder newBuilder() {
            return DEFAULT_INSTANCE.toBuilder();
        }
        public static Builder newBuilder(cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.ResetAgentEnvironment prototype) {
            return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }
        public Builder toBuilder() {
            return this == DEFAULT_INSTANCE
                    ? new Builder() : new Builder().mergeFrom(this);
        }

        @Override
        protected Builder newBuilderForType(
                BuilderParent parent) {
            Builder builder = new Builder(parent);
            return builder;
        }
        /**
         * <pre>
         *重置备份代理环境
         * </pre>
         *
         * Protobuf type {@code one2data.rbtmqmsgcli.client.ResetAgentEnvironment}
         */
        public static final class Builder extends
                com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
                // @@protoc_insertion_point(builder_implements:one2data.rbtmqmsgcli.client.ResetAgentEnvironment)
                cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.ResetAgentEnvironmentOrBuilder {
            public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
                return cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.internal_static_one2data_rbtmqmsgcli_client_ResetAgentEnvironment_descriptor;
            }

            protected FieldAccessorTable
            internalGetFieldAccessorTable() {
                return cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.internal_static_one2data_rbtmqmsgcli_client_ResetAgentEnvironment_fieldAccessorTable
                        .ensureFieldAccessorsInitialized(
                                cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.ResetAgentEnvironment.class, cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.ResetAgentEnvironment.Builder.class);
            }

            // Construct using cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.ResetAgentEnvironment.newBuilder()
            private Builder() {
                maybeForceBuilderInitialization();
            }

            private Builder(
                    BuilderParent parent) {
                super(parent);
                maybeForceBuilderInitialization();
            }
            private void maybeForceBuilderInitialization() {
                if (com.google.protobuf.GeneratedMessageV3
                        .alwaysUseFieldBuilders) {
                }
            }
            public Builder clear() {
                super.clear();
                backupTaskUuid_ = "";

                deviceUuidKey_ = "";

                return this;
            }

            public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
                return cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.internal_static_one2data_rbtmqmsgcli_client_ResetAgentEnvironment_descriptor;
            }

            public cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.ResetAgentEnvironment getDefaultInstanceForType() {
                return cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.ResetAgentEnvironment.getDefaultInstance();
            }

            public cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.ResetAgentEnvironment build() {
                cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.ResetAgentEnvironment result = buildPartial();
                if (!result.isInitialized()) {
                    throw newUninitializedMessageException(result);
                }
                return result;
            }

            public cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.ResetAgentEnvironment buildPartial() {
                cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.ResetAgentEnvironment result = new cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.ResetAgentEnvironment(this);
                result.backupTaskUuid_ = backupTaskUuid_;
                result.deviceUuidKey_ = deviceUuidKey_;
                onBuilt();
                return result;
            }

            public Builder clone() {
                return (Builder) super.clone();
            }
            public Builder setField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    Object value) {
                return (Builder) super.setField(field, value);
            }
            public Builder clearField(
                    com.google.protobuf.Descriptors.FieldDescriptor field) {
                return (Builder) super.clearField(field);
            }
            public Builder clearOneof(
                    com.google.protobuf.Descriptors.OneofDescriptor oneof) {
                return (Builder) super.clearOneof(oneof);
            }
            public Builder setRepeatedField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    int index, Object value) {
                return (Builder) super.setRepeatedField(field, index, value);
            }
            public Builder addRepeatedField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    Object value) {
                return (Builder) super.addRepeatedField(field, value);
            }
            public Builder mergeFrom(com.google.protobuf.Message other) {
                if (other instanceof cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.ResetAgentEnvironment) {
                    return mergeFrom((cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.ResetAgentEnvironment)other);
                } else {
                    super.mergeFrom(other);
                    return this;
                }
            }

            public Builder mergeFrom(cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.ResetAgentEnvironment other) {
                if (other == cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.ResetAgentEnvironment.getDefaultInstance()) return this;
                if (!other.getBackupTaskUuid().isEmpty()) {
                    backupTaskUuid_ = other.backupTaskUuid_;
                    onChanged();
                }
                if (!other.getDeviceUuidKey().isEmpty()) {
                    deviceUuidKey_ = other.deviceUuidKey_;
                    onChanged();
                }
                onChanged();
                return this;
            }

            public final boolean isInitialized() {
                return true;
            }

            public Builder mergeFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws java.io.IOException {
                cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.ResetAgentEnvironment parsedMessage = null;
                try {
                    parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
                } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                    parsedMessage = (cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.ResetAgentEnvironment) e.getUnfinishedMessage();
                    throw e.unwrapIOException();
                } finally {
                    if (parsedMessage != null) {
                        mergeFrom(parsedMessage);
                    }
                }
                return this;
            }

            private Object backupTaskUuid_ = "";
            /**
             * <pre>
             *当前代理关联的备份业务唯一ID
             * </pre>
             *
             * <code>optional string backup_task_uuid = 1;</code>
             */
            public String getBackupTaskUuid() {
                Object ref = backupTaskUuid_;
                if (!(ref instanceof String)) {
                    com.google.protobuf.ByteString bs =
                            (com.google.protobuf.ByteString) ref;
                    String s = bs.toStringUtf8();
                    backupTaskUuid_ = s;
                    return s;
                } else {
                    return (String) ref;
                }
            }
            /**
             * <pre>
             *当前代理关联的备份业务唯一ID
             * </pre>
             *
             * <code>optional string backup_task_uuid = 1;</code>
             */
            public com.google.protobuf.ByteString
            getBackupTaskUuidBytes() {
                Object ref = backupTaskUuid_;
                if (ref instanceof String) {
                    com.google.protobuf.ByteString b =
                            com.google.protobuf.ByteString.copyFromUtf8(
                                    (String) ref);
                    backupTaskUuid_ = b;
                    return b;
                } else {
                    return (com.google.protobuf.ByteString) ref;
                }
            }
            /**
             * <pre>
             *当前代理关联的备份业务唯一ID
             * </pre>
             *
             * <code>optional string backup_task_uuid = 1;</code>
             */
            public Builder setBackupTaskUuid(
                    String value) {
                if (value == null) {
                    throw new NullPointerException();
                }

                backupTaskUuid_ = value;
                onChanged();
                return this;
            }
            /**
             * <pre>
             *当前代理关联的备份业务唯一ID
             * </pre>
             *
             * <code>optional string backup_task_uuid = 1;</code>
             */
            public Builder clearBackupTaskUuid() {

                backupTaskUuid_ = getDefaultInstance().getBackupTaskUuid();
                onChanged();
                return this;
            }
            /**
             * <pre>
             *当前代理关联的备份业务唯一ID
             * </pre>
             *
             * <code>optional string backup_task_uuid = 1;</code>
             */
            public Builder setBackupTaskUuidBytes(
                    com.google.protobuf.ByteString value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                checkByteStringIsUtf8(value);

                backupTaskUuid_ = value;
                onChanged();
                return this;
            }

            private Object deviceUuidKey_ = "";
            /**
             * <pre>
             *代理设备内部唯一ID
             * </pre>
             *
             * <code>optional string device_uuid_key = 2;</code>
             */
            public String getDeviceUuidKey() {
                Object ref = deviceUuidKey_;
                if (!(ref instanceof String)) {
                    com.google.protobuf.ByteString bs =
                            (com.google.protobuf.ByteString) ref;
                    String s = bs.toStringUtf8();
                    deviceUuidKey_ = s;
                    return s;
                } else {
                    return (String) ref;
                }
            }
            /**
             * <pre>
             *代理设备内部唯一ID
             * </pre>
             *
             * <code>optional string device_uuid_key = 2;</code>
             */
            public com.google.protobuf.ByteString
            getDeviceUuidKeyBytes() {
                Object ref = deviceUuidKey_;
                if (ref instanceof String) {
                    com.google.protobuf.ByteString b =
                            com.google.protobuf.ByteString.copyFromUtf8(
                                    (String) ref);
                    deviceUuidKey_ = b;
                    return b;
                } else {
                    return (com.google.protobuf.ByteString) ref;
                }
            }
            /**
             * <pre>
             *代理设备内部唯一ID
             * </pre>
             *
             * <code>optional string device_uuid_key = 2;</code>
             */
            public Builder setDeviceUuidKey(
                    String value) {
                if (value == null) {
                    throw new NullPointerException();
                }

                deviceUuidKey_ = value;
                onChanged();
                return this;
            }
            /**
             * <pre>
             *代理设备内部唯一ID
             * </pre>
             *
             * <code>optional string device_uuid_key = 2;</code>
             */
            public Builder clearDeviceUuidKey() {

                deviceUuidKey_ = getDefaultInstance().getDeviceUuidKey();
                onChanged();
                return this;
            }
            /**
             * <pre>
             *代理设备内部唯一ID
             * </pre>
             *
             * <code>optional string device_uuid_key = 2;</code>
             */
            public Builder setDeviceUuidKeyBytes(
                    com.google.protobuf.ByteString value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                checkByteStringIsUtf8(value);

                deviceUuidKey_ = value;
                onChanged();
                return this;
            }
            public final Builder setUnknownFields(
                    final com.google.protobuf.UnknownFieldSet unknownFields) {
                return this;
            }

            public final Builder mergeUnknownFields(
                    final com.google.protobuf.UnknownFieldSet unknownFields) {
                return this;
            }


            // @@protoc_insertion_point(builder_scope:one2data.rbtmqmsgcli.client.ResetAgentEnvironment)
        }

        // @@protoc_insertion_point(class_scope:one2data.rbtmqmsgcli.client.ResetAgentEnvironment)
        private static final cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.ResetAgentEnvironment DEFAULT_INSTANCE;
        static {
            DEFAULT_INSTANCE = new cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.ResetAgentEnvironment();
        }

        public static cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.ResetAgentEnvironment getDefaultInstance() {
            return DEFAULT_INSTANCE;
        }

        private static final com.google.protobuf.Parser<ResetAgentEnvironment>
                PARSER = new com.google.protobuf.AbstractParser<ResetAgentEnvironment>() {
            public ResetAgentEnvironment parsePartialFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws com.google.protobuf.InvalidProtocolBufferException {
                return new ResetAgentEnvironment(input, extensionRegistry);
            }
        };

        public static com.google.protobuf.Parser<ResetAgentEnvironment> parser() {
            return PARSER;
        }

        @Override
        public com.google.protobuf.Parser<ResetAgentEnvironment> getParserForType() {
            return PARSER;
        }

        public cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.ResetAgentEnvironment getDefaultInstanceForType() {
            return DEFAULT_INSTANCE;
        }

    }

    public interface RestartAgentServiceOrBuilder extends
            // @@protoc_insertion_point(interface_extends:one2data.rbtmqmsgcli.client.RestartAgentService)
            com.google.protobuf.MessageOrBuilder {

        /**
         * <pre>
         *备份代理设备内部唯一ID
         * </pre>
         *
         * <code>optional string device_uuid_key = 1;</code>
         */
        String getDeviceUuidKey();
        /**
         * <pre>
         *备份代理设备内部唯一ID
         * </pre>
         *
         * <code>optional string device_uuid_key = 1;</code>
         */
        com.google.protobuf.ByteString
        getDeviceUuidKeyBytes();
    }
    /**
     * <pre>
     *重启备份代理服务
     * </pre>
     *
     * Protobuf type {@code one2data.rbtmqmsgcli.client.RestartAgentService}
     */
    public  static final class RestartAgentService extends
            com.google.protobuf.GeneratedMessageV3 implements
            // @@protoc_insertion_point(message_implements:one2data.rbtmqmsgcli.client.RestartAgentService)
            RestartAgentServiceOrBuilder {
        // Use RestartAgentService.newBuilder() to construct.
        private RestartAgentService(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
            super(builder);
        }
        private RestartAgentService() {
            deviceUuidKey_ = "";
        }

        @Override
        public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
            return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
        }
        private RestartAgentService(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            this();
            int mutable_bitField0_ = 0;
            try {
                boolean done = false;
                while (!done) {
                    int tag = input.readTag();
                    switch (tag) {
                        case 0:
                            done = true;
                            break;
                        default: {
                            if (!input.skipField(tag)) {
                                done = true;
                            }
                            break;
                        }
                        case 10: {
                            String s = input.readStringRequireUtf8();

                            deviceUuidKey_ = s;
                            break;
                        }
                    }
                }
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(this);
            } catch (java.io.IOException e) {
                throw new com.google.protobuf.InvalidProtocolBufferException(
                        e).setUnfinishedMessage(this);
            } finally {
                makeExtensionsImmutable();
            }
        }
        public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
            return cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.internal_static_one2data_rbtmqmsgcli_client_RestartAgentService_descriptor;
        }

        protected FieldAccessorTable
        internalGetFieldAccessorTable() {
            return cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.internal_static_one2data_rbtmqmsgcli_client_RestartAgentService_fieldAccessorTable
                    .ensureFieldAccessorsInitialized(
                            cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.RestartAgentService.class, cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.RestartAgentService.Builder.class);
        }

        public static final int DEVICE_UUID_KEY_FIELD_NUMBER = 1;
        private volatile Object deviceUuidKey_;
        /**
         * <pre>
         *备份代理设备内部唯一ID
         * </pre>
         *
         * <code>optional string device_uuid_key = 1;</code>
         */
        public String getDeviceUuidKey() {
            Object ref = deviceUuidKey_;
            if (ref instanceof String) {
                return (String) ref;
            } else {
                com.google.protobuf.ByteString bs =
                        (com.google.protobuf.ByteString) ref;
                String s = bs.toStringUtf8();
                deviceUuidKey_ = s;
                return s;
            }
        }
        /**
         * <pre>
         *备份代理设备内部唯一ID
         * </pre>
         *
         * <code>optional string device_uuid_key = 1;</code>
         */
        public com.google.protobuf.ByteString
        getDeviceUuidKeyBytes() {
            Object ref = deviceUuidKey_;
            if (ref instanceof String) {
                com.google.protobuf.ByteString b =
                        com.google.protobuf.ByteString.copyFromUtf8(
                                (String) ref);
                deviceUuidKey_ = b;
                return b;
            } else {
                return (com.google.protobuf.ByteString) ref;
            }
        }

        private byte memoizedIsInitialized = -1;
        public final boolean isInitialized() {
            byte isInitialized = memoizedIsInitialized;
            if (isInitialized == 1) return true;
            if (isInitialized == 0) return false;

            memoizedIsInitialized = 1;
            return true;
        }

        public void writeTo(com.google.protobuf.CodedOutputStream output)
                throws java.io.IOException {
            if (!getDeviceUuidKeyBytes().isEmpty()) {
                com.google.protobuf.GeneratedMessageV3.writeString(output, 1, deviceUuidKey_);
            }
        }

        public int getSerializedSize() {
            int size = memoizedSize;
            if (size != -1) return size;

            size = 0;
            if (!getDeviceUuidKeyBytes().isEmpty()) {
                size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, deviceUuidKey_);
            }
            memoizedSize = size;
            return size;
        }

        private static final long serialVersionUID = 0L;
        @Override
        public boolean equals(final Object obj) {
            if (obj == this) {
                return true;
            }
            if (!(obj instanceof cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.RestartAgentService)) {
                return super.equals(obj);
            }
            cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.RestartAgentService other = (cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.RestartAgentService) obj;

            boolean result = true;
            result = result && getDeviceUuidKey()
                    .equals(other.getDeviceUuidKey());
            return result;
        }

        @Override
        public int hashCode() {
            if (memoizedHashCode != 0) {
                return memoizedHashCode;
            }
            int hash = 41;
            hash = (19 * hash) + getDescriptorForType().hashCode();
            hash = (37 * hash) + DEVICE_UUID_KEY_FIELD_NUMBER;
            hash = (53 * hash) + getDeviceUuidKey().hashCode();
            hash = (29 * hash) + unknownFields.hashCode();
            memoizedHashCode = hash;
            return hash;
        }

        public static cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.RestartAgentService parseFrom(
                com.google.protobuf.ByteString data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }
        public static cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.RestartAgentService parseFrom(
                com.google.protobuf.ByteString data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }
        public static cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.RestartAgentService parseFrom(byte[] data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }
        public static cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.RestartAgentService parseFrom(
                byte[] data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }
        public static cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.RestartAgentService parseFrom(java.io.InputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input);
        }
        public static cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.RestartAgentService parseFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input, extensionRegistry);
        }
        public static cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.RestartAgentService parseDelimitedFrom(java.io.InputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseDelimitedWithIOException(PARSER, input);
        }
        public static cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.RestartAgentService parseDelimitedFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
        }
        public static cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.RestartAgentService parseFrom(
                com.google.protobuf.CodedInputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input);
        }
        public static cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.RestartAgentService parseFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input, extensionRegistry);
        }

        public Builder newBuilderForType() { return newBuilder(); }
        public static Builder newBuilder() {
            return DEFAULT_INSTANCE.toBuilder();
        }
        public static Builder newBuilder(cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.RestartAgentService prototype) {
            return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }
        public Builder toBuilder() {
            return this == DEFAULT_INSTANCE
                    ? new Builder() : new Builder().mergeFrom(this);
        }

        @Override
        protected Builder newBuilderForType(
                BuilderParent parent) {
            Builder builder = new Builder(parent);
            return builder;
        }
        /**
         * <pre>
         *重启备份代理服务
         * </pre>
         *
         * Protobuf type {@code one2data.rbtmqmsgcli.client.RestartAgentService}
         */
        public static final class Builder extends
                com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
                // @@protoc_insertion_point(builder_implements:one2data.rbtmqmsgcli.client.RestartAgentService)
                cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.RestartAgentServiceOrBuilder {
            public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
                return cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.internal_static_one2data_rbtmqmsgcli_client_RestartAgentService_descriptor;
            }

            protected FieldAccessorTable
            internalGetFieldAccessorTable() {
                return cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.internal_static_one2data_rbtmqmsgcli_client_RestartAgentService_fieldAccessorTable
                        .ensureFieldAccessorsInitialized(
                                cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.RestartAgentService.class, cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.RestartAgentService.Builder.class);
            }

            // Construct using cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.RestartAgentService.newBuilder()
            private Builder() {
                maybeForceBuilderInitialization();
            }

            private Builder(
                    BuilderParent parent) {
                super(parent);
                maybeForceBuilderInitialization();
            }
            private void maybeForceBuilderInitialization() {
                if (com.google.protobuf.GeneratedMessageV3
                        .alwaysUseFieldBuilders) {
                }
            }
            public Builder clear() {
                super.clear();
                deviceUuidKey_ = "";

                return this;
            }

            public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
                return cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.internal_static_one2data_rbtmqmsgcli_client_RestartAgentService_descriptor;
            }

            public cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.RestartAgentService getDefaultInstanceForType() {
                return cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.RestartAgentService.getDefaultInstance();
            }

            public cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.RestartAgentService build() {
                cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.RestartAgentService result = buildPartial();
                if (!result.isInitialized()) {
                    throw newUninitializedMessageException(result);
                }
                return result;
            }

            public cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.RestartAgentService buildPartial() {
                cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.RestartAgentService result = new cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.RestartAgentService(this);
                result.deviceUuidKey_ = deviceUuidKey_;
                onBuilt();
                return result;
            }

            public Builder clone() {
                return (Builder) super.clone();
            }
            public Builder setField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    Object value) {
                return (Builder) super.setField(field, value);
            }
            public Builder clearField(
                    com.google.protobuf.Descriptors.FieldDescriptor field) {
                return (Builder) super.clearField(field);
            }
            public Builder clearOneof(
                    com.google.protobuf.Descriptors.OneofDescriptor oneof) {
                return (Builder) super.clearOneof(oneof);
            }
            public Builder setRepeatedField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    int index, Object value) {
                return (Builder) super.setRepeatedField(field, index, value);
            }
            public Builder addRepeatedField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    Object value) {
                return (Builder) super.addRepeatedField(field, value);
            }
            public Builder mergeFrom(com.google.protobuf.Message other) {
                if (other instanceof cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.RestartAgentService) {
                    return mergeFrom((cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.RestartAgentService)other);
                } else {
                    super.mergeFrom(other);
                    return this;
                }
            }

            public Builder mergeFrom(cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.RestartAgentService other) {
                if (other == cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.RestartAgentService.getDefaultInstance()) return this;
                if (!other.getDeviceUuidKey().isEmpty()) {
                    deviceUuidKey_ = other.deviceUuidKey_;
                    onChanged();
                }
                onChanged();
                return this;
            }

            public final boolean isInitialized() {
                return true;
            }

            public Builder mergeFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws java.io.IOException {
                cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.RestartAgentService parsedMessage = null;
                try {
                    parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
                } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                    parsedMessage = (cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.RestartAgentService) e.getUnfinishedMessage();
                    throw e.unwrapIOException();
                } finally {
                    if (parsedMessage != null) {
                        mergeFrom(parsedMessage);
                    }
                }
                return this;
            }

            private Object deviceUuidKey_ = "";
            /**
             * <pre>
             *备份代理设备内部唯一ID
             * </pre>
             *
             * <code>optional string device_uuid_key = 1;</code>
             */
            public String getDeviceUuidKey() {
                Object ref = deviceUuidKey_;
                if (!(ref instanceof String)) {
                    com.google.protobuf.ByteString bs =
                            (com.google.protobuf.ByteString) ref;
                    String s = bs.toStringUtf8();
                    deviceUuidKey_ = s;
                    return s;
                } else {
                    return (String) ref;
                }
            }
            /**
             * <pre>
             *备份代理设备内部唯一ID
             * </pre>
             *
             * <code>optional string device_uuid_key = 1;</code>
             */
            public com.google.protobuf.ByteString
            getDeviceUuidKeyBytes() {
                Object ref = deviceUuidKey_;
                if (ref instanceof String) {
                    com.google.protobuf.ByteString b =
                            com.google.protobuf.ByteString.copyFromUtf8(
                                    (String) ref);
                    deviceUuidKey_ = b;
                    return b;
                } else {
                    return (com.google.protobuf.ByteString) ref;
                }
            }
            /**
             * <pre>
             *备份代理设备内部唯一ID
             * </pre>
             *
             * <code>optional string device_uuid_key = 1;</code>
             */
            public Builder setDeviceUuidKey(
                    String value) {
                if (value == null) {
                    throw new NullPointerException();
                }

                deviceUuidKey_ = value;
                onChanged();
                return this;
            }
            /**
             * <pre>
             *备份代理设备内部唯一ID
             * </pre>
             *
             * <code>optional string device_uuid_key = 1;</code>
             */
            public Builder clearDeviceUuidKey() {

                deviceUuidKey_ = getDefaultInstance().getDeviceUuidKey();
                onChanged();
                return this;
            }
            /**
             * <pre>
             *备份代理设备内部唯一ID
             * </pre>
             *
             * <code>optional string device_uuid_key = 1;</code>
             */
            public Builder setDeviceUuidKeyBytes(
                    com.google.protobuf.ByteString value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                checkByteStringIsUtf8(value);

                deviceUuidKey_ = value;
                onChanged();
                return this;
            }
            public final Builder setUnknownFields(
                    final com.google.protobuf.UnknownFieldSet unknownFields) {
                return this;
            }

            public final Builder mergeUnknownFields(
                    final com.google.protobuf.UnknownFieldSet unknownFields) {
                return this;
            }


            // @@protoc_insertion_point(builder_scope:one2data.rbtmqmsgcli.client.RestartAgentService)
        }

        // @@protoc_insertion_point(class_scope:one2data.rbtmqmsgcli.client.RestartAgentService)
        private static final cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.RestartAgentService DEFAULT_INSTANCE;
        static {
            DEFAULT_INSTANCE = new cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.RestartAgentService();
        }

        public static cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.RestartAgentService getDefaultInstance() {
            return DEFAULT_INSTANCE;
        }

        private static final com.google.protobuf.Parser<RestartAgentService>
                PARSER = new com.google.protobuf.AbstractParser<RestartAgentService>() {
            public RestartAgentService parsePartialFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws com.google.protobuf.InvalidProtocolBufferException {
                return new RestartAgentService(input, extensionRegistry);
            }
        };

        public static com.google.protobuf.Parser<RestartAgentService> parser() {
            return PARSER;
        }

        @Override
        public com.google.protobuf.Parser<RestartAgentService> getParserForType() {
            return PARSER;
        }

        public cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.RestartAgentService getDefaultInstanceForType() {
            return DEFAULT_INSTANCE;
        }

    }

    public interface ConnectFCTargetOrBuilder extends
            // @@protoc_insertion_point(interface_extends:one2data.rbtmqmsgcli.client.ConnectFCTarget)
            com.google.protobuf.MessageOrBuilder {

        /**
         * <code>optional string host_name = 1;</code>
         */
        String getHostName();
        /**
         * <code>optional string host_name = 1;</code>
         */
        com.google.protobuf.ByteString
        getHostNameBytes();
    }
    /**
     * <pre>
     *连接FC目标
     * </pre>
     *
     * Protobuf type {@code one2data.rbtmqmsgcli.client.ConnectFCTarget}
     */
    public  static final class ConnectFCTarget extends
            com.google.protobuf.GeneratedMessageV3 implements
            // @@protoc_insertion_point(message_implements:one2data.rbtmqmsgcli.client.ConnectFCTarget)
            ConnectFCTargetOrBuilder {
        // Use ConnectFCTarget.newBuilder() to construct.
        private ConnectFCTarget(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
            super(builder);
        }
        private ConnectFCTarget() {
            hostName_ = "";
        }

        @Override
        public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
            return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
        }
        private ConnectFCTarget(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            this();
            int mutable_bitField0_ = 0;
            try {
                boolean done = false;
                while (!done) {
                    int tag = input.readTag();
                    switch (tag) {
                        case 0:
                            done = true;
                            break;
                        default: {
                            if (!input.skipField(tag)) {
                                done = true;
                            }
                            break;
                        }
                        case 10: {
                            String s = input.readStringRequireUtf8();

                            hostName_ = s;
                            break;
                        }
                    }
                }
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(this);
            } catch (java.io.IOException e) {
                throw new com.google.protobuf.InvalidProtocolBufferException(
                        e).setUnfinishedMessage(this);
            } finally {
                makeExtensionsImmutable();
            }
        }
        public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
            return cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.internal_static_one2data_rbtmqmsgcli_client_ConnectFCTarget_descriptor;
        }

        protected FieldAccessorTable
        internalGetFieldAccessorTable() {
            return cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.internal_static_one2data_rbtmqmsgcli_client_ConnectFCTarget_fieldAccessorTable
                    .ensureFieldAccessorsInitialized(
                            cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.ConnectFCTarget.class, cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.ConnectFCTarget.Builder.class);
        }

        public static final int HOST_NAME_FIELD_NUMBER = 1;
        private volatile Object hostName_;
        /**
         * <code>optional string host_name = 1;</code>
         */
        public String getHostName() {
            Object ref = hostName_;
            if (ref instanceof String) {
                return (String) ref;
            } else {
                com.google.protobuf.ByteString bs =
                        (com.google.protobuf.ByteString) ref;
                String s = bs.toStringUtf8();
                hostName_ = s;
                return s;
            }
        }
        /**
         * <code>optional string host_name = 1;</code>
         */
        public com.google.protobuf.ByteString
        getHostNameBytes() {
            Object ref = hostName_;
            if (ref instanceof String) {
                com.google.protobuf.ByteString b =
                        com.google.protobuf.ByteString.copyFromUtf8(
                                (String) ref);
                hostName_ = b;
                return b;
            } else {
                return (com.google.protobuf.ByteString) ref;
            }
        }

        private byte memoizedIsInitialized = -1;
        public final boolean isInitialized() {
            byte isInitialized = memoizedIsInitialized;
            if (isInitialized == 1) return true;
            if (isInitialized == 0) return false;

            memoizedIsInitialized = 1;
            return true;
        }

        public void writeTo(com.google.protobuf.CodedOutputStream output)
                throws java.io.IOException {
            if (!getHostNameBytes().isEmpty()) {
                com.google.protobuf.GeneratedMessageV3.writeString(output, 1, hostName_);
            }
        }

        public int getSerializedSize() {
            int size = memoizedSize;
            if (size != -1) return size;

            size = 0;
            if (!getHostNameBytes().isEmpty()) {
                size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, hostName_);
            }
            memoizedSize = size;
            return size;
        }

        private static final long serialVersionUID = 0L;
        @Override
        public boolean equals(final Object obj) {
            if (obj == this) {
                return true;
            }
            if (!(obj instanceof cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.ConnectFCTarget)) {
                return super.equals(obj);
            }
            cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.ConnectFCTarget other = (cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.ConnectFCTarget) obj;

            boolean result = true;
            result = result && getHostName()
                    .equals(other.getHostName());
            return result;
        }

        @Override
        public int hashCode() {
            if (memoizedHashCode != 0) {
                return memoizedHashCode;
            }
            int hash = 41;
            hash = (19 * hash) + getDescriptorForType().hashCode();
            hash = (37 * hash) + HOST_NAME_FIELD_NUMBER;
            hash = (53 * hash) + getHostName().hashCode();
            hash = (29 * hash) + unknownFields.hashCode();
            memoizedHashCode = hash;
            return hash;
        }

        public static cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.ConnectFCTarget parseFrom(
                com.google.protobuf.ByteString data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }
        public static cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.ConnectFCTarget parseFrom(
                com.google.protobuf.ByteString data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }
        public static cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.ConnectFCTarget parseFrom(byte[] data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }
        public static cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.ConnectFCTarget parseFrom(
                byte[] data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }
        public static cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.ConnectFCTarget parseFrom(java.io.InputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input);
        }
        public static cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.ConnectFCTarget parseFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input, extensionRegistry);
        }
        public static cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.ConnectFCTarget parseDelimitedFrom(java.io.InputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseDelimitedWithIOException(PARSER, input);
        }
        public static cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.ConnectFCTarget parseDelimitedFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
        }
        public static cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.ConnectFCTarget parseFrom(
                com.google.protobuf.CodedInputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input);
        }
        public static cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.ConnectFCTarget parseFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input, extensionRegistry);
        }

        public Builder newBuilderForType() { return newBuilder(); }
        public static Builder newBuilder() {
            return DEFAULT_INSTANCE.toBuilder();
        }
        public static Builder newBuilder(cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.ConnectFCTarget prototype) {
            return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }
        public Builder toBuilder() {
            return this == DEFAULT_INSTANCE
                    ? new Builder() : new Builder().mergeFrom(this);
        }

        @Override
        protected Builder newBuilderForType(
                BuilderParent parent) {
            Builder builder = new Builder(parent);
            return builder;
        }
        /**
         * <pre>
         *连接FC目标
         * </pre>
         *
         * Protobuf type {@code one2data.rbtmqmsgcli.client.ConnectFCTarget}
         */
        public static final class Builder extends
                com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
                // @@protoc_insertion_point(builder_implements:one2data.rbtmqmsgcli.client.ConnectFCTarget)
                cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.ConnectFCTargetOrBuilder {
            public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
                return cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.internal_static_one2data_rbtmqmsgcli_client_ConnectFCTarget_descriptor;
            }

            protected FieldAccessorTable
            internalGetFieldAccessorTable() {
                return cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.internal_static_one2data_rbtmqmsgcli_client_ConnectFCTarget_fieldAccessorTable
                        .ensureFieldAccessorsInitialized(
                                cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.ConnectFCTarget.class, cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.ConnectFCTarget.Builder.class);
            }

            // Construct using cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.ConnectFCTarget.newBuilder()
            private Builder() {
                maybeForceBuilderInitialization();
            }

            private Builder(
                    BuilderParent parent) {
                super(parent);
                maybeForceBuilderInitialization();
            }
            private void maybeForceBuilderInitialization() {
                if (com.google.protobuf.GeneratedMessageV3
                        .alwaysUseFieldBuilders) {
                }
            }
            public Builder clear() {
                super.clear();
                hostName_ = "";

                return this;
            }

            public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
                return cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.internal_static_one2data_rbtmqmsgcli_client_ConnectFCTarget_descriptor;
            }

            public cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.ConnectFCTarget getDefaultInstanceForType() {
                return cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.ConnectFCTarget.getDefaultInstance();
            }

            public cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.ConnectFCTarget build() {
                cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.ConnectFCTarget result = buildPartial();
                if (!result.isInitialized()) {
                    throw newUninitializedMessageException(result);
                }
                return result;
            }

            public cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.ConnectFCTarget buildPartial() {
                cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.ConnectFCTarget result = new cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.ConnectFCTarget(this);
                result.hostName_ = hostName_;
                onBuilt();
                return result;
            }

            public Builder clone() {
                return (Builder) super.clone();
            }
            public Builder setField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    Object value) {
                return (Builder) super.setField(field, value);
            }
            public Builder clearField(
                    com.google.protobuf.Descriptors.FieldDescriptor field) {
                return (Builder) super.clearField(field);
            }
            public Builder clearOneof(
                    com.google.protobuf.Descriptors.OneofDescriptor oneof) {
                return (Builder) super.clearOneof(oneof);
            }
            public Builder setRepeatedField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    int index, Object value) {
                return (Builder) super.setRepeatedField(field, index, value);
            }
            public Builder addRepeatedField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    Object value) {
                return (Builder) super.addRepeatedField(field, value);
            }
            public Builder mergeFrom(com.google.protobuf.Message other) {
                if (other instanceof cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.ConnectFCTarget) {
                    return mergeFrom((cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.ConnectFCTarget)other);
                } else {
                    super.mergeFrom(other);
                    return this;
                }
            }

            public Builder mergeFrom(cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.ConnectFCTarget other) {
                if (other == cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.ConnectFCTarget.getDefaultInstance()) return this;
                if (!other.getHostName().isEmpty()) {
                    hostName_ = other.hostName_;
                    onChanged();
                }
                onChanged();
                return this;
            }

            public final boolean isInitialized() {
                return true;
            }

            public Builder mergeFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws java.io.IOException {
                cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.ConnectFCTarget parsedMessage = null;
                try {
                    parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
                } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                    parsedMessage = (cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.ConnectFCTarget) e.getUnfinishedMessage();
                    throw e.unwrapIOException();
                } finally {
                    if (parsedMessage != null) {
                        mergeFrom(parsedMessage);
                    }
                }
                return this;
            }

            private Object hostName_ = "";
            /**
             * <code>optional string host_name = 1;</code>
             */
            public String getHostName() {
                Object ref = hostName_;
                if (!(ref instanceof String)) {
                    com.google.protobuf.ByteString bs =
                            (com.google.protobuf.ByteString) ref;
                    String s = bs.toStringUtf8();
                    hostName_ = s;
                    return s;
                } else {
                    return (String) ref;
                }
            }
            /**
             * <code>optional string host_name = 1;</code>
             */
            public com.google.protobuf.ByteString
            getHostNameBytes() {
                Object ref = hostName_;
                if (ref instanceof String) {
                    com.google.protobuf.ByteString b =
                            com.google.protobuf.ByteString.copyFromUtf8(
                                    (String) ref);
                    hostName_ = b;
                    return b;
                } else {
                    return (com.google.protobuf.ByteString) ref;
                }
            }
            /**
             * <code>optional string host_name = 1;</code>
             */
            public Builder setHostName(
                    String value) {
                if (value == null) {
                    throw new NullPointerException();
                }

                hostName_ = value;
                onChanged();
                return this;
            }
            /**
             * <code>optional string host_name = 1;</code>
             */
            public Builder clearHostName() {

                hostName_ = getDefaultInstance().getHostName();
                onChanged();
                return this;
            }
            /**
             * <code>optional string host_name = 1;</code>
             */
            public Builder setHostNameBytes(
                    com.google.protobuf.ByteString value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                checkByteStringIsUtf8(value);

                hostName_ = value;
                onChanged();
                return this;
            }
            public final Builder setUnknownFields(
                    final com.google.protobuf.UnknownFieldSet unknownFields) {
                return this;
            }

            public final Builder mergeUnknownFields(
                    final com.google.protobuf.UnknownFieldSet unknownFields) {
                return this;
            }


            // @@protoc_insertion_point(builder_scope:one2data.rbtmqmsgcli.client.ConnectFCTarget)
        }

        // @@protoc_insertion_point(class_scope:one2data.rbtmqmsgcli.client.ConnectFCTarget)
        private static final cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.ConnectFCTarget DEFAULT_INSTANCE;
        static {
            DEFAULT_INSTANCE = new cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.ConnectFCTarget();
        }

        public static cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.ConnectFCTarget getDefaultInstance() {
            return DEFAULT_INSTANCE;
        }

        private static final com.google.protobuf.Parser<ConnectFCTarget>
                PARSER = new com.google.protobuf.AbstractParser<ConnectFCTarget>() {
            public ConnectFCTarget parsePartialFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws com.google.protobuf.InvalidProtocolBufferException {
                return new ConnectFCTarget(input, extensionRegistry);
            }
        };

        public static com.google.protobuf.Parser<ConnectFCTarget> parser() {
            return PARSER;
        }

        @Override
        public com.google.protobuf.Parser<ConnectFCTarget> getParserForType() {
            return PARSER;
        }

        public cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.ConnectFCTarget getDefaultInstanceForType() {
            return DEFAULT_INSTANCE;
        }

    }

    public interface ConnectFCTargetAckOrBuilder extends
            // @@protoc_insertion_point(interface_extends:one2data.rbtmqmsgcli.client.ConnectFCTargetAck)
            com.google.protobuf.MessageOrBuilder {

        /**
         * <code>optional .one2data.rbtmqmsgcli.common.BaseAck base_ack = 1;</code>
         */
        boolean hasBaseAck();
        /**
         * <code>optional .one2data.rbtmqmsgcli.common.BaseAck base_ack = 1;</code>
         */
        cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck getBaseAck();
        /**
         * <code>optional .one2data.rbtmqmsgcli.common.BaseAck base_ack = 1;</code>
         */
        cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAckOrBuilder getBaseAckOrBuilder();

        /**
         * <code>optional string device_uuid_key = 2;</code>
         */
        String getDeviceUuidKey();
        /**
         * <code>optional string device_uuid_key = 2;</code>
         */
        com.google.protobuf.ByteString
        getDeviceUuidKeyBytes();
    }
    /**
     * <pre>
     *连接FC目标ACK
     * </pre>
     *
     * Protobuf type {@code one2data.rbtmqmsgcli.client.ConnectFCTargetAck}
     */
    public  static final class ConnectFCTargetAck extends
            com.google.protobuf.GeneratedMessageV3 implements
            // @@protoc_insertion_point(message_implements:one2data.rbtmqmsgcli.client.ConnectFCTargetAck)
            ConnectFCTargetAckOrBuilder {
        // Use ConnectFCTargetAck.newBuilder() to construct.
        private ConnectFCTargetAck(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
            super(builder);
        }
        private ConnectFCTargetAck() {
            deviceUuidKey_ = "";
        }

        @Override
        public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
            return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
        }
        private ConnectFCTargetAck(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            this();
            int mutable_bitField0_ = 0;
            try {
                boolean done = false;
                while (!done) {
                    int tag = input.readTag();
                    switch (tag) {
                        case 0:
                            done = true;
                            break;
                        default: {
                            if (!input.skipField(tag)) {
                                done = true;
                            }
                            break;
                        }
                        case 10: {
                            cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck.Builder subBuilder = null;
                            if (baseAck_ != null) {
                                subBuilder = baseAck_.toBuilder();
                            }
                            baseAck_ = input.readMessage(cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck.parser(), extensionRegistry);
                            if (subBuilder != null) {
                                subBuilder.mergeFrom(baseAck_);
                                baseAck_ = subBuilder.buildPartial();
                            }

                            break;
                        }
                        case 18: {
                            String s = input.readStringRequireUtf8();

                            deviceUuidKey_ = s;
                            break;
                        }
                    }
                }
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(this);
            } catch (java.io.IOException e) {
                throw new com.google.protobuf.InvalidProtocolBufferException(
                        e).setUnfinishedMessage(this);
            } finally {
                makeExtensionsImmutable();
            }
        }
        public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
            return cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.internal_static_one2data_rbtmqmsgcli_client_ConnectFCTargetAck_descriptor;
        }

        protected FieldAccessorTable
        internalGetFieldAccessorTable() {
            return cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.internal_static_one2data_rbtmqmsgcli_client_ConnectFCTargetAck_fieldAccessorTable
                    .ensureFieldAccessorsInitialized(
                            cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.ConnectFCTargetAck.class, cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.ConnectFCTargetAck.Builder.class);
        }

        public static final int BASE_ACK_FIELD_NUMBER = 1;
        private cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck baseAck_;
        /**
         * <code>optional .one2data.rbtmqmsgcli.common.BaseAck base_ack = 1;</code>
         */
        public boolean hasBaseAck() {
            return baseAck_ != null;
        }
        /**
         * <code>optional .one2data.rbtmqmsgcli.common.BaseAck base_ack = 1;</code>
         */
        public cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck getBaseAck() {
            return baseAck_ == null ? cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck.getDefaultInstance() : baseAck_;
        }
        /**
         * <code>optional .one2data.rbtmqmsgcli.common.BaseAck base_ack = 1;</code>
         */
        public cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAckOrBuilder getBaseAckOrBuilder() {
            return getBaseAck();
        }

        public static final int DEVICE_UUID_KEY_FIELD_NUMBER = 2;
        private volatile Object deviceUuidKey_;
        /**
         * <code>optional string device_uuid_key = 2;</code>
         */
        public String getDeviceUuidKey() {
            Object ref = deviceUuidKey_;
            if (ref instanceof String) {
                return (String) ref;
            } else {
                com.google.protobuf.ByteString bs =
                        (com.google.protobuf.ByteString) ref;
                String s = bs.toStringUtf8();
                deviceUuidKey_ = s;
                return s;
            }
        }
        /**
         * <code>optional string device_uuid_key = 2;</code>
         */
        public com.google.protobuf.ByteString
        getDeviceUuidKeyBytes() {
            Object ref = deviceUuidKey_;
            if (ref instanceof String) {
                com.google.protobuf.ByteString b =
                        com.google.protobuf.ByteString.copyFromUtf8(
                                (String) ref);
                deviceUuidKey_ = b;
                return b;
            } else {
                return (com.google.protobuf.ByteString) ref;
            }
        }

        private byte memoizedIsInitialized = -1;
        public final boolean isInitialized() {
            byte isInitialized = memoizedIsInitialized;
            if (isInitialized == 1) return true;
            if (isInitialized == 0) return false;

            memoizedIsInitialized = 1;
            return true;
        }

        public void writeTo(com.google.protobuf.CodedOutputStream output)
                throws java.io.IOException {
            if (baseAck_ != null) {
                output.writeMessage(1, getBaseAck());
            }
            if (!getDeviceUuidKeyBytes().isEmpty()) {
                com.google.protobuf.GeneratedMessageV3.writeString(output, 2, deviceUuidKey_);
            }
        }

        public int getSerializedSize() {
            int size = memoizedSize;
            if (size != -1) return size;

            size = 0;
            if (baseAck_ != null) {
                size += com.google.protobuf.CodedOutputStream
                        .computeMessageSize(1, getBaseAck());
            }
            if (!getDeviceUuidKeyBytes().isEmpty()) {
                size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, deviceUuidKey_);
            }
            memoizedSize = size;
            return size;
        }

        private static final long serialVersionUID = 0L;
        @Override
        public boolean equals(final Object obj) {
            if (obj == this) {
                return true;
            }
            if (!(obj instanceof cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.ConnectFCTargetAck)) {
                return super.equals(obj);
            }
            cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.ConnectFCTargetAck other = (cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.ConnectFCTargetAck) obj;

            boolean result = true;
            result = result && (hasBaseAck() == other.hasBaseAck());
            if (hasBaseAck()) {
                result = result && getBaseAck()
                        .equals(other.getBaseAck());
            }
            result = result && getDeviceUuidKey()
                    .equals(other.getDeviceUuidKey());
            return result;
        }

        @Override
        public int hashCode() {
            if (memoizedHashCode != 0) {
                return memoizedHashCode;
            }
            int hash = 41;
            hash = (19 * hash) + getDescriptorForType().hashCode();
            if (hasBaseAck()) {
                hash = (37 * hash) + BASE_ACK_FIELD_NUMBER;
                hash = (53 * hash) + getBaseAck().hashCode();
            }
            hash = (37 * hash) + DEVICE_UUID_KEY_FIELD_NUMBER;
            hash = (53 * hash) + getDeviceUuidKey().hashCode();
            hash = (29 * hash) + unknownFields.hashCode();
            memoizedHashCode = hash;
            return hash;
        }

        public static cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.ConnectFCTargetAck parseFrom(
                com.google.protobuf.ByteString data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }
        public static cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.ConnectFCTargetAck parseFrom(
                com.google.protobuf.ByteString data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }
        public static cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.ConnectFCTargetAck parseFrom(byte[] data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }
        public static cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.ConnectFCTargetAck parseFrom(
                byte[] data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }
        public static cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.ConnectFCTargetAck parseFrom(java.io.InputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input);
        }
        public static cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.ConnectFCTargetAck parseFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input, extensionRegistry);
        }
        public static cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.ConnectFCTargetAck parseDelimitedFrom(java.io.InputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseDelimitedWithIOException(PARSER, input);
        }
        public static cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.ConnectFCTargetAck parseDelimitedFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
        }
        public static cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.ConnectFCTargetAck parseFrom(
                com.google.protobuf.CodedInputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input);
        }
        public static cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.ConnectFCTargetAck parseFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input, extensionRegistry);
        }

        public Builder newBuilderForType() { return newBuilder(); }
        public static Builder newBuilder() {
            return DEFAULT_INSTANCE.toBuilder();
        }
        public static Builder newBuilder(cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.ConnectFCTargetAck prototype) {
            return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }
        public Builder toBuilder() {
            return this == DEFAULT_INSTANCE
                    ? new Builder() : new Builder().mergeFrom(this);
        }

        @Override
        protected Builder newBuilderForType(
                BuilderParent parent) {
            Builder builder = new Builder(parent);
            return builder;
        }
        /**
         * <pre>
         *连接FC目标ACK
         * </pre>
         *
         * Protobuf type {@code one2data.rbtmqmsgcli.client.ConnectFCTargetAck}
         */
        public static final class Builder extends
                com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
                // @@protoc_insertion_point(builder_implements:one2data.rbtmqmsgcli.client.ConnectFCTargetAck)
                cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.ConnectFCTargetAckOrBuilder {
            public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
                return cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.internal_static_one2data_rbtmqmsgcli_client_ConnectFCTargetAck_descriptor;
            }

            protected FieldAccessorTable
            internalGetFieldAccessorTable() {
                return cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.internal_static_one2data_rbtmqmsgcli_client_ConnectFCTargetAck_fieldAccessorTable
                        .ensureFieldAccessorsInitialized(
                                cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.ConnectFCTargetAck.class, cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.ConnectFCTargetAck.Builder.class);
            }

            // Construct using cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.ConnectFCTargetAck.newBuilder()
            private Builder() {
                maybeForceBuilderInitialization();
            }

            private Builder(
                    BuilderParent parent) {
                super(parent);
                maybeForceBuilderInitialization();
            }
            private void maybeForceBuilderInitialization() {
                if (com.google.protobuf.GeneratedMessageV3
                        .alwaysUseFieldBuilders) {
                }
            }
            public Builder clear() {
                super.clear();
                if (baseAckBuilder_ == null) {
                    baseAck_ = null;
                } else {
                    baseAck_ = null;
                    baseAckBuilder_ = null;
                }
                deviceUuidKey_ = "";

                return this;
            }

            public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
                return cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.internal_static_one2data_rbtmqmsgcli_client_ConnectFCTargetAck_descriptor;
            }

            public cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.ConnectFCTargetAck getDefaultInstanceForType() {
                return cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.ConnectFCTargetAck.getDefaultInstance();
            }

            public cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.ConnectFCTargetAck build() {
                cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.ConnectFCTargetAck result = buildPartial();
                if (!result.isInitialized()) {
                    throw newUninitializedMessageException(result);
                }
                return result;
            }

            public cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.ConnectFCTargetAck buildPartial() {
                cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.ConnectFCTargetAck result = new cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.ConnectFCTargetAck(this);
                if (baseAckBuilder_ == null) {
                    result.baseAck_ = baseAck_;
                } else {
                    result.baseAck_ = baseAckBuilder_.build();
                }
                result.deviceUuidKey_ = deviceUuidKey_;
                onBuilt();
                return result;
            }

            public Builder clone() {
                return (Builder) super.clone();
            }
            public Builder setField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    Object value) {
                return (Builder) super.setField(field, value);
            }
            public Builder clearField(
                    com.google.protobuf.Descriptors.FieldDescriptor field) {
                return (Builder) super.clearField(field);
            }
            public Builder clearOneof(
                    com.google.protobuf.Descriptors.OneofDescriptor oneof) {
                return (Builder) super.clearOneof(oneof);
            }
            public Builder setRepeatedField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    int index, Object value) {
                return (Builder) super.setRepeatedField(field, index, value);
            }
            public Builder addRepeatedField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    Object value) {
                return (Builder) super.addRepeatedField(field, value);
            }
            public Builder mergeFrom(com.google.protobuf.Message other) {
                if (other instanceof cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.ConnectFCTargetAck) {
                    return mergeFrom((cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.ConnectFCTargetAck)other);
                } else {
                    super.mergeFrom(other);
                    return this;
                }
            }

            public Builder mergeFrom(cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.ConnectFCTargetAck other) {
                if (other == cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.ConnectFCTargetAck.getDefaultInstance()) return this;
                if (other.hasBaseAck()) {
                    mergeBaseAck(other.getBaseAck());
                }
                if (!other.getDeviceUuidKey().isEmpty()) {
                    deviceUuidKey_ = other.deviceUuidKey_;
                    onChanged();
                }
                onChanged();
                return this;
            }

            public final boolean isInitialized() {
                return true;
            }

            public Builder mergeFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws java.io.IOException {
                cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.ConnectFCTargetAck parsedMessage = null;
                try {
                    parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
                } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                    parsedMessage = (cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.ConnectFCTargetAck) e.getUnfinishedMessage();
                    throw e.unwrapIOException();
                } finally {
                    if (parsedMessage != null) {
                        mergeFrom(parsedMessage);
                    }
                }
                return this;
            }

            private cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck baseAck_ = null;
            private com.google.protobuf.SingleFieldBuilderV3<
                    cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck, cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck.Builder, cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAckOrBuilder> baseAckBuilder_;
            /**
             * <code>optional .one2data.rbtmqmsgcli.common.BaseAck base_ack = 1;</code>
             */
            public boolean hasBaseAck() {
                return baseAckBuilder_ != null || baseAck_ != null;
            }
            /**
             * <code>optional .one2data.rbtmqmsgcli.common.BaseAck base_ack = 1;</code>
             */
            public cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck getBaseAck() {
                if (baseAckBuilder_ == null) {
                    return baseAck_ == null ? cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck.getDefaultInstance() : baseAck_;
                } else {
                    return baseAckBuilder_.getMessage();
                }
            }
            /**
             * <code>optional .one2data.rbtmqmsgcli.common.BaseAck base_ack = 1;</code>
             */
            public Builder setBaseAck(cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck value) {
                if (baseAckBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    baseAck_ = value;
                    onChanged();
                } else {
                    baseAckBuilder_.setMessage(value);
                }

                return this;
            }
            /**
             * <code>optional .one2data.rbtmqmsgcli.common.BaseAck base_ack = 1;</code>
             */
            public Builder setBaseAck(
                    cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck.Builder builderForValue) {
                if (baseAckBuilder_ == null) {
                    baseAck_ = builderForValue.build();
                    onChanged();
                } else {
                    baseAckBuilder_.setMessage(builderForValue.build());
                }

                return this;
            }
            /**
             * <code>optional .one2data.rbtmqmsgcli.common.BaseAck base_ack = 1;</code>
             */
            public Builder mergeBaseAck(cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck value) {
                if (baseAckBuilder_ == null) {
                    if (baseAck_ != null) {
                        baseAck_ =
                                cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck.newBuilder(baseAck_).mergeFrom(value).buildPartial();
                    } else {
                        baseAck_ = value;
                    }
                    onChanged();
                } else {
                    baseAckBuilder_.mergeFrom(value);
                }

                return this;
            }
            /**
             * <code>optional .one2data.rbtmqmsgcli.common.BaseAck base_ack = 1;</code>
             */
            public Builder clearBaseAck() {
                if (baseAckBuilder_ == null) {
                    baseAck_ = null;
                    onChanged();
                } else {
                    baseAck_ = null;
                    baseAckBuilder_ = null;
                }

                return this;
            }
            /**
             * <code>optional .one2data.rbtmqmsgcli.common.BaseAck base_ack = 1;</code>
             */
            public cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck.Builder getBaseAckBuilder() {

                onChanged();
                return getBaseAckFieldBuilder().getBuilder();
            }
            /**
             * <code>optional .one2data.rbtmqmsgcli.common.BaseAck base_ack = 1;</code>
             */
            public cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAckOrBuilder getBaseAckOrBuilder() {
                if (baseAckBuilder_ != null) {
                    return baseAckBuilder_.getMessageOrBuilder();
                } else {
                    return baseAck_ == null ?
                            cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck.getDefaultInstance() : baseAck_;
                }
            }
            /**
             * <code>optional .one2data.rbtmqmsgcli.common.BaseAck base_ack = 1;</code>
             */
            private com.google.protobuf.SingleFieldBuilderV3<
                    cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck, cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck.Builder, cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAckOrBuilder>
            getBaseAckFieldBuilder() {
                if (baseAckBuilder_ == null) {
                    baseAckBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                            cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck, cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck.Builder, cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAckOrBuilder>(
                            getBaseAck(),
                            getParentForChildren(),
                            isClean());
                    baseAck_ = null;
                }
                return baseAckBuilder_;
            }

            private Object deviceUuidKey_ = "";
            /**
             * <code>optional string device_uuid_key = 2;</code>
             */
            public String getDeviceUuidKey() {
                Object ref = deviceUuidKey_;
                if (!(ref instanceof String)) {
                    com.google.protobuf.ByteString bs =
                            (com.google.protobuf.ByteString) ref;
                    String s = bs.toStringUtf8();
                    deviceUuidKey_ = s;
                    return s;
                } else {
                    return (String) ref;
                }
            }
            /**
             * <code>optional string device_uuid_key = 2;</code>
             */
            public com.google.protobuf.ByteString
            getDeviceUuidKeyBytes() {
                Object ref = deviceUuidKey_;
                if (ref instanceof String) {
                    com.google.protobuf.ByteString b =
                            com.google.protobuf.ByteString.copyFromUtf8(
                                    (String) ref);
                    deviceUuidKey_ = b;
                    return b;
                } else {
                    return (com.google.protobuf.ByteString) ref;
                }
            }
            /**
             * <code>optional string device_uuid_key = 2;</code>
             */
            public Builder setDeviceUuidKey(
                    String value) {
                if (value == null) {
                    throw new NullPointerException();
                }

                deviceUuidKey_ = value;
                onChanged();
                return this;
            }
            /**
             * <code>optional string device_uuid_key = 2;</code>
             */
            public Builder clearDeviceUuidKey() {

                deviceUuidKey_ = getDefaultInstance().getDeviceUuidKey();
                onChanged();
                return this;
            }
            /**
             * <code>optional string device_uuid_key = 2;</code>
             */
            public Builder setDeviceUuidKeyBytes(
                    com.google.protobuf.ByteString value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                checkByteStringIsUtf8(value);

                deviceUuidKey_ = value;
                onChanged();
                return this;
            }
            public final Builder setUnknownFields(
                    final com.google.protobuf.UnknownFieldSet unknownFields) {
                return this;
            }

            public final Builder mergeUnknownFields(
                    final com.google.protobuf.UnknownFieldSet unknownFields) {
                return this;
            }


            // @@protoc_insertion_point(builder_scope:one2data.rbtmqmsgcli.client.ConnectFCTargetAck)
        }

        // @@protoc_insertion_point(class_scope:one2data.rbtmqmsgcli.client.ConnectFCTargetAck)
        private static final cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.ConnectFCTargetAck DEFAULT_INSTANCE;
        static {
            DEFAULT_INSTANCE = new cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.ConnectFCTargetAck();
        }

        public static cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.ConnectFCTargetAck getDefaultInstance() {
            return DEFAULT_INSTANCE;
        }

        private static final com.google.protobuf.Parser<ConnectFCTargetAck>
                PARSER = new com.google.protobuf.AbstractParser<ConnectFCTargetAck>() {
            public ConnectFCTargetAck parsePartialFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws com.google.protobuf.InvalidProtocolBufferException {
                return new ConnectFCTargetAck(input, extensionRegistry);
            }
        };

        public static com.google.protobuf.Parser<ConnectFCTargetAck> parser() {
            return PARSER;
        }

        @Override
        public com.google.protobuf.Parser<ConnectFCTargetAck> getParserForType() {
            return PARSER;
        }

        public cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.ConnectFCTargetAck getDefaultInstanceForType() {
            return DEFAULT_INSTANCE;
        }

    }

    public interface DisconnectFCTargetOrBuilder extends
            // @@protoc_insertion_point(interface_extends:one2data.rbtmqmsgcli.client.DisconnectFCTarget)
            com.google.protobuf.MessageOrBuilder {
    }
    /**
     * <pre>
     *断开与FC目标的连接
     * </pre>
     *
     * Protobuf type {@code one2data.rbtmqmsgcli.client.DisconnectFCTarget}
     */
    public  static final class DisconnectFCTarget extends
            com.google.protobuf.GeneratedMessageV3 implements
            // @@protoc_insertion_point(message_implements:one2data.rbtmqmsgcli.client.DisconnectFCTarget)
            DisconnectFCTargetOrBuilder {
        // Use DisconnectFCTarget.newBuilder() to construct.
        private DisconnectFCTarget(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
            super(builder);
        }
        private DisconnectFCTarget() {
        }

        @Override
        public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
            return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
        }
        private DisconnectFCTarget(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            this();
            try {
                boolean done = false;
                while (!done) {
                    int tag = input.readTag();
                    switch (tag) {
                        case 0:
                            done = true;
                            break;
                        default: {
                            if (!input.skipField(tag)) {
                                done = true;
                            }
                            break;
                        }
                    }
                }
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(this);
            } catch (java.io.IOException e) {
                throw new com.google.protobuf.InvalidProtocolBufferException(
                        e).setUnfinishedMessage(this);
            } finally {
                makeExtensionsImmutable();
            }
        }
        public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
            return cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.internal_static_one2data_rbtmqmsgcli_client_DisconnectFCTarget_descriptor;
        }

        protected FieldAccessorTable
        internalGetFieldAccessorTable() {
            return cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.internal_static_one2data_rbtmqmsgcli_client_DisconnectFCTarget_fieldAccessorTable
                    .ensureFieldAccessorsInitialized(
                            cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.DisconnectFCTarget.class, cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.DisconnectFCTarget.Builder.class);
        }

        private byte memoizedIsInitialized = -1;
        public final boolean isInitialized() {
            byte isInitialized = memoizedIsInitialized;
            if (isInitialized == 1) return true;
            if (isInitialized == 0) return false;

            memoizedIsInitialized = 1;
            return true;
        }

        public void writeTo(com.google.protobuf.CodedOutputStream output)
                throws java.io.IOException {
        }

        public int getSerializedSize() {
            int size = memoizedSize;
            if (size != -1) return size;

            size = 0;
            memoizedSize = size;
            return size;
        }

        private static final long serialVersionUID = 0L;
        @Override
        public boolean equals(final Object obj) {
            if (obj == this) {
                return true;
            }
            if (!(obj instanceof cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.DisconnectFCTarget)) {
                return super.equals(obj);
            }
            cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.DisconnectFCTarget other = (cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.DisconnectFCTarget) obj;

            boolean result = true;
            return result;
        }

        @Override
        public int hashCode() {
            if (memoizedHashCode != 0) {
                return memoizedHashCode;
            }
            int hash = 41;
            hash = (19 * hash) + getDescriptorForType().hashCode();
            hash = (29 * hash) + unknownFields.hashCode();
            memoizedHashCode = hash;
            return hash;
        }

        public static cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.DisconnectFCTarget parseFrom(
                com.google.protobuf.ByteString data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }
        public static cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.DisconnectFCTarget parseFrom(
                com.google.protobuf.ByteString data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }
        public static cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.DisconnectFCTarget parseFrom(byte[] data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }
        public static cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.DisconnectFCTarget parseFrom(
                byte[] data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }
        public static cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.DisconnectFCTarget parseFrom(java.io.InputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input);
        }
        public static cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.DisconnectFCTarget parseFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input, extensionRegistry);
        }
        public static cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.DisconnectFCTarget parseDelimitedFrom(java.io.InputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseDelimitedWithIOException(PARSER, input);
        }
        public static cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.DisconnectFCTarget parseDelimitedFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
        }
        public static cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.DisconnectFCTarget parseFrom(
                com.google.protobuf.CodedInputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input);
        }
        public static cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.DisconnectFCTarget parseFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input, extensionRegistry);
        }

        public Builder newBuilderForType() { return newBuilder(); }
        public static Builder newBuilder() {
            return DEFAULT_INSTANCE.toBuilder();
        }
        public static Builder newBuilder(cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.DisconnectFCTarget prototype) {
            return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }
        public Builder toBuilder() {
            return this == DEFAULT_INSTANCE
                    ? new Builder() : new Builder().mergeFrom(this);
        }

        @Override
        protected Builder newBuilderForType(
                BuilderParent parent) {
            Builder builder = new Builder(parent);
            return builder;
        }
        /**
         * <pre>
         *断开与FC目标的连接
         * </pre>
         *
         * Protobuf type {@code one2data.rbtmqmsgcli.client.DisconnectFCTarget}
         */
        public static final class Builder extends
                com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
                // @@protoc_insertion_point(builder_implements:one2data.rbtmqmsgcli.client.DisconnectFCTarget)
                cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.DisconnectFCTargetOrBuilder {
            public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
                return cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.internal_static_one2data_rbtmqmsgcli_client_DisconnectFCTarget_descriptor;
            }

            protected FieldAccessorTable
            internalGetFieldAccessorTable() {
                return cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.internal_static_one2data_rbtmqmsgcli_client_DisconnectFCTarget_fieldAccessorTable
                        .ensureFieldAccessorsInitialized(
                                cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.DisconnectFCTarget.class, cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.DisconnectFCTarget.Builder.class);
            }

            // Construct using cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.DisconnectFCTarget.newBuilder()
            private Builder() {
                maybeForceBuilderInitialization();
            }

            private Builder(
                    BuilderParent parent) {
                super(parent);
                maybeForceBuilderInitialization();
            }
            private void maybeForceBuilderInitialization() {
                if (com.google.protobuf.GeneratedMessageV3
                        .alwaysUseFieldBuilders) {
                }
            }
            public Builder clear() {
                super.clear();
                return this;
            }

            public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
                return cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.internal_static_one2data_rbtmqmsgcli_client_DisconnectFCTarget_descriptor;
            }

            public cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.DisconnectFCTarget getDefaultInstanceForType() {
                return cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.DisconnectFCTarget.getDefaultInstance();
            }

            public cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.DisconnectFCTarget build() {
                cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.DisconnectFCTarget result = buildPartial();
                if (!result.isInitialized()) {
                    throw newUninitializedMessageException(result);
                }
                return result;
            }

            public cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.DisconnectFCTarget buildPartial() {
                cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.DisconnectFCTarget result = new cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.DisconnectFCTarget(this);
                onBuilt();
                return result;
            }

            public Builder clone() {
                return (Builder) super.clone();
            }
            public Builder setField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    Object value) {
                return (Builder) super.setField(field, value);
            }
            public Builder clearField(
                    com.google.protobuf.Descriptors.FieldDescriptor field) {
                return (Builder) super.clearField(field);
            }
            public Builder clearOneof(
                    com.google.protobuf.Descriptors.OneofDescriptor oneof) {
                return (Builder) super.clearOneof(oneof);
            }
            public Builder setRepeatedField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    int index, Object value) {
                return (Builder) super.setRepeatedField(field, index, value);
            }
            public Builder addRepeatedField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    Object value) {
                return (Builder) super.addRepeatedField(field, value);
            }
            public Builder mergeFrom(com.google.protobuf.Message other) {
                if (other instanceof cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.DisconnectFCTarget) {
                    return mergeFrom((cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.DisconnectFCTarget)other);
                } else {
                    super.mergeFrom(other);
                    return this;
                }
            }

            public Builder mergeFrom(cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.DisconnectFCTarget other) {
                if (other == cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.DisconnectFCTarget.getDefaultInstance()) return this;
                onChanged();
                return this;
            }

            public final boolean isInitialized() {
                return true;
            }

            public Builder mergeFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws java.io.IOException {
                cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.DisconnectFCTarget parsedMessage = null;
                try {
                    parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
                } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                    parsedMessage = (cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.DisconnectFCTarget) e.getUnfinishedMessage();
                    throw e.unwrapIOException();
                } finally {
                    if (parsedMessage != null) {
                        mergeFrom(parsedMessage);
                    }
                }
                return this;
            }
            public final Builder setUnknownFields(
                    final com.google.protobuf.UnknownFieldSet unknownFields) {
                return this;
            }

            public final Builder mergeUnknownFields(
                    final com.google.protobuf.UnknownFieldSet unknownFields) {
                return this;
            }


            // @@protoc_insertion_point(builder_scope:one2data.rbtmqmsgcli.client.DisconnectFCTarget)
        }

        // @@protoc_insertion_point(class_scope:one2data.rbtmqmsgcli.client.DisconnectFCTarget)
        private static final cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.DisconnectFCTarget DEFAULT_INSTANCE;
        static {
            DEFAULT_INSTANCE = new cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.DisconnectFCTarget();
        }

        public static cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.DisconnectFCTarget getDefaultInstance() {
            return DEFAULT_INSTANCE;
        }

        private static final com.google.protobuf.Parser<DisconnectFCTarget>
                PARSER = new com.google.protobuf.AbstractParser<DisconnectFCTarget>() {
            public DisconnectFCTarget parsePartialFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws com.google.protobuf.InvalidProtocolBufferException {
                return new DisconnectFCTarget(input, extensionRegistry);
            }
        };

        public static com.google.protobuf.Parser<DisconnectFCTarget> parser() {
            return PARSER;
        }

        @Override
        public com.google.protobuf.Parser<DisconnectFCTarget> getParserForType() {
            return PARSER;
        }

        public cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.DisconnectFCTarget getDefaultInstanceForType() {
            return DEFAULT_INSTANCE;
        }

    }

    public interface MountIssiTargetOrBuilder extends
            // @@protoc_insertion_point(interface_extends:one2data.rbtmqmsgcli.client.MountIssiTarget)
            com.google.protobuf.MessageOrBuilder {

        /**
         * <code>optional string target_ip = 1;</code>
         */
        String getTargetIp();
        /**
         * <code>optional string target_ip = 1;</code>
         */
        com.google.protobuf.ByteString
        getTargetIpBytes();

        /**
         * <code>optional uint32 target_port = 2;</code>
         */
        int getTargetPort();

        /**
         * <code>optional string target_name = 3;</code>
         */
        String getTargetName();
        /**
         * <code>optional string target_name = 3;</code>
         */
        com.google.protobuf.ByteString
        getTargetNameBytes();
    }
    /**
     * Protobuf type {@code one2data.rbtmqmsgcli.client.MountIssiTarget}
     */
    public  static final class MountIssiTarget extends
            com.google.protobuf.GeneratedMessageV3 implements
            // @@protoc_insertion_point(message_implements:one2data.rbtmqmsgcli.client.MountIssiTarget)
            MountIssiTargetOrBuilder {
        // Use MountIssiTarget.newBuilder() to construct.
        private MountIssiTarget(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
            super(builder);
        }
        private MountIssiTarget() {
            targetIp_ = "";
            targetPort_ = 0;
            targetName_ = "";
        }

        @Override
        public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
            return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
        }
        private MountIssiTarget(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            this();
            int mutable_bitField0_ = 0;
            try {
                boolean done = false;
                while (!done) {
                    int tag = input.readTag();
                    switch (tag) {
                        case 0:
                            done = true;
                            break;
                        default: {
                            if (!input.skipField(tag)) {
                                done = true;
                            }
                            break;
                        }
                        case 10: {
                            String s = input.readStringRequireUtf8();

                            targetIp_ = s;
                            break;
                        }
                        case 16: {

                            targetPort_ = input.readUInt32();
                            break;
                        }
                        case 26: {
                            String s = input.readStringRequireUtf8();

                            targetName_ = s;
                            break;
                        }
                    }
                }
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(this);
            } catch (java.io.IOException e) {
                throw new com.google.protobuf.InvalidProtocolBufferException(
                        e).setUnfinishedMessage(this);
            } finally {
                makeExtensionsImmutable();
            }
        }
        public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
            return cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.internal_static_one2data_rbtmqmsgcli_client_MountIssiTarget_descriptor;
        }

        protected FieldAccessorTable
        internalGetFieldAccessorTable() {
            return cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.internal_static_one2data_rbtmqmsgcli_client_MountIssiTarget_fieldAccessorTable
                    .ensureFieldAccessorsInitialized(
                            cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.MountIssiTarget.class, cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.MountIssiTarget.Builder.class);
        }

        public static final int TARGET_IP_FIELD_NUMBER = 1;
        private volatile Object targetIp_;
        /**
         * <code>optional string target_ip = 1;</code>
         */
        public String getTargetIp() {
            Object ref = targetIp_;
            if (ref instanceof String) {
                return (String) ref;
            } else {
                com.google.protobuf.ByteString bs =
                        (com.google.protobuf.ByteString) ref;
                String s = bs.toStringUtf8();
                targetIp_ = s;
                return s;
            }
        }
        /**
         * <code>optional string target_ip = 1;</code>
         */
        public com.google.protobuf.ByteString
        getTargetIpBytes() {
            Object ref = targetIp_;
            if (ref instanceof String) {
                com.google.protobuf.ByteString b =
                        com.google.protobuf.ByteString.copyFromUtf8(
                                (String) ref);
                targetIp_ = b;
                return b;
            } else {
                return (com.google.protobuf.ByteString) ref;
            }
        }

        public static final int TARGET_PORT_FIELD_NUMBER = 2;
        private int targetPort_;
        /**
         * <code>optional uint32 target_port = 2;</code>
         */
        public int getTargetPort() {
            return targetPort_;
        }

        public static final int TARGET_NAME_FIELD_NUMBER = 3;
        private volatile Object targetName_;
        /**
         * <code>optional string target_name = 3;</code>
         */
        public String getTargetName() {
            Object ref = targetName_;
            if (ref instanceof String) {
                return (String) ref;
            } else {
                com.google.protobuf.ByteString bs =
                        (com.google.protobuf.ByteString) ref;
                String s = bs.toStringUtf8();
                targetName_ = s;
                return s;
            }
        }
        /**
         * <code>optional string target_name = 3;</code>
         */
        public com.google.protobuf.ByteString
        getTargetNameBytes() {
            Object ref = targetName_;
            if (ref instanceof String) {
                com.google.protobuf.ByteString b =
                        com.google.protobuf.ByteString.copyFromUtf8(
                                (String) ref);
                targetName_ = b;
                return b;
            } else {
                return (com.google.protobuf.ByteString) ref;
            }
        }

        private byte memoizedIsInitialized = -1;
        public final boolean isInitialized() {
            byte isInitialized = memoizedIsInitialized;
            if (isInitialized == 1) return true;
            if (isInitialized == 0) return false;

            memoizedIsInitialized = 1;
            return true;
        }

        public void writeTo(com.google.protobuf.CodedOutputStream output)
                throws java.io.IOException {
            if (!getTargetIpBytes().isEmpty()) {
                com.google.protobuf.GeneratedMessageV3.writeString(output, 1, targetIp_);
            }
            if (targetPort_ != 0) {
                output.writeUInt32(2, targetPort_);
            }
            if (!getTargetNameBytes().isEmpty()) {
                com.google.protobuf.GeneratedMessageV3.writeString(output, 3, targetName_);
            }
        }

        public int getSerializedSize() {
            int size = memoizedSize;
            if (size != -1) return size;

            size = 0;
            if (!getTargetIpBytes().isEmpty()) {
                size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, targetIp_);
            }
            if (targetPort_ != 0) {
                size += com.google.protobuf.CodedOutputStream
                        .computeUInt32Size(2, targetPort_);
            }
            if (!getTargetNameBytes().isEmpty()) {
                size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, targetName_);
            }
            memoizedSize = size;
            return size;
        }

        private static final long serialVersionUID = 0L;
        @Override
        public boolean equals(final Object obj) {
            if (obj == this) {
                return true;
            }
            if (!(obj instanceof cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.MountIssiTarget)) {
                return super.equals(obj);
            }
            cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.MountIssiTarget other = (cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.MountIssiTarget) obj;

            boolean result = true;
            result = result && getTargetIp()
                    .equals(other.getTargetIp());
            result = result && (getTargetPort()
                    == other.getTargetPort());
            result = result && getTargetName()
                    .equals(other.getTargetName());
            return result;
        }

        @Override
        public int hashCode() {
            if (memoizedHashCode != 0) {
                return memoizedHashCode;
            }
            int hash = 41;
            hash = (19 * hash) + getDescriptorForType().hashCode();
            hash = (37 * hash) + TARGET_IP_FIELD_NUMBER;
            hash = (53 * hash) + getTargetIp().hashCode();
            hash = (37 * hash) + TARGET_PORT_FIELD_NUMBER;
            hash = (53 * hash) + getTargetPort();
            hash = (37 * hash) + TARGET_NAME_FIELD_NUMBER;
            hash = (53 * hash) + getTargetName().hashCode();
            hash = (29 * hash) + unknownFields.hashCode();
            memoizedHashCode = hash;
            return hash;
        }

        public static cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.MountIssiTarget parseFrom(
                com.google.protobuf.ByteString data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }
        public static cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.MountIssiTarget parseFrom(
                com.google.protobuf.ByteString data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }
        public static cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.MountIssiTarget parseFrom(byte[] data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }
        public static cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.MountIssiTarget parseFrom(
                byte[] data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }
        public static cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.MountIssiTarget parseFrom(java.io.InputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input);
        }
        public static cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.MountIssiTarget parseFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input, extensionRegistry);
        }
        public static cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.MountIssiTarget parseDelimitedFrom(java.io.InputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseDelimitedWithIOException(PARSER, input);
        }
        public static cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.MountIssiTarget parseDelimitedFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
        }
        public static cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.MountIssiTarget parseFrom(
                com.google.protobuf.CodedInputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input);
        }
        public static cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.MountIssiTarget parseFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input, extensionRegistry);
        }

        public Builder newBuilderForType() { return newBuilder(); }
        public static Builder newBuilder() {
            return DEFAULT_INSTANCE.toBuilder();
        }
        public static Builder newBuilder(cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.MountIssiTarget prototype) {
            return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }
        public Builder toBuilder() {
            return this == DEFAULT_INSTANCE
                    ? new Builder() : new Builder().mergeFrom(this);
        }

        @Override
        protected Builder newBuilderForType(
                BuilderParent parent) {
            Builder builder = new Builder(parent);
            return builder;
        }
        /**
         * Protobuf type {@code one2data.rbtmqmsgcli.client.MountIssiTarget}
         */
        public static final class Builder extends
                com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
                // @@protoc_insertion_point(builder_implements:one2data.rbtmqmsgcli.client.MountIssiTarget)
                cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.MountIssiTargetOrBuilder {
            public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
                return cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.internal_static_one2data_rbtmqmsgcli_client_MountIssiTarget_descriptor;
            }

            protected FieldAccessorTable
            internalGetFieldAccessorTable() {
                return cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.internal_static_one2data_rbtmqmsgcli_client_MountIssiTarget_fieldAccessorTable
                        .ensureFieldAccessorsInitialized(
                                cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.MountIssiTarget.class, cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.MountIssiTarget.Builder.class);
            }

            // Construct using cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.MountIssiTarget.newBuilder()
            private Builder() {
                maybeForceBuilderInitialization();
            }

            private Builder(
                    BuilderParent parent) {
                super(parent);
                maybeForceBuilderInitialization();
            }
            private void maybeForceBuilderInitialization() {
                if (com.google.protobuf.GeneratedMessageV3
                        .alwaysUseFieldBuilders) {
                }
            }
            public Builder clear() {
                super.clear();
                targetIp_ = "";

                targetPort_ = 0;

                targetName_ = "";

                return this;
            }

            public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
                return cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.internal_static_one2data_rbtmqmsgcli_client_MountIssiTarget_descriptor;
            }

            public cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.MountIssiTarget getDefaultInstanceForType() {
                return cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.MountIssiTarget.getDefaultInstance();
            }

            public cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.MountIssiTarget build() {
                cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.MountIssiTarget result = buildPartial();
                if (!result.isInitialized()) {
                    throw newUninitializedMessageException(result);
                }
                return result;
            }

            public cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.MountIssiTarget buildPartial() {
                cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.MountIssiTarget result = new cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.MountIssiTarget(this);
                result.targetIp_ = targetIp_;
                result.targetPort_ = targetPort_;
                result.targetName_ = targetName_;
                onBuilt();
                return result;
            }

            public Builder clone() {
                return (Builder) super.clone();
            }
            public Builder setField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    Object value) {
                return (Builder) super.setField(field, value);
            }
            public Builder clearField(
                    com.google.protobuf.Descriptors.FieldDescriptor field) {
                return (Builder) super.clearField(field);
            }
            public Builder clearOneof(
                    com.google.protobuf.Descriptors.OneofDescriptor oneof) {
                return (Builder) super.clearOneof(oneof);
            }
            public Builder setRepeatedField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    int index, Object value) {
                return (Builder) super.setRepeatedField(field, index, value);
            }
            public Builder addRepeatedField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    Object value) {
                return (Builder) super.addRepeatedField(field, value);
            }
            public Builder mergeFrom(com.google.protobuf.Message other) {
                if (other instanceof cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.MountIssiTarget) {
                    return mergeFrom((cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.MountIssiTarget)other);
                } else {
                    super.mergeFrom(other);
                    return this;
                }
            }

            public Builder mergeFrom(cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.MountIssiTarget other) {
                if (other == cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.MountIssiTarget.getDefaultInstance()) return this;
                if (!other.getTargetIp().isEmpty()) {
                    targetIp_ = other.targetIp_;
                    onChanged();
                }
                if (other.getTargetPort() != 0) {
                    setTargetPort(other.getTargetPort());
                }
                if (!other.getTargetName().isEmpty()) {
                    targetName_ = other.targetName_;
                    onChanged();
                }
                onChanged();
                return this;
            }

            public final boolean isInitialized() {
                return true;
            }

            public Builder mergeFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws java.io.IOException {
                cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.MountIssiTarget parsedMessage = null;
                try {
                    parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
                } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                    parsedMessage = (cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.MountIssiTarget) e.getUnfinishedMessage();
                    throw e.unwrapIOException();
                } finally {
                    if (parsedMessage != null) {
                        mergeFrom(parsedMessage);
                    }
                }
                return this;
            }

            private Object targetIp_ = "";
            /**
             * <code>optional string target_ip = 1;</code>
             */
            public String getTargetIp() {
                Object ref = targetIp_;
                if (!(ref instanceof String)) {
                    com.google.protobuf.ByteString bs =
                            (com.google.protobuf.ByteString) ref;
                    String s = bs.toStringUtf8();
                    targetIp_ = s;
                    return s;
                } else {
                    return (String) ref;
                }
            }
            /**
             * <code>optional string target_ip = 1;</code>
             */
            public com.google.protobuf.ByteString
            getTargetIpBytes() {
                Object ref = targetIp_;
                if (ref instanceof String) {
                    com.google.protobuf.ByteString b =
                            com.google.protobuf.ByteString.copyFromUtf8(
                                    (String) ref);
                    targetIp_ = b;
                    return b;
                } else {
                    return (com.google.protobuf.ByteString) ref;
                }
            }
            /**
             * <code>optional string target_ip = 1;</code>
             */
            public Builder setTargetIp(
                    String value) {
                if (value == null) {
                    throw new NullPointerException();
                }

                targetIp_ = value;
                onChanged();
                return this;
            }
            /**
             * <code>optional string target_ip = 1;</code>
             */
            public Builder clearTargetIp() {

                targetIp_ = getDefaultInstance().getTargetIp();
                onChanged();
                return this;
            }
            /**
             * <code>optional string target_ip = 1;</code>
             */
            public Builder setTargetIpBytes(
                    com.google.protobuf.ByteString value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                checkByteStringIsUtf8(value);

                targetIp_ = value;
                onChanged();
                return this;
            }

            private int targetPort_ ;
            /**
             * <code>optional uint32 target_port = 2;</code>
             */
            public int getTargetPort() {
                return targetPort_;
            }
            /**
             * <code>optional uint32 target_port = 2;</code>
             */
            public Builder setTargetPort(int value) {

                targetPort_ = value;
                onChanged();
                return this;
            }
            /**
             * <code>optional uint32 target_port = 2;</code>
             */
            public Builder clearTargetPort() {

                targetPort_ = 0;
                onChanged();
                return this;
            }

            private Object targetName_ = "";
            /**
             * <code>optional string target_name = 3;</code>
             */
            public String getTargetName() {
                Object ref = targetName_;
                if (!(ref instanceof String)) {
                    com.google.protobuf.ByteString bs =
                            (com.google.protobuf.ByteString) ref;
                    String s = bs.toStringUtf8();
                    targetName_ = s;
                    return s;
                } else {
                    return (String) ref;
                }
            }
            /**
             * <code>optional string target_name = 3;</code>
             */
            public com.google.protobuf.ByteString
            getTargetNameBytes() {
                Object ref = targetName_;
                if (ref instanceof String) {
                    com.google.protobuf.ByteString b =
                            com.google.protobuf.ByteString.copyFromUtf8(
                                    (String) ref);
                    targetName_ = b;
                    return b;
                } else {
                    return (com.google.protobuf.ByteString) ref;
                }
            }
            /**
             * <code>optional string target_name = 3;</code>
             */
            public Builder setTargetName(
                    String value) {
                if (value == null) {
                    throw new NullPointerException();
                }

                targetName_ = value;
                onChanged();
                return this;
            }
            /**
             * <code>optional string target_name = 3;</code>
             */
            public Builder clearTargetName() {

                targetName_ = getDefaultInstance().getTargetName();
                onChanged();
                return this;
            }
            /**
             * <code>optional string target_name = 3;</code>
             */
            public Builder setTargetNameBytes(
                    com.google.protobuf.ByteString value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                checkByteStringIsUtf8(value);

                targetName_ = value;
                onChanged();
                return this;
            }
            public final Builder setUnknownFields(
                    final com.google.protobuf.UnknownFieldSet unknownFields) {
                return this;
            }

            public final Builder mergeUnknownFields(
                    final com.google.protobuf.UnknownFieldSet unknownFields) {
                return this;
            }


            // @@protoc_insertion_point(builder_scope:one2data.rbtmqmsgcli.client.MountIssiTarget)
        }

        // @@protoc_insertion_point(class_scope:one2data.rbtmqmsgcli.client.MountIssiTarget)
        private static final cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.MountIssiTarget DEFAULT_INSTANCE;
        static {
            DEFAULT_INSTANCE = new cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.MountIssiTarget();
        }

        public static cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.MountIssiTarget getDefaultInstance() {
            return DEFAULT_INSTANCE;
        }

        private static final com.google.protobuf.Parser<MountIssiTarget>
                PARSER = new com.google.protobuf.AbstractParser<MountIssiTarget>() {
            public MountIssiTarget parsePartialFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws com.google.protobuf.InvalidProtocolBufferException {
                return new MountIssiTarget(input, extensionRegistry);
            }
        };

        public static com.google.protobuf.Parser<MountIssiTarget> parser() {
            return PARSER;
        }

        @Override
        public com.google.protobuf.Parser<MountIssiTarget> getParserForType() {
            return PARSER;
        }

        public cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.MountIssiTarget getDefaultInstanceForType() {
            return DEFAULT_INSTANCE;
        }

    }

    public interface MountIssiTargetAckOrBuilder extends
            // @@protoc_insertion_point(interface_extends:one2data.rbtmqmsgcli.client.MountIssiTargetAck)
            com.google.protobuf.MessageOrBuilder {

        /**
         * <code>optional .one2data.rbtmqmsgcli.common.BaseAck base_ack = 1;</code>
         */
        boolean hasBaseAck();
        /**
         * <code>optional .one2data.rbtmqmsgcli.common.BaseAck base_ack = 1;</code>
         */
        cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck getBaseAck();
        /**
         * <code>optional .one2data.rbtmqmsgcli.common.BaseAck base_ack = 1;</code>
         */
        cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAckOrBuilder getBaseAckOrBuilder();
    }
    /**
     * Protobuf type {@code one2data.rbtmqmsgcli.client.MountIssiTargetAck}
     */
    public  static final class MountIssiTargetAck extends
            com.google.protobuf.GeneratedMessageV3 implements
            // @@protoc_insertion_point(message_implements:one2data.rbtmqmsgcli.client.MountIssiTargetAck)
            MountIssiTargetAckOrBuilder {
        // Use MountIssiTargetAck.newBuilder() to construct.
        private MountIssiTargetAck(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
            super(builder);
        }
        private MountIssiTargetAck() {
        }

        @Override
        public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
            return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
        }
        private MountIssiTargetAck(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            this();
            int mutable_bitField0_ = 0;
            try {
                boolean done = false;
                while (!done) {
                    int tag = input.readTag();
                    switch (tag) {
                        case 0:
                            done = true;
                            break;
                        default: {
                            if (!input.skipField(tag)) {
                                done = true;
                            }
                            break;
                        }
                        case 10: {
                            cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck.Builder subBuilder = null;
                            if (baseAck_ != null) {
                                subBuilder = baseAck_.toBuilder();
                            }
                            baseAck_ = input.readMessage(cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck.parser(), extensionRegistry);
                            if (subBuilder != null) {
                                subBuilder.mergeFrom(baseAck_);
                                baseAck_ = subBuilder.buildPartial();
                            }

                            break;
                        }
                    }
                }
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(this);
            } catch (java.io.IOException e) {
                throw new com.google.protobuf.InvalidProtocolBufferException(
                        e).setUnfinishedMessage(this);
            } finally {
                makeExtensionsImmutable();
            }
        }
        public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
            return cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.internal_static_one2data_rbtmqmsgcli_client_MountIssiTargetAck_descriptor;
        }

        protected FieldAccessorTable
        internalGetFieldAccessorTable() {
            return cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.internal_static_one2data_rbtmqmsgcli_client_MountIssiTargetAck_fieldAccessorTable
                    .ensureFieldAccessorsInitialized(
                            cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.MountIssiTargetAck.class, cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.MountIssiTargetAck.Builder.class);
        }

        public static final int BASE_ACK_FIELD_NUMBER = 1;
        private cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck baseAck_;
        /**
         * <code>optional .one2data.rbtmqmsgcli.common.BaseAck base_ack = 1;</code>
         */
        public boolean hasBaseAck() {
            return baseAck_ != null;
        }
        /**
         * <code>optional .one2data.rbtmqmsgcli.common.BaseAck base_ack = 1;</code>
         */
        public cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck getBaseAck() {
            return baseAck_ == null ? cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck.getDefaultInstance() : baseAck_;
        }
        /**
         * <code>optional .one2data.rbtmqmsgcli.common.BaseAck base_ack = 1;</code>
         */
        public cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAckOrBuilder getBaseAckOrBuilder() {
            return getBaseAck();
        }

        private byte memoizedIsInitialized = -1;
        public final boolean isInitialized() {
            byte isInitialized = memoizedIsInitialized;
            if (isInitialized == 1) return true;
            if (isInitialized == 0) return false;

            memoizedIsInitialized = 1;
            return true;
        }

        public void writeTo(com.google.protobuf.CodedOutputStream output)
                throws java.io.IOException {
            if (baseAck_ != null) {
                output.writeMessage(1, getBaseAck());
            }
        }

        public int getSerializedSize() {
            int size = memoizedSize;
            if (size != -1) return size;

            size = 0;
            if (baseAck_ != null) {
                size += com.google.protobuf.CodedOutputStream
                        .computeMessageSize(1, getBaseAck());
            }
            memoizedSize = size;
            return size;
        }

        private static final long serialVersionUID = 0L;
        @Override
        public boolean equals(final Object obj) {
            if (obj == this) {
                return true;
            }
            if (!(obj instanceof cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.MountIssiTargetAck)) {
                return super.equals(obj);
            }
            cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.MountIssiTargetAck other = (cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.MountIssiTargetAck) obj;

            boolean result = true;
            result = result && (hasBaseAck() == other.hasBaseAck());
            if (hasBaseAck()) {
                result = result && getBaseAck()
                        .equals(other.getBaseAck());
            }
            return result;
        }

        @Override
        public int hashCode() {
            if (memoizedHashCode != 0) {
                return memoizedHashCode;
            }
            int hash = 41;
            hash = (19 * hash) + getDescriptorForType().hashCode();
            if (hasBaseAck()) {
                hash = (37 * hash) + BASE_ACK_FIELD_NUMBER;
                hash = (53 * hash) + getBaseAck().hashCode();
            }
            hash = (29 * hash) + unknownFields.hashCode();
            memoizedHashCode = hash;
            return hash;
        }

        public static cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.MountIssiTargetAck parseFrom(
                com.google.protobuf.ByteString data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }
        public static cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.MountIssiTargetAck parseFrom(
                com.google.protobuf.ByteString data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }
        public static cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.MountIssiTargetAck parseFrom(byte[] data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }
        public static cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.MountIssiTargetAck parseFrom(
                byte[] data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }
        public static cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.MountIssiTargetAck parseFrom(java.io.InputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input);
        }
        public static cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.MountIssiTargetAck parseFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input, extensionRegistry);
        }
        public static cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.MountIssiTargetAck parseDelimitedFrom(java.io.InputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseDelimitedWithIOException(PARSER, input);
        }
        public static cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.MountIssiTargetAck parseDelimitedFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
        }
        public static cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.MountIssiTargetAck parseFrom(
                com.google.protobuf.CodedInputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input);
        }
        public static cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.MountIssiTargetAck parseFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input, extensionRegistry);
        }

        public Builder newBuilderForType() { return newBuilder(); }
        public static Builder newBuilder() {
            return DEFAULT_INSTANCE.toBuilder();
        }
        public static Builder newBuilder(cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.MountIssiTargetAck prototype) {
            return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }
        public Builder toBuilder() {
            return this == DEFAULT_INSTANCE
                    ? new Builder() : new Builder().mergeFrom(this);
        }

        @Override
        protected Builder newBuilderForType(
                BuilderParent parent) {
            Builder builder = new Builder(parent);
            return builder;
        }
        /**
         * Protobuf type {@code one2data.rbtmqmsgcli.client.MountIssiTargetAck}
         */
        public static final class Builder extends
                com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
                // @@protoc_insertion_point(builder_implements:one2data.rbtmqmsgcli.client.MountIssiTargetAck)
                cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.MountIssiTargetAckOrBuilder {
            public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
                return cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.internal_static_one2data_rbtmqmsgcli_client_MountIssiTargetAck_descriptor;
            }

            protected FieldAccessorTable
            internalGetFieldAccessorTable() {
                return cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.internal_static_one2data_rbtmqmsgcli_client_MountIssiTargetAck_fieldAccessorTable
                        .ensureFieldAccessorsInitialized(
                                cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.MountIssiTargetAck.class, cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.MountIssiTargetAck.Builder.class);
            }

            // Construct using cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.MountIssiTargetAck.newBuilder()
            private Builder() {
                maybeForceBuilderInitialization();
            }

            private Builder(
                    BuilderParent parent) {
                super(parent);
                maybeForceBuilderInitialization();
            }
            private void maybeForceBuilderInitialization() {
                if (com.google.protobuf.GeneratedMessageV3
                        .alwaysUseFieldBuilders) {
                }
            }
            public Builder clear() {
                super.clear();
                if (baseAckBuilder_ == null) {
                    baseAck_ = null;
                } else {
                    baseAck_ = null;
                    baseAckBuilder_ = null;
                }
                return this;
            }

            public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
                return cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.internal_static_one2data_rbtmqmsgcli_client_MountIssiTargetAck_descriptor;
            }

            public cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.MountIssiTargetAck getDefaultInstanceForType() {
                return cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.MountIssiTargetAck.getDefaultInstance();
            }

            public cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.MountIssiTargetAck build() {
                cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.MountIssiTargetAck result = buildPartial();
                if (!result.isInitialized()) {
                    throw newUninitializedMessageException(result);
                }
                return result;
            }

            public cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.MountIssiTargetAck buildPartial() {
                cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.MountIssiTargetAck result = new cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.MountIssiTargetAck(this);
                if (baseAckBuilder_ == null) {
                    result.baseAck_ = baseAck_;
                } else {
                    result.baseAck_ = baseAckBuilder_.build();
                }
                onBuilt();
                return result;
            }

            public Builder clone() {
                return (Builder) super.clone();
            }
            public Builder setField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    Object value) {
                return (Builder) super.setField(field, value);
            }
            public Builder clearField(
                    com.google.protobuf.Descriptors.FieldDescriptor field) {
                return (Builder) super.clearField(field);
            }
            public Builder clearOneof(
                    com.google.protobuf.Descriptors.OneofDescriptor oneof) {
                return (Builder) super.clearOneof(oneof);
            }
            public Builder setRepeatedField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    int index, Object value) {
                return (Builder) super.setRepeatedField(field, index, value);
            }
            public Builder addRepeatedField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    Object value) {
                return (Builder) super.addRepeatedField(field, value);
            }
            public Builder mergeFrom(com.google.protobuf.Message other) {
                if (other instanceof cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.MountIssiTargetAck) {
                    return mergeFrom((cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.MountIssiTargetAck)other);
                } else {
                    super.mergeFrom(other);
                    return this;
                }
            }

            public Builder mergeFrom(cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.MountIssiTargetAck other) {
                if (other == cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.MountIssiTargetAck.getDefaultInstance()) return this;
                if (other.hasBaseAck()) {
                    mergeBaseAck(other.getBaseAck());
                }
                onChanged();
                return this;
            }

            public final boolean isInitialized() {
                return true;
            }

            public Builder mergeFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws java.io.IOException {
                cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.MountIssiTargetAck parsedMessage = null;
                try {
                    parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
                } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                    parsedMessage = (cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.MountIssiTargetAck) e.getUnfinishedMessage();
                    throw e.unwrapIOException();
                } finally {
                    if (parsedMessage != null) {
                        mergeFrom(parsedMessage);
                    }
                }
                return this;
            }

            private cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck baseAck_ = null;
            private com.google.protobuf.SingleFieldBuilderV3<
                    cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck, cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck.Builder, cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAckOrBuilder> baseAckBuilder_;
            /**
             * <code>optional .one2data.rbtmqmsgcli.common.BaseAck base_ack = 1;</code>
             */
            public boolean hasBaseAck() {
                return baseAckBuilder_ != null || baseAck_ != null;
            }
            /**
             * <code>optional .one2data.rbtmqmsgcli.common.BaseAck base_ack = 1;</code>
             */
            public cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck getBaseAck() {
                if (baseAckBuilder_ == null) {
                    return baseAck_ == null ? cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck.getDefaultInstance() : baseAck_;
                } else {
                    return baseAckBuilder_.getMessage();
                }
            }
            /**
             * <code>optional .one2data.rbtmqmsgcli.common.BaseAck base_ack = 1;</code>
             */
            public Builder setBaseAck(cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck value) {
                if (baseAckBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    baseAck_ = value;
                    onChanged();
                } else {
                    baseAckBuilder_.setMessage(value);
                }

                return this;
            }
            /**
             * <code>optional .one2data.rbtmqmsgcli.common.BaseAck base_ack = 1;</code>
             */
            public Builder setBaseAck(
                    cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck.Builder builderForValue) {
                if (baseAckBuilder_ == null) {
                    baseAck_ = builderForValue.build();
                    onChanged();
                } else {
                    baseAckBuilder_.setMessage(builderForValue.build());
                }

                return this;
            }
            /**
             * <code>optional .one2data.rbtmqmsgcli.common.BaseAck base_ack = 1;</code>
             */
            public Builder mergeBaseAck(cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck value) {
                if (baseAckBuilder_ == null) {
                    if (baseAck_ != null) {
                        baseAck_ =
                                cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck.newBuilder(baseAck_).mergeFrom(value).buildPartial();
                    } else {
                        baseAck_ = value;
                    }
                    onChanged();
                } else {
                    baseAckBuilder_.mergeFrom(value);
                }

                return this;
            }
            /**
             * <code>optional .one2data.rbtmqmsgcli.common.BaseAck base_ack = 1;</code>
             */
            public Builder clearBaseAck() {
                if (baseAckBuilder_ == null) {
                    baseAck_ = null;
                    onChanged();
                } else {
                    baseAck_ = null;
                    baseAckBuilder_ = null;
                }

                return this;
            }
            /**
             * <code>optional .one2data.rbtmqmsgcli.common.BaseAck base_ack = 1;</code>
             */
            public cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck.Builder getBaseAckBuilder() {

                onChanged();
                return getBaseAckFieldBuilder().getBuilder();
            }
            /**
             * <code>optional .one2data.rbtmqmsgcli.common.BaseAck base_ack = 1;</code>
             */
            public cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAckOrBuilder getBaseAckOrBuilder() {
                if (baseAckBuilder_ != null) {
                    return baseAckBuilder_.getMessageOrBuilder();
                } else {
                    return baseAck_ == null ?
                            cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck.getDefaultInstance() : baseAck_;
                }
            }
            /**
             * <code>optional .one2data.rbtmqmsgcli.common.BaseAck base_ack = 1;</code>
             */
            private com.google.protobuf.SingleFieldBuilderV3<
                    cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck, cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck.Builder, cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAckOrBuilder>
            getBaseAckFieldBuilder() {
                if (baseAckBuilder_ == null) {
                    baseAckBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                            cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck, cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck.Builder, cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAckOrBuilder>(
                            getBaseAck(),
                            getParentForChildren(),
                            isClean());
                    baseAck_ = null;
                }
                return baseAckBuilder_;
            }
            public final Builder setUnknownFields(
                    final com.google.protobuf.UnknownFieldSet unknownFields) {
                return this;
            }

            public final Builder mergeUnknownFields(
                    final com.google.protobuf.UnknownFieldSet unknownFields) {
                return this;
            }


            // @@protoc_insertion_point(builder_scope:one2data.rbtmqmsgcli.client.MountIssiTargetAck)
        }

        // @@protoc_insertion_point(class_scope:one2data.rbtmqmsgcli.client.MountIssiTargetAck)
        private static final cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.MountIssiTargetAck DEFAULT_INSTANCE;
        static {
            DEFAULT_INSTANCE = new cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.MountIssiTargetAck();
        }

        public static cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.MountIssiTargetAck getDefaultInstance() {
            return DEFAULT_INSTANCE;
        }

        private static final com.google.protobuf.Parser<MountIssiTargetAck>
                PARSER = new com.google.protobuf.AbstractParser<MountIssiTargetAck>() {
            public MountIssiTargetAck parsePartialFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws com.google.protobuf.InvalidProtocolBufferException {
                return new MountIssiTargetAck(input, extensionRegistry);
            }
        };

        public static com.google.protobuf.Parser<MountIssiTargetAck> parser() {
            return PARSER;
        }

        @Override
        public com.google.protobuf.Parser<MountIssiTargetAck> getParserForType() {
            return PARSER;
        }

        public cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.MountIssiTargetAck getDefaultInstanceForType() {
            return DEFAULT_INSTANCE;
        }

    }

    public interface UnmountIssiTargetOrBuilder extends
            // @@protoc_insertion_point(interface_extends:one2data.rbtmqmsgcli.client.UnmountIssiTarget)
            com.google.protobuf.MessageOrBuilder {

        /**
         * <code>optional string target_ip = 1;</code>
         */
        String getTargetIp();
        /**
         * <code>optional string target_ip = 1;</code>
         */
        com.google.protobuf.ByteString
        getTargetIpBytes();

        /**
         * <code>optional uint32 target_port = 2;</code>
         */
        int getTargetPort();

        /**
         * <code>optional string target_name = 3;</code>
         */
        String getTargetName();
        /**
         * <code>optional string target_name = 3;</code>
         */
        com.google.protobuf.ByteString
        getTargetNameBytes();
    }
    /**
     * Protobuf type {@code one2data.rbtmqmsgcli.client.UnmountIssiTarget}
     */
    public  static final class UnmountIssiTarget extends
            com.google.protobuf.GeneratedMessageV3 implements
            // @@protoc_insertion_point(message_implements:one2data.rbtmqmsgcli.client.UnmountIssiTarget)
            UnmountIssiTargetOrBuilder {
        // Use UnmountIssiTarget.newBuilder() to construct.
        private UnmountIssiTarget(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
            super(builder);
        }
        private UnmountIssiTarget() {
            targetIp_ = "";
            targetPort_ = 0;
            targetName_ = "";
        }

        @Override
        public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
            return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
        }
        private UnmountIssiTarget(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            this();
            int mutable_bitField0_ = 0;
            try {
                boolean done = false;
                while (!done) {
                    int tag = input.readTag();
                    switch (tag) {
                        case 0:
                            done = true;
                            break;
                        default: {
                            if (!input.skipField(tag)) {
                                done = true;
                            }
                            break;
                        }
                        case 10: {
                            String s = input.readStringRequireUtf8();

                            targetIp_ = s;
                            break;
                        }
                        case 16: {

                            targetPort_ = input.readUInt32();
                            break;
                        }
                        case 26: {
                            String s = input.readStringRequireUtf8();

                            targetName_ = s;
                            break;
                        }
                    }
                }
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(this);
            } catch (java.io.IOException e) {
                throw new com.google.protobuf.InvalidProtocolBufferException(
                        e).setUnfinishedMessage(this);
            } finally {
                makeExtensionsImmutable();
            }
        }
        public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
            return cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.internal_static_one2data_rbtmqmsgcli_client_UnmountIssiTarget_descriptor;
        }

        protected FieldAccessorTable
        internalGetFieldAccessorTable() {
            return cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.internal_static_one2data_rbtmqmsgcli_client_UnmountIssiTarget_fieldAccessorTable
                    .ensureFieldAccessorsInitialized(
                            cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.UnmountIssiTarget.class, cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.UnmountIssiTarget.Builder.class);
        }

        public static final int TARGET_IP_FIELD_NUMBER = 1;
        private volatile Object targetIp_;
        /**
         * <code>optional string target_ip = 1;</code>
         */
        public String getTargetIp() {
            Object ref = targetIp_;
            if (ref instanceof String) {
                return (String) ref;
            } else {
                com.google.protobuf.ByteString bs =
                        (com.google.protobuf.ByteString) ref;
                String s = bs.toStringUtf8();
                targetIp_ = s;
                return s;
            }
        }
        /**
         * <code>optional string target_ip = 1;</code>
         */
        public com.google.protobuf.ByteString
        getTargetIpBytes() {
            Object ref = targetIp_;
            if (ref instanceof String) {
                com.google.protobuf.ByteString b =
                        com.google.protobuf.ByteString.copyFromUtf8(
                                (String) ref);
                targetIp_ = b;
                return b;
            } else {
                return (com.google.protobuf.ByteString) ref;
            }
        }

        public static final int TARGET_PORT_FIELD_NUMBER = 2;
        private int targetPort_;
        /**
         * <code>optional uint32 target_port = 2;</code>
         */
        public int getTargetPort() {
            return targetPort_;
        }

        public static final int TARGET_NAME_FIELD_NUMBER = 3;
        private volatile Object targetName_;
        /**
         * <code>optional string target_name = 3;</code>
         */
        public String getTargetName() {
            Object ref = targetName_;
            if (ref instanceof String) {
                return (String) ref;
            } else {
                com.google.protobuf.ByteString bs =
                        (com.google.protobuf.ByteString) ref;
                String s = bs.toStringUtf8();
                targetName_ = s;
                return s;
            }
        }
        /**
         * <code>optional string target_name = 3;</code>
         */
        public com.google.protobuf.ByteString
        getTargetNameBytes() {
            Object ref = targetName_;
            if (ref instanceof String) {
                com.google.protobuf.ByteString b =
                        com.google.protobuf.ByteString.copyFromUtf8(
                                (String) ref);
                targetName_ = b;
                return b;
            } else {
                return (com.google.protobuf.ByteString) ref;
            }
        }

        private byte memoizedIsInitialized = -1;
        public final boolean isInitialized() {
            byte isInitialized = memoizedIsInitialized;
            if (isInitialized == 1) return true;
            if (isInitialized == 0) return false;

            memoizedIsInitialized = 1;
            return true;
        }

        public void writeTo(com.google.protobuf.CodedOutputStream output)
                throws java.io.IOException {
            if (!getTargetIpBytes().isEmpty()) {
                com.google.protobuf.GeneratedMessageV3.writeString(output, 1, targetIp_);
            }
            if (targetPort_ != 0) {
                output.writeUInt32(2, targetPort_);
            }
            if (!getTargetNameBytes().isEmpty()) {
                com.google.protobuf.GeneratedMessageV3.writeString(output, 3, targetName_);
            }
        }

        public int getSerializedSize() {
            int size = memoizedSize;
            if (size != -1) return size;

            size = 0;
            if (!getTargetIpBytes().isEmpty()) {
                size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, targetIp_);
            }
            if (targetPort_ != 0) {
                size += com.google.protobuf.CodedOutputStream
                        .computeUInt32Size(2, targetPort_);
            }
            if (!getTargetNameBytes().isEmpty()) {
                size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, targetName_);
            }
            memoizedSize = size;
            return size;
        }

        private static final long serialVersionUID = 0L;
        @Override
        public boolean equals(final Object obj) {
            if (obj == this) {
                return true;
            }
            if (!(obj instanceof cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.UnmountIssiTarget)) {
                return super.equals(obj);
            }
            cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.UnmountIssiTarget other = (cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.UnmountIssiTarget) obj;

            boolean result = true;
            result = result && getTargetIp()
                    .equals(other.getTargetIp());
            result = result && (getTargetPort()
                    == other.getTargetPort());
            result = result && getTargetName()
                    .equals(other.getTargetName());
            return result;
        }

        @Override
        public int hashCode() {
            if (memoizedHashCode != 0) {
                return memoizedHashCode;
            }
            int hash = 41;
            hash = (19 * hash) + getDescriptorForType().hashCode();
            hash = (37 * hash) + TARGET_IP_FIELD_NUMBER;
            hash = (53 * hash) + getTargetIp().hashCode();
            hash = (37 * hash) + TARGET_PORT_FIELD_NUMBER;
            hash = (53 * hash) + getTargetPort();
            hash = (37 * hash) + TARGET_NAME_FIELD_NUMBER;
            hash = (53 * hash) + getTargetName().hashCode();
            hash = (29 * hash) + unknownFields.hashCode();
            memoizedHashCode = hash;
            return hash;
        }

        public static cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.UnmountIssiTarget parseFrom(
                com.google.protobuf.ByteString data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }
        public static cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.UnmountIssiTarget parseFrom(
                com.google.protobuf.ByteString data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }
        public static cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.UnmountIssiTarget parseFrom(byte[] data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }
        public static cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.UnmountIssiTarget parseFrom(
                byte[] data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }
        public static cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.UnmountIssiTarget parseFrom(java.io.InputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input);
        }
        public static cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.UnmountIssiTarget parseFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input, extensionRegistry);
        }
        public static cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.UnmountIssiTarget parseDelimitedFrom(java.io.InputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseDelimitedWithIOException(PARSER, input);
        }
        public static cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.UnmountIssiTarget parseDelimitedFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
        }
        public static cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.UnmountIssiTarget parseFrom(
                com.google.protobuf.CodedInputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input);
        }
        public static cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.UnmountIssiTarget parseFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input, extensionRegistry);
        }

        public Builder newBuilderForType() { return newBuilder(); }
        public static Builder newBuilder() {
            return DEFAULT_INSTANCE.toBuilder();
        }
        public static Builder newBuilder(cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.UnmountIssiTarget prototype) {
            return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }
        public Builder toBuilder() {
            return this == DEFAULT_INSTANCE
                    ? new Builder() : new Builder().mergeFrom(this);
        }

        @Override
        protected Builder newBuilderForType(
                BuilderParent parent) {
            Builder builder = new Builder(parent);
            return builder;
        }
        /**
         * Protobuf type {@code one2data.rbtmqmsgcli.client.UnmountIssiTarget}
         */
        public static final class Builder extends
                com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
                // @@protoc_insertion_point(builder_implements:one2data.rbtmqmsgcli.client.UnmountIssiTarget)
                cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.UnmountIssiTargetOrBuilder {
            public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
                return cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.internal_static_one2data_rbtmqmsgcli_client_UnmountIssiTarget_descriptor;
            }

            protected FieldAccessorTable
            internalGetFieldAccessorTable() {
                return cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.internal_static_one2data_rbtmqmsgcli_client_UnmountIssiTarget_fieldAccessorTable
                        .ensureFieldAccessorsInitialized(
                                cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.UnmountIssiTarget.class, cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.UnmountIssiTarget.Builder.class);
            }

            // Construct using cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.UnmountIssiTarget.newBuilder()
            private Builder() {
                maybeForceBuilderInitialization();
            }

            private Builder(
                    BuilderParent parent) {
                super(parent);
                maybeForceBuilderInitialization();
            }
            private void maybeForceBuilderInitialization() {
                if (com.google.protobuf.GeneratedMessageV3
                        .alwaysUseFieldBuilders) {
                }
            }
            public Builder clear() {
                super.clear();
                targetIp_ = "";

                targetPort_ = 0;

                targetName_ = "";

                return this;
            }

            public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
                return cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.internal_static_one2data_rbtmqmsgcli_client_UnmountIssiTarget_descriptor;
            }

            public cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.UnmountIssiTarget getDefaultInstanceForType() {
                return cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.UnmountIssiTarget.getDefaultInstance();
            }

            public cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.UnmountIssiTarget build() {
                cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.UnmountIssiTarget result = buildPartial();
                if (!result.isInitialized()) {
                    throw newUninitializedMessageException(result);
                }
                return result;
            }

            public cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.UnmountIssiTarget buildPartial() {
                cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.UnmountIssiTarget result = new cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.UnmountIssiTarget(this);
                result.targetIp_ = targetIp_;
                result.targetPort_ = targetPort_;
                result.targetName_ = targetName_;
                onBuilt();
                return result;
            }

            public Builder clone() {
                return (Builder) super.clone();
            }
            public Builder setField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    Object value) {
                return (Builder) super.setField(field, value);
            }
            public Builder clearField(
                    com.google.protobuf.Descriptors.FieldDescriptor field) {
                return (Builder) super.clearField(field);
            }
            public Builder clearOneof(
                    com.google.protobuf.Descriptors.OneofDescriptor oneof) {
                return (Builder) super.clearOneof(oneof);
            }
            public Builder setRepeatedField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    int index, Object value) {
                return (Builder) super.setRepeatedField(field, index, value);
            }
            public Builder addRepeatedField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    Object value) {
                return (Builder) super.addRepeatedField(field, value);
            }
            public Builder mergeFrom(com.google.protobuf.Message other) {
                if (other instanceof cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.UnmountIssiTarget) {
                    return mergeFrom((cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.UnmountIssiTarget)other);
                } else {
                    super.mergeFrom(other);
                    return this;
                }
            }

            public Builder mergeFrom(cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.UnmountIssiTarget other) {
                if (other == cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.UnmountIssiTarget.getDefaultInstance()) return this;
                if (!other.getTargetIp().isEmpty()) {
                    targetIp_ = other.targetIp_;
                    onChanged();
                }
                if (other.getTargetPort() != 0) {
                    setTargetPort(other.getTargetPort());
                }
                if (!other.getTargetName().isEmpty()) {
                    targetName_ = other.targetName_;
                    onChanged();
                }
                onChanged();
                return this;
            }

            public final boolean isInitialized() {
                return true;
            }

            public Builder mergeFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws java.io.IOException {
                cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.UnmountIssiTarget parsedMessage = null;
                try {
                    parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
                } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                    parsedMessage = (cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.UnmountIssiTarget) e.getUnfinishedMessage();
                    throw e.unwrapIOException();
                } finally {
                    if (parsedMessage != null) {
                        mergeFrom(parsedMessage);
                    }
                }
                return this;
            }

            private Object targetIp_ = "";
            /**
             * <code>optional string target_ip = 1;</code>
             */
            public String getTargetIp() {
                Object ref = targetIp_;
                if (!(ref instanceof String)) {
                    com.google.protobuf.ByteString bs =
                            (com.google.protobuf.ByteString) ref;
                    String s = bs.toStringUtf8();
                    targetIp_ = s;
                    return s;
                } else {
                    return (String) ref;
                }
            }
            /**
             * <code>optional string target_ip = 1;</code>
             */
            public com.google.protobuf.ByteString
            getTargetIpBytes() {
                Object ref = targetIp_;
                if (ref instanceof String) {
                    com.google.protobuf.ByteString b =
                            com.google.protobuf.ByteString.copyFromUtf8(
                                    (String) ref);
                    targetIp_ = b;
                    return b;
                } else {
                    return (com.google.protobuf.ByteString) ref;
                }
            }
            /**
             * <code>optional string target_ip = 1;</code>
             */
            public Builder setTargetIp(
                    String value) {
                if (value == null) {
                    throw new NullPointerException();
                }

                targetIp_ = value;
                onChanged();
                return this;
            }
            /**
             * <code>optional string target_ip = 1;</code>
             */
            public Builder clearTargetIp() {

                targetIp_ = getDefaultInstance().getTargetIp();
                onChanged();
                return this;
            }
            /**
             * <code>optional string target_ip = 1;</code>
             */
            public Builder setTargetIpBytes(
                    com.google.protobuf.ByteString value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                checkByteStringIsUtf8(value);

                targetIp_ = value;
                onChanged();
                return this;
            }

            private int targetPort_ ;
            /**
             * <code>optional uint32 target_port = 2;</code>
             */
            public int getTargetPort() {
                return targetPort_;
            }
            /**
             * <code>optional uint32 target_port = 2;</code>
             */
            public Builder setTargetPort(int value) {

                targetPort_ = value;
                onChanged();
                return this;
            }
            /**
             * <code>optional uint32 target_port = 2;</code>
             */
            public Builder clearTargetPort() {

                targetPort_ = 0;
                onChanged();
                return this;
            }

            private Object targetName_ = "";
            /**
             * <code>optional string target_name = 3;</code>
             */
            public String getTargetName() {
                Object ref = targetName_;
                if (!(ref instanceof String)) {
                    com.google.protobuf.ByteString bs =
                            (com.google.protobuf.ByteString) ref;
                    String s = bs.toStringUtf8();
                    targetName_ = s;
                    return s;
                } else {
                    return (String) ref;
                }
            }
            /**
             * <code>optional string target_name = 3;</code>
             */
            public com.google.protobuf.ByteString
            getTargetNameBytes() {
                Object ref = targetName_;
                if (ref instanceof String) {
                    com.google.protobuf.ByteString b =
                            com.google.protobuf.ByteString.copyFromUtf8(
                                    (String) ref);
                    targetName_ = b;
                    return b;
                } else {
                    return (com.google.protobuf.ByteString) ref;
                }
            }
            /**
             * <code>optional string target_name = 3;</code>
             */
            public Builder setTargetName(
                    String value) {
                if (value == null) {
                    throw new NullPointerException();
                }

                targetName_ = value;
                onChanged();
                return this;
            }
            /**
             * <code>optional string target_name = 3;</code>
             */
            public Builder clearTargetName() {

                targetName_ = getDefaultInstance().getTargetName();
                onChanged();
                return this;
            }
            /**
             * <code>optional string target_name = 3;</code>
             */
            public Builder setTargetNameBytes(
                    com.google.protobuf.ByteString value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                checkByteStringIsUtf8(value);

                targetName_ = value;
                onChanged();
                return this;
            }
            public final Builder setUnknownFields(
                    final com.google.protobuf.UnknownFieldSet unknownFields) {
                return this;
            }

            public final Builder mergeUnknownFields(
                    final com.google.protobuf.UnknownFieldSet unknownFields) {
                return this;
            }


            // @@protoc_insertion_point(builder_scope:one2data.rbtmqmsgcli.client.UnmountIssiTarget)
        }

        // @@protoc_insertion_point(class_scope:one2data.rbtmqmsgcli.client.UnmountIssiTarget)
        private static final cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.UnmountIssiTarget DEFAULT_INSTANCE;
        static {
            DEFAULT_INSTANCE = new cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.UnmountIssiTarget();
        }

        public static cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.UnmountIssiTarget getDefaultInstance() {
            return DEFAULT_INSTANCE;
        }

        private static final com.google.protobuf.Parser<UnmountIssiTarget>
                PARSER = new com.google.protobuf.AbstractParser<UnmountIssiTarget>() {
            public UnmountIssiTarget parsePartialFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws com.google.protobuf.InvalidProtocolBufferException {
                return new UnmountIssiTarget(input, extensionRegistry);
            }
        };

        public static com.google.protobuf.Parser<UnmountIssiTarget> parser() {
            return PARSER;
        }

        @Override
        public com.google.protobuf.Parser<UnmountIssiTarget> getParserForType() {
            return PARSER;
        }

        public cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.UnmountIssiTarget getDefaultInstanceForType() {
            return DEFAULT_INSTANCE;
        }

    }

    public interface UnmountIssiTargetAckOrBuilder extends
            // @@protoc_insertion_point(interface_extends:one2data.rbtmqmsgcli.client.UnmountIssiTargetAck)
            com.google.protobuf.MessageOrBuilder {

        /**
         * <code>optional .one2data.rbtmqmsgcli.common.BaseAck base_ack = 1;</code>
         */
        boolean hasBaseAck();
        /**
         * <code>optional .one2data.rbtmqmsgcli.common.BaseAck base_ack = 1;</code>
         */
        cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck getBaseAck();
        /**
         * <code>optional .one2data.rbtmqmsgcli.common.BaseAck base_ack = 1;</code>
         */
        cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAckOrBuilder getBaseAckOrBuilder();
    }
    /**
     * Protobuf type {@code one2data.rbtmqmsgcli.client.UnmountIssiTargetAck}
     */
    public  static final class UnmountIssiTargetAck extends
            com.google.protobuf.GeneratedMessageV3 implements
            // @@protoc_insertion_point(message_implements:one2data.rbtmqmsgcli.client.UnmountIssiTargetAck)
            UnmountIssiTargetAckOrBuilder {
        // Use UnmountIssiTargetAck.newBuilder() to construct.
        private UnmountIssiTargetAck(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
            super(builder);
        }
        private UnmountIssiTargetAck() {
        }

        @Override
        public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
            return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
        }
        private UnmountIssiTargetAck(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            this();
            int mutable_bitField0_ = 0;
            try {
                boolean done = false;
                while (!done) {
                    int tag = input.readTag();
                    switch (tag) {
                        case 0:
                            done = true;
                            break;
                        default: {
                            if (!input.skipField(tag)) {
                                done = true;
                            }
                            break;
                        }
                        case 10: {
                            cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck.Builder subBuilder = null;
                            if (baseAck_ != null) {
                                subBuilder = baseAck_.toBuilder();
                            }
                            baseAck_ = input.readMessage(cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck.parser(), extensionRegistry);
                            if (subBuilder != null) {
                                subBuilder.mergeFrom(baseAck_);
                                baseAck_ = subBuilder.buildPartial();
                            }

                            break;
                        }
                    }
                }
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(this);
            } catch (java.io.IOException e) {
                throw new com.google.protobuf.InvalidProtocolBufferException(
                        e).setUnfinishedMessage(this);
            } finally {
                makeExtensionsImmutable();
            }
        }
        public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
            return cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.internal_static_one2data_rbtmqmsgcli_client_UnmountIssiTargetAck_descriptor;
        }

        protected FieldAccessorTable
        internalGetFieldAccessorTable() {
            return cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.internal_static_one2data_rbtmqmsgcli_client_UnmountIssiTargetAck_fieldAccessorTable
                    .ensureFieldAccessorsInitialized(
                            cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.UnmountIssiTargetAck.class, cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.UnmountIssiTargetAck.Builder.class);
        }

        public static final int BASE_ACK_FIELD_NUMBER = 1;
        private cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck baseAck_;
        /**
         * <code>optional .one2data.rbtmqmsgcli.common.BaseAck base_ack = 1;</code>
         */
        public boolean hasBaseAck() {
            return baseAck_ != null;
        }
        /**
         * <code>optional .one2data.rbtmqmsgcli.common.BaseAck base_ack = 1;</code>
         */
        public cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck getBaseAck() {
            return baseAck_ == null ? cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck.getDefaultInstance() : baseAck_;
        }
        /**
         * <code>optional .one2data.rbtmqmsgcli.common.BaseAck base_ack = 1;</code>
         */
        public cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAckOrBuilder getBaseAckOrBuilder() {
            return getBaseAck();
        }

        private byte memoizedIsInitialized = -1;
        public final boolean isInitialized() {
            byte isInitialized = memoizedIsInitialized;
            if (isInitialized == 1) return true;
            if (isInitialized == 0) return false;

            memoizedIsInitialized = 1;
            return true;
        }

        public void writeTo(com.google.protobuf.CodedOutputStream output)
                throws java.io.IOException {
            if (baseAck_ != null) {
                output.writeMessage(1, getBaseAck());
            }
        }

        public int getSerializedSize() {
            int size = memoizedSize;
            if (size != -1) return size;

            size = 0;
            if (baseAck_ != null) {
                size += com.google.protobuf.CodedOutputStream
                        .computeMessageSize(1, getBaseAck());
            }
            memoizedSize = size;
            return size;
        }

        private static final long serialVersionUID = 0L;
        @Override
        public boolean equals(final Object obj) {
            if (obj == this) {
                return true;
            }
            if (!(obj instanceof cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.UnmountIssiTargetAck)) {
                return super.equals(obj);
            }
            cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.UnmountIssiTargetAck other = (cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.UnmountIssiTargetAck) obj;

            boolean result = true;
            result = result && (hasBaseAck() == other.hasBaseAck());
            if (hasBaseAck()) {
                result = result && getBaseAck()
                        .equals(other.getBaseAck());
            }
            return result;
        }

        @Override
        public int hashCode() {
            if (memoizedHashCode != 0) {
                return memoizedHashCode;
            }
            int hash = 41;
            hash = (19 * hash) + getDescriptorForType().hashCode();
            if (hasBaseAck()) {
                hash = (37 * hash) + BASE_ACK_FIELD_NUMBER;
                hash = (53 * hash) + getBaseAck().hashCode();
            }
            hash = (29 * hash) + unknownFields.hashCode();
            memoizedHashCode = hash;
            return hash;
        }

        public static cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.UnmountIssiTargetAck parseFrom(
                com.google.protobuf.ByteString data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }
        public static cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.UnmountIssiTargetAck parseFrom(
                com.google.protobuf.ByteString data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }
        public static cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.UnmountIssiTargetAck parseFrom(byte[] data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }
        public static cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.UnmountIssiTargetAck parseFrom(
                byte[] data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }
        public static cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.UnmountIssiTargetAck parseFrom(java.io.InputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input);
        }
        public static cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.UnmountIssiTargetAck parseFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input, extensionRegistry);
        }
        public static cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.UnmountIssiTargetAck parseDelimitedFrom(java.io.InputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseDelimitedWithIOException(PARSER, input);
        }
        public static cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.UnmountIssiTargetAck parseDelimitedFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
        }
        public static cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.UnmountIssiTargetAck parseFrom(
                com.google.protobuf.CodedInputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input);
        }
        public static cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.UnmountIssiTargetAck parseFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input, extensionRegistry);
        }

        public Builder newBuilderForType() { return newBuilder(); }
        public static Builder newBuilder() {
            return DEFAULT_INSTANCE.toBuilder();
        }
        public static Builder newBuilder(cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.UnmountIssiTargetAck prototype) {
            return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }
        public Builder toBuilder() {
            return this == DEFAULT_INSTANCE
                    ? new Builder() : new Builder().mergeFrom(this);
        }

        @Override
        protected Builder newBuilderForType(
                BuilderParent parent) {
            Builder builder = new Builder(parent);
            return builder;
        }
        /**
         * Protobuf type {@code one2data.rbtmqmsgcli.client.UnmountIssiTargetAck}
         */
        public static final class Builder extends
                com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
                // @@protoc_insertion_point(builder_implements:one2data.rbtmqmsgcli.client.UnmountIssiTargetAck)
                cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.UnmountIssiTargetAckOrBuilder {
            public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
                return cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.internal_static_one2data_rbtmqmsgcli_client_UnmountIssiTargetAck_descriptor;
            }

            protected FieldAccessorTable
            internalGetFieldAccessorTable() {
                return cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.internal_static_one2data_rbtmqmsgcli_client_UnmountIssiTargetAck_fieldAccessorTable
                        .ensureFieldAccessorsInitialized(
                                cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.UnmountIssiTargetAck.class, cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.UnmountIssiTargetAck.Builder.class);
            }

            // Construct using cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.UnmountIssiTargetAck.newBuilder()
            private Builder() {
                maybeForceBuilderInitialization();
            }

            private Builder(
                    BuilderParent parent) {
                super(parent);
                maybeForceBuilderInitialization();
            }
            private void maybeForceBuilderInitialization() {
                if (com.google.protobuf.GeneratedMessageV3
                        .alwaysUseFieldBuilders) {
                }
            }
            public Builder clear() {
                super.clear();
                if (baseAckBuilder_ == null) {
                    baseAck_ = null;
                } else {
                    baseAck_ = null;
                    baseAckBuilder_ = null;
                }
                return this;
            }

            public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
                return cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.internal_static_one2data_rbtmqmsgcli_client_UnmountIssiTargetAck_descriptor;
            }

            public cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.UnmountIssiTargetAck getDefaultInstanceForType() {
                return cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.UnmountIssiTargetAck.getDefaultInstance();
            }

            public cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.UnmountIssiTargetAck build() {
                cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.UnmountIssiTargetAck result = buildPartial();
                if (!result.isInitialized()) {
                    throw newUninitializedMessageException(result);
                }
                return result;
            }

            public cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.UnmountIssiTargetAck buildPartial() {
                cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.UnmountIssiTargetAck result = new cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.UnmountIssiTargetAck(this);
                if (baseAckBuilder_ == null) {
                    result.baseAck_ = baseAck_;
                } else {
                    result.baseAck_ = baseAckBuilder_.build();
                }
                onBuilt();
                return result;
            }

            public Builder clone() {
                return (Builder) super.clone();
            }
            public Builder setField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    Object value) {
                return (Builder) super.setField(field, value);
            }
            public Builder clearField(
                    com.google.protobuf.Descriptors.FieldDescriptor field) {
                return (Builder) super.clearField(field);
            }
            public Builder clearOneof(
                    com.google.protobuf.Descriptors.OneofDescriptor oneof) {
                return (Builder) super.clearOneof(oneof);
            }
            public Builder setRepeatedField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    int index, Object value) {
                return (Builder) super.setRepeatedField(field, index, value);
            }
            public Builder addRepeatedField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    Object value) {
                return (Builder) super.addRepeatedField(field, value);
            }
            public Builder mergeFrom(com.google.protobuf.Message other) {
                if (other instanceof cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.UnmountIssiTargetAck) {
                    return mergeFrom((cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.UnmountIssiTargetAck)other);
                } else {
                    super.mergeFrom(other);
                    return this;
                }
            }

            public Builder mergeFrom(cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.UnmountIssiTargetAck other) {
                if (other == cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.UnmountIssiTargetAck.getDefaultInstance()) return this;
                if (other.hasBaseAck()) {
                    mergeBaseAck(other.getBaseAck());
                }
                onChanged();
                return this;
            }

            public final boolean isInitialized() {
                return true;
            }

            public Builder mergeFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws java.io.IOException {
                cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.UnmountIssiTargetAck parsedMessage = null;
                try {
                    parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
                } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                    parsedMessage = (cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.UnmountIssiTargetAck) e.getUnfinishedMessage();
                    throw e.unwrapIOException();
                } finally {
                    if (parsedMessage != null) {
                        mergeFrom(parsedMessage);
                    }
                }
                return this;
            }

            private cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck baseAck_ = null;
            private com.google.protobuf.SingleFieldBuilderV3<
                    cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck, cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck.Builder, cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAckOrBuilder> baseAckBuilder_;
            /**
             * <code>optional .one2data.rbtmqmsgcli.common.BaseAck base_ack = 1;</code>
             */
            public boolean hasBaseAck() {
                return baseAckBuilder_ != null || baseAck_ != null;
            }
            /**
             * <code>optional .one2data.rbtmqmsgcli.common.BaseAck base_ack = 1;</code>
             */
            public cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck getBaseAck() {
                if (baseAckBuilder_ == null) {
                    return baseAck_ == null ? cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck.getDefaultInstance() : baseAck_;
                } else {
                    return baseAckBuilder_.getMessage();
                }
            }
            /**
             * <code>optional .one2data.rbtmqmsgcli.common.BaseAck base_ack = 1;</code>
             */
            public Builder setBaseAck(cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck value) {
                if (baseAckBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    baseAck_ = value;
                    onChanged();
                } else {
                    baseAckBuilder_.setMessage(value);
                }

                return this;
            }
            /**
             * <code>optional .one2data.rbtmqmsgcli.common.BaseAck base_ack = 1;</code>
             */
            public Builder setBaseAck(
                    cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck.Builder builderForValue) {
                if (baseAckBuilder_ == null) {
                    baseAck_ = builderForValue.build();
                    onChanged();
                } else {
                    baseAckBuilder_.setMessage(builderForValue.build());
                }

                return this;
            }
            /**
             * <code>optional .one2data.rbtmqmsgcli.common.BaseAck base_ack = 1;</code>
             */
            public Builder mergeBaseAck(cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck value) {
                if (baseAckBuilder_ == null) {
                    if (baseAck_ != null) {
                        baseAck_ =
                                cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck.newBuilder(baseAck_).mergeFrom(value).buildPartial();
                    } else {
                        baseAck_ = value;
                    }
                    onChanged();
                } else {
                    baseAckBuilder_.mergeFrom(value);
                }

                return this;
            }
            /**
             * <code>optional .one2data.rbtmqmsgcli.common.BaseAck base_ack = 1;</code>
             */
            public Builder clearBaseAck() {
                if (baseAckBuilder_ == null) {
                    baseAck_ = null;
                    onChanged();
                } else {
                    baseAck_ = null;
                    baseAckBuilder_ = null;
                }

                return this;
            }
            /**
             * <code>optional .one2data.rbtmqmsgcli.common.BaseAck base_ack = 1;</code>
             */
            public cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck.Builder getBaseAckBuilder() {

                onChanged();
                return getBaseAckFieldBuilder().getBuilder();
            }
            /**
             * <code>optional .one2data.rbtmqmsgcli.common.BaseAck base_ack = 1;</code>
             */
            public cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAckOrBuilder getBaseAckOrBuilder() {
                if (baseAckBuilder_ != null) {
                    return baseAckBuilder_.getMessageOrBuilder();
                } else {
                    return baseAck_ == null ?
                            cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck.getDefaultInstance() : baseAck_;
                }
            }
            /**
             * <code>optional .one2data.rbtmqmsgcli.common.BaseAck base_ack = 1;</code>
             */
            private com.google.protobuf.SingleFieldBuilderV3<
                    cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck, cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck.Builder, cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAckOrBuilder>
            getBaseAckFieldBuilder() {
                if (baseAckBuilder_ == null) {
                    baseAckBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                            cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck, cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck.Builder, cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAckOrBuilder>(
                            getBaseAck(),
                            getParentForChildren(),
                            isClean());
                    baseAck_ = null;
                }
                return baseAckBuilder_;
            }
            public final Builder setUnknownFields(
                    final com.google.protobuf.UnknownFieldSet unknownFields) {
                return this;
            }

            public final Builder mergeUnknownFields(
                    final com.google.protobuf.UnknownFieldSet unknownFields) {
                return this;
            }


            // @@protoc_insertion_point(builder_scope:one2data.rbtmqmsgcli.client.UnmountIssiTargetAck)
        }

        // @@protoc_insertion_point(class_scope:one2data.rbtmqmsgcli.client.UnmountIssiTargetAck)
        private static final cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.UnmountIssiTargetAck DEFAULT_INSTANCE;
        static {
            DEFAULT_INSTANCE = new cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.UnmountIssiTargetAck();
        }

        public static cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.UnmountIssiTargetAck getDefaultInstance() {
            return DEFAULT_INSTANCE;
        }

        private static final com.google.protobuf.Parser<UnmountIssiTargetAck>
                PARSER = new com.google.protobuf.AbstractParser<UnmountIssiTargetAck>() {
            public UnmountIssiTargetAck parsePartialFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws com.google.protobuf.InvalidProtocolBufferException {
                return new UnmountIssiTargetAck(input, extensionRegistry);
            }
        };

        public static com.google.protobuf.Parser<UnmountIssiTargetAck> parser() {
            return PARSER;
        }

        @Override
        public com.google.protobuf.Parser<UnmountIssiTargetAck> getParserForType() {
            return PARSER;
        }

        public cn.keptdata.one2data.header.message.protobuf.client.ClientMessage.UnmountIssiTargetAck getDefaultInstanceForType() {
            return DEFAULT_INSTANCE;
        }

    }

    private static final com.google.protobuf.Descriptors.Descriptor
            internal_static_one2data_rbtmqmsgcli_client_VerifyNodeInfoReport_descriptor;
    private static final
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internal_static_one2data_rbtmqmsgcli_client_VerifyNodeInfoReport_fieldAccessorTable;
    private static final com.google.protobuf.Descriptors.Descriptor
            internal_static_one2data_rbtmqmsgcli_client_VerifyNodeInfoReportAck_descriptor;
    private static final
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internal_static_one2data_rbtmqmsgcli_client_VerifyNodeInfoReportAck_fieldAccessorTable;
    private static final com.google.protobuf.Descriptors.Descriptor
            internal_static_one2data_rbtmqmsgcli_client_RequestDeviceMetadata_descriptor;
    private static final
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internal_static_one2data_rbtmqmsgcli_client_RequestDeviceMetadata_fieldAccessorTable;
    private static final com.google.protobuf.Descriptors.Descriptor
            internal_static_one2data_rbtmqmsgcli_client_RequestDeviceMetadataAck_descriptor;
    private static final
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internal_static_one2data_rbtmqmsgcli_client_RequestDeviceMetadataAck_fieldAccessorTable;
    private static final com.google.protobuf.Descriptors.Descriptor
            internal_static_one2data_rbtmqmsgcli_client_Login_descriptor;
    private static final
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internal_static_one2data_rbtmqmsgcli_client_Login_fieldAccessorTable;
    private static final com.google.protobuf.Descriptors.Descriptor
            internal_static_one2data_rbtmqmsgcli_client_LoginAck_descriptor;
    private static final
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internal_static_one2data_rbtmqmsgcli_client_LoginAck_fieldAccessorTable;
    private static final com.google.protobuf.Descriptors.Descriptor
            internal_static_one2data_rbtmqmsgcli_client_AcquireNodeAndHardwareInfo_descriptor;
    private static final
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internal_static_one2data_rbtmqmsgcli_client_AcquireNodeAndHardwareInfo_fieldAccessorTable;
    private static final com.google.protobuf.Descriptors.Descriptor
            internal_static_one2data_rbtmqmsgcli_client_AcquireNodeAndHardwareInfoAck_descriptor;
    private static final
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internal_static_one2data_rbtmqmsgcli_client_AcquireNodeAndHardwareInfoAck_fieldAccessorTable;
    private static final com.google.protobuf.Descriptors.Descriptor
            internal_static_one2data_rbtmqmsgcli_client_HardwareInfo_descriptor;
    private static final
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internal_static_one2data_rbtmqmsgcli_client_HardwareInfo_fieldAccessorTable;
    private static final com.google.protobuf.Descriptors.Descriptor
            internal_static_one2data_rbtmqmsgcli_client_NodeAndHardwareInfo_descriptor;
    private static final
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internal_static_one2data_rbtmqmsgcli_client_NodeAndHardwareInfo_fieldAccessorTable;
    private static final com.google.protobuf.Descriptors.Descriptor
            internal_static_one2data_rbtmqmsgcli_client_ReportNodeAndHardwareInfo_descriptor;
    private static final
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internal_static_one2data_rbtmqmsgcli_client_ReportNodeAndHardwareInfo_fieldAccessorTable;
    private static final com.google.protobuf.Descriptors.Descriptor
            internal_static_one2data_rbtmqmsgcli_client_ReportNodeAndHardwareInfoAck_descriptor;
    private static final
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internal_static_one2data_rbtmqmsgcli_client_ReportNodeAndHardwareInfoAck_fieldAccessorTable;
    private static final com.google.protobuf.Descriptors.Descriptor
            internal_static_one2data_rbtmqmsgcli_client_ReportHardwareChanged_descriptor;
    private static final
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internal_static_one2data_rbtmqmsgcli_client_ReportHardwareChanged_fieldAccessorTable;
    private static final com.google.protobuf.Descriptors.Descriptor
            internal_static_one2data_rbtmqmsgcli_client_HarddiskInfo_descriptor;
    private static final
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internal_static_one2data_rbtmqmsgcli_client_HarddiskInfo_fieldAccessorTable;
    private static final com.google.protobuf.Descriptors.Descriptor
            internal_static_one2data_rbtmqmsgcli_client_PartitionInfo_descriptor;
    private static final
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internal_static_one2data_rbtmqmsgcli_client_PartitionInfo_fieldAccessorTable;
    private static final com.google.protobuf.Descriptors.Descriptor
            internal_static_one2data_rbtmqmsgcli_client_LVInfo_descriptor;
    private static final
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internal_static_one2data_rbtmqmsgcli_client_LVInfo_fieldAccessorTable;
    private static final com.google.protobuf.Descriptors.Descriptor
            internal_static_one2data_rbtmqmsgcli_client_LVInfo_LVRefDevice_descriptor;
    private static final
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internal_static_one2data_rbtmqmsgcli_client_LVInfo_LVRefDevice_fieldAccessorTable;
    private static final com.google.protobuf.Descriptors.Descriptor
            internal_static_one2data_rbtmqmsgcli_client_LanFreeInfo_descriptor;
    private static final
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internal_static_one2data_rbtmqmsgcli_client_LanFreeInfo_fieldAccessorTable;
    private static final com.google.protobuf.Descriptors.Descriptor
            internal_static_one2data_rbtmqmsgcli_client_BitmapDriverInfo_descriptor;
    private static final
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internal_static_one2data_rbtmqmsgcli_client_BitmapDriverInfo_fieldAccessorTable;
    private static final com.google.protobuf.Descriptors.Descriptor
            internal_static_one2data_rbtmqmsgcli_client_BackupWorkStateReport_descriptor;
    private static final
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internal_static_one2data_rbtmqmsgcli_client_BackupWorkStateReport_fieldAccessorTable;
    private static final com.google.protobuf.Descriptors.Descriptor
            internal_static_one2data_rbtmqmsgcli_client_BackupStateReport_descriptor;
    private static final
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internal_static_one2data_rbtmqmsgcli_client_BackupStateReport_fieldAccessorTable;
    private static final com.google.protobuf.Descriptors.Descriptor
            internal_static_one2data_rbtmqmsgcli_client_BackupStateReport_HardwareBackupState_descriptor;
    private static final
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internal_static_one2data_rbtmqmsgcli_client_BackupStateReport_HardwareBackupState_fieldAccessorTable;
    private static final com.google.protobuf.Descriptors.Descriptor
            internal_static_one2data_rbtmqmsgcli_client_BackupProgress_descriptor;
    private static final
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internal_static_one2data_rbtmqmsgcli_client_BackupProgress_fieldAccessorTable;
    private static final com.google.protobuf.Descriptors.Descriptor
            internal_static_one2data_rbtmqmsgcli_client_BackupProgress_HardwareBackupProgress_descriptor;
    private static final
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internal_static_one2data_rbtmqmsgcli_client_BackupProgress_HardwareBackupProgress_fieldAccessorTable;
    private static final com.google.protobuf.Descriptors.Descriptor
            internal_static_one2data_rbtmqmsgcli_client_NoEnoughAuthorizedLunCapacityReport_descriptor;
    private static final
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internal_static_one2data_rbtmqmsgcli_client_NoEnoughAuthorizedLunCapacityReport_fieldAccessorTable;
    private static final com.google.protobuf.Descriptors.Descriptor
            internal_static_one2data_rbtmqmsgcli_client_SyncIndexInfoReport_descriptor;
    private static final
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internal_static_one2data_rbtmqmsgcli_client_SyncIndexInfoReport_fieldAccessorTable;
    private static final com.google.protobuf.Descriptors.Descriptor
            internal_static_one2data_rbtmqmsgcli_client_SyncIndexInfoReport_FineGrainedSyncIndexInfo_descriptor;
    private static final
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internal_static_one2data_rbtmqmsgcli_client_SyncIndexInfoReport_FineGrainedSyncIndexInfo_fieldAccessorTable;
    private static final com.google.protobuf.Descriptors.Descriptor
            internal_static_one2data_rbtmqmsgcli_client_BackupServiceReadyReport_descriptor;
    private static final
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internal_static_one2data_rbtmqmsgcli_client_BackupServiceReadyReport_fieldAccessorTable;
    private static final com.google.protobuf.Descriptors.Descriptor
            internal_static_one2data_rbtmqmsgcli_client_RequestDeviceClusterType_descriptor;
    private static final
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internal_static_one2data_rbtmqmsgcli_client_RequestDeviceClusterType_fieldAccessorTable;
    private static final com.google.protobuf.Descriptors.Descriptor
            internal_static_one2data_rbtmqmsgcli_client_RequestDeviceClusterTypeAck_descriptor;
    private static final
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internal_static_one2data_rbtmqmsgcli_client_RequestDeviceClusterTypeAck_fieldAccessorTable;
    private static final com.google.protobuf.Descriptors.Descriptor
            internal_static_one2data_rbtmqmsgcli_client_ResetAgentEnvironment_descriptor;
    private static final
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internal_static_one2data_rbtmqmsgcli_client_ResetAgentEnvironment_fieldAccessorTable;
    private static final com.google.protobuf.Descriptors.Descriptor
            internal_static_one2data_rbtmqmsgcli_client_RestartAgentService_descriptor;
    private static final
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internal_static_one2data_rbtmqmsgcli_client_RestartAgentService_fieldAccessorTable;
    private static final com.google.protobuf.Descriptors.Descriptor
            internal_static_one2data_rbtmqmsgcli_client_ConnectFCTarget_descriptor;
    private static final
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internal_static_one2data_rbtmqmsgcli_client_ConnectFCTarget_fieldAccessorTable;
    private static final com.google.protobuf.Descriptors.Descriptor
            internal_static_one2data_rbtmqmsgcli_client_ConnectFCTargetAck_descriptor;
    private static final
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internal_static_one2data_rbtmqmsgcli_client_ConnectFCTargetAck_fieldAccessorTable;
    private static final com.google.protobuf.Descriptors.Descriptor
            internal_static_one2data_rbtmqmsgcli_client_DisconnectFCTarget_descriptor;
    private static final
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internal_static_one2data_rbtmqmsgcli_client_DisconnectFCTarget_fieldAccessorTable;
    private static final com.google.protobuf.Descriptors.Descriptor
            internal_static_one2data_rbtmqmsgcli_client_MountIssiTarget_descriptor;
    private static final
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internal_static_one2data_rbtmqmsgcli_client_MountIssiTarget_fieldAccessorTable;
    private static final com.google.protobuf.Descriptors.Descriptor
            internal_static_one2data_rbtmqmsgcli_client_MountIssiTargetAck_descriptor;
    private static final
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internal_static_one2data_rbtmqmsgcli_client_MountIssiTargetAck_fieldAccessorTable;
    private static final com.google.protobuf.Descriptors.Descriptor
            internal_static_one2data_rbtmqmsgcli_client_UnmountIssiTarget_descriptor;
    private static final
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internal_static_one2data_rbtmqmsgcli_client_UnmountIssiTarget_fieldAccessorTable;
    private static final com.google.protobuf.Descriptors.Descriptor
            internal_static_one2data_rbtmqmsgcli_client_UnmountIssiTargetAck_descriptor;
    private static final
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internal_static_one2data_rbtmqmsgcli_client_UnmountIssiTargetAck_fieldAccessorTable;

    public static com.google.protobuf.Descriptors.FileDescriptor
    getDescriptor() {
        return descriptor;
    }
    private static  com.google.protobuf.Descriptors.FileDescriptor
            descriptor;
    static {
        String[] descriptorData = {
                "\n\032client/ClientMessage.proto\022\033one2data.r" +
                        "btmqmsgcli.client\032\023common/Common.proto\032\021" +
                        "common/Node.proto\032\032client/BackupMessage." +
                        "proto\032\032client/BackupCommand.proto\"k\n\024Ver" +
                        "ifyNodeInfoReport\022\027\n\017device_uuid_key\030\001 \001" +
                        "(\t\022:\n\010net_card\030\002 \003(\0132(.one2data.rbtmqmsg" +
                        "cli.common.NetCardInfo\"Q\n\027VerifyNodeInfo" +
                        "ReportAck\0226\n\010base_ack\030\001 \001(\0132$.one2data.r" +
                        "btmqmsgcli.common.BaseAck\"0\n\025RequestDevi" +
                        "ceMetadata\022\027\n\017device_uuid_key\030\001 \001(\t\"k\n\030R",
                "equestDeviceMetadataAck\0226\n\010base_ack\030\001 \001(" +
                        "\0132$.one2data.rbtmqmsgcli.common.BaseAck\022" +
                        "\027\n\017device_uuid_key\030\002 \001(\t\"6\n\005Login\022\027\n\017dev" +
                        "ice_uuid_key\030\001 \001(\t\022\024\n\014device_token\030\002 \001(\t" +
                        "\"\\\n\010LoginAck\0226\n\010base_ack\030\001 \001(\0132$.one2dat" +
                        "a.rbtmqmsgcli.common.BaseAck\022\030\n\020diskscan" +
                        "_version\030\002 \001(\005\"6\n\032AcquireNodeAndHardware" +
                        "Info\022\030\n\020diskscan_version\030\001 \001(\005\"q\n\035Acquir" +
                        "eNodeAndHardwareInfoAck\022P\n\026node_and_hard" +
                        "ware_info\030\001 \001(\01320.one2data.rbtmqmsgcli.c",
                "lient.NodeAndHardwareInfo\"\206\004\n\014HardwareIn" +
                        "fo\022@\n\rharddisk_info\030\001 \003(\0132).one2data.rbt" +
                        "mqmsgcli.client.HarddiskInfo\022B\n\016partitio" +
                        "n_info\030\002 \003(\0132*.one2data.rbtmqmsgcli.clie" +
                        "nt.PartitionInfo\0224\n\007lv_info\030\003 \003(\0132#.one2" +
                        "data.rbtmqmsgcli.client.LVInfo\022\026\n\016disk_i" +
                        "nfo_json\030\004 \001(\t\022\030\n\020volume_info_json\030\005 \001(\t" +
                        "\022\030\n\020diskscan_version\030\006 \001(\005\0229\n\007lf_info\030\007 " +
                        "\003(\0132(.one2data.rbtmqmsgcli.client.LanFre" +
                        "eInfo\022I\n\022bitmap_driver_info\030\010 \001(\0132-.one2",
                "data.rbtmqmsgcli.client.BitmapDriverInfo" +
                        "\022\034\n\024iscsi_initiator_name\030\t \001(\t\022J\n\027suppor" +
                        "ted_compress_type\030\n \003(\0162).one2data.rbtmq" +
                        "msgcli.common.CompressType\"\226\001\n\023NodeAndHa" +
                        "rdwareInfo\022=\n\ndeviceInfo\030\001 \001(\0132).one2dat" +
                        "a.rbtmqmsgcli.common.NodeBaseInfo\022@\n\rhar" +
                        "dware_info\030\002 \001(\0132).one2data.rbtmqmsgcli." +
                        "client.HardwareInfo\"\235\001\n\031ReportNodeAndHar" +
                        "dwareInfo\022P\n\026node_and_hardware_info\030\001 \001(" +
                        "\01320.one2data.rbtmqmsgcli.client.NodeAndH",
                "ardwareInfo\022\024\n\014install_info\030\002 \001(\t\022\030\n\020dri" +
                        "ver_info_json\030\003 \001(\t\"V\n\034ReportNodeAndHard" +
                        "wareInfoAck\0226\n\010base_ack\030\001 \001(\0132$.one2data" +
                        ".rbtmqmsgcli.common.BaseAck\"r\n\025ReportHar" +
                        "dwareChanged\022\027\n\017device_uuid_key\030\001 \001(\t\022@\n" +
                        "\rhardware_info\030\002 \001(\0132).one2data.rbtmqmsg" +
                        "cli.client.HardwareInfo\"\273\005\n\014HarddiskInfo" +
                        "\022\027\n\017device_uuid_key\030\001 \001(\t\0228\n\003key\030\002 \001(\0132+" +
                        ".one2data.rbtmqmsgcli.common.BlockDevice" +
                        "Key\022\021\n\tis_online\030\003 \001(\010\022\017\n\007is_boot\030\004 \001(\010\022",
                "\024\n\014total_sector\030\005 \001(\004\022\023\n\013sector_size\030\006 \001" +
                        "(\r\022\024\n\014system_index\030\007 \001(\r\022C\n\017part_table_t" +
                        "ype\030\010 \001(\0162*.one2data.rbtmqmsgcli.client." +
                        "PartTableType\022\016\n\006has_pv\030\t \001(\010\022\027\n\017filesys" +
                        "tem_type\030\n \001(\t\022\022\n\nis_virtual\030\013 \001(\010\022\014\n\004na" +
                        "me\030\014 \001(\t\022\n\n\002sn\030\r \001(\t\022\016\n\006vendor\030\016 \001(\t\022\r\n\005" +
                        "model\030\017 \001(\t\022\022\n\nis_visible\030\020 \001(\010\022\023\n\013mount" +
                        "_point\030\021 \001(\t\022\034\n\024physical_sector_size\030\022 \001" +
                        "(\r\022\027\n\017backupable_type\030\023 \001(\005\022\033\n\023logical_s" +
                        "ector_size\030\024 \001(\r\022?\n\npartitions\030\036 \003(\0132+.o",
                "ne2data.rbtmqmsgcli.common.BlockDeviceKe" +
                        "y\022<\n\007sources\030\037 \003(\0132+.one2data.rbtmqmsgcl" +
                        "i.common.BlockDeviceKey\022<\n\007targets\030  \003(\013" +
                        "2+.one2data.rbtmqmsgcli.common.BlockDevi" +
                        "ceKey\"\257\003\n\rPartitionInfo\022\027\n\017device_uuid_k" +
                        "ey\030\001 \001(\t\0228\n\003key\030\002 \001(\0132+.one2data.rbtmqms" +
                        "gcli.common.BlockDeviceKey\022=\n\010disk_key\030\003" +
                        " \001(\0132+.one2data.rbtmqmsgcli.common.Block" +
                        "DeviceKey\022\r\n\005index\030\004 \001(\r\022\021\n\tis_online\030\005 " +
                        "\001(\010\022\017\n\007is_boot\030\006 \001(\010\022\014\n\004type\030\007 \001(\t\022\027\n\017fi",
                "lesystem_type\030\010 \001(\t\022\024\n\014start_sector\030\t \001(" +
                        "\004\022\024\n\014total_sector\030\n \001(\004\022\023\n\013used_sector\030\013" +
                        " \001(\004\022\r\n\005is_pv\030\014 \001(\010\022\022\n\nis_virtual\030\r \001(\010\022" +
                        "\014\n\004name\030\016 \001(\t\022\022\n\nis_visible\030\017 \001(\010\022\023\n\013mou" +
                        "nt_point\030\020 \001(\t\022\027\n\017backupable_type\030\021 \001(\005\"" +
                        "\331\003\n\006LVInfo\022\027\n\017device_uuid_key\030\001 \001(\t\0228\n\003k" +
                        "ey\030\002 \001(\0132+.one2data.rbtmqmsgcli.common.B" +
                        "lockDeviceKey\022\021\n\tis_online\030\003 \001(\010\022\014\n\004name" +
                        "\030\004 \001(\t\022\r\n\005label\030\005 \001(\t\022\027\n\017filesystem_type" +
                        "\030\006 \001(\t\022\022\n\ntotal_size\030\007 \001(\004\022\r\n\005is_pv\030\010 \001(",
                "\010\022\022\n\nis_visible\030\t \001(\010\022\017\n\007is_boot\030\n \001(\010\022\023" +
                        "\n\013mount_point\030\013 \001(\t\022\027\n\017backupable_type\030\014" +
                        " \001(\005\022F\n\rlv_ref_device\030\036 \003(\0132/.one2data.r" +
                        "btmqmsgcli.client.LVInfo.LVRefDevice\032u\n\013" +
                        "LVRefDevice\022>\n\010dev_type\030\001 \001(\0162,.one2data" +
                        ".rbtmqmsgcli.client.BlockDeviceType\022\024\n\014d" +
                        "ev_uuid_key\030\002 \001(\t\022\020\n\010dev_path\030\003 \001(\t\"\223\001\n\013" +
                        "LanFreeInfo\0228\n\003key\030\001 \001(\0132+.one2data.rbtm" +
                        "qmsgcli.common.BlockDeviceKey\022\025\n\rbackfil" +
                        "e_name\030\002 \001(\t\022\032\n\022initiator_dev_uuid\030\003 \001(\t",
                "\022\027\n\017target_dev_uuid\030\004 \001(\t\"[\n\020BitmapDrive" +
                        "rInfo\022\026\n\016driver_version\030\001 \001(\t\022\027\n\017driver_" +
                        "vermagic\030\002 \001(\t\022\026\n\016kernel_release\030\003 \001(\t\"\310" +
                        "\003\n\025BackupWorkStateReport\022\027\n\017device_uuid_" +
                        "key\030\001 \001(\t\022<\n\013action_type\030\002 \001(\0162\'.one2dat" +
                        "a.rbtmqmsgcli.client.ActionType\022]\n\021backu" +
                        "p_work_state\030\003 \001(\0162B.one2data.rbtmqmsgcl" +
                        "i.client.BackupWorkStateReport.BackupWor" +
                        "kState\022\030\n\020timestamp_millis\030\004 \001(\003\022\022\n\nerro" +
                        "r_code\030\005 \001(\r\022\022\n\nerror_info\030\006 \001(\t\022\030\n\020back",
                "up_task_uuid\030\007 \001(\t\022\024\n\014backup_bytes\030\010 \001(\003" +
                        "\022D\n\017action_category\030\t \001(\0162+.one2data.rbt" +
                        "mqmsgcli.client.ActionCategory\"A\n\017Backup" +
                        "WorkState\022\017\n\013BWS_WORKING\020\000\022\017\n\013BWS_SUCCES" +
                        "S\020\001\022\014\n\010BWS_FAIL\020\002\"\200\004\n\021BackupStateReport\022" +
                        "\027\n\017device_uuid_key\030\001 \001(\t\022a\n\025harddisk_bac" +
                        "kup_state\030\002 \003(\0132B.one2data.rbtmqmsgcli.c" +
                        "lient.BackupStateReport.HardwareBackupSt" +
                        "ate\022b\n\026partition_backup_state\030\003 \003(\0132B.on" +
                        "e2data.rbtmqmsgcli.client.BackupStateRep",
                "ort.HardwareBackupState\022[\n\017lv_backup_sta" +
                        "te\030\004 \003(\0132B.one2data.rbtmqmsgcli.client.B" +
                        "ackupStateReport.HardwareBackupState\022\030\n\020" +
                        "backup_task_uuid\030\005 \001(\t\032\223\001\n\023HardwareBacku" +
                        "pState\022<\n\007dev_key\030\001 \001(\0132+.one2data.rbtmq" +
                        "msgcli.common.BlockDeviceKey\022>\n\014backup_s" +
                        "tate\030\002 \001(\0162(.one2data.rbtmqmsgcli.client" +
                        ".BackupState\"\260\004\n\016BackupProgress\022\030\n\020backu" +
                        "p_task_uuid\030\001 \001(\t\022\027\n\017device_uuid_key\030\002 \001" +
                        "(\t\022`\n\024disk_backup_progress\030\003 \003(\0132B.one2d",
                "ata.rbtmqmsgcli.client.BackupProgress.Ha" +
                        "rdwareBackupProgress\022e\n\031partition_backup" +
                        "_progress\030\004 \003(\0132B.one2data.rbtmqmsgcli.c" +
                        "lient.BackupProgress.HardwareBackupProgr" +
                        "ess\022^\n\022lv_backup_progress\030\005 \003(\0132B.one2da" +
                        "ta.rbtmqmsgcli.client.BackupProgress.Har" +
                        "dwareBackupProgress\022\026\n\016total_progress\030\006 " +
                        "\001(\001\022\033\n\023total_net_speed_bit\030\007 \001(\003\022\034\n\024tota" +
                        "l_disk_speed_bit\030\010 \001(\003\032o\n\026HardwareBackup" +
                        "Progress\022<\n\007dev_key\030\001 \001(\0132+.one2data.rbt",
                "mqmsgcli.common.BlockDeviceKey\022\027\n\017backup" +
                        "_progress\030\002 \001(\001\"?\n#NoEnoughAuthorizedLun" +
                        "CapacityReport\022\030\n\020backup_task_uuid\030\001 \001(\t" +
                        "\"\331\005\n\023SyncIndexInfoReport\0226\n\010base_ack\030\001 \001" +
                        "(\0132$.one2data.rbtmqmsgcli.common.BaseAck" +
                        "\022\030\n\020backup_task_uuid\030\002 \001(\t\022/\n\'sync_data_" +
                        "start_timestamp_second_server\030\003 \001(\003\0220\n(s" +
                        "ync_data_finish_timestamp_second_client\030" +
                        "\004 \001(\003\022C\n\017sync_index_info\030\005 \003(\0132*.one2dat" +
                        "a.rbtmqmsgcli.client.SyncIndexInfo\022\030\n\020da",
                "ta_reliability\030\006 \001(\003\022\033\n\023sync_data_size_b" +
                        "yte\030\007 \001(\003\022\027\n\017duration_millis\030\010 \001(\003\022o\n\034fi" +
                        "ne_grained_sync_index_info\030\t \003(\0132I.one2d" +
                        "ata.rbtmqmsgcli.client.SyncIndexInfoRepo" +
                        "rt.FineGrainedSyncIndexInfo\032\206\002\n\030FineGrai" +
                        "nedSyncIndexInfo\022+\n#sync_data_start_time" +
                        "stamp_us_server\030\001 \001(\003\022,\n$sync_data_finis" +
                        "h_timestamp_us_client\030\002 \001(\003\022C\n\017sync_inde" +
                        "x_info\030\003 \003(\0132*.one2data.rbtmqmsgcli.clie" +
                        "nt.SyncIndexInfo\022\030\n\020data_reliability\030\004 \001",
                "(\003\022\033\n\023sync_data_size_byte\030\005 \001(\003\022\023\n\013durat" +
                        "ion_us\030\006 \001(\003\"\332\001\n\030BackupServiceReadyRepor" +
                        "t\022\027\n\017device_uuid_key\030\001 \001(\t\022S\n\006status\030\002 \001" +
                        "(\0162C.one2data.rbtmqmsgcli.client.BackupS" +
                        "erviceReadyReport.ServiceStatus\"P\n\rServi" +
                        "ceStatus\022\013\n\007SS_NONE\020\000\022\025\n\021SS_SYSTEM_RESTA" +
                        "RT\020\001\022\033\n\027SS_SERVICE_ABORMAL_EXIT\020\002\"3\n\030Req" +
                        "uestDeviceClusterType\022\027\n\017device_uuid_key" +
                        "\030\001 \001(\t\"v\n\033RequestDeviceClusterTypeAck\022\027\n" +
                        "\017device_uuid_key\030\001 \001(\t\022>\n\014cluster_type\030\002",
                " \001(\0162(.one2data.rbtmqmsgcli.client.Clust" +
                        "erType\"J\n\025ResetAgentEnvironment\022\030\n\020backu" +
                        "p_task_uuid\030\001 \001(\t\022\027\n\017device_uuid_key\030\002 \001" +
                        "(\t\".\n\023RestartAgentService\022\027\n\017device_uuid" +
                        "_key\030\001 \001(\t\"$\n\017ConnectFCTarget\022\021\n\thost_na" +
                        "me\030\001 \001(\t\"e\n\022ConnectFCTargetAck\0226\n\010base_a" +
                        "ck\030\001 \001(\0132$.one2data.rbtmqmsgcli.common.B" +
                        "aseAck\022\027\n\017device_uuid_key\030\002 \001(\t\"\024\n\022Disco" +
                        "nnectFCTarget\"N\n\017MountIssiTarget\022\021\n\ttarg" +
                        "et_ip\030\001 \001(\t\022\023\n\013target_port\030\002 \001(\r\022\023\n\013targ",
                "et_name\030\003 \001(\t\"L\n\022MountIssiTargetAck\0226\n\010b" +
                        "ase_ack\030\001 \001(\0132$.one2data.rbtmqmsgcli.com" +
                        "mon.BaseAck\"P\n\021UnmountIssiTarget\022\021\n\ttarg" +
                        "et_ip\030\001 \001(\t\022\023\n\013target_port\030\002 \001(\r\022\023\n\013targ" +
                        "et_name\030\003 \001(\t\"N\n\024UnmountIssiTargetAck\0226\n" +
                        "\010base_ack\030\001 \001(\0132$.one2data.rbtmqmsgcli.c" +
                        "ommon.BaseAck*B\n\017BlockDeviceType\022\020\n\014BDT_" +
                        "HARDDISK\020\000\022\021\n\rBDT_PARTITION\020\001\022\n\n\006BDT_LV\020" +
                        "\002*:\n\rPartTableType\022\017\n\013PTT_UNKNOWN\020\000\022\013\n\007P" +
                        "TT_DOS\020\001\022\013\n\007PTT_GPT\020\002*v\n\013BackupState\022\016\n\n",
                "BS_INITIAL\020\000\022\013\n\007BS_IDLE\020\001\022\025\n\021BS_FULL_MIR" +
                        "RORING\020\002\022\024\n\020BS_SYNCHRONIZING\020\003\022\017\n\013BS_CHE" +
                        "CKING\020\004\022\014\n\010BS_QUEUE\020\005*<\n\013ClusterType\022\r\n\t" +
                        "CT_NORMAL\020\000\022\021\n\rCT_ORACLE_RAC\020\001\022\013\n\007CT_MSC" +
                        "S\020\002BD\n3cn.keptdata.one2data.header.messa" +
                        "ge.protobuf.clientB\rClientMessageb\006proto" +
                        "3"
        };
        com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
                new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
                    public com.google.protobuf.ExtensionRegistry assignDescriptors(
                            com.google.protobuf.Descriptors.FileDescriptor root) {
                        descriptor = root;
                        return null;
                    }
                };
        com.google.protobuf.Descriptors.FileDescriptor
                .internalBuildGeneratedFileFrom(descriptorData,
                        new com.google.protobuf.Descriptors.FileDescriptor[] {
                                cn.keptdata.one2data.header.message.protobuf.common.Common.getDescriptor(),
                                cn.keptdata.one2data.header.message.protobuf.common.Node.getDescriptor(),
                                cn.keptdata.one2data.header.message.protobuf.client.BackupMessage.getDescriptor(),
                                cn.keptdata.one2data.header.message.protobuf.client.BackupCommand.getDescriptor(),
                        }, assigner);
        internal_static_one2data_rbtmqmsgcli_client_VerifyNodeInfoReport_descriptor =
                getDescriptor().getMessageTypes().get(0);
        internal_static_one2data_rbtmqmsgcli_client_VerifyNodeInfoReport_fieldAccessorTable = new
                com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
                internal_static_one2data_rbtmqmsgcli_client_VerifyNodeInfoReport_descriptor,
                new String[] { "DeviceUuidKey", "NetCard", });
        internal_static_one2data_rbtmqmsgcli_client_VerifyNodeInfoReportAck_descriptor =
                getDescriptor().getMessageTypes().get(1);
        internal_static_one2data_rbtmqmsgcli_client_VerifyNodeInfoReportAck_fieldAccessorTable = new
                com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
                internal_static_one2data_rbtmqmsgcli_client_VerifyNodeInfoReportAck_descriptor,
                new String[] { "BaseAck", });
        internal_static_one2data_rbtmqmsgcli_client_RequestDeviceMetadata_descriptor =
                getDescriptor().getMessageTypes().get(2);
        internal_static_one2data_rbtmqmsgcli_client_RequestDeviceMetadata_fieldAccessorTable = new
                com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
                internal_static_one2data_rbtmqmsgcli_client_RequestDeviceMetadata_descriptor,
                new String[] { "DeviceUuidKey", });
        internal_static_one2data_rbtmqmsgcli_client_RequestDeviceMetadataAck_descriptor =
                getDescriptor().getMessageTypes().get(3);
        internal_static_one2data_rbtmqmsgcli_client_RequestDeviceMetadataAck_fieldAccessorTable = new
                com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
                internal_static_one2data_rbtmqmsgcli_client_RequestDeviceMetadataAck_descriptor,
                new String[] { "BaseAck", "DeviceUuidKey", });
        internal_static_one2data_rbtmqmsgcli_client_Login_descriptor =
                getDescriptor().getMessageTypes().get(4);
        internal_static_one2data_rbtmqmsgcli_client_Login_fieldAccessorTable = new
                com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
                internal_static_one2data_rbtmqmsgcli_client_Login_descriptor,
                new String[] { "DeviceUuidKey", "DeviceToken", });
        internal_static_one2data_rbtmqmsgcli_client_LoginAck_descriptor =
                getDescriptor().getMessageTypes().get(5);
        internal_static_one2data_rbtmqmsgcli_client_LoginAck_fieldAccessorTable = new
                com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
                internal_static_one2data_rbtmqmsgcli_client_LoginAck_descriptor,
                new String[] { "BaseAck", "DiskscanVersion", });
        internal_static_one2data_rbtmqmsgcli_client_AcquireNodeAndHardwareInfo_descriptor =
                getDescriptor().getMessageTypes().get(6);
        internal_static_one2data_rbtmqmsgcli_client_AcquireNodeAndHardwareInfo_fieldAccessorTable = new
                com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
                internal_static_one2data_rbtmqmsgcli_client_AcquireNodeAndHardwareInfo_descriptor,
                new String[] { "DiskscanVersion", });
        internal_static_one2data_rbtmqmsgcli_client_AcquireNodeAndHardwareInfoAck_descriptor =
                getDescriptor().getMessageTypes().get(7);
        internal_static_one2data_rbtmqmsgcli_client_AcquireNodeAndHardwareInfoAck_fieldAccessorTable = new
                com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
                internal_static_one2data_rbtmqmsgcli_client_AcquireNodeAndHardwareInfoAck_descriptor,
                new String[] { "NodeAndHardwareInfo", });
        internal_static_one2data_rbtmqmsgcli_client_HardwareInfo_descriptor =
                getDescriptor().getMessageTypes().get(8);
        internal_static_one2data_rbtmqmsgcli_client_HardwareInfo_fieldAccessorTable = new
                com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
                internal_static_one2data_rbtmqmsgcli_client_HardwareInfo_descriptor,
                new String[] { "HarddiskInfo", "PartitionInfo", "LvInfo", "DiskInfoJson", "VolumeInfoJson", "DiskscanVersion", "LfInfo", "BitmapDriverInfo", "IscsiInitiatorName", "SupportedCompressType", });
        internal_static_one2data_rbtmqmsgcli_client_NodeAndHardwareInfo_descriptor =
                getDescriptor().getMessageTypes().get(9);
        internal_static_one2data_rbtmqmsgcli_client_NodeAndHardwareInfo_fieldAccessorTable = new
                com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
                internal_static_one2data_rbtmqmsgcli_client_NodeAndHardwareInfo_descriptor,
                new String[] { "DeviceInfo", "HardwareInfo", });
        internal_static_one2data_rbtmqmsgcli_client_ReportNodeAndHardwareInfo_descriptor =
                getDescriptor().getMessageTypes().get(10);
        internal_static_one2data_rbtmqmsgcli_client_ReportNodeAndHardwareInfo_fieldAccessorTable = new
                com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
                internal_static_one2data_rbtmqmsgcli_client_ReportNodeAndHardwareInfo_descriptor,
                new String[] { "NodeAndHardwareInfo", "InstallInfo", "DriverInfoJson", });
        internal_static_one2data_rbtmqmsgcli_client_ReportNodeAndHardwareInfoAck_descriptor =
                getDescriptor().getMessageTypes().get(11);
        internal_static_one2data_rbtmqmsgcli_client_ReportNodeAndHardwareInfoAck_fieldAccessorTable = new
                com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
                internal_static_one2data_rbtmqmsgcli_client_ReportNodeAndHardwareInfoAck_descriptor,
                new String[] { "BaseAck", });
        internal_static_one2data_rbtmqmsgcli_client_ReportHardwareChanged_descriptor =
                getDescriptor().getMessageTypes().get(12);
        internal_static_one2data_rbtmqmsgcli_client_ReportHardwareChanged_fieldAccessorTable = new
                com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
                internal_static_one2data_rbtmqmsgcli_client_ReportHardwareChanged_descriptor,
                new String[] { "DeviceUuidKey", "HardwareInfo", });
        internal_static_one2data_rbtmqmsgcli_client_HarddiskInfo_descriptor =
                getDescriptor().getMessageTypes().get(13);
        internal_static_one2data_rbtmqmsgcli_client_HarddiskInfo_fieldAccessorTable = new
                com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
                internal_static_one2data_rbtmqmsgcli_client_HarddiskInfo_descriptor,
                new String[] { "DeviceUuidKey", "Key", "IsOnline", "IsBoot", "TotalSector", "SectorSize", "SystemIndex", "PartTableType", "HasPv", "FilesystemType", "IsVirtual", "Name", "Sn", "Vendor", "Model", "IsVisible", "MountPoint", "PhysicalSectorSize", "BackupableType", "LogicalSectorSize", "Partitions", "Sources", "Targets", });
        internal_static_one2data_rbtmqmsgcli_client_PartitionInfo_descriptor =
                getDescriptor().getMessageTypes().get(14);
        internal_static_one2data_rbtmqmsgcli_client_PartitionInfo_fieldAccessorTable = new
                com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
                internal_static_one2data_rbtmqmsgcli_client_PartitionInfo_descriptor,
                new String[] { "DeviceUuidKey", "Key", "DiskKey", "Index", "IsOnline", "IsBoot", "Type", "FilesystemType", "StartSector", "TotalSector", "UsedSector", "IsPv", "IsVirtual", "Name", "IsVisible", "MountPoint", "BackupableType", });
        internal_static_one2data_rbtmqmsgcli_client_LVInfo_descriptor =
                getDescriptor().getMessageTypes().get(15);
        internal_static_one2data_rbtmqmsgcli_client_LVInfo_fieldAccessorTable = new
                com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
                internal_static_one2data_rbtmqmsgcli_client_LVInfo_descriptor,
                new String[] { "DeviceUuidKey", "Key", "IsOnline", "Name", "Label", "FilesystemType", "TotalSize", "IsPv", "IsVisible", "IsBoot", "MountPoint", "BackupableType", "LvRefDevice", });
        internal_static_one2data_rbtmqmsgcli_client_LVInfo_LVRefDevice_descriptor =
                internal_static_one2data_rbtmqmsgcli_client_LVInfo_descriptor.getNestedTypes().get(0);
        internal_static_one2data_rbtmqmsgcli_client_LVInfo_LVRefDevice_fieldAccessorTable = new
                com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
                internal_static_one2data_rbtmqmsgcli_client_LVInfo_LVRefDevice_descriptor,
                new String[] { "DevType", "DevUuidKey", "DevPath", });
        internal_static_one2data_rbtmqmsgcli_client_LanFreeInfo_descriptor =
                getDescriptor().getMessageTypes().get(16);
        internal_static_one2data_rbtmqmsgcli_client_LanFreeInfo_fieldAccessorTable = new
                com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
                internal_static_one2data_rbtmqmsgcli_client_LanFreeInfo_descriptor,
                new String[] { "Key", "BackfileName", "InitiatorDevUuid", "TargetDevUuid", });
        internal_static_one2data_rbtmqmsgcli_client_BitmapDriverInfo_descriptor =
                getDescriptor().getMessageTypes().get(17);
        internal_static_one2data_rbtmqmsgcli_client_BitmapDriverInfo_fieldAccessorTable = new
                com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
                internal_static_one2data_rbtmqmsgcli_client_BitmapDriverInfo_descriptor,
                new String[] { "DriverVersion", "DriverVermagic", "KernelRelease", });
        internal_static_one2data_rbtmqmsgcli_client_BackupWorkStateReport_descriptor =
                getDescriptor().getMessageTypes().get(18);
        internal_static_one2data_rbtmqmsgcli_client_BackupWorkStateReport_fieldAccessorTable = new
                com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
                internal_static_one2data_rbtmqmsgcli_client_BackupWorkStateReport_descriptor,
                new String[] { "DeviceUuidKey", "ActionType", "BackupWorkState", "TimestampMillis", "ErrorCode", "ErrorInfo", "BackupTaskUuid", "BackupBytes", "ActionCategory", });
        internal_static_one2data_rbtmqmsgcli_client_BackupStateReport_descriptor =
                getDescriptor().getMessageTypes().get(19);
        internal_static_one2data_rbtmqmsgcli_client_BackupStateReport_fieldAccessorTable = new
                com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
                internal_static_one2data_rbtmqmsgcli_client_BackupStateReport_descriptor,
                new String[] { "DeviceUuidKey", "HarddiskBackupState", "PartitionBackupState", "LvBackupState", "BackupTaskUuid", });
        internal_static_one2data_rbtmqmsgcli_client_BackupStateReport_HardwareBackupState_descriptor =
                internal_static_one2data_rbtmqmsgcli_client_BackupStateReport_descriptor.getNestedTypes().get(0);
        internal_static_one2data_rbtmqmsgcli_client_BackupStateReport_HardwareBackupState_fieldAccessorTable = new
                com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
                internal_static_one2data_rbtmqmsgcli_client_BackupStateReport_HardwareBackupState_descriptor,
                new String[] { "DevKey", "BackupState", });
        internal_static_one2data_rbtmqmsgcli_client_BackupProgress_descriptor =
                getDescriptor().getMessageTypes().get(20);
        internal_static_one2data_rbtmqmsgcli_client_BackupProgress_fieldAccessorTable = new
                com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
                internal_static_one2data_rbtmqmsgcli_client_BackupProgress_descriptor,
                new String[] { "BackupTaskUuid", "DeviceUuidKey", "DiskBackupProgress", "PartitionBackupProgress", "LvBackupProgress", "TotalProgress", "TotalNetSpeedBit", "TotalDiskSpeedBit", });
        internal_static_one2data_rbtmqmsgcli_client_BackupProgress_HardwareBackupProgress_descriptor =
                internal_static_one2data_rbtmqmsgcli_client_BackupProgress_descriptor.getNestedTypes().get(0);
        internal_static_one2data_rbtmqmsgcli_client_BackupProgress_HardwareBackupProgress_fieldAccessorTable = new
                com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
                internal_static_one2data_rbtmqmsgcli_client_BackupProgress_HardwareBackupProgress_descriptor,
                new String[] { "DevKey", "BackupProgress", });
        internal_static_one2data_rbtmqmsgcli_client_NoEnoughAuthorizedLunCapacityReport_descriptor =
                getDescriptor().getMessageTypes().get(21);
        internal_static_one2data_rbtmqmsgcli_client_NoEnoughAuthorizedLunCapacityReport_fieldAccessorTable = new
                com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
                internal_static_one2data_rbtmqmsgcli_client_NoEnoughAuthorizedLunCapacityReport_descriptor,
                new String[] { "BackupTaskUuid", });
        internal_static_one2data_rbtmqmsgcli_client_SyncIndexInfoReport_descriptor =
                getDescriptor().getMessageTypes().get(22);
        internal_static_one2data_rbtmqmsgcli_client_SyncIndexInfoReport_fieldAccessorTable = new
                com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
                internal_static_one2data_rbtmqmsgcli_client_SyncIndexInfoReport_descriptor,
                new String[] { "BaseAck", "BackupTaskUuid", "SyncDataStartTimestampSecondServer", "SyncDataFinishTimestampSecondClient", "SyncIndexInfo", "DataReliability", "SyncDataSizeByte", "DurationMillis", "FineGrainedSyncIndexInfo", });
        internal_static_one2data_rbtmqmsgcli_client_SyncIndexInfoReport_FineGrainedSyncIndexInfo_descriptor =
                internal_static_one2data_rbtmqmsgcli_client_SyncIndexInfoReport_descriptor.getNestedTypes().get(0);
        internal_static_one2data_rbtmqmsgcli_client_SyncIndexInfoReport_FineGrainedSyncIndexInfo_fieldAccessorTable = new
                com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
                internal_static_one2data_rbtmqmsgcli_client_SyncIndexInfoReport_FineGrainedSyncIndexInfo_descriptor,
                new String[] { "SyncDataStartTimestampUsServer", "SyncDataFinishTimestampUsClient", "SyncIndexInfo", "DataReliability", "SyncDataSizeByte", "DurationUs", });
        internal_static_one2data_rbtmqmsgcli_client_BackupServiceReadyReport_descriptor =
                getDescriptor().getMessageTypes().get(23);
        internal_static_one2data_rbtmqmsgcli_client_BackupServiceReadyReport_fieldAccessorTable = new
                com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
                internal_static_one2data_rbtmqmsgcli_client_BackupServiceReadyReport_descriptor,
                new String[] { "DeviceUuidKey", "Status", });
        internal_static_one2data_rbtmqmsgcli_client_RequestDeviceClusterType_descriptor =
                getDescriptor().getMessageTypes().get(24);
        internal_static_one2data_rbtmqmsgcli_client_RequestDeviceClusterType_fieldAccessorTable = new
                com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
                internal_static_one2data_rbtmqmsgcli_client_RequestDeviceClusterType_descriptor,
                new String[] { "DeviceUuidKey", });
        internal_static_one2data_rbtmqmsgcli_client_RequestDeviceClusterTypeAck_descriptor =
                getDescriptor().getMessageTypes().get(25);
        internal_static_one2data_rbtmqmsgcli_client_RequestDeviceClusterTypeAck_fieldAccessorTable = new
                com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
                internal_static_one2data_rbtmqmsgcli_client_RequestDeviceClusterTypeAck_descriptor,
                new String[] { "DeviceUuidKey", "ClusterType", });
        internal_static_one2data_rbtmqmsgcli_client_ResetAgentEnvironment_descriptor =
                getDescriptor().getMessageTypes().get(26);
        internal_static_one2data_rbtmqmsgcli_client_ResetAgentEnvironment_fieldAccessorTable = new
                com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
                internal_static_one2data_rbtmqmsgcli_client_ResetAgentEnvironment_descriptor,
                new String[] { "BackupTaskUuid", "DeviceUuidKey", });
        internal_static_one2data_rbtmqmsgcli_client_RestartAgentService_descriptor =
                getDescriptor().getMessageTypes().get(27);
        internal_static_one2data_rbtmqmsgcli_client_RestartAgentService_fieldAccessorTable = new
                com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
                internal_static_one2data_rbtmqmsgcli_client_RestartAgentService_descriptor,
                new String[] { "DeviceUuidKey", });
        internal_static_one2data_rbtmqmsgcli_client_ConnectFCTarget_descriptor =
                getDescriptor().getMessageTypes().get(28);
        internal_static_one2data_rbtmqmsgcli_client_ConnectFCTarget_fieldAccessorTable = new
                com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
                internal_static_one2data_rbtmqmsgcli_client_ConnectFCTarget_descriptor,
                new String[] { "HostName", });
        internal_static_one2data_rbtmqmsgcli_client_ConnectFCTargetAck_descriptor =
                getDescriptor().getMessageTypes().get(29);
        internal_static_one2data_rbtmqmsgcli_client_ConnectFCTargetAck_fieldAccessorTable = new
                com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
                internal_static_one2data_rbtmqmsgcli_client_ConnectFCTargetAck_descriptor,
                new String[] { "BaseAck", "DeviceUuidKey", });
        internal_static_one2data_rbtmqmsgcli_client_DisconnectFCTarget_descriptor =
                getDescriptor().getMessageTypes().get(30);
        internal_static_one2data_rbtmqmsgcli_client_DisconnectFCTarget_fieldAccessorTable = new
                com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
                internal_static_one2data_rbtmqmsgcli_client_DisconnectFCTarget_descriptor,
                new String[] { });
        internal_static_one2data_rbtmqmsgcli_client_MountIssiTarget_descriptor =
                getDescriptor().getMessageTypes().get(31);
        internal_static_one2data_rbtmqmsgcli_client_MountIssiTarget_fieldAccessorTable = new
                com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
                internal_static_one2data_rbtmqmsgcli_client_MountIssiTarget_descriptor,
                new String[] { "TargetIp", "TargetPort", "TargetName", });
        internal_static_one2data_rbtmqmsgcli_client_MountIssiTargetAck_descriptor =
                getDescriptor().getMessageTypes().get(32);
        internal_static_one2data_rbtmqmsgcli_client_MountIssiTargetAck_fieldAccessorTable = new
                com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
                internal_static_one2data_rbtmqmsgcli_client_MountIssiTargetAck_descriptor,
                new String[] { "BaseAck", });
        internal_static_one2data_rbtmqmsgcli_client_UnmountIssiTarget_descriptor =
                getDescriptor().getMessageTypes().get(33);
        internal_static_one2data_rbtmqmsgcli_client_UnmountIssiTarget_fieldAccessorTable = new
                com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
                internal_static_one2data_rbtmqmsgcli_client_UnmountIssiTarget_descriptor,
                new String[] { "TargetIp", "TargetPort", "TargetName", });
        internal_static_one2data_rbtmqmsgcli_client_UnmountIssiTargetAck_descriptor =
                getDescriptor().getMessageTypes().get(34);
        internal_static_one2data_rbtmqmsgcli_client_UnmountIssiTargetAck_fieldAccessorTable = new
                com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
                internal_static_one2data_rbtmqmsgcli_client_UnmountIssiTargetAck_descriptor,
                new String[] { "BaseAck", });
        cn.keptdata.one2data.header.message.protobuf.common.Common.getDescriptor();
        cn.keptdata.one2data.header.message.protobuf.common.Node.getDescriptor();
        cn.keptdata.one2data.header.message.protobuf.client.BackupMessage.getDescriptor();
        cn.keptdata.one2data.header.message.protobuf.client.BackupCommand.getDescriptor();
    }

    // @@protoc_insertion_point(outer_class_scope)
}
