// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: pe/RecoveryCommand.proto

package com.yushijie.common.protobuf.pe;

public final class RecoveryCommand {
  private RecoveryCommand() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface ActionOrBuilder extends
      // @@protoc_insertion_point(interface_extends:one2data.rbtmqmsgcli.pe.Action)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     *恢复任务唯一ID
     * </pre>
     *
     * <code>optional string recovery_task_uuid = 1;</code>
     */
    String getRecoveryTaskUuid();
    /**
     * <pre>
     *恢复任务唯一ID
     * </pre>
     *
     * <code>optional string recovery_task_uuid = 1;</code>
     */
    com.google.protobuf.ByteString
        getRecoveryTaskUuidBytes();

    /**
     * <pre>
     *实际备份操作类型，支持操作类型见枚举
     * </pre>
     *
     * <code>optional .one2data.rbtmqmsgcli.pe.ActionType action = 2;</code>
     */
    int getActionValue();
    /**
     * <pre>
     *实际备份操作类型，支持操作类型见枚举
     * </pre>
     *
     * <code>optional .one2data.rbtmqmsgcli.pe.ActionType action = 2;</code>
     */
    cn.keptdata.one2data.header.message.protobuf.pe.RecoveryMessage.ActionType getAction();

    /**
     * <pre>
     *恢复配置信息
     * </pre>
     *
     * <code>optional .one2data.rbtmqmsgcli.pe.RecoveryConfig recovery_config = 3;</code>
     */
    boolean hasRecoveryConfig();
    /**
     * <pre>
     *恢复配置信息
     * </pre>
     *
     * <code>optional .one2data.rbtmqmsgcli.pe.RecoveryConfig recovery_config = 3;</code>
     */
    cn.keptdata.one2data.header.message.protobuf.pe.RecoveryMessage.RecoveryConfig getRecoveryConfig();
    /**
     * <pre>
     *恢复配置信息
     * </pre>
     *
     * <code>optional .one2data.rbtmqmsgcli.pe.RecoveryConfig recovery_config = 3;</code>
     */
    cn.keptdata.one2data.header.message.protobuf.pe.RecoveryMessage.RecoveryConfigOrBuilder getRecoveryConfigOrBuilder();

    /**
     * <pre>
     *待恢复的Qcow2与目标磁盘的映射关系(集合)
     * </pre>
     *
     * <code>repeated .one2data.rbtmqmsgcli.pe.Qcow2AndTargetHardwareMapping qcow2_and_target_hardware_mapping = 4;</code>
     */
    java.util.List<cn.keptdata.one2data.header.message.protobuf.pe.RecoveryCommand.Qcow2AndTargetHardwareMapping> 
        getQcow2AndTargetHardwareMappingList();
    /**
     * <pre>
     *待恢复的Qcow2与目标磁盘的映射关系(集合)
     * </pre>
     *
     * <code>repeated .one2data.rbtmqmsgcli.pe.Qcow2AndTargetHardwareMapping qcow2_and_target_hardware_mapping = 4;</code>
     */
    cn.keptdata.one2data.header.message.protobuf.pe.RecoveryCommand.Qcow2AndTargetHardwareMapping getQcow2AndTargetHardwareMapping(int index);
    /**
     * <pre>
     *待恢复的Qcow2与目标磁盘的映射关系(集合)
     * </pre>
     *
     * <code>repeated .one2data.rbtmqmsgcli.pe.Qcow2AndTargetHardwareMapping qcow2_and_target_hardware_mapping = 4;</code>
     */
    int getQcow2AndTargetHardwareMappingCount();
    /**
     * <pre>
     *待恢复的Qcow2与目标磁盘的映射关系(集合)
     * </pre>
     *
     * <code>repeated .one2data.rbtmqmsgcli.pe.Qcow2AndTargetHardwareMapping qcow2_and_target_hardware_mapping = 4;</code>
     */
    java.util.List<? extends cn.keptdata.one2data.header.message.protobuf.pe.RecoveryCommand.Qcow2AndTargetHardwareMappingOrBuilder> 
        getQcow2AndTargetHardwareMappingOrBuilderList();
    /**
     * <pre>
     *待恢复的Qcow2与目标磁盘的映射关系(集合)
     * </pre>
     *
     * <code>repeated .one2data.rbtmqmsgcli.pe.Qcow2AndTargetHardwareMapping qcow2_and_target_hardware_mapping = 4;</code>
     */
    cn.keptdata.one2data.header.message.protobuf.pe.RecoveryCommand.Qcow2AndTargetHardwareMappingOrBuilder getQcow2AndTargetHardwareMappingOrBuilder(
        int index);

    /**
     * <pre>
     *待恢复的Box与目标磁盘的映射关系(集合)
     * </pre>
     *
     * <code>repeated .one2data.rbtmqmsgcli.pe.BoxAndTargetHardwareMapping box_and_target_hardware_mapping = 5;</code>
     */
    java.util.List<cn.keptdata.one2data.header.message.protobuf.pe.RecoveryCommand.BoxAndTargetHardwareMapping> 
        getBoxAndTargetHardwareMappingList();
    /**
     * <pre>
     *待恢复的Box与目标磁盘的映射关系(集合)
     * </pre>
     *
     * <code>repeated .one2data.rbtmqmsgcli.pe.BoxAndTargetHardwareMapping box_and_target_hardware_mapping = 5;</code>
     */
    cn.keptdata.one2data.header.message.protobuf.pe.RecoveryCommand.BoxAndTargetHardwareMapping getBoxAndTargetHardwareMapping(int index);
    /**
     * <pre>
     *待恢复的Box与目标磁盘的映射关系(集合)
     * </pre>
     *
     * <code>repeated .one2data.rbtmqmsgcli.pe.BoxAndTargetHardwareMapping box_and_target_hardware_mapping = 5;</code>
     */
    int getBoxAndTargetHardwareMappingCount();
    /**
     * <pre>
     *待恢复的Box与目标磁盘的映射关系(集合)
     * </pre>
     *
     * <code>repeated .one2data.rbtmqmsgcli.pe.BoxAndTargetHardwareMapping box_and_target_hardware_mapping = 5;</code>
     */
    java.util.List<? extends cn.keptdata.one2data.header.message.protobuf.pe.RecoveryCommand.BoxAndTargetHardwareMappingOrBuilder> 
        getBoxAndTargetHardwareMappingOrBuilderList();
    /**
     * <pre>
     *待恢复的Box与目标磁盘的映射关系(集合)
     * </pre>
     *
     * <code>repeated .one2data.rbtmqmsgcli.pe.BoxAndTargetHardwareMapping box_and_target_hardware_mapping = 5;</code>
     */
    cn.keptdata.one2data.header.message.protobuf.pe.RecoveryCommand.BoxAndTargetHardwareMappingOrBuilder getBoxAndTargetHardwareMappingOrBuilder(
        int index);
  }
  /**
   * <pre>
   *WEB - &gt; Recovery PE 请求恢复操作
   * </pre>
   *
   * Protobuf type {@code one2data.rbtmqmsgcli.pe.Action}
   */
  public  static final class Action extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:one2data.rbtmqmsgcli.pe.Action)
      ActionOrBuilder {
    // Use Action.newBuilder() to construct.
    private Action(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Action() {
      recoveryTaskUuid_ = "";
      action_ = 0;
      qcow2AndTargetHardwareMapping_ = java.util.Collections.emptyList();
      boxAndTargetHardwareMapping_ = java.util.Collections.emptyList();
    }

    @Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private Action(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              String s = input.readStringRequireUtf8();

              recoveryTaskUuid_ = s;
              break;
            }
            case 16: {
              int rawValue = input.readEnum();

              action_ = rawValue;
              break;
            }
            case 26: {
              cn.keptdata.one2data.header.message.protobuf.pe.RecoveryMessage.RecoveryConfig.Builder subBuilder = null;
              if (recoveryConfig_ != null) {
                subBuilder = recoveryConfig_.toBuilder();
              }
              recoveryConfig_ = input.readMessage(cn.keptdata.one2data.header.message.protobuf.pe.RecoveryMessage.RecoveryConfig.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(recoveryConfig_);
                recoveryConfig_ = subBuilder.buildPartial();
              }

              break;
            }
            case 34: {
              if (!((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
                qcow2AndTargetHardwareMapping_ = new java.util.ArrayList<cn.keptdata.one2data.header.message.protobuf.pe.RecoveryCommand.Qcow2AndTargetHardwareMapping>();
                mutable_bitField0_ |= 0x00000008;
              }
              qcow2AndTargetHardwareMapping_.add(
                  input.readMessage(cn.keptdata.one2data.header.message.protobuf.pe.RecoveryCommand.Qcow2AndTargetHardwareMapping.parser(), extensionRegistry));
              break;
            }
            case 42: {
              if (!((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
                boxAndTargetHardwareMapping_ = new java.util.ArrayList<cn.keptdata.one2data.header.message.protobuf.pe.RecoveryCommand.BoxAndTargetHardwareMapping>();
                mutable_bitField0_ |= 0x00000010;
              }
              boxAndTargetHardwareMapping_.add(
                  input.readMessage(cn.keptdata.one2data.header.message.protobuf.pe.RecoveryCommand.BoxAndTargetHardwareMapping.parser(), extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
          qcow2AndTargetHardwareMapping_ = java.util.Collections.unmodifiableList(qcow2AndTargetHardwareMapping_);
        }
        if (((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
          boxAndTargetHardwareMapping_ = java.util.Collections.unmodifiableList(boxAndTargetHardwareMapping_);
        }
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return cn.keptdata.one2data.header.message.protobuf.pe.RecoveryCommand.internal_static_one2data_rbtmqmsgcli_pe_Action_descriptor;
    }

    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return cn.keptdata.one2data.header.message.protobuf.pe.RecoveryCommand.internal_static_one2data_rbtmqmsgcli_pe_Action_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              cn.keptdata.one2data.header.message.protobuf.pe.RecoveryCommand.Action.class, cn.keptdata.one2data.header.message.protobuf.pe.RecoveryCommand.Action.Builder.class);
    }

    private int bitField0_;
    public static final int RECOVERY_TASK_UUID_FIELD_NUMBER = 1;
    private volatile Object recoveryTaskUuid_;
    /**
     * <pre>
     *恢复任务唯一ID
     * </pre>
     *
     * <code>optional string recovery_task_uuid = 1;</code>
     */
    public String getRecoveryTaskUuid() {
      Object ref = recoveryTaskUuid_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        recoveryTaskUuid_ = s;
        return s;
      }
    }
    /**
     * <pre>
     *恢复任务唯一ID
     * </pre>
     *
     * <code>optional string recovery_task_uuid = 1;</code>
     */
    public com.google.protobuf.ByteString
        getRecoveryTaskUuidBytes() {
      Object ref = recoveryTaskUuid_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        recoveryTaskUuid_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int ACTION_FIELD_NUMBER = 2;
    private int action_;
    /**
     * <pre>
     *实际备份操作类型，支持操作类型见枚举
     * </pre>
     *
     * <code>optional .one2data.rbtmqmsgcli.pe.ActionType action = 2;</code>
     */
    public int getActionValue() {
      return action_;
    }
    /**
     * <pre>
     *实际备份操作类型，支持操作类型见枚举
     * </pre>
     *
     * <code>optional .one2data.rbtmqmsgcli.pe.ActionType action = 2;</code>
     */
    public cn.keptdata.one2data.header.message.protobuf.pe.RecoveryMessage.ActionType getAction() {
      cn.keptdata.one2data.header.message.protobuf.pe.RecoveryMessage.ActionType result = cn.keptdata.one2data.header.message.protobuf.pe.RecoveryMessage.ActionType.valueOf(action_);
      return result == null ? cn.keptdata.one2data.header.message.protobuf.pe.RecoveryMessage.ActionType.UNRECOGNIZED : result;
    }

    public static final int RECOVERY_CONFIG_FIELD_NUMBER = 3;
    private cn.keptdata.one2data.header.message.protobuf.pe.RecoveryMessage.RecoveryConfig recoveryConfig_;
    /**
     * <pre>
     *恢复配置信息
     * </pre>
     *
     * <code>optional .one2data.rbtmqmsgcli.pe.RecoveryConfig recovery_config = 3;</code>
     */
    public boolean hasRecoveryConfig() {
      return recoveryConfig_ != null;
    }
    /**
     * <pre>
     *恢复配置信息
     * </pre>
     *
     * <code>optional .one2data.rbtmqmsgcli.pe.RecoveryConfig recovery_config = 3;</code>
     */
    public cn.keptdata.one2data.header.message.protobuf.pe.RecoveryMessage.RecoveryConfig getRecoveryConfig() {
      return recoveryConfig_ == null ? cn.keptdata.one2data.header.message.protobuf.pe.RecoveryMessage.RecoveryConfig.getDefaultInstance() : recoveryConfig_;
    }
    /**
     * <pre>
     *恢复配置信息
     * </pre>
     *
     * <code>optional .one2data.rbtmqmsgcli.pe.RecoveryConfig recovery_config = 3;</code>
     */
    public cn.keptdata.one2data.header.message.protobuf.pe.RecoveryMessage.RecoveryConfigOrBuilder getRecoveryConfigOrBuilder() {
      return getRecoveryConfig();
    }

    public static final int QCOW2_AND_TARGET_HARDWARE_MAPPING_FIELD_NUMBER = 4;
    private java.util.List<cn.keptdata.one2data.header.message.protobuf.pe.RecoveryCommand.Qcow2AndTargetHardwareMapping> qcow2AndTargetHardwareMapping_;
    /**
     * <pre>
     *待恢复的Qcow2与目标磁盘的映射关系(集合)
     * </pre>
     *
     * <code>repeated .one2data.rbtmqmsgcli.pe.Qcow2AndTargetHardwareMapping qcow2_and_target_hardware_mapping = 4;</code>
     */
    public java.util.List<cn.keptdata.one2data.header.message.protobuf.pe.RecoveryCommand.Qcow2AndTargetHardwareMapping> getQcow2AndTargetHardwareMappingList() {
      return qcow2AndTargetHardwareMapping_;
    }
    /**
     * <pre>
     *待恢复的Qcow2与目标磁盘的映射关系(集合)
     * </pre>
     *
     * <code>repeated .one2data.rbtmqmsgcli.pe.Qcow2AndTargetHardwareMapping qcow2_and_target_hardware_mapping = 4;</code>
     */
    public java.util.List<? extends cn.keptdata.one2data.header.message.protobuf.pe.RecoveryCommand.Qcow2AndTargetHardwareMappingOrBuilder> 
        getQcow2AndTargetHardwareMappingOrBuilderList() {
      return qcow2AndTargetHardwareMapping_;
    }
    /**
     * <pre>
     *待恢复的Qcow2与目标磁盘的映射关系(集合)
     * </pre>
     *
     * <code>repeated .one2data.rbtmqmsgcli.pe.Qcow2AndTargetHardwareMapping qcow2_and_target_hardware_mapping = 4;</code>
     */
    public int getQcow2AndTargetHardwareMappingCount() {
      return qcow2AndTargetHardwareMapping_.size();
    }
    /**
     * <pre>
     *待恢复的Qcow2与目标磁盘的映射关系(集合)
     * </pre>
     *
     * <code>repeated .one2data.rbtmqmsgcli.pe.Qcow2AndTargetHardwareMapping qcow2_and_target_hardware_mapping = 4;</code>
     */
    public cn.keptdata.one2data.header.message.protobuf.pe.RecoveryCommand.Qcow2AndTargetHardwareMapping getQcow2AndTargetHardwareMapping(int index) {
      return qcow2AndTargetHardwareMapping_.get(index);
    }
    /**
     * <pre>
     *待恢复的Qcow2与目标磁盘的映射关系(集合)
     * </pre>
     *
     * <code>repeated .one2data.rbtmqmsgcli.pe.Qcow2AndTargetHardwareMapping qcow2_and_target_hardware_mapping = 4;</code>
     */
    public cn.keptdata.one2data.header.message.protobuf.pe.RecoveryCommand.Qcow2AndTargetHardwareMappingOrBuilder getQcow2AndTargetHardwareMappingOrBuilder(
        int index) {
      return qcow2AndTargetHardwareMapping_.get(index);
    }

    public static final int BOX_AND_TARGET_HARDWARE_MAPPING_FIELD_NUMBER = 5;
    private java.util.List<cn.keptdata.one2data.header.message.protobuf.pe.RecoveryCommand.BoxAndTargetHardwareMapping> boxAndTargetHardwareMapping_;
    /**
     * <pre>
     *待恢复的Box与目标磁盘的映射关系(集合)
     * </pre>
     *
     * <code>repeated .one2data.rbtmqmsgcli.pe.BoxAndTargetHardwareMapping box_and_target_hardware_mapping = 5;</code>
     */
    public java.util.List<cn.keptdata.one2data.header.message.protobuf.pe.RecoveryCommand.BoxAndTargetHardwareMapping> getBoxAndTargetHardwareMappingList() {
      return boxAndTargetHardwareMapping_;
    }
    /**
     * <pre>
     *待恢复的Box与目标磁盘的映射关系(集合)
     * </pre>
     *
     * <code>repeated .one2data.rbtmqmsgcli.pe.BoxAndTargetHardwareMapping box_and_target_hardware_mapping = 5;</code>
     */
    public java.util.List<? extends cn.keptdata.one2data.header.message.protobuf.pe.RecoveryCommand.BoxAndTargetHardwareMappingOrBuilder> 
        getBoxAndTargetHardwareMappingOrBuilderList() {
      return boxAndTargetHardwareMapping_;
    }
    /**
     * <pre>
     *待恢复的Box与目标磁盘的映射关系(集合)
     * </pre>
     *
     * <code>repeated .one2data.rbtmqmsgcli.pe.BoxAndTargetHardwareMapping box_and_target_hardware_mapping = 5;</code>
     */
    public int getBoxAndTargetHardwareMappingCount() {
      return boxAndTargetHardwareMapping_.size();
    }
    /**
     * <pre>
     *待恢复的Box与目标磁盘的映射关系(集合)
     * </pre>
     *
     * <code>repeated .one2data.rbtmqmsgcli.pe.BoxAndTargetHardwareMapping box_and_target_hardware_mapping = 5;</code>
     */
    public cn.keptdata.one2data.header.message.protobuf.pe.RecoveryCommand.BoxAndTargetHardwareMapping getBoxAndTargetHardwareMapping(int index) {
      return boxAndTargetHardwareMapping_.get(index);
    }
    /**
     * <pre>
     *待恢复的Box与目标磁盘的映射关系(集合)
     * </pre>
     *
     * <code>repeated .one2data.rbtmqmsgcli.pe.BoxAndTargetHardwareMapping box_and_target_hardware_mapping = 5;</code>
     */
    public cn.keptdata.one2data.header.message.protobuf.pe.RecoveryCommand.BoxAndTargetHardwareMappingOrBuilder getBoxAndTargetHardwareMappingOrBuilder(
        int index) {
      return boxAndTargetHardwareMapping_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getRecoveryTaskUuidBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, recoveryTaskUuid_);
      }
      if (action_ != cn.keptdata.one2data.header.message.protobuf.pe.RecoveryMessage.ActionType.AT_PAUSE.getNumber()) {
        output.writeEnum(2, action_);
      }
      if (recoveryConfig_ != null) {
        output.writeMessage(3, getRecoveryConfig());
      }
      for (int i = 0; i < qcow2AndTargetHardwareMapping_.size(); i++) {
        output.writeMessage(4, qcow2AndTargetHardwareMapping_.get(i));
      }
      for (int i = 0; i < boxAndTargetHardwareMapping_.size(); i++) {
        output.writeMessage(5, boxAndTargetHardwareMapping_.get(i));
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getRecoveryTaskUuidBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, recoveryTaskUuid_);
      }
      if (action_ != cn.keptdata.one2data.header.message.protobuf.pe.RecoveryMessage.ActionType.AT_PAUSE.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(2, action_);
      }
      if (recoveryConfig_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getRecoveryConfig());
      }
      for (int i = 0; i < qcow2AndTargetHardwareMapping_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, qcow2AndTargetHardwareMapping_.get(i));
      }
      for (int i = 0; i < boxAndTargetHardwareMapping_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, boxAndTargetHardwareMapping_.get(i));
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @Override
    public boolean equals(final Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof cn.keptdata.one2data.header.message.protobuf.pe.RecoveryCommand.Action)) {
        return super.equals(obj);
      }
      cn.keptdata.one2data.header.message.protobuf.pe.RecoveryCommand.Action other = (cn.keptdata.one2data.header.message.protobuf.pe.RecoveryCommand.Action) obj;

      boolean result = true;
      result = result && getRecoveryTaskUuid()
          .equals(other.getRecoveryTaskUuid());
      result = result && action_ == other.action_;
      result = result && (hasRecoveryConfig() == other.hasRecoveryConfig());
      if (hasRecoveryConfig()) {
        result = result && getRecoveryConfig()
            .equals(other.getRecoveryConfig());
      }
      result = result && getQcow2AndTargetHardwareMappingList()
          .equals(other.getQcow2AndTargetHardwareMappingList());
      result = result && getBoxAndTargetHardwareMappingList()
          .equals(other.getBoxAndTargetHardwareMappingList());
      return result;
    }

    @Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptorForType().hashCode();
      hash = (37 * hash) + RECOVERY_TASK_UUID_FIELD_NUMBER;
      hash = (53 * hash) + getRecoveryTaskUuid().hashCode();
      hash = (37 * hash) + ACTION_FIELD_NUMBER;
      hash = (53 * hash) + action_;
      if (hasRecoveryConfig()) {
        hash = (37 * hash) + RECOVERY_CONFIG_FIELD_NUMBER;
        hash = (53 * hash) + getRecoveryConfig().hashCode();
      }
      if (getQcow2AndTargetHardwareMappingCount() > 0) {
        hash = (37 * hash) + QCOW2_AND_TARGET_HARDWARE_MAPPING_FIELD_NUMBER;
        hash = (53 * hash) + getQcow2AndTargetHardwareMappingList().hashCode();
      }
      if (getBoxAndTargetHardwareMappingCount() > 0) {
        hash = (37 * hash) + BOX_AND_TARGET_HARDWARE_MAPPING_FIELD_NUMBER;
        hash = (53 * hash) + getBoxAndTargetHardwareMappingList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static cn.keptdata.one2data.header.message.protobuf.pe.RecoveryCommand.Action parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static cn.keptdata.one2data.header.message.protobuf.pe.RecoveryCommand.Action parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static cn.keptdata.one2data.header.message.protobuf.pe.RecoveryCommand.Action parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static cn.keptdata.one2data.header.message.protobuf.pe.RecoveryCommand.Action parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static cn.keptdata.one2data.header.message.protobuf.pe.RecoveryCommand.Action parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static cn.keptdata.one2data.header.message.protobuf.pe.RecoveryCommand.Action parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static cn.keptdata.one2data.header.message.protobuf.pe.RecoveryCommand.Action parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static cn.keptdata.one2data.header.message.protobuf.pe.RecoveryCommand.Action parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static cn.keptdata.one2data.header.message.protobuf.pe.RecoveryCommand.Action parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static cn.keptdata.one2data.header.message.protobuf.pe.RecoveryCommand.Action parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(cn.keptdata.one2data.header.message.protobuf.pe.RecoveryCommand.Action prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     *WEB - &gt; Recovery PE 请求恢复操作
     * </pre>
     *
     * Protobuf type {@code one2data.rbtmqmsgcli.pe.Action}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:one2data.rbtmqmsgcli.pe.Action)
        cn.keptdata.one2data.header.message.protobuf.pe.RecoveryCommand.ActionOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return cn.keptdata.one2data.header.message.protobuf.pe.RecoveryCommand.internal_static_one2data_rbtmqmsgcli_pe_Action_descriptor;
      }

      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return cn.keptdata.one2data.header.message.protobuf.pe.RecoveryCommand.internal_static_one2data_rbtmqmsgcli_pe_Action_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                cn.keptdata.one2data.header.message.protobuf.pe.RecoveryCommand.Action.class, cn.keptdata.one2data.header.message.protobuf.pe.RecoveryCommand.Action.Builder.class);
      }

      // Construct using cn.keptdata.one2data.header.message.protobuf.pe.RecoveryCommand.Action.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getQcow2AndTargetHardwareMappingFieldBuilder();
          getBoxAndTargetHardwareMappingFieldBuilder();
        }
      }
      public Builder clear() {
        super.clear();
        recoveryTaskUuid_ = "";

        action_ = 0;

        if (recoveryConfigBuilder_ == null) {
          recoveryConfig_ = null;
        } else {
          recoveryConfig_ = null;
          recoveryConfigBuilder_ = null;
        }
        if (qcow2AndTargetHardwareMappingBuilder_ == null) {
          qcow2AndTargetHardwareMapping_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000008);
        } else {
          qcow2AndTargetHardwareMappingBuilder_.clear();
        }
        if (boxAndTargetHardwareMappingBuilder_ == null) {
          boxAndTargetHardwareMapping_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000010);
        } else {
          boxAndTargetHardwareMappingBuilder_.clear();
        }
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return cn.keptdata.one2data.header.message.protobuf.pe.RecoveryCommand.internal_static_one2data_rbtmqmsgcli_pe_Action_descriptor;
      }

      public cn.keptdata.one2data.header.message.protobuf.pe.RecoveryCommand.Action getDefaultInstanceForType() {
        return cn.keptdata.one2data.header.message.protobuf.pe.RecoveryCommand.Action.getDefaultInstance();
      }

      public cn.keptdata.one2data.header.message.protobuf.pe.RecoveryCommand.Action build() {
        cn.keptdata.one2data.header.message.protobuf.pe.RecoveryCommand.Action result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public cn.keptdata.one2data.header.message.protobuf.pe.RecoveryCommand.Action buildPartial() {
        cn.keptdata.one2data.header.message.protobuf.pe.RecoveryCommand.Action result = new cn.keptdata.one2data.header.message.protobuf.pe.RecoveryCommand.Action(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        result.recoveryTaskUuid_ = recoveryTaskUuid_;
        result.action_ = action_;
        if (recoveryConfigBuilder_ == null) {
          result.recoveryConfig_ = recoveryConfig_;
        } else {
          result.recoveryConfig_ = recoveryConfigBuilder_.build();
        }
        if (qcow2AndTargetHardwareMappingBuilder_ == null) {
          if (((bitField0_ & 0x00000008) == 0x00000008)) {
            qcow2AndTargetHardwareMapping_ = java.util.Collections.unmodifiableList(qcow2AndTargetHardwareMapping_);
            bitField0_ = (bitField0_ & ~0x00000008);
          }
          result.qcow2AndTargetHardwareMapping_ = qcow2AndTargetHardwareMapping_;
        } else {
          result.qcow2AndTargetHardwareMapping_ = qcow2AndTargetHardwareMappingBuilder_.build();
        }
        if (boxAndTargetHardwareMappingBuilder_ == null) {
          if (((bitField0_ & 0x00000010) == 0x00000010)) {
            boxAndTargetHardwareMapping_ = java.util.Collections.unmodifiableList(boxAndTargetHardwareMapping_);
            bitField0_ = (bitField0_ & ~0x00000010);
          }
          result.boxAndTargetHardwareMapping_ = boxAndTargetHardwareMapping_;
        } else {
          result.boxAndTargetHardwareMapping_ = boxAndTargetHardwareMappingBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof cn.keptdata.one2data.header.message.protobuf.pe.RecoveryCommand.Action) {
          return mergeFrom((cn.keptdata.one2data.header.message.protobuf.pe.RecoveryCommand.Action)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(cn.keptdata.one2data.header.message.protobuf.pe.RecoveryCommand.Action other) {
        if (other == cn.keptdata.one2data.header.message.protobuf.pe.RecoveryCommand.Action.getDefaultInstance()) return this;
        if (!other.getRecoveryTaskUuid().isEmpty()) {
          recoveryTaskUuid_ = other.recoveryTaskUuid_;
          onChanged();
        }
        if (other.action_ != 0) {
          setActionValue(other.getActionValue());
        }
        if (other.hasRecoveryConfig()) {
          mergeRecoveryConfig(other.getRecoveryConfig());
        }
        if (qcow2AndTargetHardwareMappingBuilder_ == null) {
          if (!other.qcow2AndTargetHardwareMapping_.isEmpty()) {
            if (qcow2AndTargetHardwareMapping_.isEmpty()) {
              qcow2AndTargetHardwareMapping_ = other.qcow2AndTargetHardwareMapping_;
              bitField0_ = (bitField0_ & ~0x00000008);
            } else {
              ensureQcow2AndTargetHardwareMappingIsMutable();
              qcow2AndTargetHardwareMapping_.addAll(other.qcow2AndTargetHardwareMapping_);
            }
            onChanged();
          }
        } else {
          if (!other.qcow2AndTargetHardwareMapping_.isEmpty()) {
            if (qcow2AndTargetHardwareMappingBuilder_.isEmpty()) {
              qcow2AndTargetHardwareMappingBuilder_.dispose();
              qcow2AndTargetHardwareMappingBuilder_ = null;
              qcow2AndTargetHardwareMapping_ = other.qcow2AndTargetHardwareMapping_;
              bitField0_ = (bitField0_ & ~0x00000008);
              qcow2AndTargetHardwareMappingBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getQcow2AndTargetHardwareMappingFieldBuilder() : null;
            } else {
              qcow2AndTargetHardwareMappingBuilder_.addAllMessages(other.qcow2AndTargetHardwareMapping_);
            }
          }
        }
        if (boxAndTargetHardwareMappingBuilder_ == null) {
          if (!other.boxAndTargetHardwareMapping_.isEmpty()) {
            if (boxAndTargetHardwareMapping_.isEmpty()) {
              boxAndTargetHardwareMapping_ = other.boxAndTargetHardwareMapping_;
              bitField0_ = (bitField0_ & ~0x00000010);
            } else {
              ensureBoxAndTargetHardwareMappingIsMutable();
              boxAndTargetHardwareMapping_.addAll(other.boxAndTargetHardwareMapping_);
            }
            onChanged();
          }
        } else {
          if (!other.boxAndTargetHardwareMapping_.isEmpty()) {
            if (boxAndTargetHardwareMappingBuilder_.isEmpty()) {
              boxAndTargetHardwareMappingBuilder_.dispose();
              boxAndTargetHardwareMappingBuilder_ = null;
              boxAndTargetHardwareMapping_ = other.boxAndTargetHardwareMapping_;
              bitField0_ = (bitField0_ & ~0x00000010);
              boxAndTargetHardwareMappingBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getBoxAndTargetHardwareMappingFieldBuilder() : null;
            } else {
              boxAndTargetHardwareMappingBuilder_.addAllMessages(other.boxAndTargetHardwareMapping_);
            }
          }
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        cn.keptdata.one2data.header.message.protobuf.pe.RecoveryCommand.Action parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (cn.keptdata.one2data.header.message.protobuf.pe.RecoveryCommand.Action) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private Object recoveryTaskUuid_ = "";
      /**
       * <pre>
       *恢复任务唯一ID
       * </pre>
       *
       * <code>optional string recovery_task_uuid = 1;</code>
       */
      public String getRecoveryTaskUuid() {
        Object ref = recoveryTaskUuid_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          recoveryTaskUuid_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <pre>
       *恢复任务唯一ID
       * </pre>
       *
       * <code>optional string recovery_task_uuid = 1;</code>
       */
      public com.google.protobuf.ByteString
          getRecoveryTaskUuidBytes() {
        Object ref = recoveryTaskUuid_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          recoveryTaskUuid_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *恢复任务唯一ID
       * </pre>
       *
       * <code>optional string recovery_task_uuid = 1;</code>
       */
      public Builder setRecoveryTaskUuid(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        recoveryTaskUuid_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *恢复任务唯一ID
       * </pre>
       *
       * <code>optional string recovery_task_uuid = 1;</code>
       */
      public Builder clearRecoveryTaskUuid() {
        
        recoveryTaskUuid_ = getDefaultInstance().getRecoveryTaskUuid();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *恢复任务唯一ID
       * </pre>
       *
       * <code>optional string recovery_task_uuid = 1;</code>
       */
      public Builder setRecoveryTaskUuidBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        recoveryTaskUuid_ = value;
        onChanged();
        return this;
      }

      private int action_ = 0;
      /**
       * <pre>
       *实际备份操作类型，支持操作类型见枚举
       * </pre>
       *
       * <code>optional .one2data.rbtmqmsgcli.pe.ActionType action = 2;</code>
       */
      public int getActionValue() {
        return action_;
      }
      /**
       * <pre>
       *实际备份操作类型，支持操作类型见枚举
       * </pre>
       *
       * <code>optional .one2data.rbtmqmsgcli.pe.ActionType action = 2;</code>
       */
      public Builder setActionValue(int value) {
        action_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *实际备份操作类型，支持操作类型见枚举
       * </pre>
       *
       * <code>optional .one2data.rbtmqmsgcli.pe.ActionType action = 2;</code>
       */
      public cn.keptdata.one2data.header.message.protobuf.pe.RecoveryMessage.ActionType getAction() {
        cn.keptdata.one2data.header.message.protobuf.pe.RecoveryMessage.ActionType result = cn.keptdata.one2data.header.message.protobuf.pe.RecoveryMessage.ActionType.valueOf(action_);
        return result == null ? cn.keptdata.one2data.header.message.protobuf.pe.RecoveryMessage.ActionType.UNRECOGNIZED : result;
      }
      /**
       * <pre>
       *实际备份操作类型，支持操作类型见枚举
       * </pre>
       *
       * <code>optional .one2data.rbtmqmsgcli.pe.ActionType action = 2;</code>
       */
      public Builder setAction(cn.keptdata.one2data.header.message.protobuf.pe.RecoveryMessage.ActionType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        action_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *实际备份操作类型，支持操作类型见枚举
       * </pre>
       *
       * <code>optional .one2data.rbtmqmsgcli.pe.ActionType action = 2;</code>
       */
      public Builder clearAction() {
        
        action_ = 0;
        onChanged();
        return this;
      }

      private cn.keptdata.one2data.header.message.protobuf.pe.RecoveryMessage.RecoveryConfig recoveryConfig_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          cn.keptdata.one2data.header.message.protobuf.pe.RecoveryMessage.RecoveryConfig, cn.keptdata.one2data.header.message.protobuf.pe.RecoveryMessage.RecoveryConfig.Builder, cn.keptdata.one2data.header.message.protobuf.pe.RecoveryMessage.RecoveryConfigOrBuilder> recoveryConfigBuilder_;
      /**
       * <pre>
       *恢复配置信息
       * </pre>
       *
       * <code>optional .one2data.rbtmqmsgcli.pe.RecoveryConfig recovery_config = 3;</code>
       */
      public boolean hasRecoveryConfig() {
        return recoveryConfigBuilder_ != null || recoveryConfig_ != null;
      }
      /**
       * <pre>
       *恢复配置信息
       * </pre>
       *
       * <code>optional .one2data.rbtmqmsgcli.pe.RecoveryConfig recovery_config = 3;</code>
       */
      public cn.keptdata.one2data.header.message.protobuf.pe.RecoveryMessage.RecoveryConfig getRecoveryConfig() {
        if (recoveryConfigBuilder_ == null) {
          return recoveryConfig_ == null ? cn.keptdata.one2data.header.message.protobuf.pe.RecoveryMessage.RecoveryConfig.getDefaultInstance() : recoveryConfig_;
        } else {
          return recoveryConfigBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       *恢复配置信息
       * </pre>
       *
       * <code>optional .one2data.rbtmqmsgcli.pe.RecoveryConfig recovery_config = 3;</code>
       */
      public Builder setRecoveryConfig(cn.keptdata.one2data.header.message.protobuf.pe.RecoveryMessage.RecoveryConfig value) {
        if (recoveryConfigBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          recoveryConfig_ = value;
          onChanged();
        } else {
          recoveryConfigBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       *恢复配置信息
       * </pre>
       *
       * <code>optional .one2data.rbtmqmsgcli.pe.RecoveryConfig recovery_config = 3;</code>
       */
      public Builder setRecoveryConfig(
          cn.keptdata.one2data.header.message.protobuf.pe.RecoveryMessage.RecoveryConfig.Builder builderForValue) {
        if (recoveryConfigBuilder_ == null) {
          recoveryConfig_ = builderForValue.build();
          onChanged();
        } else {
          recoveryConfigBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       *恢复配置信息
       * </pre>
       *
       * <code>optional .one2data.rbtmqmsgcli.pe.RecoveryConfig recovery_config = 3;</code>
       */
      public Builder mergeRecoveryConfig(cn.keptdata.one2data.header.message.protobuf.pe.RecoveryMessage.RecoveryConfig value) {
        if (recoveryConfigBuilder_ == null) {
          if (recoveryConfig_ != null) {
            recoveryConfig_ =
              cn.keptdata.one2data.header.message.protobuf.pe.RecoveryMessage.RecoveryConfig.newBuilder(recoveryConfig_).mergeFrom(value).buildPartial();
          } else {
            recoveryConfig_ = value;
          }
          onChanged();
        } else {
          recoveryConfigBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       *恢复配置信息
       * </pre>
       *
       * <code>optional .one2data.rbtmqmsgcli.pe.RecoveryConfig recovery_config = 3;</code>
       */
      public Builder clearRecoveryConfig() {
        if (recoveryConfigBuilder_ == null) {
          recoveryConfig_ = null;
          onChanged();
        } else {
          recoveryConfig_ = null;
          recoveryConfigBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       *恢复配置信息
       * </pre>
       *
       * <code>optional .one2data.rbtmqmsgcli.pe.RecoveryConfig recovery_config = 3;</code>
       */
      public cn.keptdata.one2data.header.message.protobuf.pe.RecoveryMessage.RecoveryConfig.Builder getRecoveryConfigBuilder() {
        
        onChanged();
        return getRecoveryConfigFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       *恢复配置信息
       * </pre>
       *
       * <code>optional .one2data.rbtmqmsgcli.pe.RecoveryConfig recovery_config = 3;</code>
       */
      public cn.keptdata.one2data.header.message.protobuf.pe.RecoveryMessage.RecoveryConfigOrBuilder getRecoveryConfigOrBuilder() {
        if (recoveryConfigBuilder_ != null) {
          return recoveryConfigBuilder_.getMessageOrBuilder();
        } else {
          return recoveryConfig_ == null ?
              cn.keptdata.one2data.header.message.protobuf.pe.RecoveryMessage.RecoveryConfig.getDefaultInstance() : recoveryConfig_;
        }
      }
      /**
       * <pre>
       *恢复配置信息
       * </pre>
       *
       * <code>optional .one2data.rbtmqmsgcli.pe.RecoveryConfig recovery_config = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          cn.keptdata.one2data.header.message.protobuf.pe.RecoveryMessage.RecoveryConfig, cn.keptdata.one2data.header.message.protobuf.pe.RecoveryMessage.RecoveryConfig.Builder, cn.keptdata.one2data.header.message.protobuf.pe.RecoveryMessage.RecoveryConfigOrBuilder> 
          getRecoveryConfigFieldBuilder() {
        if (recoveryConfigBuilder_ == null) {
          recoveryConfigBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              cn.keptdata.one2data.header.message.protobuf.pe.RecoveryMessage.RecoveryConfig, cn.keptdata.one2data.header.message.protobuf.pe.RecoveryMessage.RecoveryConfig.Builder, cn.keptdata.one2data.header.message.protobuf.pe.RecoveryMessage.RecoveryConfigOrBuilder>(
                  getRecoveryConfig(),
                  getParentForChildren(),
                  isClean());
          recoveryConfig_ = null;
        }
        return recoveryConfigBuilder_;
      }

      private java.util.List<cn.keptdata.one2data.header.message.protobuf.pe.RecoveryCommand.Qcow2AndTargetHardwareMapping> qcow2AndTargetHardwareMapping_ =
        java.util.Collections.emptyList();
      private void ensureQcow2AndTargetHardwareMappingIsMutable() {
        if (!((bitField0_ & 0x00000008) == 0x00000008)) {
          qcow2AndTargetHardwareMapping_ = new java.util.ArrayList<cn.keptdata.one2data.header.message.protobuf.pe.RecoveryCommand.Qcow2AndTargetHardwareMapping>(qcow2AndTargetHardwareMapping_);
          bitField0_ |= 0x00000008;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          cn.keptdata.one2data.header.message.protobuf.pe.RecoveryCommand.Qcow2AndTargetHardwareMapping, cn.keptdata.one2data.header.message.protobuf.pe.RecoveryCommand.Qcow2AndTargetHardwareMapping.Builder, cn.keptdata.one2data.header.message.protobuf.pe.RecoveryCommand.Qcow2AndTargetHardwareMappingOrBuilder> qcow2AndTargetHardwareMappingBuilder_;

      /**
       * <pre>
       *待恢复的Qcow2与目标磁盘的映射关系(集合)
       * </pre>
       *
       * <code>repeated .one2data.rbtmqmsgcli.pe.Qcow2AndTargetHardwareMapping qcow2_and_target_hardware_mapping = 4;</code>
       */
      public java.util.List<cn.keptdata.one2data.header.message.protobuf.pe.RecoveryCommand.Qcow2AndTargetHardwareMapping> getQcow2AndTargetHardwareMappingList() {
        if (qcow2AndTargetHardwareMappingBuilder_ == null) {
          return java.util.Collections.unmodifiableList(qcow2AndTargetHardwareMapping_);
        } else {
          return qcow2AndTargetHardwareMappingBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       *待恢复的Qcow2与目标磁盘的映射关系(集合)
       * </pre>
       *
       * <code>repeated .one2data.rbtmqmsgcli.pe.Qcow2AndTargetHardwareMapping qcow2_and_target_hardware_mapping = 4;</code>
       */
      public int getQcow2AndTargetHardwareMappingCount() {
        if (qcow2AndTargetHardwareMappingBuilder_ == null) {
          return qcow2AndTargetHardwareMapping_.size();
        } else {
          return qcow2AndTargetHardwareMappingBuilder_.getCount();
        }
      }
      /**
       * <pre>
       *待恢复的Qcow2与目标磁盘的映射关系(集合)
       * </pre>
       *
       * <code>repeated .one2data.rbtmqmsgcli.pe.Qcow2AndTargetHardwareMapping qcow2_and_target_hardware_mapping = 4;</code>
       */
      public cn.keptdata.one2data.header.message.protobuf.pe.RecoveryCommand.Qcow2AndTargetHardwareMapping getQcow2AndTargetHardwareMapping(int index) {
        if (qcow2AndTargetHardwareMappingBuilder_ == null) {
          return qcow2AndTargetHardwareMapping_.get(index);
        } else {
          return qcow2AndTargetHardwareMappingBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       *待恢复的Qcow2与目标磁盘的映射关系(集合)
       * </pre>
       *
       * <code>repeated .one2data.rbtmqmsgcli.pe.Qcow2AndTargetHardwareMapping qcow2_and_target_hardware_mapping = 4;</code>
       */
      public Builder setQcow2AndTargetHardwareMapping(
          int index, cn.keptdata.one2data.header.message.protobuf.pe.RecoveryCommand.Qcow2AndTargetHardwareMapping value) {
        if (qcow2AndTargetHardwareMappingBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureQcow2AndTargetHardwareMappingIsMutable();
          qcow2AndTargetHardwareMapping_.set(index, value);
          onChanged();
        } else {
          qcow2AndTargetHardwareMappingBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       *待恢复的Qcow2与目标磁盘的映射关系(集合)
       * </pre>
       *
       * <code>repeated .one2data.rbtmqmsgcli.pe.Qcow2AndTargetHardwareMapping qcow2_and_target_hardware_mapping = 4;</code>
       */
      public Builder setQcow2AndTargetHardwareMapping(
          int index, cn.keptdata.one2data.header.message.protobuf.pe.RecoveryCommand.Qcow2AndTargetHardwareMapping.Builder builderForValue) {
        if (qcow2AndTargetHardwareMappingBuilder_ == null) {
          ensureQcow2AndTargetHardwareMappingIsMutable();
          qcow2AndTargetHardwareMapping_.set(index, builderForValue.build());
          onChanged();
        } else {
          qcow2AndTargetHardwareMappingBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       *待恢复的Qcow2与目标磁盘的映射关系(集合)
       * </pre>
       *
       * <code>repeated .one2data.rbtmqmsgcli.pe.Qcow2AndTargetHardwareMapping qcow2_and_target_hardware_mapping = 4;</code>
       */
      public Builder addQcow2AndTargetHardwareMapping(cn.keptdata.one2data.header.message.protobuf.pe.RecoveryCommand.Qcow2AndTargetHardwareMapping value) {
        if (qcow2AndTargetHardwareMappingBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureQcow2AndTargetHardwareMappingIsMutable();
          qcow2AndTargetHardwareMapping_.add(value);
          onChanged();
        } else {
          qcow2AndTargetHardwareMappingBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       *待恢复的Qcow2与目标磁盘的映射关系(集合)
       * </pre>
       *
       * <code>repeated .one2data.rbtmqmsgcli.pe.Qcow2AndTargetHardwareMapping qcow2_and_target_hardware_mapping = 4;</code>
       */
      public Builder addQcow2AndTargetHardwareMapping(
          int index, cn.keptdata.one2data.header.message.protobuf.pe.RecoveryCommand.Qcow2AndTargetHardwareMapping value) {
        if (qcow2AndTargetHardwareMappingBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureQcow2AndTargetHardwareMappingIsMutable();
          qcow2AndTargetHardwareMapping_.add(index, value);
          onChanged();
        } else {
          qcow2AndTargetHardwareMappingBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       *待恢复的Qcow2与目标磁盘的映射关系(集合)
       * </pre>
       *
       * <code>repeated .one2data.rbtmqmsgcli.pe.Qcow2AndTargetHardwareMapping qcow2_and_target_hardware_mapping = 4;</code>
       */
      public Builder addQcow2AndTargetHardwareMapping(
          cn.keptdata.one2data.header.message.protobuf.pe.RecoveryCommand.Qcow2AndTargetHardwareMapping.Builder builderForValue) {
        if (qcow2AndTargetHardwareMappingBuilder_ == null) {
          ensureQcow2AndTargetHardwareMappingIsMutable();
          qcow2AndTargetHardwareMapping_.add(builderForValue.build());
          onChanged();
        } else {
          qcow2AndTargetHardwareMappingBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       *待恢复的Qcow2与目标磁盘的映射关系(集合)
       * </pre>
       *
       * <code>repeated .one2data.rbtmqmsgcli.pe.Qcow2AndTargetHardwareMapping qcow2_and_target_hardware_mapping = 4;</code>
       */
      public Builder addQcow2AndTargetHardwareMapping(
          int index, cn.keptdata.one2data.header.message.protobuf.pe.RecoveryCommand.Qcow2AndTargetHardwareMapping.Builder builderForValue) {
        if (qcow2AndTargetHardwareMappingBuilder_ == null) {
          ensureQcow2AndTargetHardwareMappingIsMutable();
          qcow2AndTargetHardwareMapping_.add(index, builderForValue.build());
          onChanged();
        } else {
          qcow2AndTargetHardwareMappingBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       *待恢复的Qcow2与目标磁盘的映射关系(集合)
       * </pre>
       *
       * <code>repeated .one2data.rbtmqmsgcli.pe.Qcow2AndTargetHardwareMapping qcow2_and_target_hardware_mapping = 4;</code>
       */
      public Builder addAllQcow2AndTargetHardwareMapping(
          Iterable<? extends cn.keptdata.one2data.header.message.protobuf.pe.RecoveryCommand.Qcow2AndTargetHardwareMapping> values) {
        if (qcow2AndTargetHardwareMappingBuilder_ == null) {
          ensureQcow2AndTargetHardwareMappingIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, qcow2AndTargetHardwareMapping_);
          onChanged();
        } else {
          qcow2AndTargetHardwareMappingBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       *待恢复的Qcow2与目标磁盘的映射关系(集合)
       * </pre>
       *
       * <code>repeated .one2data.rbtmqmsgcli.pe.Qcow2AndTargetHardwareMapping qcow2_and_target_hardware_mapping = 4;</code>
       */
      public Builder clearQcow2AndTargetHardwareMapping() {
        if (qcow2AndTargetHardwareMappingBuilder_ == null) {
          qcow2AndTargetHardwareMapping_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000008);
          onChanged();
        } else {
          qcow2AndTargetHardwareMappingBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       *待恢复的Qcow2与目标磁盘的映射关系(集合)
       * </pre>
       *
       * <code>repeated .one2data.rbtmqmsgcli.pe.Qcow2AndTargetHardwareMapping qcow2_and_target_hardware_mapping = 4;</code>
       */
      public Builder removeQcow2AndTargetHardwareMapping(int index) {
        if (qcow2AndTargetHardwareMappingBuilder_ == null) {
          ensureQcow2AndTargetHardwareMappingIsMutable();
          qcow2AndTargetHardwareMapping_.remove(index);
          onChanged();
        } else {
          qcow2AndTargetHardwareMappingBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       *待恢复的Qcow2与目标磁盘的映射关系(集合)
       * </pre>
       *
       * <code>repeated .one2data.rbtmqmsgcli.pe.Qcow2AndTargetHardwareMapping qcow2_and_target_hardware_mapping = 4;</code>
       */
      public cn.keptdata.one2data.header.message.protobuf.pe.RecoveryCommand.Qcow2AndTargetHardwareMapping.Builder getQcow2AndTargetHardwareMappingBuilder(
          int index) {
        return getQcow2AndTargetHardwareMappingFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       *待恢复的Qcow2与目标磁盘的映射关系(集合)
       * </pre>
       *
       * <code>repeated .one2data.rbtmqmsgcli.pe.Qcow2AndTargetHardwareMapping qcow2_and_target_hardware_mapping = 4;</code>
       */
      public cn.keptdata.one2data.header.message.protobuf.pe.RecoveryCommand.Qcow2AndTargetHardwareMappingOrBuilder getQcow2AndTargetHardwareMappingOrBuilder(
          int index) {
        if (qcow2AndTargetHardwareMappingBuilder_ == null) {
          return qcow2AndTargetHardwareMapping_.get(index);  } else {
          return qcow2AndTargetHardwareMappingBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       *待恢复的Qcow2与目标磁盘的映射关系(集合)
       * </pre>
       *
       * <code>repeated .one2data.rbtmqmsgcli.pe.Qcow2AndTargetHardwareMapping qcow2_and_target_hardware_mapping = 4;</code>
       */
      public java.util.List<? extends cn.keptdata.one2data.header.message.protobuf.pe.RecoveryCommand.Qcow2AndTargetHardwareMappingOrBuilder> 
           getQcow2AndTargetHardwareMappingOrBuilderList() {
        if (qcow2AndTargetHardwareMappingBuilder_ != null) {
          return qcow2AndTargetHardwareMappingBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(qcow2AndTargetHardwareMapping_);
        }
      }
      /**
       * <pre>
       *待恢复的Qcow2与目标磁盘的映射关系(集合)
       * </pre>
       *
       * <code>repeated .one2data.rbtmqmsgcli.pe.Qcow2AndTargetHardwareMapping qcow2_and_target_hardware_mapping = 4;</code>
       */
      public cn.keptdata.one2data.header.message.protobuf.pe.RecoveryCommand.Qcow2AndTargetHardwareMapping.Builder addQcow2AndTargetHardwareMappingBuilder() {
        return getQcow2AndTargetHardwareMappingFieldBuilder().addBuilder(
            cn.keptdata.one2data.header.message.protobuf.pe.RecoveryCommand.Qcow2AndTargetHardwareMapping.getDefaultInstance());
      }
      /**
       * <pre>
       *待恢复的Qcow2与目标磁盘的映射关系(集合)
       * </pre>
       *
       * <code>repeated .one2data.rbtmqmsgcli.pe.Qcow2AndTargetHardwareMapping qcow2_and_target_hardware_mapping = 4;</code>
       */
      public cn.keptdata.one2data.header.message.protobuf.pe.RecoveryCommand.Qcow2AndTargetHardwareMapping.Builder addQcow2AndTargetHardwareMappingBuilder(
          int index) {
        return getQcow2AndTargetHardwareMappingFieldBuilder().addBuilder(
            index, cn.keptdata.one2data.header.message.protobuf.pe.RecoveryCommand.Qcow2AndTargetHardwareMapping.getDefaultInstance());
      }
      /**
       * <pre>
       *待恢复的Qcow2与目标磁盘的映射关系(集合)
       * </pre>
       *
       * <code>repeated .one2data.rbtmqmsgcli.pe.Qcow2AndTargetHardwareMapping qcow2_and_target_hardware_mapping = 4;</code>
       */
      public java.util.List<cn.keptdata.one2data.header.message.protobuf.pe.RecoveryCommand.Qcow2AndTargetHardwareMapping.Builder> 
           getQcow2AndTargetHardwareMappingBuilderList() {
        return getQcow2AndTargetHardwareMappingFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          cn.keptdata.one2data.header.message.protobuf.pe.RecoveryCommand.Qcow2AndTargetHardwareMapping, cn.keptdata.one2data.header.message.protobuf.pe.RecoveryCommand.Qcow2AndTargetHardwareMapping.Builder, cn.keptdata.one2data.header.message.protobuf.pe.RecoveryCommand.Qcow2AndTargetHardwareMappingOrBuilder> 
          getQcow2AndTargetHardwareMappingFieldBuilder() {
        if (qcow2AndTargetHardwareMappingBuilder_ == null) {
          qcow2AndTargetHardwareMappingBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              cn.keptdata.one2data.header.message.protobuf.pe.RecoveryCommand.Qcow2AndTargetHardwareMapping, cn.keptdata.one2data.header.message.protobuf.pe.RecoveryCommand.Qcow2AndTargetHardwareMapping.Builder, cn.keptdata.one2data.header.message.protobuf.pe.RecoveryCommand.Qcow2AndTargetHardwareMappingOrBuilder>(
                  qcow2AndTargetHardwareMapping_,
                  ((bitField0_ & 0x00000008) == 0x00000008),
                  getParentForChildren(),
                  isClean());
          qcow2AndTargetHardwareMapping_ = null;
        }
        return qcow2AndTargetHardwareMappingBuilder_;
      }

      private java.util.List<cn.keptdata.one2data.header.message.protobuf.pe.RecoveryCommand.BoxAndTargetHardwareMapping> boxAndTargetHardwareMapping_ =
        java.util.Collections.emptyList();
      private void ensureBoxAndTargetHardwareMappingIsMutable() {
        if (!((bitField0_ & 0x00000010) == 0x00000010)) {
          boxAndTargetHardwareMapping_ = new java.util.ArrayList<cn.keptdata.one2data.header.message.protobuf.pe.RecoveryCommand.BoxAndTargetHardwareMapping>(boxAndTargetHardwareMapping_);
          bitField0_ |= 0x00000010;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          cn.keptdata.one2data.header.message.protobuf.pe.RecoveryCommand.BoxAndTargetHardwareMapping, cn.keptdata.one2data.header.message.protobuf.pe.RecoveryCommand.BoxAndTargetHardwareMapping.Builder, cn.keptdata.one2data.header.message.protobuf.pe.RecoveryCommand.BoxAndTargetHardwareMappingOrBuilder> boxAndTargetHardwareMappingBuilder_;

      /**
       * <pre>
       *待恢复的Box与目标磁盘的映射关系(集合)
       * </pre>
       *
       * <code>repeated .one2data.rbtmqmsgcli.pe.BoxAndTargetHardwareMapping box_and_target_hardware_mapping = 5;</code>
       */
      public java.util.List<cn.keptdata.one2data.header.message.protobuf.pe.RecoveryCommand.BoxAndTargetHardwareMapping> getBoxAndTargetHardwareMappingList() {
        if (boxAndTargetHardwareMappingBuilder_ == null) {
          return java.util.Collections.unmodifiableList(boxAndTargetHardwareMapping_);
        } else {
          return boxAndTargetHardwareMappingBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       *待恢复的Box与目标磁盘的映射关系(集合)
       * </pre>
       *
       * <code>repeated .one2data.rbtmqmsgcli.pe.BoxAndTargetHardwareMapping box_and_target_hardware_mapping = 5;</code>
       */
      public int getBoxAndTargetHardwareMappingCount() {
        if (boxAndTargetHardwareMappingBuilder_ == null) {
          return boxAndTargetHardwareMapping_.size();
        } else {
          return boxAndTargetHardwareMappingBuilder_.getCount();
        }
      }
      /**
       * <pre>
       *待恢复的Box与目标磁盘的映射关系(集合)
       * </pre>
       *
       * <code>repeated .one2data.rbtmqmsgcli.pe.BoxAndTargetHardwareMapping box_and_target_hardware_mapping = 5;</code>
       */
      public cn.keptdata.one2data.header.message.protobuf.pe.RecoveryCommand.BoxAndTargetHardwareMapping getBoxAndTargetHardwareMapping(int index) {
        if (boxAndTargetHardwareMappingBuilder_ == null) {
          return boxAndTargetHardwareMapping_.get(index);
        } else {
          return boxAndTargetHardwareMappingBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       *待恢复的Box与目标磁盘的映射关系(集合)
       * </pre>
       *
       * <code>repeated .one2data.rbtmqmsgcli.pe.BoxAndTargetHardwareMapping box_and_target_hardware_mapping = 5;</code>
       */
      public Builder setBoxAndTargetHardwareMapping(
          int index, cn.keptdata.one2data.header.message.protobuf.pe.RecoveryCommand.BoxAndTargetHardwareMapping value) {
        if (boxAndTargetHardwareMappingBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureBoxAndTargetHardwareMappingIsMutable();
          boxAndTargetHardwareMapping_.set(index, value);
          onChanged();
        } else {
          boxAndTargetHardwareMappingBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       *待恢复的Box与目标磁盘的映射关系(集合)
       * </pre>
       *
       * <code>repeated .one2data.rbtmqmsgcli.pe.BoxAndTargetHardwareMapping box_and_target_hardware_mapping = 5;</code>
       */
      public Builder setBoxAndTargetHardwareMapping(
          int index, cn.keptdata.one2data.header.message.protobuf.pe.RecoveryCommand.BoxAndTargetHardwareMapping.Builder builderForValue) {
        if (boxAndTargetHardwareMappingBuilder_ == null) {
          ensureBoxAndTargetHardwareMappingIsMutable();
          boxAndTargetHardwareMapping_.set(index, builderForValue.build());
          onChanged();
        } else {
          boxAndTargetHardwareMappingBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       *待恢复的Box与目标磁盘的映射关系(集合)
       * </pre>
       *
       * <code>repeated .one2data.rbtmqmsgcli.pe.BoxAndTargetHardwareMapping box_and_target_hardware_mapping = 5;</code>
       */
      public Builder addBoxAndTargetHardwareMapping(cn.keptdata.one2data.header.message.protobuf.pe.RecoveryCommand.BoxAndTargetHardwareMapping value) {
        if (boxAndTargetHardwareMappingBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureBoxAndTargetHardwareMappingIsMutable();
          boxAndTargetHardwareMapping_.add(value);
          onChanged();
        } else {
          boxAndTargetHardwareMappingBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       *待恢复的Box与目标磁盘的映射关系(集合)
       * </pre>
       *
       * <code>repeated .one2data.rbtmqmsgcli.pe.BoxAndTargetHardwareMapping box_and_target_hardware_mapping = 5;</code>
       */
      public Builder addBoxAndTargetHardwareMapping(
          int index, cn.keptdata.one2data.header.message.protobuf.pe.RecoveryCommand.BoxAndTargetHardwareMapping value) {
        if (boxAndTargetHardwareMappingBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureBoxAndTargetHardwareMappingIsMutable();
          boxAndTargetHardwareMapping_.add(index, value);
          onChanged();
        } else {
          boxAndTargetHardwareMappingBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       *待恢复的Box与目标磁盘的映射关系(集合)
       * </pre>
       *
       * <code>repeated .one2data.rbtmqmsgcli.pe.BoxAndTargetHardwareMapping box_and_target_hardware_mapping = 5;</code>
       */
      public Builder addBoxAndTargetHardwareMapping(
          cn.keptdata.one2data.header.message.protobuf.pe.RecoveryCommand.BoxAndTargetHardwareMapping.Builder builderForValue) {
        if (boxAndTargetHardwareMappingBuilder_ == null) {
          ensureBoxAndTargetHardwareMappingIsMutable();
          boxAndTargetHardwareMapping_.add(builderForValue.build());
          onChanged();
        } else {
          boxAndTargetHardwareMappingBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       *待恢复的Box与目标磁盘的映射关系(集合)
       * </pre>
       *
       * <code>repeated .one2data.rbtmqmsgcli.pe.BoxAndTargetHardwareMapping box_and_target_hardware_mapping = 5;</code>
       */
      public Builder addBoxAndTargetHardwareMapping(
          int index, cn.keptdata.one2data.header.message.protobuf.pe.RecoveryCommand.BoxAndTargetHardwareMapping.Builder builderForValue) {
        if (boxAndTargetHardwareMappingBuilder_ == null) {
          ensureBoxAndTargetHardwareMappingIsMutable();
          boxAndTargetHardwareMapping_.add(index, builderForValue.build());
          onChanged();
        } else {
          boxAndTargetHardwareMappingBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       *待恢复的Box与目标磁盘的映射关系(集合)
       * </pre>
       *
       * <code>repeated .one2data.rbtmqmsgcli.pe.BoxAndTargetHardwareMapping box_and_target_hardware_mapping = 5;</code>
       */
      public Builder addAllBoxAndTargetHardwareMapping(
          Iterable<? extends cn.keptdata.one2data.header.message.protobuf.pe.RecoveryCommand.BoxAndTargetHardwareMapping> values) {
        if (boxAndTargetHardwareMappingBuilder_ == null) {
          ensureBoxAndTargetHardwareMappingIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, boxAndTargetHardwareMapping_);
          onChanged();
        } else {
          boxAndTargetHardwareMappingBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       *待恢复的Box与目标磁盘的映射关系(集合)
       * </pre>
       *
       * <code>repeated .one2data.rbtmqmsgcli.pe.BoxAndTargetHardwareMapping box_and_target_hardware_mapping = 5;</code>
       */
      public Builder clearBoxAndTargetHardwareMapping() {
        if (boxAndTargetHardwareMappingBuilder_ == null) {
          boxAndTargetHardwareMapping_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000010);
          onChanged();
        } else {
          boxAndTargetHardwareMappingBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       *待恢复的Box与目标磁盘的映射关系(集合)
       * </pre>
       *
       * <code>repeated .one2data.rbtmqmsgcli.pe.BoxAndTargetHardwareMapping box_and_target_hardware_mapping = 5;</code>
       */
      public Builder removeBoxAndTargetHardwareMapping(int index) {
        if (boxAndTargetHardwareMappingBuilder_ == null) {
          ensureBoxAndTargetHardwareMappingIsMutable();
          boxAndTargetHardwareMapping_.remove(index);
          onChanged();
        } else {
          boxAndTargetHardwareMappingBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       *待恢复的Box与目标磁盘的映射关系(集合)
       * </pre>
       *
       * <code>repeated .one2data.rbtmqmsgcli.pe.BoxAndTargetHardwareMapping box_and_target_hardware_mapping = 5;</code>
       */
      public cn.keptdata.one2data.header.message.protobuf.pe.RecoveryCommand.BoxAndTargetHardwareMapping.Builder getBoxAndTargetHardwareMappingBuilder(
          int index) {
        return getBoxAndTargetHardwareMappingFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       *待恢复的Box与目标磁盘的映射关系(集合)
       * </pre>
       *
       * <code>repeated .one2data.rbtmqmsgcli.pe.BoxAndTargetHardwareMapping box_and_target_hardware_mapping = 5;</code>
       */
      public cn.keptdata.one2data.header.message.protobuf.pe.RecoveryCommand.BoxAndTargetHardwareMappingOrBuilder getBoxAndTargetHardwareMappingOrBuilder(
          int index) {
        if (boxAndTargetHardwareMappingBuilder_ == null) {
          return boxAndTargetHardwareMapping_.get(index);  } else {
          return boxAndTargetHardwareMappingBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       *待恢复的Box与目标磁盘的映射关系(集合)
       * </pre>
       *
       * <code>repeated .one2data.rbtmqmsgcli.pe.BoxAndTargetHardwareMapping box_and_target_hardware_mapping = 5;</code>
       */
      public java.util.List<? extends cn.keptdata.one2data.header.message.protobuf.pe.RecoveryCommand.BoxAndTargetHardwareMappingOrBuilder> 
           getBoxAndTargetHardwareMappingOrBuilderList() {
        if (boxAndTargetHardwareMappingBuilder_ != null) {
          return boxAndTargetHardwareMappingBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(boxAndTargetHardwareMapping_);
        }
      }
      /**
       * <pre>
       *待恢复的Box与目标磁盘的映射关系(集合)
       * </pre>
       *
       * <code>repeated .one2data.rbtmqmsgcli.pe.BoxAndTargetHardwareMapping box_and_target_hardware_mapping = 5;</code>
       */
      public cn.keptdata.one2data.header.message.protobuf.pe.RecoveryCommand.BoxAndTargetHardwareMapping.Builder addBoxAndTargetHardwareMappingBuilder() {
        return getBoxAndTargetHardwareMappingFieldBuilder().addBuilder(
            cn.keptdata.one2data.header.message.protobuf.pe.RecoveryCommand.BoxAndTargetHardwareMapping.getDefaultInstance());
      }
      /**
       * <pre>
       *待恢复的Box与目标磁盘的映射关系(集合)
       * </pre>
       *
       * <code>repeated .one2data.rbtmqmsgcli.pe.BoxAndTargetHardwareMapping box_and_target_hardware_mapping = 5;</code>
       */
      public cn.keptdata.one2data.header.message.protobuf.pe.RecoveryCommand.BoxAndTargetHardwareMapping.Builder addBoxAndTargetHardwareMappingBuilder(
          int index) {
        return getBoxAndTargetHardwareMappingFieldBuilder().addBuilder(
            index, cn.keptdata.one2data.header.message.protobuf.pe.RecoveryCommand.BoxAndTargetHardwareMapping.getDefaultInstance());
      }
      /**
       * <pre>
       *待恢复的Box与目标磁盘的映射关系(集合)
       * </pre>
       *
       * <code>repeated .one2data.rbtmqmsgcli.pe.BoxAndTargetHardwareMapping box_and_target_hardware_mapping = 5;</code>
       */
      public java.util.List<cn.keptdata.one2data.header.message.protobuf.pe.RecoveryCommand.BoxAndTargetHardwareMapping.Builder> 
           getBoxAndTargetHardwareMappingBuilderList() {
        return getBoxAndTargetHardwareMappingFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          cn.keptdata.one2data.header.message.protobuf.pe.RecoveryCommand.BoxAndTargetHardwareMapping, cn.keptdata.one2data.header.message.protobuf.pe.RecoveryCommand.BoxAndTargetHardwareMapping.Builder, cn.keptdata.one2data.header.message.protobuf.pe.RecoveryCommand.BoxAndTargetHardwareMappingOrBuilder> 
          getBoxAndTargetHardwareMappingFieldBuilder() {
        if (boxAndTargetHardwareMappingBuilder_ == null) {
          boxAndTargetHardwareMappingBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              cn.keptdata.one2data.header.message.protobuf.pe.RecoveryCommand.BoxAndTargetHardwareMapping, cn.keptdata.one2data.header.message.protobuf.pe.RecoveryCommand.BoxAndTargetHardwareMapping.Builder, cn.keptdata.one2data.header.message.protobuf.pe.RecoveryCommand.BoxAndTargetHardwareMappingOrBuilder>(
                  boxAndTargetHardwareMapping_,
                  ((bitField0_ & 0x00000010) == 0x00000010),
                  getParentForChildren(),
                  isClean());
          boxAndTargetHardwareMapping_ = null;
        }
        return boxAndTargetHardwareMappingBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:one2data.rbtmqmsgcli.pe.Action)
    }

    // @@protoc_insertion_point(class_scope:one2data.rbtmqmsgcli.pe.Action)
    private static final cn.keptdata.one2data.header.message.protobuf.pe.RecoveryCommand.Action DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new cn.keptdata.one2data.header.message.protobuf.pe.RecoveryCommand.Action();
    }

    public static cn.keptdata.one2data.header.message.protobuf.pe.RecoveryCommand.Action getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Action>
        PARSER = new com.google.protobuf.AbstractParser<Action>() {
      public Action parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new Action(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Action> parser() {
      return PARSER;
    }

    @Override
    public com.google.protobuf.Parser<Action> getParserForType() {
      return PARSER;
    }

    public cn.keptdata.one2data.header.message.protobuf.pe.RecoveryCommand.Action getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ActionAckOrBuilder extends
      // @@protoc_insertion_point(interface_extends:one2data.rbtmqmsgcli.pe.ActionAck)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     *操作结果
     * </pre>
     *
     * <code>optional .one2data.rbtmqmsgcli.common.BaseAck base_ack = 1;</code>
     */
    boolean hasBaseAck();
    /**
     * <pre>
     *操作结果
     * </pre>
     *
     * <code>optional .one2data.rbtmqmsgcli.common.BaseAck base_ack = 1;</code>
     */
    cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck getBaseAck();
    /**
     * <pre>
     *操作结果
     * </pre>
     *
     * <code>optional .one2data.rbtmqmsgcli.common.BaseAck base_ack = 1;</code>
     */
    cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAckOrBuilder getBaseAckOrBuilder();

    /**
     * <pre>
     *恢复任务唯一ID
     * </pre>
     *
     * <code>optional string recovery_task_uuid = 2;</code>
     */
    String getRecoveryTaskUuid();
    /**
     * <pre>
     *恢复任务唯一ID
     * </pre>
     *
     * <code>optional string recovery_task_uuid = 2;</code>
     */
    com.google.protobuf.ByteString
        getRecoveryTaskUuidBytes();
  }
  /**
   * <pre>
   *Recovery Target (PE) - &gt; WEB 恢复任务操作结果
   * </pre>
   *
   * Protobuf type {@code one2data.rbtmqmsgcli.pe.ActionAck}
   */
  public  static final class ActionAck extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:one2data.rbtmqmsgcli.pe.ActionAck)
      ActionAckOrBuilder {
    // Use ActionAck.newBuilder() to construct.
    private ActionAck(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ActionAck() {
      recoveryTaskUuid_ = "";
    }

    @Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private ActionAck(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck.Builder subBuilder = null;
              if (baseAck_ != null) {
                subBuilder = baseAck_.toBuilder();
              }
              baseAck_ = input.readMessage(cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(baseAck_);
                baseAck_ = subBuilder.buildPartial();
              }

              break;
            }
            case 18: {
              String s = input.readStringRequireUtf8();

              recoveryTaskUuid_ = s;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return cn.keptdata.one2data.header.message.protobuf.pe.RecoveryCommand.internal_static_one2data_rbtmqmsgcli_pe_ActionAck_descriptor;
    }

    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return cn.keptdata.one2data.header.message.protobuf.pe.RecoveryCommand.internal_static_one2data_rbtmqmsgcli_pe_ActionAck_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              cn.keptdata.one2data.header.message.protobuf.pe.RecoveryCommand.ActionAck.class, cn.keptdata.one2data.header.message.protobuf.pe.RecoveryCommand.ActionAck.Builder.class);
    }

    public static final int BASE_ACK_FIELD_NUMBER = 1;
    private cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck baseAck_;
    /**
     * <pre>
     *操作结果
     * </pre>
     *
     * <code>optional .one2data.rbtmqmsgcli.common.BaseAck base_ack = 1;</code>
     */
    public boolean hasBaseAck() {
      return baseAck_ != null;
    }
    /**
     * <pre>
     *操作结果
     * </pre>
     *
     * <code>optional .one2data.rbtmqmsgcli.common.BaseAck base_ack = 1;</code>
     */
    public cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck getBaseAck() {
      return baseAck_ == null ? cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck.getDefaultInstance() : baseAck_;
    }
    /**
     * <pre>
     *操作结果
     * </pre>
     *
     * <code>optional .one2data.rbtmqmsgcli.common.BaseAck base_ack = 1;</code>
     */
    public cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAckOrBuilder getBaseAckOrBuilder() {
      return getBaseAck();
    }

    public static final int RECOVERY_TASK_UUID_FIELD_NUMBER = 2;
    private volatile Object recoveryTaskUuid_;
    /**
     * <pre>
     *恢复任务唯一ID
     * </pre>
     *
     * <code>optional string recovery_task_uuid = 2;</code>
     */
    public String getRecoveryTaskUuid() {
      Object ref = recoveryTaskUuid_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        recoveryTaskUuid_ = s;
        return s;
      }
    }
    /**
     * <pre>
     *恢复任务唯一ID
     * </pre>
     *
     * <code>optional string recovery_task_uuid = 2;</code>
     */
    public com.google.protobuf.ByteString
        getRecoveryTaskUuidBytes() {
      Object ref = recoveryTaskUuid_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        recoveryTaskUuid_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (baseAck_ != null) {
        output.writeMessage(1, getBaseAck());
      }
      if (!getRecoveryTaskUuidBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, recoveryTaskUuid_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (baseAck_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getBaseAck());
      }
      if (!getRecoveryTaskUuidBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, recoveryTaskUuid_);
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @Override
    public boolean equals(final Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof cn.keptdata.one2data.header.message.protobuf.pe.RecoveryCommand.ActionAck)) {
        return super.equals(obj);
      }
      cn.keptdata.one2data.header.message.protobuf.pe.RecoveryCommand.ActionAck other = (cn.keptdata.one2data.header.message.protobuf.pe.RecoveryCommand.ActionAck) obj;

      boolean result = true;
      result = result && (hasBaseAck() == other.hasBaseAck());
      if (hasBaseAck()) {
        result = result && getBaseAck()
            .equals(other.getBaseAck());
      }
      result = result && getRecoveryTaskUuid()
          .equals(other.getRecoveryTaskUuid());
      return result;
    }

    @Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptorForType().hashCode();
      if (hasBaseAck()) {
        hash = (37 * hash) + BASE_ACK_FIELD_NUMBER;
        hash = (53 * hash) + getBaseAck().hashCode();
      }
      hash = (37 * hash) + RECOVERY_TASK_UUID_FIELD_NUMBER;
      hash = (53 * hash) + getRecoveryTaskUuid().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static cn.keptdata.one2data.header.message.protobuf.pe.RecoveryCommand.ActionAck parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static cn.keptdata.one2data.header.message.protobuf.pe.RecoveryCommand.ActionAck parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static cn.keptdata.one2data.header.message.protobuf.pe.RecoveryCommand.ActionAck parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static cn.keptdata.one2data.header.message.protobuf.pe.RecoveryCommand.ActionAck parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static cn.keptdata.one2data.header.message.protobuf.pe.RecoveryCommand.ActionAck parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static cn.keptdata.one2data.header.message.protobuf.pe.RecoveryCommand.ActionAck parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static cn.keptdata.one2data.header.message.protobuf.pe.RecoveryCommand.ActionAck parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static cn.keptdata.one2data.header.message.protobuf.pe.RecoveryCommand.ActionAck parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static cn.keptdata.one2data.header.message.protobuf.pe.RecoveryCommand.ActionAck parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static cn.keptdata.one2data.header.message.protobuf.pe.RecoveryCommand.ActionAck parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(cn.keptdata.one2data.header.message.protobuf.pe.RecoveryCommand.ActionAck prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     *Recovery Target (PE) - &gt; WEB 恢复任务操作结果
     * </pre>
     *
     * Protobuf type {@code one2data.rbtmqmsgcli.pe.ActionAck}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:one2data.rbtmqmsgcli.pe.ActionAck)
        cn.keptdata.one2data.header.message.protobuf.pe.RecoveryCommand.ActionAckOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return cn.keptdata.one2data.header.message.protobuf.pe.RecoveryCommand.internal_static_one2data_rbtmqmsgcli_pe_ActionAck_descriptor;
      }

      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return cn.keptdata.one2data.header.message.protobuf.pe.RecoveryCommand.internal_static_one2data_rbtmqmsgcli_pe_ActionAck_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                cn.keptdata.one2data.header.message.protobuf.pe.RecoveryCommand.ActionAck.class, cn.keptdata.one2data.header.message.protobuf.pe.RecoveryCommand.ActionAck.Builder.class);
      }

      // Construct using cn.keptdata.one2data.header.message.protobuf.pe.RecoveryCommand.ActionAck.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        if (baseAckBuilder_ == null) {
          baseAck_ = null;
        } else {
          baseAck_ = null;
          baseAckBuilder_ = null;
        }
        recoveryTaskUuid_ = "";

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return cn.keptdata.one2data.header.message.protobuf.pe.RecoveryCommand.internal_static_one2data_rbtmqmsgcli_pe_ActionAck_descriptor;
      }

      public cn.keptdata.one2data.header.message.protobuf.pe.RecoveryCommand.ActionAck getDefaultInstanceForType() {
        return cn.keptdata.one2data.header.message.protobuf.pe.RecoveryCommand.ActionAck.getDefaultInstance();
      }

      public cn.keptdata.one2data.header.message.protobuf.pe.RecoveryCommand.ActionAck build() {
        cn.keptdata.one2data.header.message.protobuf.pe.RecoveryCommand.ActionAck result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public cn.keptdata.one2data.header.message.protobuf.pe.RecoveryCommand.ActionAck buildPartial() {
        cn.keptdata.one2data.header.message.protobuf.pe.RecoveryCommand.ActionAck result = new cn.keptdata.one2data.header.message.protobuf.pe.RecoveryCommand.ActionAck(this);
        if (baseAckBuilder_ == null) {
          result.baseAck_ = baseAck_;
        } else {
          result.baseAck_ = baseAckBuilder_.build();
        }
        result.recoveryTaskUuid_ = recoveryTaskUuid_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof cn.keptdata.one2data.header.message.protobuf.pe.RecoveryCommand.ActionAck) {
          return mergeFrom((cn.keptdata.one2data.header.message.protobuf.pe.RecoveryCommand.ActionAck)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(cn.keptdata.one2data.header.message.protobuf.pe.RecoveryCommand.ActionAck other) {
        if (other == cn.keptdata.one2data.header.message.protobuf.pe.RecoveryCommand.ActionAck.getDefaultInstance()) return this;
        if (other.hasBaseAck()) {
          mergeBaseAck(other.getBaseAck());
        }
        if (!other.getRecoveryTaskUuid().isEmpty()) {
          recoveryTaskUuid_ = other.recoveryTaskUuid_;
          onChanged();
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        cn.keptdata.one2data.header.message.protobuf.pe.RecoveryCommand.ActionAck parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (cn.keptdata.one2data.header.message.protobuf.pe.RecoveryCommand.ActionAck) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck baseAck_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck, cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck.Builder, cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAckOrBuilder> baseAckBuilder_;
      /**
       * <pre>
       *操作结果
       * </pre>
       *
       * <code>optional .one2data.rbtmqmsgcli.common.BaseAck base_ack = 1;</code>
       */
      public boolean hasBaseAck() {
        return baseAckBuilder_ != null || baseAck_ != null;
      }
      /**
       * <pre>
       *操作结果
       * </pre>
       *
       * <code>optional .one2data.rbtmqmsgcli.common.BaseAck base_ack = 1;</code>
       */
      public cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck getBaseAck() {
        if (baseAckBuilder_ == null) {
          return baseAck_ == null ? cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck.getDefaultInstance() : baseAck_;
        } else {
          return baseAckBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       *操作结果
       * </pre>
       *
       * <code>optional .one2data.rbtmqmsgcli.common.BaseAck base_ack = 1;</code>
       */
      public Builder setBaseAck(cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck value) {
        if (baseAckBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          baseAck_ = value;
          onChanged();
        } else {
          baseAckBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       *操作结果
       * </pre>
       *
       * <code>optional .one2data.rbtmqmsgcli.common.BaseAck base_ack = 1;</code>
       */
      public Builder setBaseAck(
          cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck.Builder builderForValue) {
        if (baseAckBuilder_ == null) {
          baseAck_ = builderForValue.build();
          onChanged();
        } else {
          baseAckBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       *操作结果
       * </pre>
       *
       * <code>optional .one2data.rbtmqmsgcli.common.BaseAck base_ack = 1;</code>
       */
      public Builder mergeBaseAck(cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck value) {
        if (baseAckBuilder_ == null) {
          if (baseAck_ != null) {
            baseAck_ =
              cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck.newBuilder(baseAck_).mergeFrom(value).buildPartial();
          } else {
            baseAck_ = value;
          }
          onChanged();
        } else {
          baseAckBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       *操作结果
       * </pre>
       *
       * <code>optional .one2data.rbtmqmsgcli.common.BaseAck base_ack = 1;</code>
       */
      public Builder clearBaseAck() {
        if (baseAckBuilder_ == null) {
          baseAck_ = null;
          onChanged();
        } else {
          baseAck_ = null;
          baseAckBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       *操作结果
       * </pre>
       *
       * <code>optional .one2data.rbtmqmsgcli.common.BaseAck base_ack = 1;</code>
       */
      public cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck.Builder getBaseAckBuilder() {
        
        onChanged();
        return getBaseAckFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       *操作结果
       * </pre>
       *
       * <code>optional .one2data.rbtmqmsgcli.common.BaseAck base_ack = 1;</code>
       */
      public cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAckOrBuilder getBaseAckOrBuilder() {
        if (baseAckBuilder_ != null) {
          return baseAckBuilder_.getMessageOrBuilder();
        } else {
          return baseAck_ == null ?
              cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck.getDefaultInstance() : baseAck_;
        }
      }
      /**
       * <pre>
       *操作结果
       * </pre>
       *
       * <code>optional .one2data.rbtmqmsgcli.common.BaseAck base_ack = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck, cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck.Builder, cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAckOrBuilder> 
          getBaseAckFieldBuilder() {
        if (baseAckBuilder_ == null) {
          baseAckBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck, cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck.Builder, cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAckOrBuilder>(
                  getBaseAck(),
                  getParentForChildren(),
                  isClean());
          baseAck_ = null;
        }
        return baseAckBuilder_;
      }

      private Object recoveryTaskUuid_ = "";
      /**
       * <pre>
       *恢复任务唯一ID
       * </pre>
       *
       * <code>optional string recovery_task_uuid = 2;</code>
       */
      public String getRecoveryTaskUuid() {
        Object ref = recoveryTaskUuid_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          recoveryTaskUuid_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <pre>
       *恢复任务唯一ID
       * </pre>
       *
       * <code>optional string recovery_task_uuid = 2;</code>
       */
      public com.google.protobuf.ByteString
          getRecoveryTaskUuidBytes() {
        Object ref = recoveryTaskUuid_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          recoveryTaskUuid_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *恢复任务唯一ID
       * </pre>
       *
       * <code>optional string recovery_task_uuid = 2;</code>
       */
      public Builder setRecoveryTaskUuid(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        recoveryTaskUuid_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *恢复任务唯一ID
       * </pre>
       *
       * <code>optional string recovery_task_uuid = 2;</code>
       */
      public Builder clearRecoveryTaskUuid() {
        
        recoveryTaskUuid_ = getDefaultInstance().getRecoveryTaskUuid();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *恢复任务唯一ID
       * </pre>
       *
       * <code>optional string recovery_task_uuid = 2;</code>
       */
      public Builder setRecoveryTaskUuidBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        recoveryTaskUuid_ = value;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:one2data.rbtmqmsgcli.pe.ActionAck)
    }

    // @@protoc_insertion_point(class_scope:one2data.rbtmqmsgcli.pe.ActionAck)
    private static final cn.keptdata.one2data.header.message.protobuf.pe.RecoveryCommand.ActionAck DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new cn.keptdata.one2data.header.message.protobuf.pe.RecoveryCommand.ActionAck();
    }

    public static cn.keptdata.one2data.header.message.protobuf.pe.RecoveryCommand.ActionAck getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ActionAck>
        PARSER = new com.google.protobuf.AbstractParser<ActionAck>() {
      public ActionAck parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new ActionAck(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<ActionAck> parser() {
      return PARSER;
    }

    @Override
    public com.google.protobuf.Parser<ActionAck> getParserForType() {
      return PARSER;
    }

    public cn.keptdata.one2data.header.message.protobuf.pe.RecoveryCommand.ActionAck getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface Qcow2AndTargetHardwareMappingOrBuilder extends
      // @@protoc_insertion_point(interface_extends:one2data.rbtmqmsgcli.pe.Qcow2AndTargetHardwareMapping)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     *qcow2唯一ID
     * </pre>
     *
     * <code>optional string qcow2_uuid = 1;</code>
     */
    String getQcow2Uuid();
    /**
     * <pre>
     *qcow2唯一ID
     * </pre>
     *
     * <code>optional string qcow2_uuid = 1;</code>
     */
    com.google.protobuf.ByteString
        getQcow2UuidBytes();

    /**
     * <pre>
     *qcow2top全路径
     * </pre>
     *
     * <code>optional string qcow2_top_path = 2;</code>
     */
    String getQcow2TopPath();
    /**
     * <pre>
     *qcow2top全路径
     * </pre>
     *
     * <code>optional string qcow2_top_path = 2;</code>
     */
    com.google.protobuf.ByteString
        getQcow2TopPathBytes();

    /**
     * <pre>
     *qcow2base全路径
     * </pre>
     *
     * <code>optional string qcow2_base_path = 3;</code>
     */
    String getQcow2BasePath();
    /**
     * <pre>
     *qcow2base全路径
     * </pre>
     *
     * <code>optional string qcow2_base_path = 3;</code>
     */
    com.google.protobuf.ByteString
        getQcow2BasePathBytes();

    /**
     * <pre>
     *原机磁盘唯一标识
     * </pre>
     *
     * <code>optional .one2data.rbtmqmsgcli.common.BlockDeviceKey source_harddisk_key = 4;</code>
     */
    boolean hasSourceHarddiskKey();
    /**
     * <pre>
     *原机磁盘唯一标识
     * </pre>
     *
     * <code>optional .one2data.rbtmqmsgcli.common.BlockDeviceKey source_harddisk_key = 4;</code>
     */
    cn.keptdata.one2data.header.message.protobuf.common.Node.BlockDeviceKey getSourceHarddiskKey();
    /**
     * <pre>
     *原机磁盘唯一标识
     * </pre>
     *
     * <code>optional .one2data.rbtmqmsgcli.common.BlockDeviceKey source_harddisk_key = 4;</code>
     */
    cn.keptdata.one2data.header.message.protobuf.common.Node.BlockDeviceKeyOrBuilder getSourceHarddiskKeyOrBuilder();

    /**
     * <pre>
     *目标磁盘唯一标识
     * </pre>
     *
     * <code>optional .one2data.rbtmqmsgcli.common.BlockDeviceKey target_harddisk_key = 5;</code>
     */
    boolean hasTargetHarddiskKey();
    /**
     * <pre>
     *目标磁盘唯一标识
     * </pre>
     *
     * <code>optional .one2data.rbtmqmsgcli.common.BlockDeviceKey target_harddisk_key = 5;</code>
     */
    cn.keptdata.one2data.header.message.protobuf.common.Node.BlockDeviceKey getTargetHarddiskKey();
    /**
     * <pre>
     *目标磁盘唯一标识
     * </pre>
     *
     * <code>optional .one2data.rbtmqmsgcli.common.BlockDeviceKey target_harddisk_key = 5;</code>
     */
    cn.keptdata.one2data.header.message.protobuf.common.Node.BlockDeviceKeyOrBuilder getTargetHarddiskKeyOrBuilder();
  }
  /**
   * <pre>
   *待恢复的Qcow2 与 恢复目标硬件映射
   * </pre>
   *
   * Protobuf type {@code one2data.rbtmqmsgcli.pe.Qcow2AndTargetHardwareMapping}
   */
  public  static final class Qcow2AndTargetHardwareMapping extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:one2data.rbtmqmsgcli.pe.Qcow2AndTargetHardwareMapping)
      Qcow2AndTargetHardwareMappingOrBuilder {
    // Use Qcow2AndTargetHardwareMapping.newBuilder() to construct.
    private Qcow2AndTargetHardwareMapping(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Qcow2AndTargetHardwareMapping() {
      qcow2Uuid_ = "";
      qcow2TopPath_ = "";
      qcow2BasePath_ = "";
    }

    @Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private Qcow2AndTargetHardwareMapping(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              String s = input.readStringRequireUtf8();

              qcow2Uuid_ = s;
              break;
            }
            case 18: {
              String s = input.readStringRequireUtf8();

              qcow2TopPath_ = s;
              break;
            }
            case 26: {
              String s = input.readStringRequireUtf8();

              qcow2BasePath_ = s;
              break;
            }
            case 34: {
              cn.keptdata.one2data.header.message.protobuf.common.Node.BlockDeviceKey.Builder subBuilder = null;
              if (sourceHarddiskKey_ != null) {
                subBuilder = sourceHarddiskKey_.toBuilder();
              }
              sourceHarddiskKey_ = input.readMessage(cn.keptdata.one2data.header.message.protobuf.common.Node.BlockDeviceKey.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(sourceHarddiskKey_);
                sourceHarddiskKey_ = subBuilder.buildPartial();
              }

              break;
            }
            case 42: {
              cn.keptdata.one2data.header.message.protobuf.common.Node.BlockDeviceKey.Builder subBuilder = null;
              if (targetHarddiskKey_ != null) {
                subBuilder = targetHarddiskKey_.toBuilder();
              }
              targetHarddiskKey_ = input.readMessage(cn.keptdata.one2data.header.message.protobuf.common.Node.BlockDeviceKey.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(targetHarddiskKey_);
                targetHarddiskKey_ = subBuilder.buildPartial();
              }

              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return cn.keptdata.one2data.header.message.protobuf.pe.RecoveryCommand.internal_static_one2data_rbtmqmsgcli_pe_Qcow2AndTargetHardwareMapping_descriptor;
    }

    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return cn.keptdata.one2data.header.message.protobuf.pe.RecoveryCommand.internal_static_one2data_rbtmqmsgcli_pe_Qcow2AndTargetHardwareMapping_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              cn.keptdata.one2data.header.message.protobuf.pe.RecoveryCommand.Qcow2AndTargetHardwareMapping.class, cn.keptdata.one2data.header.message.protobuf.pe.RecoveryCommand.Qcow2AndTargetHardwareMapping.Builder.class);
    }

    public static final int QCOW2_UUID_FIELD_NUMBER = 1;
    private volatile Object qcow2Uuid_;
    /**
     * <pre>
     *qcow2唯一ID
     * </pre>
     *
     * <code>optional string qcow2_uuid = 1;</code>
     */
    public String getQcow2Uuid() {
      Object ref = qcow2Uuid_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        qcow2Uuid_ = s;
        return s;
      }
    }
    /**
     * <pre>
     *qcow2唯一ID
     * </pre>
     *
     * <code>optional string qcow2_uuid = 1;</code>
     */
    public com.google.protobuf.ByteString
        getQcow2UuidBytes() {
      Object ref = qcow2Uuid_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        qcow2Uuid_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int QCOW2_TOP_PATH_FIELD_NUMBER = 2;
    private volatile Object qcow2TopPath_;
    /**
     * <pre>
     *qcow2top全路径
     * </pre>
     *
     * <code>optional string qcow2_top_path = 2;</code>
     */
    public String getQcow2TopPath() {
      Object ref = qcow2TopPath_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        qcow2TopPath_ = s;
        return s;
      }
    }
    /**
     * <pre>
     *qcow2top全路径
     * </pre>
     *
     * <code>optional string qcow2_top_path = 2;</code>
     */
    public com.google.protobuf.ByteString
        getQcow2TopPathBytes() {
      Object ref = qcow2TopPath_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        qcow2TopPath_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int QCOW2_BASE_PATH_FIELD_NUMBER = 3;
    private volatile Object qcow2BasePath_;
    /**
     * <pre>
     *qcow2base全路径
     * </pre>
     *
     * <code>optional string qcow2_base_path = 3;</code>
     */
    public String getQcow2BasePath() {
      Object ref = qcow2BasePath_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        qcow2BasePath_ = s;
        return s;
      }
    }
    /**
     * <pre>
     *qcow2base全路径
     * </pre>
     *
     * <code>optional string qcow2_base_path = 3;</code>
     */
    public com.google.protobuf.ByteString
        getQcow2BasePathBytes() {
      Object ref = qcow2BasePath_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        qcow2BasePath_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int SOURCE_HARDDISK_KEY_FIELD_NUMBER = 4;
    private cn.keptdata.one2data.header.message.protobuf.common.Node.BlockDeviceKey sourceHarddiskKey_;
    /**
     * <pre>
     *原机磁盘唯一标识
     * </pre>
     *
     * <code>optional .one2data.rbtmqmsgcli.common.BlockDeviceKey source_harddisk_key = 4;</code>
     */
    public boolean hasSourceHarddiskKey() {
      return sourceHarddiskKey_ != null;
    }
    /**
     * <pre>
     *原机磁盘唯一标识
     * </pre>
     *
     * <code>optional .one2data.rbtmqmsgcli.common.BlockDeviceKey source_harddisk_key = 4;</code>
     */
    public cn.keptdata.one2data.header.message.protobuf.common.Node.BlockDeviceKey getSourceHarddiskKey() {
      return sourceHarddiskKey_ == null ? cn.keptdata.one2data.header.message.protobuf.common.Node.BlockDeviceKey.getDefaultInstance() : sourceHarddiskKey_;
    }
    /**
     * <pre>
     *原机磁盘唯一标识
     * </pre>
     *
     * <code>optional .one2data.rbtmqmsgcli.common.BlockDeviceKey source_harddisk_key = 4;</code>
     */
    public cn.keptdata.one2data.header.message.protobuf.common.Node.BlockDeviceKeyOrBuilder getSourceHarddiskKeyOrBuilder() {
      return getSourceHarddiskKey();
    }

    public static final int TARGET_HARDDISK_KEY_FIELD_NUMBER = 5;
    private cn.keptdata.one2data.header.message.protobuf.common.Node.BlockDeviceKey targetHarddiskKey_;
    /**
     * <pre>
     *目标磁盘唯一标识
     * </pre>
     *
     * <code>optional .one2data.rbtmqmsgcli.common.BlockDeviceKey target_harddisk_key = 5;</code>
     */
    public boolean hasTargetHarddiskKey() {
      return targetHarddiskKey_ != null;
    }
    /**
     * <pre>
     *目标磁盘唯一标识
     * </pre>
     *
     * <code>optional .one2data.rbtmqmsgcli.common.BlockDeviceKey target_harddisk_key = 5;</code>
     */
    public cn.keptdata.one2data.header.message.protobuf.common.Node.BlockDeviceKey getTargetHarddiskKey() {
      return targetHarddiskKey_ == null ? cn.keptdata.one2data.header.message.protobuf.common.Node.BlockDeviceKey.getDefaultInstance() : targetHarddiskKey_;
    }
    /**
     * <pre>
     *目标磁盘唯一标识
     * </pre>
     *
     * <code>optional .one2data.rbtmqmsgcli.common.BlockDeviceKey target_harddisk_key = 5;</code>
     */
    public cn.keptdata.one2data.header.message.protobuf.common.Node.BlockDeviceKeyOrBuilder getTargetHarddiskKeyOrBuilder() {
      return getTargetHarddiskKey();
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getQcow2UuidBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, qcow2Uuid_);
      }
      if (!getQcow2TopPathBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, qcow2TopPath_);
      }
      if (!getQcow2BasePathBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 3, qcow2BasePath_);
      }
      if (sourceHarddiskKey_ != null) {
        output.writeMessage(4, getSourceHarddiskKey());
      }
      if (targetHarddiskKey_ != null) {
        output.writeMessage(5, getTargetHarddiskKey());
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getQcow2UuidBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, qcow2Uuid_);
      }
      if (!getQcow2TopPathBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, qcow2TopPath_);
      }
      if (!getQcow2BasePathBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, qcow2BasePath_);
      }
      if (sourceHarddiskKey_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, getSourceHarddiskKey());
      }
      if (targetHarddiskKey_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, getTargetHarddiskKey());
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @Override
    public boolean equals(final Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof cn.keptdata.one2data.header.message.protobuf.pe.RecoveryCommand.Qcow2AndTargetHardwareMapping)) {
        return super.equals(obj);
      }
      cn.keptdata.one2data.header.message.protobuf.pe.RecoveryCommand.Qcow2AndTargetHardwareMapping other = (cn.keptdata.one2data.header.message.protobuf.pe.RecoveryCommand.Qcow2AndTargetHardwareMapping) obj;

      boolean result = true;
      result = result && getQcow2Uuid()
          .equals(other.getQcow2Uuid());
      result = result && getQcow2TopPath()
          .equals(other.getQcow2TopPath());
      result = result && getQcow2BasePath()
          .equals(other.getQcow2BasePath());
      result = result && (hasSourceHarddiskKey() == other.hasSourceHarddiskKey());
      if (hasSourceHarddiskKey()) {
        result = result && getSourceHarddiskKey()
            .equals(other.getSourceHarddiskKey());
      }
      result = result && (hasTargetHarddiskKey() == other.hasTargetHarddiskKey());
      if (hasTargetHarddiskKey()) {
        result = result && getTargetHarddiskKey()
            .equals(other.getTargetHarddiskKey());
      }
      return result;
    }

    @Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptorForType().hashCode();
      hash = (37 * hash) + QCOW2_UUID_FIELD_NUMBER;
      hash = (53 * hash) + getQcow2Uuid().hashCode();
      hash = (37 * hash) + QCOW2_TOP_PATH_FIELD_NUMBER;
      hash = (53 * hash) + getQcow2TopPath().hashCode();
      hash = (37 * hash) + QCOW2_BASE_PATH_FIELD_NUMBER;
      hash = (53 * hash) + getQcow2BasePath().hashCode();
      if (hasSourceHarddiskKey()) {
        hash = (37 * hash) + SOURCE_HARDDISK_KEY_FIELD_NUMBER;
        hash = (53 * hash) + getSourceHarddiskKey().hashCode();
      }
      if (hasTargetHarddiskKey()) {
        hash = (37 * hash) + TARGET_HARDDISK_KEY_FIELD_NUMBER;
        hash = (53 * hash) + getTargetHarddiskKey().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static cn.keptdata.one2data.header.message.protobuf.pe.RecoveryCommand.Qcow2AndTargetHardwareMapping parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static cn.keptdata.one2data.header.message.protobuf.pe.RecoveryCommand.Qcow2AndTargetHardwareMapping parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static cn.keptdata.one2data.header.message.protobuf.pe.RecoveryCommand.Qcow2AndTargetHardwareMapping parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static cn.keptdata.one2data.header.message.protobuf.pe.RecoveryCommand.Qcow2AndTargetHardwareMapping parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static cn.keptdata.one2data.header.message.protobuf.pe.RecoveryCommand.Qcow2AndTargetHardwareMapping parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static cn.keptdata.one2data.header.message.protobuf.pe.RecoveryCommand.Qcow2AndTargetHardwareMapping parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static cn.keptdata.one2data.header.message.protobuf.pe.RecoveryCommand.Qcow2AndTargetHardwareMapping parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static cn.keptdata.one2data.header.message.protobuf.pe.RecoveryCommand.Qcow2AndTargetHardwareMapping parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static cn.keptdata.one2data.header.message.protobuf.pe.RecoveryCommand.Qcow2AndTargetHardwareMapping parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static cn.keptdata.one2data.header.message.protobuf.pe.RecoveryCommand.Qcow2AndTargetHardwareMapping parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(cn.keptdata.one2data.header.message.protobuf.pe.RecoveryCommand.Qcow2AndTargetHardwareMapping prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     *待恢复的Qcow2 与 恢复目标硬件映射
     * </pre>
     *
     * Protobuf type {@code one2data.rbtmqmsgcli.pe.Qcow2AndTargetHardwareMapping}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:one2data.rbtmqmsgcli.pe.Qcow2AndTargetHardwareMapping)
        cn.keptdata.one2data.header.message.protobuf.pe.RecoveryCommand.Qcow2AndTargetHardwareMappingOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return cn.keptdata.one2data.header.message.protobuf.pe.RecoveryCommand.internal_static_one2data_rbtmqmsgcli_pe_Qcow2AndTargetHardwareMapping_descriptor;
      }

      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return cn.keptdata.one2data.header.message.protobuf.pe.RecoveryCommand.internal_static_one2data_rbtmqmsgcli_pe_Qcow2AndTargetHardwareMapping_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                cn.keptdata.one2data.header.message.protobuf.pe.RecoveryCommand.Qcow2AndTargetHardwareMapping.class, cn.keptdata.one2data.header.message.protobuf.pe.RecoveryCommand.Qcow2AndTargetHardwareMapping.Builder.class);
      }

      // Construct using cn.keptdata.one2data.header.message.protobuf.pe.RecoveryCommand.Qcow2AndTargetHardwareMapping.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        qcow2Uuid_ = "";

        qcow2TopPath_ = "";

        qcow2BasePath_ = "";

        if (sourceHarddiskKeyBuilder_ == null) {
          sourceHarddiskKey_ = null;
        } else {
          sourceHarddiskKey_ = null;
          sourceHarddiskKeyBuilder_ = null;
        }
        if (targetHarddiskKeyBuilder_ == null) {
          targetHarddiskKey_ = null;
        } else {
          targetHarddiskKey_ = null;
          targetHarddiskKeyBuilder_ = null;
        }
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return cn.keptdata.one2data.header.message.protobuf.pe.RecoveryCommand.internal_static_one2data_rbtmqmsgcli_pe_Qcow2AndTargetHardwareMapping_descriptor;
      }

      public cn.keptdata.one2data.header.message.protobuf.pe.RecoveryCommand.Qcow2AndTargetHardwareMapping getDefaultInstanceForType() {
        return cn.keptdata.one2data.header.message.protobuf.pe.RecoveryCommand.Qcow2AndTargetHardwareMapping.getDefaultInstance();
      }

      public cn.keptdata.one2data.header.message.protobuf.pe.RecoveryCommand.Qcow2AndTargetHardwareMapping build() {
        cn.keptdata.one2data.header.message.protobuf.pe.RecoveryCommand.Qcow2AndTargetHardwareMapping result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public cn.keptdata.one2data.header.message.protobuf.pe.RecoveryCommand.Qcow2AndTargetHardwareMapping buildPartial() {
        cn.keptdata.one2data.header.message.protobuf.pe.RecoveryCommand.Qcow2AndTargetHardwareMapping result = new cn.keptdata.one2data.header.message.protobuf.pe.RecoveryCommand.Qcow2AndTargetHardwareMapping(this);
        result.qcow2Uuid_ = qcow2Uuid_;
        result.qcow2TopPath_ = qcow2TopPath_;
        result.qcow2BasePath_ = qcow2BasePath_;
        if (sourceHarddiskKeyBuilder_ == null) {
          result.sourceHarddiskKey_ = sourceHarddiskKey_;
        } else {
          result.sourceHarddiskKey_ = sourceHarddiskKeyBuilder_.build();
        }
        if (targetHarddiskKeyBuilder_ == null) {
          result.targetHarddiskKey_ = targetHarddiskKey_;
        } else {
          result.targetHarddiskKey_ = targetHarddiskKeyBuilder_.build();
        }
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof cn.keptdata.one2data.header.message.protobuf.pe.RecoveryCommand.Qcow2AndTargetHardwareMapping) {
          return mergeFrom((cn.keptdata.one2data.header.message.protobuf.pe.RecoveryCommand.Qcow2AndTargetHardwareMapping)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(cn.keptdata.one2data.header.message.protobuf.pe.RecoveryCommand.Qcow2AndTargetHardwareMapping other) {
        if (other == cn.keptdata.one2data.header.message.protobuf.pe.RecoveryCommand.Qcow2AndTargetHardwareMapping.getDefaultInstance()) return this;
        if (!other.getQcow2Uuid().isEmpty()) {
          qcow2Uuid_ = other.qcow2Uuid_;
          onChanged();
        }
        if (!other.getQcow2TopPath().isEmpty()) {
          qcow2TopPath_ = other.qcow2TopPath_;
          onChanged();
        }
        if (!other.getQcow2BasePath().isEmpty()) {
          qcow2BasePath_ = other.qcow2BasePath_;
          onChanged();
        }
        if (other.hasSourceHarddiskKey()) {
          mergeSourceHarddiskKey(other.getSourceHarddiskKey());
        }
        if (other.hasTargetHarddiskKey()) {
          mergeTargetHarddiskKey(other.getTargetHarddiskKey());
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        cn.keptdata.one2data.header.message.protobuf.pe.RecoveryCommand.Qcow2AndTargetHardwareMapping parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (cn.keptdata.one2data.header.message.protobuf.pe.RecoveryCommand.Qcow2AndTargetHardwareMapping) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private Object qcow2Uuid_ = "";
      /**
       * <pre>
       *qcow2唯一ID
       * </pre>
       *
       * <code>optional string qcow2_uuid = 1;</code>
       */
      public String getQcow2Uuid() {
        Object ref = qcow2Uuid_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          qcow2Uuid_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <pre>
       *qcow2唯一ID
       * </pre>
       *
       * <code>optional string qcow2_uuid = 1;</code>
       */
      public com.google.protobuf.ByteString
          getQcow2UuidBytes() {
        Object ref = qcow2Uuid_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          qcow2Uuid_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *qcow2唯一ID
       * </pre>
       *
       * <code>optional string qcow2_uuid = 1;</code>
       */
      public Builder setQcow2Uuid(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        qcow2Uuid_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *qcow2唯一ID
       * </pre>
       *
       * <code>optional string qcow2_uuid = 1;</code>
       */
      public Builder clearQcow2Uuid() {
        
        qcow2Uuid_ = getDefaultInstance().getQcow2Uuid();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *qcow2唯一ID
       * </pre>
       *
       * <code>optional string qcow2_uuid = 1;</code>
       */
      public Builder setQcow2UuidBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        qcow2Uuid_ = value;
        onChanged();
        return this;
      }

      private Object qcow2TopPath_ = "";
      /**
       * <pre>
       *qcow2top全路径
       * </pre>
       *
       * <code>optional string qcow2_top_path = 2;</code>
       */
      public String getQcow2TopPath() {
        Object ref = qcow2TopPath_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          qcow2TopPath_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <pre>
       *qcow2top全路径
       * </pre>
       *
       * <code>optional string qcow2_top_path = 2;</code>
       */
      public com.google.protobuf.ByteString
          getQcow2TopPathBytes() {
        Object ref = qcow2TopPath_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          qcow2TopPath_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *qcow2top全路径
       * </pre>
       *
       * <code>optional string qcow2_top_path = 2;</code>
       */
      public Builder setQcow2TopPath(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        qcow2TopPath_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *qcow2top全路径
       * </pre>
       *
       * <code>optional string qcow2_top_path = 2;</code>
       */
      public Builder clearQcow2TopPath() {
        
        qcow2TopPath_ = getDefaultInstance().getQcow2TopPath();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *qcow2top全路径
       * </pre>
       *
       * <code>optional string qcow2_top_path = 2;</code>
       */
      public Builder setQcow2TopPathBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        qcow2TopPath_ = value;
        onChanged();
        return this;
      }

      private Object qcow2BasePath_ = "";
      /**
       * <pre>
       *qcow2base全路径
       * </pre>
       *
       * <code>optional string qcow2_base_path = 3;</code>
       */
      public String getQcow2BasePath() {
        Object ref = qcow2BasePath_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          qcow2BasePath_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <pre>
       *qcow2base全路径
       * </pre>
       *
       * <code>optional string qcow2_base_path = 3;</code>
       */
      public com.google.protobuf.ByteString
          getQcow2BasePathBytes() {
        Object ref = qcow2BasePath_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          qcow2BasePath_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *qcow2base全路径
       * </pre>
       *
       * <code>optional string qcow2_base_path = 3;</code>
       */
      public Builder setQcow2BasePath(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        qcow2BasePath_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *qcow2base全路径
       * </pre>
       *
       * <code>optional string qcow2_base_path = 3;</code>
       */
      public Builder clearQcow2BasePath() {
        
        qcow2BasePath_ = getDefaultInstance().getQcow2BasePath();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *qcow2base全路径
       * </pre>
       *
       * <code>optional string qcow2_base_path = 3;</code>
       */
      public Builder setQcow2BasePathBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        qcow2BasePath_ = value;
        onChanged();
        return this;
      }

      private cn.keptdata.one2data.header.message.protobuf.common.Node.BlockDeviceKey sourceHarddiskKey_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          cn.keptdata.one2data.header.message.protobuf.common.Node.BlockDeviceKey, cn.keptdata.one2data.header.message.protobuf.common.Node.BlockDeviceKey.Builder, cn.keptdata.one2data.header.message.protobuf.common.Node.BlockDeviceKeyOrBuilder> sourceHarddiskKeyBuilder_;
      /**
       * <pre>
       *原机磁盘唯一标识
       * </pre>
       *
       * <code>optional .one2data.rbtmqmsgcli.common.BlockDeviceKey source_harddisk_key = 4;</code>
       */
      public boolean hasSourceHarddiskKey() {
        return sourceHarddiskKeyBuilder_ != null || sourceHarddiskKey_ != null;
      }
      /**
       * <pre>
       *原机磁盘唯一标识
       * </pre>
       *
       * <code>optional .one2data.rbtmqmsgcli.common.BlockDeviceKey source_harddisk_key = 4;</code>
       */
      public cn.keptdata.one2data.header.message.protobuf.common.Node.BlockDeviceKey getSourceHarddiskKey() {
        if (sourceHarddiskKeyBuilder_ == null) {
          return sourceHarddiskKey_ == null ? cn.keptdata.one2data.header.message.protobuf.common.Node.BlockDeviceKey.getDefaultInstance() : sourceHarddiskKey_;
        } else {
          return sourceHarddiskKeyBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       *原机磁盘唯一标识
       * </pre>
       *
       * <code>optional .one2data.rbtmqmsgcli.common.BlockDeviceKey source_harddisk_key = 4;</code>
       */
      public Builder setSourceHarddiskKey(cn.keptdata.one2data.header.message.protobuf.common.Node.BlockDeviceKey value) {
        if (sourceHarddiskKeyBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          sourceHarddiskKey_ = value;
          onChanged();
        } else {
          sourceHarddiskKeyBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       *原机磁盘唯一标识
       * </pre>
       *
       * <code>optional .one2data.rbtmqmsgcli.common.BlockDeviceKey source_harddisk_key = 4;</code>
       */
      public Builder setSourceHarddiskKey(
          cn.keptdata.one2data.header.message.protobuf.common.Node.BlockDeviceKey.Builder builderForValue) {
        if (sourceHarddiskKeyBuilder_ == null) {
          sourceHarddiskKey_ = builderForValue.build();
          onChanged();
        } else {
          sourceHarddiskKeyBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       *原机磁盘唯一标识
       * </pre>
       *
       * <code>optional .one2data.rbtmqmsgcli.common.BlockDeviceKey source_harddisk_key = 4;</code>
       */
      public Builder mergeSourceHarddiskKey(cn.keptdata.one2data.header.message.protobuf.common.Node.BlockDeviceKey value) {
        if (sourceHarddiskKeyBuilder_ == null) {
          if (sourceHarddiskKey_ != null) {
            sourceHarddiskKey_ =
              cn.keptdata.one2data.header.message.protobuf.common.Node.BlockDeviceKey.newBuilder(sourceHarddiskKey_).mergeFrom(value).buildPartial();
          } else {
            sourceHarddiskKey_ = value;
          }
          onChanged();
        } else {
          sourceHarddiskKeyBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       *原机磁盘唯一标识
       * </pre>
       *
       * <code>optional .one2data.rbtmqmsgcli.common.BlockDeviceKey source_harddisk_key = 4;</code>
       */
      public Builder clearSourceHarddiskKey() {
        if (sourceHarddiskKeyBuilder_ == null) {
          sourceHarddiskKey_ = null;
          onChanged();
        } else {
          sourceHarddiskKey_ = null;
          sourceHarddiskKeyBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       *原机磁盘唯一标识
       * </pre>
       *
       * <code>optional .one2data.rbtmqmsgcli.common.BlockDeviceKey source_harddisk_key = 4;</code>
       */
      public cn.keptdata.one2data.header.message.protobuf.common.Node.BlockDeviceKey.Builder getSourceHarddiskKeyBuilder() {
        
        onChanged();
        return getSourceHarddiskKeyFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       *原机磁盘唯一标识
       * </pre>
       *
       * <code>optional .one2data.rbtmqmsgcli.common.BlockDeviceKey source_harddisk_key = 4;</code>
       */
      public cn.keptdata.one2data.header.message.protobuf.common.Node.BlockDeviceKeyOrBuilder getSourceHarddiskKeyOrBuilder() {
        if (sourceHarddiskKeyBuilder_ != null) {
          return sourceHarddiskKeyBuilder_.getMessageOrBuilder();
        } else {
          return sourceHarddiskKey_ == null ?
              cn.keptdata.one2data.header.message.protobuf.common.Node.BlockDeviceKey.getDefaultInstance() : sourceHarddiskKey_;
        }
      }
      /**
       * <pre>
       *原机磁盘唯一标识
       * </pre>
       *
       * <code>optional .one2data.rbtmqmsgcli.common.BlockDeviceKey source_harddisk_key = 4;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          cn.keptdata.one2data.header.message.protobuf.common.Node.BlockDeviceKey, cn.keptdata.one2data.header.message.protobuf.common.Node.BlockDeviceKey.Builder, cn.keptdata.one2data.header.message.protobuf.common.Node.BlockDeviceKeyOrBuilder> 
          getSourceHarddiskKeyFieldBuilder() {
        if (sourceHarddiskKeyBuilder_ == null) {
          sourceHarddiskKeyBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              cn.keptdata.one2data.header.message.protobuf.common.Node.BlockDeviceKey, cn.keptdata.one2data.header.message.protobuf.common.Node.BlockDeviceKey.Builder, cn.keptdata.one2data.header.message.protobuf.common.Node.BlockDeviceKeyOrBuilder>(
                  getSourceHarddiskKey(),
                  getParentForChildren(),
                  isClean());
          sourceHarddiskKey_ = null;
        }
        return sourceHarddiskKeyBuilder_;
      }

      private cn.keptdata.one2data.header.message.protobuf.common.Node.BlockDeviceKey targetHarddiskKey_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          cn.keptdata.one2data.header.message.protobuf.common.Node.BlockDeviceKey, cn.keptdata.one2data.header.message.protobuf.common.Node.BlockDeviceKey.Builder, cn.keptdata.one2data.header.message.protobuf.common.Node.BlockDeviceKeyOrBuilder> targetHarddiskKeyBuilder_;
      /**
       * <pre>
       *目标磁盘唯一标识
       * </pre>
       *
       * <code>optional .one2data.rbtmqmsgcli.common.BlockDeviceKey target_harddisk_key = 5;</code>
       */
      public boolean hasTargetHarddiskKey() {
        return targetHarddiskKeyBuilder_ != null || targetHarddiskKey_ != null;
      }
      /**
       * <pre>
       *目标磁盘唯一标识
       * </pre>
       *
       * <code>optional .one2data.rbtmqmsgcli.common.BlockDeviceKey target_harddisk_key = 5;</code>
       */
      public cn.keptdata.one2data.header.message.protobuf.common.Node.BlockDeviceKey getTargetHarddiskKey() {
        if (targetHarddiskKeyBuilder_ == null) {
          return targetHarddiskKey_ == null ? cn.keptdata.one2data.header.message.protobuf.common.Node.BlockDeviceKey.getDefaultInstance() : targetHarddiskKey_;
        } else {
          return targetHarddiskKeyBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       *目标磁盘唯一标识
       * </pre>
       *
       * <code>optional .one2data.rbtmqmsgcli.common.BlockDeviceKey target_harddisk_key = 5;</code>
       */
      public Builder setTargetHarddiskKey(cn.keptdata.one2data.header.message.protobuf.common.Node.BlockDeviceKey value) {
        if (targetHarddiskKeyBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          targetHarddiskKey_ = value;
          onChanged();
        } else {
          targetHarddiskKeyBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       *目标磁盘唯一标识
       * </pre>
       *
       * <code>optional .one2data.rbtmqmsgcli.common.BlockDeviceKey target_harddisk_key = 5;</code>
       */
      public Builder setTargetHarddiskKey(
          cn.keptdata.one2data.header.message.protobuf.common.Node.BlockDeviceKey.Builder builderForValue) {
        if (targetHarddiskKeyBuilder_ == null) {
          targetHarddiskKey_ = builderForValue.build();
          onChanged();
        } else {
          targetHarddiskKeyBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       *目标磁盘唯一标识
       * </pre>
       *
       * <code>optional .one2data.rbtmqmsgcli.common.BlockDeviceKey target_harddisk_key = 5;</code>
       */
      public Builder mergeTargetHarddiskKey(cn.keptdata.one2data.header.message.protobuf.common.Node.BlockDeviceKey value) {
        if (targetHarddiskKeyBuilder_ == null) {
          if (targetHarddiskKey_ != null) {
            targetHarddiskKey_ =
              cn.keptdata.one2data.header.message.protobuf.common.Node.BlockDeviceKey.newBuilder(targetHarddiskKey_).mergeFrom(value).buildPartial();
          } else {
            targetHarddiskKey_ = value;
          }
          onChanged();
        } else {
          targetHarddiskKeyBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       *目标磁盘唯一标识
       * </pre>
       *
       * <code>optional .one2data.rbtmqmsgcli.common.BlockDeviceKey target_harddisk_key = 5;</code>
       */
      public Builder clearTargetHarddiskKey() {
        if (targetHarddiskKeyBuilder_ == null) {
          targetHarddiskKey_ = null;
          onChanged();
        } else {
          targetHarddiskKey_ = null;
          targetHarddiskKeyBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       *目标磁盘唯一标识
       * </pre>
       *
       * <code>optional .one2data.rbtmqmsgcli.common.BlockDeviceKey target_harddisk_key = 5;</code>
       */
      public cn.keptdata.one2data.header.message.protobuf.common.Node.BlockDeviceKey.Builder getTargetHarddiskKeyBuilder() {
        
        onChanged();
        return getTargetHarddiskKeyFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       *目标磁盘唯一标识
       * </pre>
       *
       * <code>optional .one2data.rbtmqmsgcli.common.BlockDeviceKey target_harddisk_key = 5;</code>
       */
      public cn.keptdata.one2data.header.message.protobuf.common.Node.BlockDeviceKeyOrBuilder getTargetHarddiskKeyOrBuilder() {
        if (targetHarddiskKeyBuilder_ != null) {
          return targetHarddiskKeyBuilder_.getMessageOrBuilder();
        } else {
          return targetHarddiskKey_ == null ?
              cn.keptdata.one2data.header.message.protobuf.common.Node.BlockDeviceKey.getDefaultInstance() : targetHarddiskKey_;
        }
      }
      /**
       * <pre>
       *目标磁盘唯一标识
       * </pre>
       *
       * <code>optional .one2data.rbtmqmsgcli.common.BlockDeviceKey target_harddisk_key = 5;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          cn.keptdata.one2data.header.message.protobuf.common.Node.BlockDeviceKey, cn.keptdata.one2data.header.message.protobuf.common.Node.BlockDeviceKey.Builder, cn.keptdata.one2data.header.message.protobuf.common.Node.BlockDeviceKeyOrBuilder> 
          getTargetHarddiskKeyFieldBuilder() {
        if (targetHarddiskKeyBuilder_ == null) {
          targetHarddiskKeyBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              cn.keptdata.one2data.header.message.protobuf.common.Node.BlockDeviceKey, cn.keptdata.one2data.header.message.protobuf.common.Node.BlockDeviceKey.Builder, cn.keptdata.one2data.header.message.protobuf.common.Node.BlockDeviceKeyOrBuilder>(
                  getTargetHarddiskKey(),
                  getParentForChildren(),
                  isClean());
          targetHarddiskKey_ = null;
        }
        return targetHarddiskKeyBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:one2data.rbtmqmsgcli.pe.Qcow2AndTargetHardwareMapping)
    }

    // @@protoc_insertion_point(class_scope:one2data.rbtmqmsgcli.pe.Qcow2AndTargetHardwareMapping)
    private static final cn.keptdata.one2data.header.message.protobuf.pe.RecoveryCommand.Qcow2AndTargetHardwareMapping DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new cn.keptdata.one2data.header.message.protobuf.pe.RecoveryCommand.Qcow2AndTargetHardwareMapping();
    }

    public static cn.keptdata.one2data.header.message.protobuf.pe.RecoveryCommand.Qcow2AndTargetHardwareMapping getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Qcow2AndTargetHardwareMapping>
        PARSER = new com.google.protobuf.AbstractParser<Qcow2AndTargetHardwareMapping>() {
      public Qcow2AndTargetHardwareMapping parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new Qcow2AndTargetHardwareMapping(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Qcow2AndTargetHardwareMapping> parser() {
      return PARSER;
    }

    @Override
    public com.google.protobuf.Parser<Qcow2AndTargetHardwareMapping> getParserForType() {
      return PARSER;
    }

    public cn.keptdata.one2data.header.message.protobuf.pe.RecoveryCommand.Qcow2AndTargetHardwareMapping getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface BoxAndTargetHardwareMappingOrBuilder extends
      // @@protoc_insertion_point(interface_extends:one2data.rbtmqmsgcli.pe.BoxAndTargetHardwareMapping)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     *box唯一ID
     * </pre>
     *
     * <code>optional string box_uuid = 1;</code>
     */
    String getBoxUuid();
    /**
     * <pre>
     *box唯一ID
     * </pre>
     *
     * <code>optional string box_uuid = 1;</code>
     */
    com.google.protobuf.ByteString
        getBoxUuidBytes();

    /**
     * <pre>
     *box全路径
     * </pre>
     *
     * <code>optional string box_path = 2;</code>
     */
    String getBoxPath();
    /**
     * <pre>
     *box全路径
     * </pre>
     *
     * <code>optional string box_path = 2;</code>
     */
    com.google.protobuf.ByteString
        getBoxPathBytes();

    /**
     * <pre>
     *原机磁盘唯一标识
     * </pre>
     *
     * <code>optional .one2data.rbtmqmsgcli.common.BlockDeviceKey source_harddisk_key = 3;</code>
     */
    boolean hasSourceHarddiskKey();
    /**
     * <pre>
     *原机磁盘唯一标识
     * </pre>
     *
     * <code>optional .one2data.rbtmqmsgcli.common.BlockDeviceKey source_harddisk_key = 3;</code>
     */
    cn.keptdata.one2data.header.message.protobuf.common.Node.BlockDeviceKey getSourceHarddiskKey();
    /**
     * <pre>
     *原机磁盘唯一标识
     * </pre>
     *
     * <code>optional .one2data.rbtmqmsgcli.common.BlockDeviceKey source_harddisk_key = 3;</code>
     */
    cn.keptdata.one2data.header.message.protobuf.common.Node.BlockDeviceKeyOrBuilder getSourceHarddiskKeyOrBuilder();

    /**
     * <pre>
     *目标磁盘唯一标识
     * </pre>
     *
     * <code>optional .one2data.rbtmqmsgcli.common.BlockDeviceKey target_harddisk_key = 4;</code>
     */
    boolean hasTargetHarddiskKey();
    /**
     * <pre>
     *目标磁盘唯一标识
     * </pre>
     *
     * <code>optional .one2data.rbtmqmsgcli.common.BlockDeviceKey target_harddisk_key = 4;</code>
     */
    cn.keptdata.one2data.header.message.protobuf.common.Node.BlockDeviceKey getTargetHarddiskKey();
    /**
     * <pre>
     *目标磁盘唯一标识
     * </pre>
     *
     * <code>optional .one2data.rbtmqmsgcli.common.BlockDeviceKey target_harddisk_key = 4;</code>
     */
    cn.keptdata.one2data.header.message.protobuf.common.Node.BlockDeviceKeyOrBuilder getTargetHarddiskKeyOrBuilder();

    /**
     * <pre>
     *需要恢复的开始时间戳(秒)
     * </pre>
     *
     * <code>optional int64 need_recovery_begin_timestamp = 5;</code>
     */
    long getNeedRecoveryBeginTimestamp();

    /**
     * <pre>
     *需要恢复的结束时间戳(秒)
     * </pre>
     *
     * <code>optional int64 need_recovery_end_timestamp = 6;</code>
     */
    long getNeedRecoveryEndTimestamp();
  }
  /**
   * <pre>
   *待恢复的Box 与恢复目标硬件映射
   * </pre>
   *
   * Protobuf type {@code one2data.rbtmqmsgcli.pe.BoxAndTargetHardwareMapping}
   */
  public  static final class BoxAndTargetHardwareMapping extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:one2data.rbtmqmsgcli.pe.BoxAndTargetHardwareMapping)
      BoxAndTargetHardwareMappingOrBuilder {
    // Use BoxAndTargetHardwareMapping.newBuilder() to construct.
    private BoxAndTargetHardwareMapping(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private BoxAndTargetHardwareMapping() {
      boxUuid_ = "";
      boxPath_ = "";
      needRecoveryBeginTimestamp_ = 0L;
      needRecoveryEndTimestamp_ = 0L;
    }

    @Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private BoxAndTargetHardwareMapping(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              String s = input.readStringRequireUtf8();

              boxUuid_ = s;
              break;
            }
            case 18: {
              String s = input.readStringRequireUtf8();

              boxPath_ = s;
              break;
            }
            case 26: {
              cn.keptdata.one2data.header.message.protobuf.common.Node.BlockDeviceKey.Builder subBuilder = null;
              if (sourceHarddiskKey_ != null) {
                subBuilder = sourceHarddiskKey_.toBuilder();
              }
              sourceHarddiskKey_ = input.readMessage(cn.keptdata.one2data.header.message.protobuf.common.Node.BlockDeviceKey.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(sourceHarddiskKey_);
                sourceHarddiskKey_ = subBuilder.buildPartial();
              }

              break;
            }
            case 34: {
              cn.keptdata.one2data.header.message.protobuf.common.Node.BlockDeviceKey.Builder subBuilder = null;
              if (targetHarddiskKey_ != null) {
                subBuilder = targetHarddiskKey_.toBuilder();
              }
              targetHarddiskKey_ = input.readMessage(cn.keptdata.one2data.header.message.protobuf.common.Node.BlockDeviceKey.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(targetHarddiskKey_);
                targetHarddiskKey_ = subBuilder.buildPartial();
              }

              break;
            }
            case 40: {

              needRecoveryBeginTimestamp_ = input.readInt64();
              break;
            }
            case 48: {

              needRecoveryEndTimestamp_ = input.readInt64();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return cn.keptdata.one2data.header.message.protobuf.pe.RecoveryCommand.internal_static_one2data_rbtmqmsgcli_pe_BoxAndTargetHardwareMapping_descriptor;
    }

    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return cn.keptdata.one2data.header.message.protobuf.pe.RecoveryCommand.internal_static_one2data_rbtmqmsgcli_pe_BoxAndTargetHardwareMapping_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              cn.keptdata.one2data.header.message.protobuf.pe.RecoveryCommand.BoxAndTargetHardwareMapping.class, cn.keptdata.one2data.header.message.protobuf.pe.RecoveryCommand.BoxAndTargetHardwareMapping.Builder.class);
    }

    public static final int BOX_UUID_FIELD_NUMBER = 1;
    private volatile Object boxUuid_;
    /**
     * <pre>
     *box唯一ID
     * </pre>
     *
     * <code>optional string box_uuid = 1;</code>
     */
    public String getBoxUuid() {
      Object ref = boxUuid_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        boxUuid_ = s;
        return s;
      }
    }
    /**
     * <pre>
     *box唯一ID
     * </pre>
     *
     * <code>optional string box_uuid = 1;</code>
     */
    public com.google.protobuf.ByteString
        getBoxUuidBytes() {
      Object ref = boxUuid_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        boxUuid_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int BOX_PATH_FIELD_NUMBER = 2;
    private volatile Object boxPath_;
    /**
     * <pre>
     *box全路径
     * </pre>
     *
     * <code>optional string box_path = 2;</code>
     */
    public String getBoxPath() {
      Object ref = boxPath_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        boxPath_ = s;
        return s;
      }
    }
    /**
     * <pre>
     *box全路径
     * </pre>
     *
     * <code>optional string box_path = 2;</code>
     */
    public com.google.protobuf.ByteString
        getBoxPathBytes() {
      Object ref = boxPath_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        boxPath_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int SOURCE_HARDDISK_KEY_FIELD_NUMBER = 3;
    private cn.keptdata.one2data.header.message.protobuf.common.Node.BlockDeviceKey sourceHarddiskKey_;
    /**
     * <pre>
     *原机磁盘唯一标识
     * </pre>
     *
     * <code>optional .one2data.rbtmqmsgcli.common.BlockDeviceKey source_harddisk_key = 3;</code>
     */
    public boolean hasSourceHarddiskKey() {
      return sourceHarddiskKey_ != null;
    }
    /**
     * <pre>
     *原机磁盘唯一标识
     * </pre>
     *
     * <code>optional .one2data.rbtmqmsgcli.common.BlockDeviceKey source_harddisk_key = 3;</code>
     */
    public cn.keptdata.one2data.header.message.protobuf.common.Node.BlockDeviceKey getSourceHarddiskKey() {
      return sourceHarddiskKey_ == null ? cn.keptdata.one2data.header.message.protobuf.common.Node.BlockDeviceKey.getDefaultInstance() : sourceHarddiskKey_;
    }
    /**
     * <pre>
     *原机磁盘唯一标识
     * </pre>
     *
     * <code>optional .one2data.rbtmqmsgcli.common.BlockDeviceKey source_harddisk_key = 3;</code>
     */
    public cn.keptdata.one2data.header.message.protobuf.common.Node.BlockDeviceKeyOrBuilder getSourceHarddiskKeyOrBuilder() {
      return getSourceHarddiskKey();
    }

    public static final int TARGET_HARDDISK_KEY_FIELD_NUMBER = 4;
    private cn.keptdata.one2data.header.message.protobuf.common.Node.BlockDeviceKey targetHarddiskKey_;
    /**
     * <pre>
     *目标磁盘唯一标识
     * </pre>
     *
     * <code>optional .one2data.rbtmqmsgcli.common.BlockDeviceKey target_harddisk_key = 4;</code>
     */
    public boolean hasTargetHarddiskKey() {
      return targetHarddiskKey_ != null;
    }
    /**
     * <pre>
     *目标磁盘唯一标识
     * </pre>
     *
     * <code>optional .one2data.rbtmqmsgcli.common.BlockDeviceKey target_harddisk_key = 4;</code>
     */
    public cn.keptdata.one2data.header.message.protobuf.common.Node.BlockDeviceKey getTargetHarddiskKey() {
      return targetHarddiskKey_ == null ? cn.keptdata.one2data.header.message.protobuf.common.Node.BlockDeviceKey.getDefaultInstance() : targetHarddiskKey_;
    }
    /**
     * <pre>
     *目标磁盘唯一标识
     * </pre>
     *
     * <code>optional .one2data.rbtmqmsgcli.common.BlockDeviceKey target_harddisk_key = 4;</code>
     */
    public cn.keptdata.one2data.header.message.protobuf.common.Node.BlockDeviceKeyOrBuilder getTargetHarddiskKeyOrBuilder() {
      return getTargetHarddiskKey();
    }

    public static final int NEED_RECOVERY_BEGIN_TIMESTAMP_FIELD_NUMBER = 5;
    private long needRecoveryBeginTimestamp_;
    /**
     * <pre>
     *需要恢复的开始时间戳(秒)
     * </pre>
     *
     * <code>optional int64 need_recovery_begin_timestamp = 5;</code>
     */
    public long getNeedRecoveryBeginTimestamp() {
      return needRecoveryBeginTimestamp_;
    }

    public static final int NEED_RECOVERY_END_TIMESTAMP_FIELD_NUMBER = 6;
    private long needRecoveryEndTimestamp_;
    /**
     * <pre>
     *需要恢复的结束时间戳(秒)
     * </pre>
     *
     * <code>optional int64 need_recovery_end_timestamp = 6;</code>
     */
    public long getNeedRecoveryEndTimestamp() {
      return needRecoveryEndTimestamp_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getBoxUuidBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, boxUuid_);
      }
      if (!getBoxPathBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, boxPath_);
      }
      if (sourceHarddiskKey_ != null) {
        output.writeMessage(3, getSourceHarddiskKey());
      }
      if (targetHarddiskKey_ != null) {
        output.writeMessage(4, getTargetHarddiskKey());
      }
      if (needRecoveryBeginTimestamp_ != 0L) {
        output.writeInt64(5, needRecoveryBeginTimestamp_);
      }
      if (needRecoveryEndTimestamp_ != 0L) {
        output.writeInt64(6, needRecoveryEndTimestamp_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getBoxUuidBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, boxUuid_);
      }
      if (!getBoxPathBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, boxPath_);
      }
      if (sourceHarddiskKey_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getSourceHarddiskKey());
      }
      if (targetHarddiskKey_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, getTargetHarddiskKey());
      }
      if (needRecoveryBeginTimestamp_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(5, needRecoveryBeginTimestamp_);
      }
      if (needRecoveryEndTimestamp_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(6, needRecoveryEndTimestamp_);
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @Override
    public boolean equals(final Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof cn.keptdata.one2data.header.message.protobuf.pe.RecoveryCommand.BoxAndTargetHardwareMapping)) {
        return super.equals(obj);
      }
      cn.keptdata.one2data.header.message.protobuf.pe.RecoveryCommand.BoxAndTargetHardwareMapping other = (cn.keptdata.one2data.header.message.protobuf.pe.RecoveryCommand.BoxAndTargetHardwareMapping) obj;

      boolean result = true;
      result = result && getBoxUuid()
          .equals(other.getBoxUuid());
      result = result && getBoxPath()
          .equals(other.getBoxPath());
      result = result && (hasSourceHarddiskKey() == other.hasSourceHarddiskKey());
      if (hasSourceHarddiskKey()) {
        result = result && getSourceHarddiskKey()
            .equals(other.getSourceHarddiskKey());
      }
      result = result && (hasTargetHarddiskKey() == other.hasTargetHarddiskKey());
      if (hasTargetHarddiskKey()) {
        result = result && getTargetHarddiskKey()
            .equals(other.getTargetHarddiskKey());
      }
      result = result && (getNeedRecoveryBeginTimestamp()
          == other.getNeedRecoveryBeginTimestamp());
      result = result && (getNeedRecoveryEndTimestamp()
          == other.getNeedRecoveryEndTimestamp());
      return result;
    }

    @Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptorForType().hashCode();
      hash = (37 * hash) + BOX_UUID_FIELD_NUMBER;
      hash = (53 * hash) + getBoxUuid().hashCode();
      hash = (37 * hash) + BOX_PATH_FIELD_NUMBER;
      hash = (53 * hash) + getBoxPath().hashCode();
      if (hasSourceHarddiskKey()) {
        hash = (37 * hash) + SOURCE_HARDDISK_KEY_FIELD_NUMBER;
        hash = (53 * hash) + getSourceHarddiskKey().hashCode();
      }
      if (hasTargetHarddiskKey()) {
        hash = (37 * hash) + TARGET_HARDDISK_KEY_FIELD_NUMBER;
        hash = (53 * hash) + getTargetHarddiskKey().hashCode();
      }
      hash = (37 * hash) + NEED_RECOVERY_BEGIN_TIMESTAMP_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getNeedRecoveryBeginTimestamp());
      hash = (37 * hash) + NEED_RECOVERY_END_TIMESTAMP_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getNeedRecoveryEndTimestamp());
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static cn.keptdata.one2data.header.message.protobuf.pe.RecoveryCommand.BoxAndTargetHardwareMapping parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static cn.keptdata.one2data.header.message.protobuf.pe.RecoveryCommand.BoxAndTargetHardwareMapping parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static cn.keptdata.one2data.header.message.protobuf.pe.RecoveryCommand.BoxAndTargetHardwareMapping parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static cn.keptdata.one2data.header.message.protobuf.pe.RecoveryCommand.BoxAndTargetHardwareMapping parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static cn.keptdata.one2data.header.message.protobuf.pe.RecoveryCommand.BoxAndTargetHardwareMapping parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static cn.keptdata.one2data.header.message.protobuf.pe.RecoveryCommand.BoxAndTargetHardwareMapping parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static cn.keptdata.one2data.header.message.protobuf.pe.RecoveryCommand.BoxAndTargetHardwareMapping parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static cn.keptdata.one2data.header.message.protobuf.pe.RecoveryCommand.BoxAndTargetHardwareMapping parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static cn.keptdata.one2data.header.message.protobuf.pe.RecoveryCommand.BoxAndTargetHardwareMapping parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static cn.keptdata.one2data.header.message.protobuf.pe.RecoveryCommand.BoxAndTargetHardwareMapping parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(cn.keptdata.one2data.header.message.protobuf.pe.RecoveryCommand.BoxAndTargetHardwareMapping prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     *待恢复的Box 与恢复目标硬件映射
     * </pre>
     *
     * Protobuf type {@code one2data.rbtmqmsgcli.pe.BoxAndTargetHardwareMapping}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:one2data.rbtmqmsgcli.pe.BoxAndTargetHardwareMapping)
        cn.keptdata.one2data.header.message.protobuf.pe.RecoveryCommand.BoxAndTargetHardwareMappingOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return cn.keptdata.one2data.header.message.protobuf.pe.RecoveryCommand.internal_static_one2data_rbtmqmsgcli_pe_BoxAndTargetHardwareMapping_descriptor;
      }

      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return cn.keptdata.one2data.header.message.protobuf.pe.RecoveryCommand.internal_static_one2data_rbtmqmsgcli_pe_BoxAndTargetHardwareMapping_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                cn.keptdata.one2data.header.message.protobuf.pe.RecoveryCommand.BoxAndTargetHardwareMapping.class, cn.keptdata.one2data.header.message.protobuf.pe.RecoveryCommand.BoxAndTargetHardwareMapping.Builder.class);
      }

      // Construct using cn.keptdata.one2data.header.message.protobuf.pe.RecoveryCommand.BoxAndTargetHardwareMapping.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        boxUuid_ = "";

        boxPath_ = "";

        if (sourceHarddiskKeyBuilder_ == null) {
          sourceHarddiskKey_ = null;
        } else {
          sourceHarddiskKey_ = null;
          sourceHarddiskKeyBuilder_ = null;
        }
        if (targetHarddiskKeyBuilder_ == null) {
          targetHarddiskKey_ = null;
        } else {
          targetHarddiskKey_ = null;
          targetHarddiskKeyBuilder_ = null;
        }
        needRecoveryBeginTimestamp_ = 0L;

        needRecoveryEndTimestamp_ = 0L;

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return cn.keptdata.one2data.header.message.protobuf.pe.RecoveryCommand.internal_static_one2data_rbtmqmsgcli_pe_BoxAndTargetHardwareMapping_descriptor;
      }

      public cn.keptdata.one2data.header.message.protobuf.pe.RecoveryCommand.BoxAndTargetHardwareMapping getDefaultInstanceForType() {
        return cn.keptdata.one2data.header.message.protobuf.pe.RecoveryCommand.BoxAndTargetHardwareMapping.getDefaultInstance();
      }

      public cn.keptdata.one2data.header.message.protobuf.pe.RecoveryCommand.BoxAndTargetHardwareMapping build() {
        cn.keptdata.one2data.header.message.protobuf.pe.RecoveryCommand.BoxAndTargetHardwareMapping result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public cn.keptdata.one2data.header.message.protobuf.pe.RecoveryCommand.BoxAndTargetHardwareMapping buildPartial() {
        cn.keptdata.one2data.header.message.protobuf.pe.RecoveryCommand.BoxAndTargetHardwareMapping result = new cn.keptdata.one2data.header.message.protobuf.pe.RecoveryCommand.BoxAndTargetHardwareMapping(this);
        result.boxUuid_ = boxUuid_;
        result.boxPath_ = boxPath_;
        if (sourceHarddiskKeyBuilder_ == null) {
          result.sourceHarddiskKey_ = sourceHarddiskKey_;
        } else {
          result.sourceHarddiskKey_ = sourceHarddiskKeyBuilder_.build();
        }
        if (targetHarddiskKeyBuilder_ == null) {
          result.targetHarddiskKey_ = targetHarddiskKey_;
        } else {
          result.targetHarddiskKey_ = targetHarddiskKeyBuilder_.build();
        }
        result.needRecoveryBeginTimestamp_ = needRecoveryBeginTimestamp_;
        result.needRecoveryEndTimestamp_ = needRecoveryEndTimestamp_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof cn.keptdata.one2data.header.message.protobuf.pe.RecoveryCommand.BoxAndTargetHardwareMapping) {
          return mergeFrom((cn.keptdata.one2data.header.message.protobuf.pe.RecoveryCommand.BoxAndTargetHardwareMapping)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(cn.keptdata.one2data.header.message.protobuf.pe.RecoveryCommand.BoxAndTargetHardwareMapping other) {
        if (other == cn.keptdata.one2data.header.message.protobuf.pe.RecoveryCommand.BoxAndTargetHardwareMapping.getDefaultInstance()) return this;
        if (!other.getBoxUuid().isEmpty()) {
          boxUuid_ = other.boxUuid_;
          onChanged();
        }
        if (!other.getBoxPath().isEmpty()) {
          boxPath_ = other.boxPath_;
          onChanged();
        }
        if (other.hasSourceHarddiskKey()) {
          mergeSourceHarddiskKey(other.getSourceHarddiskKey());
        }
        if (other.hasTargetHarddiskKey()) {
          mergeTargetHarddiskKey(other.getTargetHarddiskKey());
        }
        if (other.getNeedRecoveryBeginTimestamp() != 0L) {
          setNeedRecoveryBeginTimestamp(other.getNeedRecoveryBeginTimestamp());
        }
        if (other.getNeedRecoveryEndTimestamp() != 0L) {
          setNeedRecoveryEndTimestamp(other.getNeedRecoveryEndTimestamp());
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        cn.keptdata.one2data.header.message.protobuf.pe.RecoveryCommand.BoxAndTargetHardwareMapping parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (cn.keptdata.one2data.header.message.protobuf.pe.RecoveryCommand.BoxAndTargetHardwareMapping) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private Object boxUuid_ = "";
      /**
       * <pre>
       *box唯一ID
       * </pre>
       *
       * <code>optional string box_uuid = 1;</code>
       */
      public String getBoxUuid() {
        Object ref = boxUuid_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          boxUuid_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <pre>
       *box唯一ID
       * </pre>
       *
       * <code>optional string box_uuid = 1;</code>
       */
      public com.google.protobuf.ByteString
          getBoxUuidBytes() {
        Object ref = boxUuid_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          boxUuid_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *box唯一ID
       * </pre>
       *
       * <code>optional string box_uuid = 1;</code>
       */
      public Builder setBoxUuid(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        boxUuid_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *box唯一ID
       * </pre>
       *
       * <code>optional string box_uuid = 1;</code>
       */
      public Builder clearBoxUuid() {
        
        boxUuid_ = getDefaultInstance().getBoxUuid();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *box唯一ID
       * </pre>
       *
       * <code>optional string box_uuid = 1;</code>
       */
      public Builder setBoxUuidBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        boxUuid_ = value;
        onChanged();
        return this;
      }

      private Object boxPath_ = "";
      /**
       * <pre>
       *box全路径
       * </pre>
       *
       * <code>optional string box_path = 2;</code>
       */
      public String getBoxPath() {
        Object ref = boxPath_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          boxPath_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <pre>
       *box全路径
       * </pre>
       *
       * <code>optional string box_path = 2;</code>
       */
      public com.google.protobuf.ByteString
          getBoxPathBytes() {
        Object ref = boxPath_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          boxPath_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *box全路径
       * </pre>
       *
       * <code>optional string box_path = 2;</code>
       */
      public Builder setBoxPath(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        boxPath_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *box全路径
       * </pre>
       *
       * <code>optional string box_path = 2;</code>
       */
      public Builder clearBoxPath() {
        
        boxPath_ = getDefaultInstance().getBoxPath();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *box全路径
       * </pre>
       *
       * <code>optional string box_path = 2;</code>
       */
      public Builder setBoxPathBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        boxPath_ = value;
        onChanged();
        return this;
      }

      private cn.keptdata.one2data.header.message.protobuf.common.Node.BlockDeviceKey sourceHarddiskKey_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          cn.keptdata.one2data.header.message.protobuf.common.Node.BlockDeviceKey, cn.keptdata.one2data.header.message.protobuf.common.Node.BlockDeviceKey.Builder, cn.keptdata.one2data.header.message.protobuf.common.Node.BlockDeviceKeyOrBuilder> sourceHarddiskKeyBuilder_;
      /**
       * <pre>
       *原机磁盘唯一标识
       * </pre>
       *
       * <code>optional .one2data.rbtmqmsgcli.common.BlockDeviceKey source_harddisk_key = 3;</code>
       */
      public boolean hasSourceHarddiskKey() {
        return sourceHarddiskKeyBuilder_ != null || sourceHarddiskKey_ != null;
      }
      /**
       * <pre>
       *原机磁盘唯一标识
       * </pre>
       *
       * <code>optional .one2data.rbtmqmsgcli.common.BlockDeviceKey source_harddisk_key = 3;</code>
       */
      public cn.keptdata.one2data.header.message.protobuf.common.Node.BlockDeviceKey getSourceHarddiskKey() {
        if (sourceHarddiskKeyBuilder_ == null) {
          return sourceHarddiskKey_ == null ? cn.keptdata.one2data.header.message.protobuf.common.Node.BlockDeviceKey.getDefaultInstance() : sourceHarddiskKey_;
        } else {
          return sourceHarddiskKeyBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       *原机磁盘唯一标识
       * </pre>
       *
       * <code>optional .one2data.rbtmqmsgcli.common.BlockDeviceKey source_harddisk_key = 3;</code>
       */
      public Builder setSourceHarddiskKey(cn.keptdata.one2data.header.message.protobuf.common.Node.BlockDeviceKey value) {
        if (sourceHarddiskKeyBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          sourceHarddiskKey_ = value;
          onChanged();
        } else {
          sourceHarddiskKeyBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       *原机磁盘唯一标识
       * </pre>
       *
       * <code>optional .one2data.rbtmqmsgcli.common.BlockDeviceKey source_harddisk_key = 3;</code>
       */
      public Builder setSourceHarddiskKey(
          cn.keptdata.one2data.header.message.protobuf.common.Node.BlockDeviceKey.Builder builderForValue) {
        if (sourceHarddiskKeyBuilder_ == null) {
          sourceHarddiskKey_ = builderForValue.build();
          onChanged();
        } else {
          sourceHarddiskKeyBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       *原机磁盘唯一标识
       * </pre>
       *
       * <code>optional .one2data.rbtmqmsgcli.common.BlockDeviceKey source_harddisk_key = 3;</code>
       */
      public Builder mergeSourceHarddiskKey(cn.keptdata.one2data.header.message.protobuf.common.Node.BlockDeviceKey value) {
        if (sourceHarddiskKeyBuilder_ == null) {
          if (sourceHarddiskKey_ != null) {
            sourceHarddiskKey_ =
              cn.keptdata.one2data.header.message.protobuf.common.Node.BlockDeviceKey.newBuilder(sourceHarddiskKey_).mergeFrom(value).buildPartial();
          } else {
            sourceHarddiskKey_ = value;
          }
          onChanged();
        } else {
          sourceHarddiskKeyBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       *原机磁盘唯一标识
       * </pre>
       *
       * <code>optional .one2data.rbtmqmsgcli.common.BlockDeviceKey source_harddisk_key = 3;</code>
       */
      public Builder clearSourceHarddiskKey() {
        if (sourceHarddiskKeyBuilder_ == null) {
          sourceHarddiskKey_ = null;
          onChanged();
        } else {
          sourceHarddiskKey_ = null;
          sourceHarddiskKeyBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       *原机磁盘唯一标识
       * </pre>
       *
       * <code>optional .one2data.rbtmqmsgcli.common.BlockDeviceKey source_harddisk_key = 3;</code>
       */
      public cn.keptdata.one2data.header.message.protobuf.common.Node.BlockDeviceKey.Builder getSourceHarddiskKeyBuilder() {
        
        onChanged();
        return getSourceHarddiskKeyFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       *原机磁盘唯一标识
       * </pre>
       *
       * <code>optional .one2data.rbtmqmsgcli.common.BlockDeviceKey source_harddisk_key = 3;</code>
       */
      public cn.keptdata.one2data.header.message.protobuf.common.Node.BlockDeviceKeyOrBuilder getSourceHarddiskKeyOrBuilder() {
        if (sourceHarddiskKeyBuilder_ != null) {
          return sourceHarddiskKeyBuilder_.getMessageOrBuilder();
        } else {
          return sourceHarddiskKey_ == null ?
              cn.keptdata.one2data.header.message.protobuf.common.Node.BlockDeviceKey.getDefaultInstance() : sourceHarddiskKey_;
        }
      }
      /**
       * <pre>
       *原机磁盘唯一标识
       * </pre>
       *
       * <code>optional .one2data.rbtmqmsgcli.common.BlockDeviceKey source_harddisk_key = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          cn.keptdata.one2data.header.message.protobuf.common.Node.BlockDeviceKey, cn.keptdata.one2data.header.message.protobuf.common.Node.BlockDeviceKey.Builder, cn.keptdata.one2data.header.message.protobuf.common.Node.BlockDeviceKeyOrBuilder> 
          getSourceHarddiskKeyFieldBuilder() {
        if (sourceHarddiskKeyBuilder_ == null) {
          sourceHarddiskKeyBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              cn.keptdata.one2data.header.message.protobuf.common.Node.BlockDeviceKey, cn.keptdata.one2data.header.message.protobuf.common.Node.BlockDeviceKey.Builder, cn.keptdata.one2data.header.message.protobuf.common.Node.BlockDeviceKeyOrBuilder>(
                  getSourceHarddiskKey(),
                  getParentForChildren(),
                  isClean());
          sourceHarddiskKey_ = null;
        }
        return sourceHarddiskKeyBuilder_;
      }

      private cn.keptdata.one2data.header.message.protobuf.common.Node.BlockDeviceKey targetHarddiskKey_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          cn.keptdata.one2data.header.message.protobuf.common.Node.BlockDeviceKey, cn.keptdata.one2data.header.message.protobuf.common.Node.BlockDeviceKey.Builder, cn.keptdata.one2data.header.message.protobuf.common.Node.BlockDeviceKeyOrBuilder> targetHarddiskKeyBuilder_;
      /**
       * <pre>
       *目标磁盘唯一标识
       * </pre>
       *
       * <code>optional .one2data.rbtmqmsgcli.common.BlockDeviceKey target_harddisk_key = 4;</code>
       */
      public boolean hasTargetHarddiskKey() {
        return targetHarddiskKeyBuilder_ != null || targetHarddiskKey_ != null;
      }
      /**
       * <pre>
       *目标磁盘唯一标识
       * </pre>
       *
       * <code>optional .one2data.rbtmqmsgcli.common.BlockDeviceKey target_harddisk_key = 4;</code>
       */
      public cn.keptdata.one2data.header.message.protobuf.common.Node.BlockDeviceKey getTargetHarddiskKey() {
        if (targetHarddiskKeyBuilder_ == null) {
          return targetHarddiskKey_ == null ? cn.keptdata.one2data.header.message.protobuf.common.Node.BlockDeviceKey.getDefaultInstance() : targetHarddiskKey_;
        } else {
          return targetHarddiskKeyBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       *目标磁盘唯一标识
       * </pre>
       *
       * <code>optional .one2data.rbtmqmsgcli.common.BlockDeviceKey target_harddisk_key = 4;</code>
       */
      public Builder setTargetHarddiskKey(cn.keptdata.one2data.header.message.protobuf.common.Node.BlockDeviceKey value) {
        if (targetHarddiskKeyBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          targetHarddiskKey_ = value;
          onChanged();
        } else {
          targetHarddiskKeyBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       *目标磁盘唯一标识
       * </pre>
       *
       * <code>optional .one2data.rbtmqmsgcli.common.BlockDeviceKey target_harddisk_key = 4;</code>
       */
      public Builder setTargetHarddiskKey(
          cn.keptdata.one2data.header.message.protobuf.common.Node.BlockDeviceKey.Builder builderForValue) {
        if (targetHarddiskKeyBuilder_ == null) {
          targetHarddiskKey_ = builderForValue.build();
          onChanged();
        } else {
          targetHarddiskKeyBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       *目标磁盘唯一标识
       * </pre>
       *
       * <code>optional .one2data.rbtmqmsgcli.common.BlockDeviceKey target_harddisk_key = 4;</code>
       */
      public Builder mergeTargetHarddiskKey(cn.keptdata.one2data.header.message.protobuf.common.Node.BlockDeviceKey value) {
        if (targetHarddiskKeyBuilder_ == null) {
          if (targetHarddiskKey_ != null) {
            targetHarddiskKey_ =
              cn.keptdata.one2data.header.message.protobuf.common.Node.BlockDeviceKey.newBuilder(targetHarddiskKey_).mergeFrom(value).buildPartial();
          } else {
            targetHarddiskKey_ = value;
          }
          onChanged();
        } else {
          targetHarddiskKeyBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       *目标磁盘唯一标识
       * </pre>
       *
       * <code>optional .one2data.rbtmqmsgcli.common.BlockDeviceKey target_harddisk_key = 4;</code>
       */
      public Builder clearTargetHarddiskKey() {
        if (targetHarddiskKeyBuilder_ == null) {
          targetHarddiskKey_ = null;
          onChanged();
        } else {
          targetHarddiskKey_ = null;
          targetHarddiskKeyBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       *目标磁盘唯一标识
       * </pre>
       *
       * <code>optional .one2data.rbtmqmsgcli.common.BlockDeviceKey target_harddisk_key = 4;</code>
       */
      public cn.keptdata.one2data.header.message.protobuf.common.Node.BlockDeviceKey.Builder getTargetHarddiskKeyBuilder() {
        
        onChanged();
        return getTargetHarddiskKeyFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       *目标磁盘唯一标识
       * </pre>
       *
       * <code>optional .one2data.rbtmqmsgcli.common.BlockDeviceKey target_harddisk_key = 4;</code>
       */
      public cn.keptdata.one2data.header.message.protobuf.common.Node.BlockDeviceKeyOrBuilder getTargetHarddiskKeyOrBuilder() {
        if (targetHarddiskKeyBuilder_ != null) {
          return targetHarddiskKeyBuilder_.getMessageOrBuilder();
        } else {
          return targetHarddiskKey_ == null ?
              cn.keptdata.one2data.header.message.protobuf.common.Node.BlockDeviceKey.getDefaultInstance() : targetHarddiskKey_;
        }
      }
      /**
       * <pre>
       *目标磁盘唯一标识
       * </pre>
       *
       * <code>optional .one2data.rbtmqmsgcli.common.BlockDeviceKey target_harddisk_key = 4;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          cn.keptdata.one2data.header.message.protobuf.common.Node.BlockDeviceKey, cn.keptdata.one2data.header.message.protobuf.common.Node.BlockDeviceKey.Builder, cn.keptdata.one2data.header.message.protobuf.common.Node.BlockDeviceKeyOrBuilder> 
          getTargetHarddiskKeyFieldBuilder() {
        if (targetHarddiskKeyBuilder_ == null) {
          targetHarddiskKeyBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              cn.keptdata.one2data.header.message.protobuf.common.Node.BlockDeviceKey, cn.keptdata.one2data.header.message.protobuf.common.Node.BlockDeviceKey.Builder, cn.keptdata.one2data.header.message.protobuf.common.Node.BlockDeviceKeyOrBuilder>(
                  getTargetHarddiskKey(),
                  getParentForChildren(),
                  isClean());
          targetHarddiskKey_ = null;
        }
        return targetHarddiskKeyBuilder_;
      }

      private long needRecoveryBeginTimestamp_ ;
      /**
       * <pre>
       *需要恢复的开始时间戳(秒)
       * </pre>
       *
       * <code>optional int64 need_recovery_begin_timestamp = 5;</code>
       */
      public long getNeedRecoveryBeginTimestamp() {
        return needRecoveryBeginTimestamp_;
      }
      /**
       * <pre>
       *需要恢复的开始时间戳(秒)
       * </pre>
       *
       * <code>optional int64 need_recovery_begin_timestamp = 5;</code>
       */
      public Builder setNeedRecoveryBeginTimestamp(long value) {
        
        needRecoveryBeginTimestamp_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *需要恢复的开始时间戳(秒)
       * </pre>
       *
       * <code>optional int64 need_recovery_begin_timestamp = 5;</code>
       */
      public Builder clearNeedRecoveryBeginTimestamp() {
        
        needRecoveryBeginTimestamp_ = 0L;
        onChanged();
        return this;
      }

      private long needRecoveryEndTimestamp_ ;
      /**
       * <pre>
       *需要恢复的结束时间戳(秒)
       * </pre>
       *
       * <code>optional int64 need_recovery_end_timestamp = 6;</code>
       */
      public long getNeedRecoveryEndTimestamp() {
        return needRecoveryEndTimestamp_;
      }
      /**
       * <pre>
       *需要恢复的结束时间戳(秒)
       * </pre>
       *
       * <code>optional int64 need_recovery_end_timestamp = 6;</code>
       */
      public Builder setNeedRecoveryEndTimestamp(long value) {
        
        needRecoveryEndTimestamp_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *需要恢复的结束时间戳(秒)
       * </pre>
       *
       * <code>optional int64 need_recovery_end_timestamp = 6;</code>
       */
      public Builder clearNeedRecoveryEndTimestamp() {
        
        needRecoveryEndTimestamp_ = 0L;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:one2data.rbtmqmsgcli.pe.BoxAndTargetHardwareMapping)
    }

    // @@protoc_insertion_point(class_scope:one2data.rbtmqmsgcli.pe.BoxAndTargetHardwareMapping)
    private static final cn.keptdata.one2data.header.message.protobuf.pe.RecoveryCommand.BoxAndTargetHardwareMapping DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new cn.keptdata.one2data.header.message.protobuf.pe.RecoveryCommand.BoxAndTargetHardwareMapping();
    }

    public static cn.keptdata.one2data.header.message.protobuf.pe.RecoveryCommand.BoxAndTargetHardwareMapping getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<BoxAndTargetHardwareMapping>
        PARSER = new com.google.protobuf.AbstractParser<BoxAndTargetHardwareMapping>() {
      public BoxAndTargetHardwareMapping parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new BoxAndTargetHardwareMapping(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<BoxAndTargetHardwareMapping> parser() {
      return PARSER;
    }

    @Override
    public com.google.protobuf.Parser<BoxAndTargetHardwareMapping> getParserForType() {
      return PARSER;
    }

    public cn.keptdata.one2data.header.message.protobuf.pe.RecoveryCommand.BoxAndTargetHardwareMapping getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_one2data_rbtmqmsgcli_pe_Action_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_one2data_rbtmqmsgcli_pe_Action_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_one2data_rbtmqmsgcli_pe_ActionAck_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_one2data_rbtmqmsgcli_pe_ActionAck_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_one2data_rbtmqmsgcli_pe_Qcow2AndTargetHardwareMapping_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_one2data_rbtmqmsgcli_pe_Qcow2AndTargetHardwareMapping_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_one2data_rbtmqmsgcli_pe_BoxAndTargetHardwareMapping_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_one2data_rbtmqmsgcli_pe_BoxAndTargetHardwareMapping_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    String[] descriptorData = {
      "\n\030pe/RecoveryCommand.proto\022\027one2data.rbt" +
      "mqmsgcli.pe\032\023common/Common.proto\032\021common" +
      "/Node.proto\032\030pe/RecoveryMessage.proto\"\335\002" +
      "\n\006Action\022\032\n\022recovery_task_uuid\030\001 \001(\t\0223\n\006" +
      "action\030\002 \001(\0162#.one2data.rbtmqmsgcli.pe.A" +
      "ctionType\022@\n\017recovery_config\030\003 \001(\0132\'.one" +
      "2data.rbtmqmsgcli.pe.RecoveryConfig\022a\n!q" +
      "cow2_and_target_hardware_mapping\030\004 \003(\01326" +
      ".one2data.rbtmqmsgcli.pe.Qcow2AndTargetH" +
      "ardwareMapping\022]\n\037box_and_target_hardwar",
      "e_mapping\030\005 \003(\01324.one2data.rbtmqmsgcli.p" +
      "e.BoxAndTargetHardwareMapping\"_\n\tActionA" +
      "ck\0226\n\010base_ack\030\001 \001(\0132$.one2data.rbtmqmsg" +
      "cli.common.BaseAck\022\032\n\022recovery_task_uuid" +
      "\030\002 \001(\t\"\370\001\n\035Qcow2AndTargetHardwareMapping" +
      "\022\022\n\nqcow2_uuid\030\001 \001(\t\022\026\n\016qcow2_top_path\030\002" +
      " \001(\t\022\027\n\017qcow2_base_path\030\003 \001(\t\022H\n\023source_" +
      "harddisk_key\030\004 \001(\0132+.one2data.rbtmqmsgcl" +
      "i.common.BlockDeviceKey\022H\n\023target_harddi" +
      "sk_key\030\005 \001(\0132+.one2data.rbtmqmsgcli.comm",
      "on.BlockDeviceKey\"\241\002\n\033BoxAndTargetHardwa" +
      "reMapping\022\020\n\010box_uuid\030\001 \001(\t\022\020\n\010box_path\030" +
      "\002 \001(\t\022H\n\023source_harddisk_key\030\003 \001(\0132+.one" +
      "2data.rbtmqmsgcli.common.BlockDeviceKey\022" +
      "H\n\023target_harddisk_key\030\004 \001(\0132+.one2data." +
      "rbtmqmsgcli.common.BlockDeviceKey\022%\n\035nee" +
      "d_recovery_begin_timestamp\030\005 \001(\003\022#\n\033need" +
      "_recovery_end_timestamp\030\006 \001(\003BB\n/cn.kept" +
      "data.one2data.header.message.protobuf.pe" +
      "B\017RecoveryCommandb\006proto3"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          cn.keptdata.one2data.header.message.protobuf.common.Common.getDescriptor(),
          cn.keptdata.one2data.header.message.protobuf.common.Node.getDescriptor(),
          cn.keptdata.one2data.header.message.protobuf.pe.RecoveryMessage.getDescriptor(),
        }, assigner);
    internal_static_one2data_rbtmqmsgcli_pe_Action_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_one2data_rbtmqmsgcli_pe_Action_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_one2data_rbtmqmsgcli_pe_Action_descriptor,
        new String[] { "RecoveryTaskUuid", "Action", "RecoveryConfig", "Qcow2AndTargetHardwareMapping", "BoxAndTargetHardwareMapping", });
    internal_static_one2data_rbtmqmsgcli_pe_ActionAck_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_one2data_rbtmqmsgcli_pe_ActionAck_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_one2data_rbtmqmsgcli_pe_ActionAck_descriptor,
        new String[] { "BaseAck", "RecoveryTaskUuid", });
    internal_static_one2data_rbtmqmsgcli_pe_Qcow2AndTargetHardwareMapping_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_one2data_rbtmqmsgcli_pe_Qcow2AndTargetHardwareMapping_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_one2data_rbtmqmsgcli_pe_Qcow2AndTargetHardwareMapping_descriptor,
        new String[] { "Qcow2Uuid", "Qcow2TopPath", "Qcow2BasePath", "SourceHarddiskKey", "TargetHarddiskKey", });
    internal_static_one2data_rbtmqmsgcli_pe_BoxAndTargetHardwareMapping_descriptor =
      getDescriptor().getMessageTypes().get(3);
    internal_static_one2data_rbtmqmsgcli_pe_BoxAndTargetHardwareMapping_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_one2data_rbtmqmsgcli_pe_BoxAndTargetHardwareMapping_descriptor,
        new String[] { "BoxUuid", "BoxPath", "SourceHarddiskKey", "TargetHarddiskKey", "NeedRecoveryBeginTimestamp", "NeedRecoveryEndTimestamp", });
    cn.keptdata.one2data.header.message.protobuf.common.Common.getDescriptor();
    cn.keptdata.one2data.header.message.protobuf.common.Node.getDescriptor();
    cn.keptdata.one2data.header.message.protobuf.pe.RecoveryMessage.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
