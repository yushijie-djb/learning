// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: tool/LogUpload.proto

package com.yushijie.common.protobuf.tool;

public final class LogUploadMessage {
  private LogUploadMessage() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface StartNodeLogUploadOrBuilder extends
      // @@protoc_insertion_point(interface_extends:one2data.rbtmqmsgcli.LogUpload.StartNodeLogUpload)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * 内部唯一ID,用于表示设备
     * </pre>
     *
     * <code>optional string uuid_key = 1;</code>
     */
    String getUuidKey();
    /**
     * <pre>
     * 内部唯一ID,用于表示设备
     * </pre>
     *
     * <code>optional string uuid_key = 1;</code>
     */
    com.google.protobuf.ByteString
        getUuidKeyBytes();

    /**
     * <pre>
     *任务id
     * </pre>
     *
     * <code>optional string task_uuid = 2;</code>
     */
    String getTaskUuid();
    /**
     * <pre>
     *任务id
     * </pre>
     *
     * <code>optional string task_uuid = 2;</code>
     */
    com.google.protobuf.ByteString
        getTaskUuidBytes();
  }
  /**
   * <pre>
   * WEB -&gt; 节点, 主节点发送上传日志命令
   * </pre>
   *
   * Protobuf type {@code one2data.rbtmqmsgcli.LogUpload.StartNodeLogUpload}
   */
  public  static final class StartNodeLogUpload extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:one2data.rbtmqmsgcli.LogUpload.StartNodeLogUpload)
      StartNodeLogUploadOrBuilder {
    // Use StartNodeLogUpload.newBuilder() to construct.
    private StartNodeLogUpload(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private StartNodeLogUpload() {
      uuidKey_ = "";
      taskUuid_ = "";
    }

    @Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private StartNodeLogUpload(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              String s = input.readStringRequireUtf8();

              uuidKey_ = s;
              break;
            }
            case 18: {
              String s = input.readStringRequireUtf8();

              taskUuid_ = s;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return cn.keptdata.one2data.header.message.protobuf.tool.LogUploadMessage.internal_static_one2data_rbtmqmsgcli_LogUpload_StartNodeLogUpload_descriptor;
    }

    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return cn.keptdata.one2data.header.message.protobuf.tool.LogUploadMessage.internal_static_one2data_rbtmqmsgcli_LogUpload_StartNodeLogUpload_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              cn.keptdata.one2data.header.message.protobuf.tool.LogUploadMessage.StartNodeLogUpload.class, cn.keptdata.one2data.header.message.protobuf.tool.LogUploadMessage.StartNodeLogUpload.Builder.class);
    }

    public static final int UUID_KEY_FIELD_NUMBER = 1;
    private volatile Object uuidKey_;
    /**
     * <pre>
     * 内部唯一ID,用于表示设备
     * </pre>
     *
     * <code>optional string uuid_key = 1;</code>
     */
    public String getUuidKey() {
      Object ref = uuidKey_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        uuidKey_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * 内部唯一ID,用于表示设备
     * </pre>
     *
     * <code>optional string uuid_key = 1;</code>
     */
    public com.google.protobuf.ByteString
        getUuidKeyBytes() {
      Object ref = uuidKey_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        uuidKey_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int TASK_UUID_FIELD_NUMBER = 2;
    private volatile Object taskUuid_;
    /**
     * <pre>
     *任务id
     * </pre>
     *
     * <code>optional string task_uuid = 2;</code>
     */
    public String getTaskUuid() {
      Object ref = taskUuid_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        taskUuid_ = s;
        return s;
      }
    }
    /**
     * <pre>
     *任务id
     * </pre>
     *
     * <code>optional string task_uuid = 2;</code>
     */
    public com.google.protobuf.ByteString
        getTaskUuidBytes() {
      Object ref = taskUuid_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        taskUuid_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getUuidKeyBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, uuidKey_);
      }
      if (!getTaskUuidBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, taskUuid_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getUuidKeyBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, uuidKey_);
      }
      if (!getTaskUuidBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, taskUuid_);
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @Override
    public boolean equals(final Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof cn.keptdata.one2data.header.message.protobuf.tool.LogUploadMessage.StartNodeLogUpload)) {
        return super.equals(obj);
      }
      cn.keptdata.one2data.header.message.protobuf.tool.LogUploadMessage.StartNodeLogUpload other = (cn.keptdata.one2data.header.message.protobuf.tool.LogUploadMessage.StartNodeLogUpload) obj;

      boolean result = true;
      result = result && getUuidKey()
          .equals(other.getUuidKey());
      result = result && getTaskUuid()
          .equals(other.getTaskUuid());
      return result;
    }

    @Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptorForType().hashCode();
      hash = (37 * hash) + UUID_KEY_FIELD_NUMBER;
      hash = (53 * hash) + getUuidKey().hashCode();
      hash = (37 * hash) + TASK_UUID_FIELD_NUMBER;
      hash = (53 * hash) + getTaskUuid().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static cn.keptdata.one2data.header.message.protobuf.tool.LogUploadMessage.StartNodeLogUpload parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static cn.keptdata.one2data.header.message.protobuf.tool.LogUploadMessage.StartNodeLogUpload parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static cn.keptdata.one2data.header.message.protobuf.tool.LogUploadMessage.StartNodeLogUpload parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static cn.keptdata.one2data.header.message.protobuf.tool.LogUploadMessage.StartNodeLogUpload parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static cn.keptdata.one2data.header.message.protobuf.tool.LogUploadMessage.StartNodeLogUpload parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static cn.keptdata.one2data.header.message.protobuf.tool.LogUploadMessage.StartNodeLogUpload parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static cn.keptdata.one2data.header.message.protobuf.tool.LogUploadMessage.StartNodeLogUpload parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static cn.keptdata.one2data.header.message.protobuf.tool.LogUploadMessage.StartNodeLogUpload parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static cn.keptdata.one2data.header.message.protobuf.tool.LogUploadMessage.StartNodeLogUpload parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static cn.keptdata.one2data.header.message.protobuf.tool.LogUploadMessage.StartNodeLogUpload parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(cn.keptdata.one2data.header.message.protobuf.tool.LogUploadMessage.StartNodeLogUpload prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * WEB -&gt; 节点, 主节点发送上传日志命令
     * </pre>
     *
     * Protobuf type {@code one2data.rbtmqmsgcli.LogUpload.StartNodeLogUpload}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:one2data.rbtmqmsgcli.LogUpload.StartNodeLogUpload)
        cn.keptdata.one2data.header.message.protobuf.tool.LogUploadMessage.StartNodeLogUploadOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return cn.keptdata.one2data.header.message.protobuf.tool.LogUploadMessage.internal_static_one2data_rbtmqmsgcli_LogUpload_StartNodeLogUpload_descriptor;
      }

      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return cn.keptdata.one2data.header.message.protobuf.tool.LogUploadMessage.internal_static_one2data_rbtmqmsgcli_LogUpload_StartNodeLogUpload_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                cn.keptdata.one2data.header.message.protobuf.tool.LogUploadMessage.StartNodeLogUpload.class, cn.keptdata.one2data.header.message.protobuf.tool.LogUploadMessage.StartNodeLogUpload.Builder.class);
      }

      // Construct using cn.keptdata.one2data.header.message.protobuf.tool.LogUploadMessage.StartNodeLogUpload.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        uuidKey_ = "";

        taskUuid_ = "";

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return cn.keptdata.one2data.header.message.protobuf.tool.LogUploadMessage.internal_static_one2data_rbtmqmsgcli_LogUpload_StartNodeLogUpload_descriptor;
      }

      public cn.keptdata.one2data.header.message.protobuf.tool.LogUploadMessage.StartNodeLogUpload getDefaultInstanceForType() {
        return cn.keptdata.one2data.header.message.protobuf.tool.LogUploadMessage.StartNodeLogUpload.getDefaultInstance();
      }

      public cn.keptdata.one2data.header.message.protobuf.tool.LogUploadMessage.StartNodeLogUpload build() {
        cn.keptdata.one2data.header.message.protobuf.tool.LogUploadMessage.StartNodeLogUpload result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public cn.keptdata.one2data.header.message.protobuf.tool.LogUploadMessage.StartNodeLogUpload buildPartial() {
        cn.keptdata.one2data.header.message.protobuf.tool.LogUploadMessage.StartNodeLogUpload result = new cn.keptdata.one2data.header.message.protobuf.tool.LogUploadMessage.StartNodeLogUpload(this);
        result.uuidKey_ = uuidKey_;
        result.taskUuid_ = taskUuid_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof cn.keptdata.one2data.header.message.protobuf.tool.LogUploadMessage.StartNodeLogUpload) {
          return mergeFrom((cn.keptdata.one2data.header.message.protobuf.tool.LogUploadMessage.StartNodeLogUpload)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(cn.keptdata.one2data.header.message.protobuf.tool.LogUploadMessage.StartNodeLogUpload other) {
        if (other == cn.keptdata.one2data.header.message.protobuf.tool.LogUploadMessage.StartNodeLogUpload.getDefaultInstance()) return this;
        if (!other.getUuidKey().isEmpty()) {
          uuidKey_ = other.uuidKey_;
          onChanged();
        }
        if (!other.getTaskUuid().isEmpty()) {
          taskUuid_ = other.taskUuid_;
          onChanged();
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        cn.keptdata.one2data.header.message.protobuf.tool.LogUploadMessage.StartNodeLogUpload parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (cn.keptdata.one2data.header.message.protobuf.tool.LogUploadMessage.StartNodeLogUpload) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private Object uuidKey_ = "";
      /**
       * <pre>
       * 内部唯一ID,用于表示设备
       * </pre>
       *
       * <code>optional string uuid_key = 1;</code>
       */
      public String getUuidKey() {
        Object ref = uuidKey_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          uuidKey_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <pre>
       * 内部唯一ID,用于表示设备
       * </pre>
       *
       * <code>optional string uuid_key = 1;</code>
       */
      public com.google.protobuf.ByteString
          getUuidKeyBytes() {
        Object ref = uuidKey_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          uuidKey_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * 内部唯一ID,用于表示设备
       * </pre>
       *
       * <code>optional string uuid_key = 1;</code>
       */
      public Builder setUuidKey(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        uuidKey_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 内部唯一ID,用于表示设备
       * </pre>
       *
       * <code>optional string uuid_key = 1;</code>
       */
      public Builder clearUuidKey() {
        
        uuidKey_ = getDefaultInstance().getUuidKey();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 内部唯一ID,用于表示设备
       * </pre>
       *
       * <code>optional string uuid_key = 1;</code>
       */
      public Builder setUuidKeyBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        uuidKey_ = value;
        onChanged();
        return this;
      }

      private Object taskUuid_ = "";
      /**
       * <pre>
       *任务id
       * </pre>
       *
       * <code>optional string task_uuid = 2;</code>
       */
      public String getTaskUuid() {
        Object ref = taskUuid_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          taskUuid_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <pre>
       *任务id
       * </pre>
       *
       * <code>optional string task_uuid = 2;</code>
       */
      public com.google.protobuf.ByteString
          getTaskUuidBytes() {
        Object ref = taskUuid_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          taskUuid_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *任务id
       * </pre>
       *
       * <code>optional string task_uuid = 2;</code>
       */
      public Builder setTaskUuid(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        taskUuid_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *任务id
       * </pre>
       *
       * <code>optional string task_uuid = 2;</code>
       */
      public Builder clearTaskUuid() {
        
        taskUuid_ = getDefaultInstance().getTaskUuid();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *任务id
       * </pre>
       *
       * <code>optional string task_uuid = 2;</code>
       */
      public Builder setTaskUuidBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        taskUuid_ = value;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:one2data.rbtmqmsgcli.LogUpload.StartNodeLogUpload)
    }

    // @@protoc_insertion_point(class_scope:one2data.rbtmqmsgcli.LogUpload.StartNodeLogUpload)
    private static final cn.keptdata.one2data.header.message.protobuf.tool.LogUploadMessage.StartNodeLogUpload DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new cn.keptdata.one2data.header.message.protobuf.tool.LogUploadMessage.StartNodeLogUpload();
    }

    public static cn.keptdata.one2data.header.message.protobuf.tool.LogUploadMessage.StartNodeLogUpload getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<StartNodeLogUpload>
        PARSER = new com.google.protobuf.AbstractParser<StartNodeLogUpload>() {
      public StartNodeLogUpload parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new StartNodeLogUpload(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<StartNodeLogUpload> parser() {
      return PARSER;
    }

    @Override
    public com.google.protobuf.Parser<StartNodeLogUpload> getParserForType() {
      return PARSER;
    }

    public cn.keptdata.one2data.header.message.protobuf.tool.LogUploadMessage.StartNodeLogUpload getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface StartNodeLogUploadAckOrBuilder extends
      // @@protoc_insertion_point(interface_extends:one2data.rbtmqmsgcli.LogUpload.StartNodeLogUploadAck)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * 节点内部唯一ID
     * </pre>
     *
     * <code>optional string uuid_key = 1;</code>
     */
    String getUuidKey();
    /**
     * <pre>
     * 节点内部唯一ID
     * </pre>
     *
     * <code>optional string uuid_key = 1;</code>
     */
    com.google.protobuf.ByteString
        getUuidKeyBytes();

    /**
     * <pre>
     * 日志上传启动结果
     * </pre>
     *
     * <code>optional .one2data.rbtmqmsgcli.common.BaseAck base_ack = 2;</code>
     */
    boolean hasBaseAck();
    /**
     * <pre>
     * 日志上传启动结果
     * </pre>
     *
     * <code>optional .one2data.rbtmqmsgcli.common.BaseAck base_ack = 2;</code>
     */
    cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck getBaseAck();
    /**
     * <pre>
     * 日志上传启动结果
     * </pre>
     *
     * <code>optional .one2data.rbtmqmsgcli.common.BaseAck base_ack = 2;</code>
     */
    cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAckOrBuilder getBaseAckOrBuilder();
  }
  /**
   * <pre>
   * 节点 -&gt; WEB 日志上传命令启动结果
   * </pre>
   *
   * Protobuf type {@code one2data.rbtmqmsgcli.LogUpload.StartNodeLogUploadAck}
   */
  public  static final class StartNodeLogUploadAck extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:one2data.rbtmqmsgcli.LogUpload.StartNodeLogUploadAck)
      StartNodeLogUploadAckOrBuilder {
    // Use StartNodeLogUploadAck.newBuilder() to construct.
    private StartNodeLogUploadAck(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private StartNodeLogUploadAck() {
      uuidKey_ = "";
    }

    @Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private StartNodeLogUploadAck(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              String s = input.readStringRequireUtf8();

              uuidKey_ = s;
              break;
            }
            case 18: {
              cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck.Builder subBuilder = null;
              if (baseAck_ != null) {
                subBuilder = baseAck_.toBuilder();
              }
              baseAck_ = input.readMessage(cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(baseAck_);
                baseAck_ = subBuilder.buildPartial();
              }

              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return cn.keptdata.one2data.header.message.protobuf.tool.LogUploadMessage.internal_static_one2data_rbtmqmsgcli_LogUpload_StartNodeLogUploadAck_descriptor;
    }

    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return cn.keptdata.one2data.header.message.protobuf.tool.LogUploadMessage.internal_static_one2data_rbtmqmsgcli_LogUpload_StartNodeLogUploadAck_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              cn.keptdata.one2data.header.message.protobuf.tool.LogUploadMessage.StartNodeLogUploadAck.class, cn.keptdata.one2data.header.message.protobuf.tool.LogUploadMessage.StartNodeLogUploadAck.Builder.class);
    }

    public static final int UUID_KEY_FIELD_NUMBER = 1;
    private volatile Object uuidKey_;
    /**
     * <pre>
     * 节点内部唯一ID
     * </pre>
     *
     * <code>optional string uuid_key = 1;</code>
     */
    public String getUuidKey() {
      Object ref = uuidKey_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        uuidKey_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * 节点内部唯一ID
     * </pre>
     *
     * <code>optional string uuid_key = 1;</code>
     */
    public com.google.protobuf.ByteString
        getUuidKeyBytes() {
      Object ref = uuidKey_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        uuidKey_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int BASE_ACK_FIELD_NUMBER = 2;
    private cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck baseAck_;
    /**
     * <pre>
     * 日志上传启动结果
     * </pre>
     *
     * <code>optional .one2data.rbtmqmsgcli.common.BaseAck base_ack = 2;</code>
     */
    public boolean hasBaseAck() {
      return baseAck_ != null;
    }
    /**
     * <pre>
     * 日志上传启动结果
     * </pre>
     *
     * <code>optional .one2data.rbtmqmsgcli.common.BaseAck base_ack = 2;</code>
     */
    public cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck getBaseAck() {
      return baseAck_ == null ? cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck.getDefaultInstance() : baseAck_;
    }
    /**
     * <pre>
     * 日志上传启动结果
     * </pre>
     *
     * <code>optional .one2data.rbtmqmsgcli.common.BaseAck base_ack = 2;</code>
     */
    public cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAckOrBuilder getBaseAckOrBuilder() {
      return getBaseAck();
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getUuidKeyBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, uuidKey_);
      }
      if (baseAck_ != null) {
        output.writeMessage(2, getBaseAck());
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getUuidKeyBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, uuidKey_);
      }
      if (baseAck_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getBaseAck());
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @Override
    public boolean equals(final Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof cn.keptdata.one2data.header.message.protobuf.tool.LogUploadMessage.StartNodeLogUploadAck)) {
        return super.equals(obj);
      }
      cn.keptdata.one2data.header.message.protobuf.tool.LogUploadMessage.StartNodeLogUploadAck other = (cn.keptdata.one2data.header.message.protobuf.tool.LogUploadMessage.StartNodeLogUploadAck) obj;

      boolean result = true;
      result = result && getUuidKey()
          .equals(other.getUuidKey());
      result = result && (hasBaseAck() == other.hasBaseAck());
      if (hasBaseAck()) {
        result = result && getBaseAck()
            .equals(other.getBaseAck());
      }
      return result;
    }

    @Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptorForType().hashCode();
      hash = (37 * hash) + UUID_KEY_FIELD_NUMBER;
      hash = (53 * hash) + getUuidKey().hashCode();
      if (hasBaseAck()) {
        hash = (37 * hash) + BASE_ACK_FIELD_NUMBER;
        hash = (53 * hash) + getBaseAck().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static cn.keptdata.one2data.header.message.protobuf.tool.LogUploadMessage.StartNodeLogUploadAck parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static cn.keptdata.one2data.header.message.protobuf.tool.LogUploadMessage.StartNodeLogUploadAck parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static cn.keptdata.one2data.header.message.protobuf.tool.LogUploadMessage.StartNodeLogUploadAck parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static cn.keptdata.one2data.header.message.protobuf.tool.LogUploadMessage.StartNodeLogUploadAck parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static cn.keptdata.one2data.header.message.protobuf.tool.LogUploadMessage.StartNodeLogUploadAck parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static cn.keptdata.one2data.header.message.protobuf.tool.LogUploadMessage.StartNodeLogUploadAck parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static cn.keptdata.one2data.header.message.protobuf.tool.LogUploadMessage.StartNodeLogUploadAck parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static cn.keptdata.one2data.header.message.protobuf.tool.LogUploadMessage.StartNodeLogUploadAck parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static cn.keptdata.one2data.header.message.protobuf.tool.LogUploadMessage.StartNodeLogUploadAck parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static cn.keptdata.one2data.header.message.protobuf.tool.LogUploadMessage.StartNodeLogUploadAck parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(cn.keptdata.one2data.header.message.protobuf.tool.LogUploadMessage.StartNodeLogUploadAck prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * 节点 -&gt; WEB 日志上传命令启动结果
     * </pre>
     *
     * Protobuf type {@code one2data.rbtmqmsgcli.LogUpload.StartNodeLogUploadAck}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:one2data.rbtmqmsgcli.LogUpload.StartNodeLogUploadAck)
        cn.keptdata.one2data.header.message.protobuf.tool.LogUploadMessage.StartNodeLogUploadAckOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return cn.keptdata.one2data.header.message.protobuf.tool.LogUploadMessage.internal_static_one2data_rbtmqmsgcli_LogUpload_StartNodeLogUploadAck_descriptor;
      }

      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return cn.keptdata.one2data.header.message.protobuf.tool.LogUploadMessage.internal_static_one2data_rbtmqmsgcli_LogUpload_StartNodeLogUploadAck_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                cn.keptdata.one2data.header.message.protobuf.tool.LogUploadMessage.StartNodeLogUploadAck.class, cn.keptdata.one2data.header.message.protobuf.tool.LogUploadMessage.StartNodeLogUploadAck.Builder.class);
      }

      // Construct using cn.keptdata.one2data.header.message.protobuf.tool.LogUploadMessage.StartNodeLogUploadAck.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        uuidKey_ = "";

        if (baseAckBuilder_ == null) {
          baseAck_ = null;
        } else {
          baseAck_ = null;
          baseAckBuilder_ = null;
        }
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return cn.keptdata.one2data.header.message.protobuf.tool.LogUploadMessage.internal_static_one2data_rbtmqmsgcli_LogUpload_StartNodeLogUploadAck_descriptor;
      }

      public cn.keptdata.one2data.header.message.protobuf.tool.LogUploadMessage.StartNodeLogUploadAck getDefaultInstanceForType() {
        return cn.keptdata.one2data.header.message.protobuf.tool.LogUploadMessage.StartNodeLogUploadAck.getDefaultInstance();
      }

      public cn.keptdata.one2data.header.message.protobuf.tool.LogUploadMessage.StartNodeLogUploadAck build() {
        cn.keptdata.one2data.header.message.protobuf.tool.LogUploadMessage.StartNodeLogUploadAck result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public cn.keptdata.one2data.header.message.protobuf.tool.LogUploadMessage.StartNodeLogUploadAck buildPartial() {
        cn.keptdata.one2data.header.message.protobuf.tool.LogUploadMessage.StartNodeLogUploadAck result = new cn.keptdata.one2data.header.message.protobuf.tool.LogUploadMessage.StartNodeLogUploadAck(this);
        result.uuidKey_ = uuidKey_;
        if (baseAckBuilder_ == null) {
          result.baseAck_ = baseAck_;
        } else {
          result.baseAck_ = baseAckBuilder_.build();
        }
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof cn.keptdata.one2data.header.message.protobuf.tool.LogUploadMessage.StartNodeLogUploadAck) {
          return mergeFrom((cn.keptdata.one2data.header.message.protobuf.tool.LogUploadMessage.StartNodeLogUploadAck)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(cn.keptdata.one2data.header.message.protobuf.tool.LogUploadMessage.StartNodeLogUploadAck other) {
        if (other == cn.keptdata.one2data.header.message.protobuf.tool.LogUploadMessage.StartNodeLogUploadAck.getDefaultInstance()) return this;
        if (!other.getUuidKey().isEmpty()) {
          uuidKey_ = other.uuidKey_;
          onChanged();
        }
        if (other.hasBaseAck()) {
          mergeBaseAck(other.getBaseAck());
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        cn.keptdata.one2data.header.message.protobuf.tool.LogUploadMessage.StartNodeLogUploadAck parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (cn.keptdata.one2data.header.message.protobuf.tool.LogUploadMessage.StartNodeLogUploadAck) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private Object uuidKey_ = "";
      /**
       * <pre>
       * 节点内部唯一ID
       * </pre>
       *
       * <code>optional string uuid_key = 1;</code>
       */
      public String getUuidKey() {
        Object ref = uuidKey_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          uuidKey_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <pre>
       * 节点内部唯一ID
       * </pre>
       *
       * <code>optional string uuid_key = 1;</code>
       */
      public com.google.protobuf.ByteString
          getUuidKeyBytes() {
        Object ref = uuidKey_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          uuidKey_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * 节点内部唯一ID
       * </pre>
       *
       * <code>optional string uuid_key = 1;</code>
       */
      public Builder setUuidKey(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        uuidKey_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 节点内部唯一ID
       * </pre>
       *
       * <code>optional string uuid_key = 1;</code>
       */
      public Builder clearUuidKey() {
        
        uuidKey_ = getDefaultInstance().getUuidKey();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 节点内部唯一ID
       * </pre>
       *
       * <code>optional string uuid_key = 1;</code>
       */
      public Builder setUuidKeyBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        uuidKey_ = value;
        onChanged();
        return this;
      }

      private cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck baseAck_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck, cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck.Builder, cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAckOrBuilder> baseAckBuilder_;
      /**
       * <pre>
       * 日志上传启动结果
       * </pre>
       *
       * <code>optional .one2data.rbtmqmsgcli.common.BaseAck base_ack = 2;</code>
       */
      public boolean hasBaseAck() {
        return baseAckBuilder_ != null || baseAck_ != null;
      }
      /**
       * <pre>
       * 日志上传启动结果
       * </pre>
       *
       * <code>optional .one2data.rbtmqmsgcli.common.BaseAck base_ack = 2;</code>
       */
      public cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck getBaseAck() {
        if (baseAckBuilder_ == null) {
          return baseAck_ == null ? cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck.getDefaultInstance() : baseAck_;
        } else {
          return baseAckBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * 日志上传启动结果
       * </pre>
       *
       * <code>optional .one2data.rbtmqmsgcli.common.BaseAck base_ack = 2;</code>
       */
      public Builder setBaseAck(cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck value) {
        if (baseAckBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          baseAck_ = value;
          onChanged();
        } else {
          baseAckBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * 日志上传启动结果
       * </pre>
       *
       * <code>optional .one2data.rbtmqmsgcli.common.BaseAck base_ack = 2;</code>
       */
      public Builder setBaseAck(
          cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck.Builder builderForValue) {
        if (baseAckBuilder_ == null) {
          baseAck_ = builderForValue.build();
          onChanged();
        } else {
          baseAckBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * 日志上传启动结果
       * </pre>
       *
       * <code>optional .one2data.rbtmqmsgcli.common.BaseAck base_ack = 2;</code>
       */
      public Builder mergeBaseAck(cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck value) {
        if (baseAckBuilder_ == null) {
          if (baseAck_ != null) {
            baseAck_ =
              cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck.newBuilder(baseAck_).mergeFrom(value).buildPartial();
          } else {
            baseAck_ = value;
          }
          onChanged();
        } else {
          baseAckBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * 日志上传启动结果
       * </pre>
       *
       * <code>optional .one2data.rbtmqmsgcli.common.BaseAck base_ack = 2;</code>
       */
      public Builder clearBaseAck() {
        if (baseAckBuilder_ == null) {
          baseAck_ = null;
          onChanged();
        } else {
          baseAck_ = null;
          baseAckBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * 日志上传启动结果
       * </pre>
       *
       * <code>optional .one2data.rbtmqmsgcli.common.BaseAck base_ack = 2;</code>
       */
      public cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck.Builder getBaseAckBuilder() {
        
        onChanged();
        return getBaseAckFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * 日志上传启动结果
       * </pre>
       *
       * <code>optional .one2data.rbtmqmsgcli.common.BaseAck base_ack = 2;</code>
       */
      public cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAckOrBuilder getBaseAckOrBuilder() {
        if (baseAckBuilder_ != null) {
          return baseAckBuilder_.getMessageOrBuilder();
        } else {
          return baseAck_ == null ?
              cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck.getDefaultInstance() : baseAck_;
        }
      }
      /**
       * <pre>
       * 日志上传启动结果
       * </pre>
       *
       * <code>optional .one2data.rbtmqmsgcli.common.BaseAck base_ack = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck, cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck.Builder, cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAckOrBuilder> 
          getBaseAckFieldBuilder() {
        if (baseAckBuilder_ == null) {
          baseAckBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck, cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck.Builder, cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAckOrBuilder>(
                  getBaseAck(),
                  getParentForChildren(),
                  isClean());
          baseAck_ = null;
        }
        return baseAckBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:one2data.rbtmqmsgcli.LogUpload.StartNodeLogUploadAck)
    }

    // @@protoc_insertion_point(class_scope:one2data.rbtmqmsgcli.LogUpload.StartNodeLogUploadAck)
    private static final cn.keptdata.one2data.header.message.protobuf.tool.LogUploadMessage.StartNodeLogUploadAck DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new cn.keptdata.one2data.header.message.protobuf.tool.LogUploadMessage.StartNodeLogUploadAck();
    }

    public static cn.keptdata.one2data.header.message.protobuf.tool.LogUploadMessage.StartNodeLogUploadAck getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<StartNodeLogUploadAck>
        PARSER = new com.google.protobuf.AbstractParser<StartNodeLogUploadAck>() {
      public StartNodeLogUploadAck parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new StartNodeLogUploadAck(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<StartNodeLogUploadAck> parser() {
      return PARSER;
    }

    @Override
    public com.google.protobuf.Parser<StartNodeLogUploadAck> getParserForType() {
      return PARSER;
    }

    public cn.keptdata.one2data.header.message.protobuf.tool.LogUploadMessage.StartNodeLogUploadAck getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface LogUploadLoginOrBuilder extends
      // @@protoc_insertion_point(interface_extends:one2data.rbtmqmsgcli.LogUpload.LogUploadLogin)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     *节点内部唯一ID
     * </pre>
     *
     * <code>optional string uuid_key = 1;</code>
     */
    String getUuidKey();
    /**
     * <pre>
     *节点内部唯一ID
     * </pre>
     *
     * <code>optional string uuid_key = 1;</code>
     */
    com.google.protobuf.ByteString
        getUuidKeyBytes();

    /**
     * <pre>
     *任务id
     * </pre>
     *
     * <code>optional string task_uuid = 2;</code>
     */
    String getTaskUuid();
    /**
     * <pre>
     *任务id
     * </pre>
     *
     * <code>optional string task_uuid = 2;</code>
     */
    com.google.protobuf.ByteString
        getTaskUuidBytes();

    /**
     * <pre>
     *节点类型
     * </pre>
     *
     * <code>optional .one2data.rbtmqmsgcli.common.NodeType node_type = 3;</code>
     */
    int getNodeTypeValue();
    /**
     * <pre>
     *节点类型
     * </pre>
     *
     * <code>optional .one2data.rbtmqmsgcli.common.NodeType node_type = 3;</code>
     */
    cn.keptdata.one2data.header.message.protobuf.common.Node.NodeType getNodeType();
  }
  /**
   * <pre>
   * Upload子进程  -&gt; WEB
   * </pre>
   *
   * Protobuf type {@code one2data.rbtmqmsgcli.LogUpload.LogUploadLogin}
   */
  public  static final class LogUploadLogin extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:one2data.rbtmqmsgcli.LogUpload.LogUploadLogin)
      LogUploadLoginOrBuilder {
    // Use LogUploadLogin.newBuilder() to construct.
    private LogUploadLogin(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private LogUploadLogin() {
      uuidKey_ = "";
      taskUuid_ = "";
      nodeType_ = 0;
    }

    @Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private LogUploadLogin(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              String s = input.readStringRequireUtf8();

              uuidKey_ = s;
              break;
            }
            case 18: {
              String s = input.readStringRequireUtf8();

              taskUuid_ = s;
              break;
            }
            case 24: {
              int rawValue = input.readEnum();

              nodeType_ = rawValue;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return cn.keptdata.one2data.header.message.protobuf.tool.LogUploadMessage.internal_static_one2data_rbtmqmsgcli_LogUpload_LogUploadLogin_descriptor;
    }

    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return cn.keptdata.one2data.header.message.protobuf.tool.LogUploadMessage.internal_static_one2data_rbtmqmsgcli_LogUpload_LogUploadLogin_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              cn.keptdata.one2data.header.message.protobuf.tool.LogUploadMessage.LogUploadLogin.class, cn.keptdata.one2data.header.message.protobuf.tool.LogUploadMessage.LogUploadLogin.Builder.class);
    }

    public static final int UUID_KEY_FIELD_NUMBER = 1;
    private volatile Object uuidKey_;
    /**
     * <pre>
     *节点内部唯一ID
     * </pre>
     *
     * <code>optional string uuid_key = 1;</code>
     */
    public String getUuidKey() {
      Object ref = uuidKey_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        uuidKey_ = s;
        return s;
      }
    }
    /**
     * <pre>
     *节点内部唯一ID
     * </pre>
     *
     * <code>optional string uuid_key = 1;</code>
     */
    public com.google.protobuf.ByteString
        getUuidKeyBytes() {
      Object ref = uuidKey_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        uuidKey_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int TASK_UUID_FIELD_NUMBER = 2;
    private volatile Object taskUuid_;
    /**
     * <pre>
     *任务id
     * </pre>
     *
     * <code>optional string task_uuid = 2;</code>
     */
    public String getTaskUuid() {
      Object ref = taskUuid_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        taskUuid_ = s;
        return s;
      }
    }
    /**
     * <pre>
     *任务id
     * </pre>
     *
     * <code>optional string task_uuid = 2;</code>
     */
    public com.google.protobuf.ByteString
        getTaskUuidBytes() {
      Object ref = taskUuid_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        taskUuid_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int NODE_TYPE_FIELD_NUMBER = 3;
    private int nodeType_;
    /**
     * <pre>
     *节点类型
     * </pre>
     *
     * <code>optional .one2data.rbtmqmsgcli.common.NodeType node_type = 3;</code>
     */
    public int getNodeTypeValue() {
      return nodeType_;
    }
    /**
     * <pre>
     *节点类型
     * </pre>
     *
     * <code>optional .one2data.rbtmqmsgcli.common.NodeType node_type = 3;</code>
     */
    public cn.keptdata.one2data.header.message.protobuf.common.Node.NodeType getNodeType() {
      cn.keptdata.one2data.header.message.protobuf.common.Node.NodeType result = cn.keptdata.one2data.header.message.protobuf.common.Node.NodeType.valueOf(nodeType_);
      return result == null ? cn.keptdata.one2data.header.message.protobuf.common.Node.NodeType.UNRECOGNIZED : result;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getUuidKeyBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, uuidKey_);
      }
      if (!getTaskUuidBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, taskUuid_);
      }
      if (nodeType_ != cn.keptdata.one2data.header.message.protobuf.common.Node.NodeType.NT_CLIENT.getNumber()) {
        output.writeEnum(3, nodeType_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getUuidKeyBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, uuidKey_);
      }
      if (!getTaskUuidBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, taskUuid_);
      }
      if (nodeType_ != cn.keptdata.one2data.header.message.protobuf.common.Node.NodeType.NT_CLIENT.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(3, nodeType_);
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @Override
    public boolean equals(final Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof cn.keptdata.one2data.header.message.protobuf.tool.LogUploadMessage.LogUploadLogin)) {
        return super.equals(obj);
      }
      cn.keptdata.one2data.header.message.protobuf.tool.LogUploadMessage.LogUploadLogin other = (cn.keptdata.one2data.header.message.protobuf.tool.LogUploadMessage.LogUploadLogin) obj;

      boolean result = true;
      result = result && getUuidKey()
          .equals(other.getUuidKey());
      result = result && getTaskUuid()
          .equals(other.getTaskUuid());
      result = result && nodeType_ == other.nodeType_;
      return result;
    }

    @Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptorForType().hashCode();
      hash = (37 * hash) + UUID_KEY_FIELD_NUMBER;
      hash = (53 * hash) + getUuidKey().hashCode();
      hash = (37 * hash) + TASK_UUID_FIELD_NUMBER;
      hash = (53 * hash) + getTaskUuid().hashCode();
      hash = (37 * hash) + NODE_TYPE_FIELD_NUMBER;
      hash = (53 * hash) + nodeType_;
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static cn.keptdata.one2data.header.message.protobuf.tool.LogUploadMessage.LogUploadLogin parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static cn.keptdata.one2data.header.message.protobuf.tool.LogUploadMessage.LogUploadLogin parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static cn.keptdata.one2data.header.message.protobuf.tool.LogUploadMessage.LogUploadLogin parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static cn.keptdata.one2data.header.message.protobuf.tool.LogUploadMessage.LogUploadLogin parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static cn.keptdata.one2data.header.message.protobuf.tool.LogUploadMessage.LogUploadLogin parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static cn.keptdata.one2data.header.message.protobuf.tool.LogUploadMessage.LogUploadLogin parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static cn.keptdata.one2data.header.message.protobuf.tool.LogUploadMessage.LogUploadLogin parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static cn.keptdata.one2data.header.message.protobuf.tool.LogUploadMessage.LogUploadLogin parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static cn.keptdata.one2data.header.message.protobuf.tool.LogUploadMessage.LogUploadLogin parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static cn.keptdata.one2data.header.message.protobuf.tool.LogUploadMessage.LogUploadLogin parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(cn.keptdata.one2data.header.message.protobuf.tool.LogUploadMessage.LogUploadLogin prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Upload子进程  -&gt; WEB
     * </pre>
     *
     * Protobuf type {@code one2data.rbtmqmsgcli.LogUpload.LogUploadLogin}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:one2data.rbtmqmsgcli.LogUpload.LogUploadLogin)
        cn.keptdata.one2data.header.message.protobuf.tool.LogUploadMessage.LogUploadLoginOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return cn.keptdata.one2data.header.message.protobuf.tool.LogUploadMessage.internal_static_one2data_rbtmqmsgcli_LogUpload_LogUploadLogin_descriptor;
      }

      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return cn.keptdata.one2data.header.message.protobuf.tool.LogUploadMessage.internal_static_one2data_rbtmqmsgcli_LogUpload_LogUploadLogin_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                cn.keptdata.one2data.header.message.protobuf.tool.LogUploadMessage.LogUploadLogin.class, cn.keptdata.one2data.header.message.protobuf.tool.LogUploadMessage.LogUploadLogin.Builder.class);
      }

      // Construct using cn.keptdata.one2data.header.message.protobuf.tool.LogUploadMessage.LogUploadLogin.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        uuidKey_ = "";

        taskUuid_ = "";

        nodeType_ = 0;

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return cn.keptdata.one2data.header.message.protobuf.tool.LogUploadMessage.internal_static_one2data_rbtmqmsgcli_LogUpload_LogUploadLogin_descriptor;
      }

      public cn.keptdata.one2data.header.message.protobuf.tool.LogUploadMessage.LogUploadLogin getDefaultInstanceForType() {
        return cn.keptdata.one2data.header.message.protobuf.tool.LogUploadMessage.LogUploadLogin.getDefaultInstance();
      }

      public cn.keptdata.one2data.header.message.protobuf.tool.LogUploadMessage.LogUploadLogin build() {
        cn.keptdata.one2data.header.message.protobuf.tool.LogUploadMessage.LogUploadLogin result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public cn.keptdata.one2data.header.message.protobuf.tool.LogUploadMessage.LogUploadLogin buildPartial() {
        cn.keptdata.one2data.header.message.protobuf.tool.LogUploadMessage.LogUploadLogin result = new cn.keptdata.one2data.header.message.protobuf.tool.LogUploadMessage.LogUploadLogin(this);
        result.uuidKey_ = uuidKey_;
        result.taskUuid_ = taskUuid_;
        result.nodeType_ = nodeType_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof cn.keptdata.one2data.header.message.protobuf.tool.LogUploadMessage.LogUploadLogin) {
          return mergeFrom((cn.keptdata.one2data.header.message.protobuf.tool.LogUploadMessage.LogUploadLogin)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(cn.keptdata.one2data.header.message.protobuf.tool.LogUploadMessage.LogUploadLogin other) {
        if (other == cn.keptdata.one2data.header.message.protobuf.tool.LogUploadMessage.LogUploadLogin.getDefaultInstance()) return this;
        if (!other.getUuidKey().isEmpty()) {
          uuidKey_ = other.uuidKey_;
          onChanged();
        }
        if (!other.getTaskUuid().isEmpty()) {
          taskUuid_ = other.taskUuid_;
          onChanged();
        }
        if (other.nodeType_ != 0) {
          setNodeTypeValue(other.getNodeTypeValue());
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        cn.keptdata.one2data.header.message.protobuf.tool.LogUploadMessage.LogUploadLogin parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (cn.keptdata.one2data.header.message.protobuf.tool.LogUploadMessage.LogUploadLogin) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private Object uuidKey_ = "";
      /**
       * <pre>
       *节点内部唯一ID
       * </pre>
       *
       * <code>optional string uuid_key = 1;</code>
       */
      public String getUuidKey() {
        Object ref = uuidKey_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          uuidKey_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <pre>
       *节点内部唯一ID
       * </pre>
       *
       * <code>optional string uuid_key = 1;</code>
       */
      public com.google.protobuf.ByteString
          getUuidKeyBytes() {
        Object ref = uuidKey_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          uuidKey_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *节点内部唯一ID
       * </pre>
       *
       * <code>optional string uuid_key = 1;</code>
       */
      public Builder setUuidKey(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        uuidKey_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *节点内部唯一ID
       * </pre>
       *
       * <code>optional string uuid_key = 1;</code>
       */
      public Builder clearUuidKey() {
        
        uuidKey_ = getDefaultInstance().getUuidKey();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *节点内部唯一ID
       * </pre>
       *
       * <code>optional string uuid_key = 1;</code>
       */
      public Builder setUuidKeyBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        uuidKey_ = value;
        onChanged();
        return this;
      }

      private Object taskUuid_ = "";
      /**
       * <pre>
       *任务id
       * </pre>
       *
       * <code>optional string task_uuid = 2;</code>
       */
      public String getTaskUuid() {
        Object ref = taskUuid_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          taskUuid_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <pre>
       *任务id
       * </pre>
       *
       * <code>optional string task_uuid = 2;</code>
       */
      public com.google.protobuf.ByteString
          getTaskUuidBytes() {
        Object ref = taskUuid_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          taskUuid_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *任务id
       * </pre>
       *
       * <code>optional string task_uuid = 2;</code>
       */
      public Builder setTaskUuid(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        taskUuid_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *任务id
       * </pre>
       *
       * <code>optional string task_uuid = 2;</code>
       */
      public Builder clearTaskUuid() {
        
        taskUuid_ = getDefaultInstance().getTaskUuid();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *任务id
       * </pre>
       *
       * <code>optional string task_uuid = 2;</code>
       */
      public Builder setTaskUuidBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        taskUuid_ = value;
        onChanged();
        return this;
      }

      private int nodeType_ = 0;
      /**
       * <pre>
       *节点类型
       * </pre>
       *
       * <code>optional .one2data.rbtmqmsgcli.common.NodeType node_type = 3;</code>
       */
      public int getNodeTypeValue() {
        return nodeType_;
      }
      /**
       * <pre>
       *节点类型
       * </pre>
       *
       * <code>optional .one2data.rbtmqmsgcli.common.NodeType node_type = 3;</code>
       */
      public Builder setNodeTypeValue(int value) {
        nodeType_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *节点类型
       * </pre>
       *
       * <code>optional .one2data.rbtmqmsgcli.common.NodeType node_type = 3;</code>
       */
      public cn.keptdata.one2data.header.message.protobuf.common.Node.NodeType getNodeType() {
        cn.keptdata.one2data.header.message.protobuf.common.Node.NodeType result = cn.keptdata.one2data.header.message.protobuf.common.Node.NodeType.valueOf(nodeType_);
        return result == null ? cn.keptdata.one2data.header.message.protobuf.common.Node.NodeType.UNRECOGNIZED : result;
      }
      /**
       * <pre>
       *节点类型
       * </pre>
       *
       * <code>optional .one2data.rbtmqmsgcli.common.NodeType node_type = 3;</code>
       */
      public Builder setNodeType(cn.keptdata.one2data.header.message.protobuf.common.Node.NodeType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        nodeType_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *节点类型
       * </pre>
       *
       * <code>optional .one2data.rbtmqmsgcli.common.NodeType node_type = 3;</code>
       */
      public Builder clearNodeType() {
        
        nodeType_ = 0;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:one2data.rbtmqmsgcli.LogUpload.LogUploadLogin)
    }

    // @@protoc_insertion_point(class_scope:one2data.rbtmqmsgcli.LogUpload.LogUploadLogin)
    private static final cn.keptdata.one2data.header.message.protobuf.tool.LogUploadMessage.LogUploadLogin DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new cn.keptdata.one2data.header.message.protobuf.tool.LogUploadMessage.LogUploadLogin();
    }

    public static cn.keptdata.one2data.header.message.protobuf.tool.LogUploadMessage.LogUploadLogin getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<LogUploadLogin>
        PARSER = new com.google.protobuf.AbstractParser<LogUploadLogin>() {
      public LogUploadLogin parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new LogUploadLogin(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<LogUploadLogin> parser() {
      return PARSER;
    }

    @Override
    public com.google.protobuf.Parser<LogUploadLogin> getParserForType() {
      return PARSER;
    }

    public cn.keptdata.one2data.header.message.protobuf.tool.LogUploadMessage.LogUploadLogin getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface LogUploadLoginAckOrBuilder extends
      // @@protoc_insertion_point(interface_extends:one2data.rbtmqmsgcli.LogUpload.LogUploadLoginAck)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional .one2data.rbtmqmsgcli.common.BaseAck base_ack = 1;</code>
     */
    boolean hasBaseAck();
    /**
     * <code>optional .one2data.rbtmqmsgcli.common.BaseAck base_ack = 1;</code>
     */
    cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck getBaseAck();
    /**
     * <code>optional .one2data.rbtmqmsgcli.common.BaseAck base_ack = 1;</code>
     */
    cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAckOrBuilder getBaseAckOrBuilder();

    /**
     * <pre>
     * s3_schema
     * </pre>
     *
     * <code>optional string s3_schema = 2;</code>
     */
    String getS3Schema();
    /**
     * <pre>
     * s3_schema
     * </pre>
     *
     * <code>optional string s3_schema = 2;</code>
     */
    com.google.protobuf.ByteString
        getS3SchemaBytes();

    /**
     * <pre>
     * s3_endpoint
     * </pre>
     *
     * <code>optional string s3_endpoint = 3;</code>
     */
    String getS3Endpoint();
    /**
     * <pre>
     * s3_endpoint
     * </pre>
     *
     * <code>optional string s3_endpoint = 3;</code>
     */
    com.google.protobuf.ByteString
        getS3EndpointBytes();

    /**
     * <pre>
     * s3_access_key_id
     * </pre>
     *
     * <code>optional string s3_access_key_id = 4;</code>
     */
    String getS3AccessKeyId();
    /**
     * <pre>
     * s3_access_key_id
     * </pre>
     *
     * <code>optional string s3_access_key_id = 4;</code>
     */
    com.google.protobuf.ByteString
        getS3AccessKeyIdBytes();

    /**
     * <pre>
     * s3_secret_key
     * </pre>
     *
     * <code>optional string s3_secret_key = 5;</code>
     */
    String getS3SecretKey();
    /**
     * <pre>
     * s3_secret_key
     * </pre>
     *
     * <code>optional string s3_secret_key = 5;</code>
     */
    com.google.protobuf.ByteString
        getS3SecretKeyBytes();

    /**
     * <pre>
     * minio中桶名
     * </pre>
     *
     * <code>optional string bucket_name = 6;</code>
     */
    String getBucketName();
    /**
     * <pre>
     * minio中桶名
     * </pre>
     *
     * <code>optional string bucket_name = 6;</code>
     */
    com.google.protobuf.ByteString
        getBucketNameBytes();

    /**
     * <pre>
     * 对象名
     * </pre>
     *
     * <code>optional string object_name = 7;</code>
     */
    String getObjectName();
    /**
     * <pre>
     * 对象名
     * </pre>
     *
     * <code>optional string object_name = 7;</code>
     */
    com.google.protobuf.ByteString
        getObjectNameBytes();

    /**
     * <pre>
     * 是否带压缩
     * </pre>
     *
     * <code>optional bool is_compress = 8;</code>
     */
    boolean getIsCompress();
  }
  /**
   * <pre>
   * WEB -&gt; Upload子进程 登录 ack
   * </pre>
   *
   * Protobuf type {@code one2data.rbtmqmsgcli.LogUpload.LogUploadLoginAck}
   */
  public  static final class LogUploadLoginAck extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:one2data.rbtmqmsgcli.LogUpload.LogUploadLoginAck)
      LogUploadLoginAckOrBuilder {
    // Use LogUploadLoginAck.newBuilder() to construct.
    private LogUploadLoginAck(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private LogUploadLoginAck() {
      s3Schema_ = "";
      s3Endpoint_ = "";
      s3AccessKeyId_ = "";
      s3SecretKey_ = "";
      bucketName_ = "";
      objectName_ = "";
      isCompress_ = false;
    }

    @Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private LogUploadLoginAck(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck.Builder subBuilder = null;
              if (baseAck_ != null) {
                subBuilder = baseAck_.toBuilder();
              }
              baseAck_ = input.readMessage(cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(baseAck_);
                baseAck_ = subBuilder.buildPartial();
              }

              break;
            }
            case 18: {
              String s = input.readStringRequireUtf8();

              s3Schema_ = s;
              break;
            }
            case 26: {
              String s = input.readStringRequireUtf8();

              s3Endpoint_ = s;
              break;
            }
            case 34: {
              String s = input.readStringRequireUtf8();

              s3AccessKeyId_ = s;
              break;
            }
            case 42: {
              String s = input.readStringRequireUtf8();

              s3SecretKey_ = s;
              break;
            }
            case 50: {
              String s = input.readStringRequireUtf8();

              bucketName_ = s;
              break;
            }
            case 58: {
              String s = input.readStringRequireUtf8();

              objectName_ = s;
              break;
            }
            case 64: {

              isCompress_ = input.readBool();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return cn.keptdata.one2data.header.message.protobuf.tool.LogUploadMessage.internal_static_one2data_rbtmqmsgcli_LogUpload_LogUploadLoginAck_descriptor;
    }

    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return cn.keptdata.one2data.header.message.protobuf.tool.LogUploadMessage.internal_static_one2data_rbtmqmsgcli_LogUpload_LogUploadLoginAck_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              cn.keptdata.one2data.header.message.protobuf.tool.LogUploadMessage.LogUploadLoginAck.class, cn.keptdata.one2data.header.message.protobuf.tool.LogUploadMessage.LogUploadLoginAck.Builder.class);
    }

    public static final int BASE_ACK_FIELD_NUMBER = 1;
    private cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck baseAck_;
    /**
     * <code>optional .one2data.rbtmqmsgcli.common.BaseAck base_ack = 1;</code>
     */
    public boolean hasBaseAck() {
      return baseAck_ != null;
    }
    /**
     * <code>optional .one2data.rbtmqmsgcli.common.BaseAck base_ack = 1;</code>
     */
    public cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck getBaseAck() {
      return baseAck_ == null ? cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck.getDefaultInstance() : baseAck_;
    }
    /**
     * <code>optional .one2data.rbtmqmsgcli.common.BaseAck base_ack = 1;</code>
     */
    public cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAckOrBuilder getBaseAckOrBuilder() {
      return getBaseAck();
    }

    public static final int S3_SCHEMA_FIELD_NUMBER = 2;
    private volatile Object s3Schema_;
    /**
     * <pre>
     * s3_schema
     * </pre>
     *
     * <code>optional string s3_schema = 2;</code>
     */
    public String getS3Schema() {
      Object ref = s3Schema_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        s3Schema_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * s3_schema
     * </pre>
     *
     * <code>optional string s3_schema = 2;</code>
     */
    public com.google.protobuf.ByteString
        getS3SchemaBytes() {
      Object ref = s3Schema_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        s3Schema_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int S3_ENDPOINT_FIELD_NUMBER = 3;
    private volatile Object s3Endpoint_;
    /**
     * <pre>
     * s3_endpoint
     * </pre>
     *
     * <code>optional string s3_endpoint = 3;</code>
     */
    public String getS3Endpoint() {
      Object ref = s3Endpoint_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        s3Endpoint_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * s3_endpoint
     * </pre>
     *
     * <code>optional string s3_endpoint = 3;</code>
     */
    public com.google.protobuf.ByteString
        getS3EndpointBytes() {
      Object ref = s3Endpoint_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        s3Endpoint_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int S3_ACCESS_KEY_ID_FIELD_NUMBER = 4;
    private volatile Object s3AccessKeyId_;
    /**
     * <pre>
     * s3_access_key_id
     * </pre>
     *
     * <code>optional string s3_access_key_id = 4;</code>
     */
    public String getS3AccessKeyId() {
      Object ref = s3AccessKeyId_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        s3AccessKeyId_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * s3_access_key_id
     * </pre>
     *
     * <code>optional string s3_access_key_id = 4;</code>
     */
    public com.google.protobuf.ByteString
        getS3AccessKeyIdBytes() {
      Object ref = s3AccessKeyId_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        s3AccessKeyId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int S3_SECRET_KEY_FIELD_NUMBER = 5;
    private volatile Object s3SecretKey_;
    /**
     * <pre>
     * s3_secret_key
     * </pre>
     *
     * <code>optional string s3_secret_key = 5;</code>
     */
    public String getS3SecretKey() {
      Object ref = s3SecretKey_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        s3SecretKey_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * s3_secret_key
     * </pre>
     *
     * <code>optional string s3_secret_key = 5;</code>
     */
    public com.google.protobuf.ByteString
        getS3SecretKeyBytes() {
      Object ref = s3SecretKey_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        s3SecretKey_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int BUCKET_NAME_FIELD_NUMBER = 6;
    private volatile Object bucketName_;
    /**
     * <pre>
     * minio中桶名
     * </pre>
     *
     * <code>optional string bucket_name = 6;</code>
     */
    public String getBucketName() {
      Object ref = bucketName_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        bucketName_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * minio中桶名
     * </pre>
     *
     * <code>optional string bucket_name = 6;</code>
     */
    public com.google.protobuf.ByteString
        getBucketNameBytes() {
      Object ref = bucketName_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        bucketName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int OBJECT_NAME_FIELD_NUMBER = 7;
    private volatile Object objectName_;
    /**
     * <pre>
     * 对象名
     * </pre>
     *
     * <code>optional string object_name = 7;</code>
     */
    public String getObjectName() {
      Object ref = objectName_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        objectName_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * 对象名
     * </pre>
     *
     * <code>optional string object_name = 7;</code>
     */
    public com.google.protobuf.ByteString
        getObjectNameBytes() {
      Object ref = objectName_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        objectName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int IS_COMPRESS_FIELD_NUMBER = 8;
    private boolean isCompress_;
    /**
     * <pre>
     * 是否带压缩
     * </pre>
     *
     * <code>optional bool is_compress = 8;</code>
     */
    public boolean getIsCompress() {
      return isCompress_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (baseAck_ != null) {
        output.writeMessage(1, getBaseAck());
      }
      if (!getS3SchemaBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, s3Schema_);
      }
      if (!getS3EndpointBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 3, s3Endpoint_);
      }
      if (!getS3AccessKeyIdBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 4, s3AccessKeyId_);
      }
      if (!getS3SecretKeyBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 5, s3SecretKey_);
      }
      if (!getBucketNameBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 6, bucketName_);
      }
      if (!getObjectNameBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 7, objectName_);
      }
      if (isCompress_ != false) {
        output.writeBool(8, isCompress_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (baseAck_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getBaseAck());
      }
      if (!getS3SchemaBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, s3Schema_);
      }
      if (!getS3EndpointBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, s3Endpoint_);
      }
      if (!getS3AccessKeyIdBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(4, s3AccessKeyId_);
      }
      if (!getS3SecretKeyBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(5, s3SecretKey_);
      }
      if (!getBucketNameBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(6, bucketName_);
      }
      if (!getObjectNameBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(7, objectName_);
      }
      if (isCompress_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(8, isCompress_);
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @Override
    public boolean equals(final Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof cn.keptdata.one2data.header.message.protobuf.tool.LogUploadMessage.LogUploadLoginAck)) {
        return super.equals(obj);
      }
      cn.keptdata.one2data.header.message.protobuf.tool.LogUploadMessage.LogUploadLoginAck other = (cn.keptdata.one2data.header.message.protobuf.tool.LogUploadMessage.LogUploadLoginAck) obj;

      boolean result = true;
      result = result && (hasBaseAck() == other.hasBaseAck());
      if (hasBaseAck()) {
        result = result && getBaseAck()
            .equals(other.getBaseAck());
      }
      result = result && getS3Schema()
          .equals(other.getS3Schema());
      result = result && getS3Endpoint()
          .equals(other.getS3Endpoint());
      result = result && getS3AccessKeyId()
          .equals(other.getS3AccessKeyId());
      result = result && getS3SecretKey()
          .equals(other.getS3SecretKey());
      result = result && getBucketName()
          .equals(other.getBucketName());
      result = result && getObjectName()
          .equals(other.getObjectName());
      result = result && (getIsCompress()
          == other.getIsCompress());
      return result;
    }

    @Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptorForType().hashCode();
      if (hasBaseAck()) {
        hash = (37 * hash) + BASE_ACK_FIELD_NUMBER;
        hash = (53 * hash) + getBaseAck().hashCode();
      }
      hash = (37 * hash) + S3_SCHEMA_FIELD_NUMBER;
      hash = (53 * hash) + getS3Schema().hashCode();
      hash = (37 * hash) + S3_ENDPOINT_FIELD_NUMBER;
      hash = (53 * hash) + getS3Endpoint().hashCode();
      hash = (37 * hash) + S3_ACCESS_KEY_ID_FIELD_NUMBER;
      hash = (53 * hash) + getS3AccessKeyId().hashCode();
      hash = (37 * hash) + S3_SECRET_KEY_FIELD_NUMBER;
      hash = (53 * hash) + getS3SecretKey().hashCode();
      hash = (37 * hash) + BUCKET_NAME_FIELD_NUMBER;
      hash = (53 * hash) + getBucketName().hashCode();
      hash = (37 * hash) + OBJECT_NAME_FIELD_NUMBER;
      hash = (53 * hash) + getObjectName().hashCode();
      hash = (37 * hash) + IS_COMPRESS_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getIsCompress());
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static cn.keptdata.one2data.header.message.protobuf.tool.LogUploadMessage.LogUploadLoginAck parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static cn.keptdata.one2data.header.message.protobuf.tool.LogUploadMessage.LogUploadLoginAck parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static cn.keptdata.one2data.header.message.protobuf.tool.LogUploadMessage.LogUploadLoginAck parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static cn.keptdata.one2data.header.message.protobuf.tool.LogUploadMessage.LogUploadLoginAck parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static cn.keptdata.one2data.header.message.protobuf.tool.LogUploadMessage.LogUploadLoginAck parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static cn.keptdata.one2data.header.message.protobuf.tool.LogUploadMessage.LogUploadLoginAck parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static cn.keptdata.one2data.header.message.protobuf.tool.LogUploadMessage.LogUploadLoginAck parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static cn.keptdata.one2data.header.message.protobuf.tool.LogUploadMessage.LogUploadLoginAck parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static cn.keptdata.one2data.header.message.protobuf.tool.LogUploadMessage.LogUploadLoginAck parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static cn.keptdata.one2data.header.message.protobuf.tool.LogUploadMessage.LogUploadLoginAck parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(cn.keptdata.one2data.header.message.protobuf.tool.LogUploadMessage.LogUploadLoginAck prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * WEB -&gt; Upload子进程 登录 ack
     * </pre>
     *
     * Protobuf type {@code one2data.rbtmqmsgcli.LogUpload.LogUploadLoginAck}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:one2data.rbtmqmsgcli.LogUpload.LogUploadLoginAck)
        cn.keptdata.one2data.header.message.protobuf.tool.LogUploadMessage.LogUploadLoginAckOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return cn.keptdata.one2data.header.message.protobuf.tool.LogUploadMessage.internal_static_one2data_rbtmqmsgcli_LogUpload_LogUploadLoginAck_descriptor;
      }

      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return cn.keptdata.one2data.header.message.protobuf.tool.LogUploadMessage.internal_static_one2data_rbtmqmsgcli_LogUpload_LogUploadLoginAck_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                cn.keptdata.one2data.header.message.protobuf.tool.LogUploadMessage.LogUploadLoginAck.class, cn.keptdata.one2data.header.message.protobuf.tool.LogUploadMessage.LogUploadLoginAck.Builder.class);
      }

      // Construct using cn.keptdata.one2data.header.message.protobuf.tool.LogUploadMessage.LogUploadLoginAck.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        if (baseAckBuilder_ == null) {
          baseAck_ = null;
        } else {
          baseAck_ = null;
          baseAckBuilder_ = null;
        }
        s3Schema_ = "";

        s3Endpoint_ = "";

        s3AccessKeyId_ = "";

        s3SecretKey_ = "";

        bucketName_ = "";

        objectName_ = "";

        isCompress_ = false;

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return cn.keptdata.one2data.header.message.protobuf.tool.LogUploadMessage.internal_static_one2data_rbtmqmsgcli_LogUpload_LogUploadLoginAck_descriptor;
      }

      public cn.keptdata.one2data.header.message.protobuf.tool.LogUploadMessage.LogUploadLoginAck getDefaultInstanceForType() {
        return cn.keptdata.one2data.header.message.protobuf.tool.LogUploadMessage.LogUploadLoginAck.getDefaultInstance();
      }

      public cn.keptdata.one2data.header.message.protobuf.tool.LogUploadMessage.LogUploadLoginAck build() {
        cn.keptdata.one2data.header.message.protobuf.tool.LogUploadMessage.LogUploadLoginAck result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public cn.keptdata.one2data.header.message.protobuf.tool.LogUploadMessage.LogUploadLoginAck buildPartial() {
        cn.keptdata.one2data.header.message.protobuf.tool.LogUploadMessage.LogUploadLoginAck result = new cn.keptdata.one2data.header.message.protobuf.tool.LogUploadMessage.LogUploadLoginAck(this);
        if (baseAckBuilder_ == null) {
          result.baseAck_ = baseAck_;
        } else {
          result.baseAck_ = baseAckBuilder_.build();
        }
        result.s3Schema_ = s3Schema_;
        result.s3Endpoint_ = s3Endpoint_;
        result.s3AccessKeyId_ = s3AccessKeyId_;
        result.s3SecretKey_ = s3SecretKey_;
        result.bucketName_ = bucketName_;
        result.objectName_ = objectName_;
        result.isCompress_ = isCompress_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof cn.keptdata.one2data.header.message.protobuf.tool.LogUploadMessage.LogUploadLoginAck) {
          return mergeFrom((cn.keptdata.one2data.header.message.protobuf.tool.LogUploadMessage.LogUploadLoginAck)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(cn.keptdata.one2data.header.message.protobuf.tool.LogUploadMessage.LogUploadLoginAck other) {
        if (other == cn.keptdata.one2data.header.message.protobuf.tool.LogUploadMessage.LogUploadLoginAck.getDefaultInstance()) return this;
        if (other.hasBaseAck()) {
          mergeBaseAck(other.getBaseAck());
        }
        if (!other.getS3Schema().isEmpty()) {
          s3Schema_ = other.s3Schema_;
          onChanged();
        }
        if (!other.getS3Endpoint().isEmpty()) {
          s3Endpoint_ = other.s3Endpoint_;
          onChanged();
        }
        if (!other.getS3AccessKeyId().isEmpty()) {
          s3AccessKeyId_ = other.s3AccessKeyId_;
          onChanged();
        }
        if (!other.getS3SecretKey().isEmpty()) {
          s3SecretKey_ = other.s3SecretKey_;
          onChanged();
        }
        if (!other.getBucketName().isEmpty()) {
          bucketName_ = other.bucketName_;
          onChanged();
        }
        if (!other.getObjectName().isEmpty()) {
          objectName_ = other.objectName_;
          onChanged();
        }
        if (other.getIsCompress() != false) {
          setIsCompress(other.getIsCompress());
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        cn.keptdata.one2data.header.message.protobuf.tool.LogUploadMessage.LogUploadLoginAck parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (cn.keptdata.one2data.header.message.protobuf.tool.LogUploadMessage.LogUploadLoginAck) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck baseAck_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck, cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck.Builder, cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAckOrBuilder> baseAckBuilder_;
      /**
       * <code>optional .one2data.rbtmqmsgcli.common.BaseAck base_ack = 1;</code>
       */
      public boolean hasBaseAck() {
        return baseAckBuilder_ != null || baseAck_ != null;
      }
      /**
       * <code>optional .one2data.rbtmqmsgcli.common.BaseAck base_ack = 1;</code>
       */
      public cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck getBaseAck() {
        if (baseAckBuilder_ == null) {
          return baseAck_ == null ? cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck.getDefaultInstance() : baseAck_;
        } else {
          return baseAckBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .one2data.rbtmqmsgcli.common.BaseAck base_ack = 1;</code>
       */
      public Builder setBaseAck(cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck value) {
        if (baseAckBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          baseAck_ = value;
          onChanged();
        } else {
          baseAckBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>optional .one2data.rbtmqmsgcli.common.BaseAck base_ack = 1;</code>
       */
      public Builder setBaseAck(
          cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck.Builder builderForValue) {
        if (baseAckBuilder_ == null) {
          baseAck_ = builderForValue.build();
          onChanged();
        } else {
          baseAckBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>optional .one2data.rbtmqmsgcli.common.BaseAck base_ack = 1;</code>
       */
      public Builder mergeBaseAck(cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck value) {
        if (baseAckBuilder_ == null) {
          if (baseAck_ != null) {
            baseAck_ =
              cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck.newBuilder(baseAck_).mergeFrom(value).buildPartial();
          } else {
            baseAck_ = value;
          }
          onChanged();
        } else {
          baseAckBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>optional .one2data.rbtmqmsgcli.common.BaseAck base_ack = 1;</code>
       */
      public Builder clearBaseAck() {
        if (baseAckBuilder_ == null) {
          baseAck_ = null;
          onChanged();
        } else {
          baseAck_ = null;
          baseAckBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>optional .one2data.rbtmqmsgcli.common.BaseAck base_ack = 1;</code>
       */
      public cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck.Builder getBaseAckBuilder() {
        
        onChanged();
        return getBaseAckFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .one2data.rbtmqmsgcli.common.BaseAck base_ack = 1;</code>
       */
      public cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAckOrBuilder getBaseAckOrBuilder() {
        if (baseAckBuilder_ != null) {
          return baseAckBuilder_.getMessageOrBuilder();
        } else {
          return baseAck_ == null ?
              cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck.getDefaultInstance() : baseAck_;
        }
      }
      /**
       * <code>optional .one2data.rbtmqmsgcli.common.BaseAck base_ack = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck, cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck.Builder, cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAckOrBuilder> 
          getBaseAckFieldBuilder() {
        if (baseAckBuilder_ == null) {
          baseAckBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck, cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck.Builder, cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAckOrBuilder>(
                  getBaseAck(),
                  getParentForChildren(),
                  isClean());
          baseAck_ = null;
        }
        return baseAckBuilder_;
      }

      private Object s3Schema_ = "";
      /**
       * <pre>
       * s3_schema
       * </pre>
       *
       * <code>optional string s3_schema = 2;</code>
       */
      public String getS3Schema() {
        Object ref = s3Schema_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          s3Schema_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <pre>
       * s3_schema
       * </pre>
       *
       * <code>optional string s3_schema = 2;</code>
       */
      public com.google.protobuf.ByteString
          getS3SchemaBytes() {
        Object ref = s3Schema_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          s3Schema_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * s3_schema
       * </pre>
       *
       * <code>optional string s3_schema = 2;</code>
       */
      public Builder setS3Schema(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        s3Schema_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * s3_schema
       * </pre>
       *
       * <code>optional string s3_schema = 2;</code>
       */
      public Builder clearS3Schema() {
        
        s3Schema_ = getDefaultInstance().getS3Schema();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * s3_schema
       * </pre>
       *
       * <code>optional string s3_schema = 2;</code>
       */
      public Builder setS3SchemaBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        s3Schema_ = value;
        onChanged();
        return this;
      }

      private Object s3Endpoint_ = "";
      /**
       * <pre>
       * s3_endpoint
       * </pre>
       *
       * <code>optional string s3_endpoint = 3;</code>
       */
      public String getS3Endpoint() {
        Object ref = s3Endpoint_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          s3Endpoint_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <pre>
       * s3_endpoint
       * </pre>
       *
       * <code>optional string s3_endpoint = 3;</code>
       */
      public com.google.protobuf.ByteString
          getS3EndpointBytes() {
        Object ref = s3Endpoint_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          s3Endpoint_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * s3_endpoint
       * </pre>
       *
       * <code>optional string s3_endpoint = 3;</code>
       */
      public Builder setS3Endpoint(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        s3Endpoint_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * s3_endpoint
       * </pre>
       *
       * <code>optional string s3_endpoint = 3;</code>
       */
      public Builder clearS3Endpoint() {
        
        s3Endpoint_ = getDefaultInstance().getS3Endpoint();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * s3_endpoint
       * </pre>
       *
       * <code>optional string s3_endpoint = 3;</code>
       */
      public Builder setS3EndpointBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        s3Endpoint_ = value;
        onChanged();
        return this;
      }

      private Object s3AccessKeyId_ = "";
      /**
       * <pre>
       * s3_access_key_id
       * </pre>
       *
       * <code>optional string s3_access_key_id = 4;</code>
       */
      public String getS3AccessKeyId() {
        Object ref = s3AccessKeyId_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          s3AccessKeyId_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <pre>
       * s3_access_key_id
       * </pre>
       *
       * <code>optional string s3_access_key_id = 4;</code>
       */
      public com.google.protobuf.ByteString
          getS3AccessKeyIdBytes() {
        Object ref = s3AccessKeyId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          s3AccessKeyId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * s3_access_key_id
       * </pre>
       *
       * <code>optional string s3_access_key_id = 4;</code>
       */
      public Builder setS3AccessKeyId(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        s3AccessKeyId_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * s3_access_key_id
       * </pre>
       *
       * <code>optional string s3_access_key_id = 4;</code>
       */
      public Builder clearS3AccessKeyId() {
        
        s3AccessKeyId_ = getDefaultInstance().getS3AccessKeyId();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * s3_access_key_id
       * </pre>
       *
       * <code>optional string s3_access_key_id = 4;</code>
       */
      public Builder setS3AccessKeyIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        s3AccessKeyId_ = value;
        onChanged();
        return this;
      }

      private Object s3SecretKey_ = "";
      /**
       * <pre>
       * s3_secret_key
       * </pre>
       *
       * <code>optional string s3_secret_key = 5;</code>
       */
      public String getS3SecretKey() {
        Object ref = s3SecretKey_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          s3SecretKey_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <pre>
       * s3_secret_key
       * </pre>
       *
       * <code>optional string s3_secret_key = 5;</code>
       */
      public com.google.protobuf.ByteString
          getS3SecretKeyBytes() {
        Object ref = s3SecretKey_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          s3SecretKey_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * s3_secret_key
       * </pre>
       *
       * <code>optional string s3_secret_key = 5;</code>
       */
      public Builder setS3SecretKey(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        s3SecretKey_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * s3_secret_key
       * </pre>
       *
       * <code>optional string s3_secret_key = 5;</code>
       */
      public Builder clearS3SecretKey() {
        
        s3SecretKey_ = getDefaultInstance().getS3SecretKey();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * s3_secret_key
       * </pre>
       *
       * <code>optional string s3_secret_key = 5;</code>
       */
      public Builder setS3SecretKeyBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        s3SecretKey_ = value;
        onChanged();
        return this;
      }

      private Object bucketName_ = "";
      /**
       * <pre>
       * minio中桶名
       * </pre>
       *
       * <code>optional string bucket_name = 6;</code>
       */
      public String getBucketName() {
        Object ref = bucketName_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          bucketName_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <pre>
       * minio中桶名
       * </pre>
       *
       * <code>optional string bucket_name = 6;</code>
       */
      public com.google.protobuf.ByteString
          getBucketNameBytes() {
        Object ref = bucketName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          bucketName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * minio中桶名
       * </pre>
       *
       * <code>optional string bucket_name = 6;</code>
       */
      public Builder setBucketName(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        bucketName_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * minio中桶名
       * </pre>
       *
       * <code>optional string bucket_name = 6;</code>
       */
      public Builder clearBucketName() {
        
        bucketName_ = getDefaultInstance().getBucketName();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * minio中桶名
       * </pre>
       *
       * <code>optional string bucket_name = 6;</code>
       */
      public Builder setBucketNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        bucketName_ = value;
        onChanged();
        return this;
      }

      private Object objectName_ = "";
      /**
       * <pre>
       * 对象名
       * </pre>
       *
       * <code>optional string object_name = 7;</code>
       */
      public String getObjectName() {
        Object ref = objectName_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          objectName_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <pre>
       * 对象名
       * </pre>
       *
       * <code>optional string object_name = 7;</code>
       */
      public com.google.protobuf.ByteString
          getObjectNameBytes() {
        Object ref = objectName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          objectName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * 对象名
       * </pre>
       *
       * <code>optional string object_name = 7;</code>
       */
      public Builder setObjectName(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        objectName_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 对象名
       * </pre>
       *
       * <code>optional string object_name = 7;</code>
       */
      public Builder clearObjectName() {
        
        objectName_ = getDefaultInstance().getObjectName();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 对象名
       * </pre>
       *
       * <code>optional string object_name = 7;</code>
       */
      public Builder setObjectNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        objectName_ = value;
        onChanged();
        return this;
      }

      private boolean isCompress_ ;
      /**
       * <pre>
       * 是否带压缩
       * </pre>
       *
       * <code>optional bool is_compress = 8;</code>
       */
      public boolean getIsCompress() {
        return isCompress_;
      }
      /**
       * <pre>
       * 是否带压缩
       * </pre>
       *
       * <code>optional bool is_compress = 8;</code>
       */
      public Builder setIsCompress(boolean value) {
        
        isCompress_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 是否带压缩
       * </pre>
       *
       * <code>optional bool is_compress = 8;</code>
       */
      public Builder clearIsCompress() {
        
        isCompress_ = false;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:one2data.rbtmqmsgcli.LogUpload.LogUploadLoginAck)
    }

    // @@protoc_insertion_point(class_scope:one2data.rbtmqmsgcli.LogUpload.LogUploadLoginAck)
    private static final cn.keptdata.one2data.header.message.protobuf.tool.LogUploadMessage.LogUploadLoginAck DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new cn.keptdata.one2data.header.message.protobuf.tool.LogUploadMessage.LogUploadLoginAck();
    }

    public static cn.keptdata.one2data.header.message.protobuf.tool.LogUploadMessage.LogUploadLoginAck getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<LogUploadLoginAck>
        PARSER = new com.google.protobuf.AbstractParser<LogUploadLoginAck>() {
      public LogUploadLoginAck parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new LogUploadLoginAck(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<LogUploadLoginAck> parser() {
      return PARSER;
    }

    @Override
    public com.google.protobuf.Parser<LogUploadLoginAck> getParserForType() {
      return PARSER;
    }

    public cn.keptdata.one2data.header.message.protobuf.tool.LogUploadMessage.LogUploadLoginAck getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ReportLogUploadInfoOrBuilder extends
      // @@protoc_insertion_point(interface_extends:one2data.rbtmqmsgcli.LogUpload.ReportLogUploadInfo)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * 节点内部唯一ID
     * </pre>
     *
     * <code>optional string uuid_key = 1;</code>
     */
    String getUuidKey();
    /**
     * <pre>
     * 节点内部唯一ID
     * </pre>
     *
     * <code>optional string uuid_key = 1;</code>
     */
    com.google.protobuf.ByteString
        getUuidKeyBytes();

    /**
     * <pre>
     * 任务id
     * </pre>
     *
     * <code>optional string task_uuid = 2;</code>
     */
    String getTaskUuid();
    /**
     * <pre>
     * 任务id
     * </pre>
     *
     * <code>optional string task_uuid = 2;</code>
     */
    com.google.protobuf.ByteString
        getTaskUuidBytes();

    /**
     * <pre>
     * 节点类型
     * </pre>
     *
     * <code>optional .one2data.rbtmqmsgcli.common.NodeType node_type = 3;</code>
     */
    int getNodeTypeValue();
    /**
     * <pre>
     * 节点类型
     * </pre>
     *
     * <code>optional .one2data.rbtmqmsgcli.common.NodeType node_type = 3;</code>
     */
    cn.keptdata.one2data.header.message.protobuf.common.Node.NodeType getNodeType();

    /**
     * <pre>
     * 上传状态
     * </pre>
     *
     * <code>optional .one2data.rbtmqmsgcli.LogUpload.ReportLogUploadInfo.UploadState state = 4;</code>
     */
    int getStateValue();
    /**
     * <pre>
     * 上传状态
     * </pre>
     *
     * <code>optional .one2data.rbtmqmsgcli.LogUpload.ReportLogUploadInfo.UploadState state = 4;</code>
     */
    cn.keptdata.one2data.header.message.protobuf.tool.LogUploadMessage.ReportLogUploadInfo.UploadState getState();

    /**
     * <pre>
     * 信息-错误状态使用
     * </pre>
     *
     * <code>optional string message = 5;</code>
     */
    String getMessage();
    /**
     * <pre>
     * 信息-错误状态使用
     * </pre>
     *
     * <code>optional string message = 5;</code>
     */
    com.google.protobuf.ByteString
        getMessageBytes();

    /**
     * <pre>
     * 进度-预留
     * </pre>
     *
     * <code>optional double progress = 6;</code>
     */
    double getProgress();
  }
  /**
   * <pre>
   * 日志上传 LogUpload 上报状态  LogUpload子进程 -&gt; WEB
   * </pre>
   *
   * Protobuf type {@code one2data.rbtmqmsgcli.LogUpload.ReportLogUploadInfo}
   */
  public  static final class ReportLogUploadInfo extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:one2data.rbtmqmsgcli.LogUpload.ReportLogUploadInfo)
      ReportLogUploadInfoOrBuilder {
    // Use ReportLogUploadInfo.newBuilder() to construct.
    private ReportLogUploadInfo(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ReportLogUploadInfo() {
      uuidKey_ = "";
      taskUuid_ = "";
      nodeType_ = 0;
      state_ = 0;
      message_ = "";
      progress_ = 0D;
    }

    @Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private ReportLogUploadInfo(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              String s = input.readStringRequireUtf8();

              uuidKey_ = s;
              break;
            }
            case 18: {
              String s = input.readStringRequireUtf8();

              taskUuid_ = s;
              break;
            }
            case 24: {
              int rawValue = input.readEnum();

              nodeType_ = rawValue;
              break;
            }
            case 32: {
              int rawValue = input.readEnum();

              state_ = rawValue;
              break;
            }
            case 42: {
              String s = input.readStringRequireUtf8();

              message_ = s;
              break;
            }
            case 49: {

              progress_ = input.readDouble();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return cn.keptdata.one2data.header.message.protobuf.tool.LogUploadMessage.internal_static_one2data_rbtmqmsgcli_LogUpload_ReportLogUploadInfo_descriptor;
    }

    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return cn.keptdata.one2data.header.message.protobuf.tool.LogUploadMessage.internal_static_one2data_rbtmqmsgcli_LogUpload_ReportLogUploadInfo_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              cn.keptdata.one2data.header.message.protobuf.tool.LogUploadMessage.ReportLogUploadInfo.class, cn.keptdata.one2data.header.message.protobuf.tool.LogUploadMessage.ReportLogUploadInfo.Builder.class);
    }

    /**
     * Protobuf enum {@code one2data.rbtmqmsgcli.LogUpload.ReportLogUploadInfo.UploadState}
     */
    public enum UploadState
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <pre>
       * 成功
       * </pre>
       *
       * <code>US_SUCCESS = 0;</code>
       */
      US_SUCCESS(0),
      /**
       * <pre>
       * 失败
       * </pre>
       *
       * <code>US_FAILURE = 1;</code>
       */
      US_FAILURE(1),
      /**
       * <pre>
       *进行中-预留 进度推送时的状态
       * </pre>
       *
       * <code>US_DOING = 2;</code>
       */
      US_DOING(2),
      UNRECOGNIZED(-1),
      ;

      /**
       * <pre>
       * 成功
       * </pre>
       *
       * <code>US_SUCCESS = 0;</code>
       */
      public static final int US_SUCCESS_VALUE = 0;
      /**
       * <pre>
       * 失败
       * </pre>
       *
       * <code>US_FAILURE = 1;</code>
       */
      public static final int US_FAILURE_VALUE = 1;
      /**
       * <pre>
       *进行中-预留 进度推送时的状态
       * </pre>
       *
       * <code>US_DOING = 2;</code>
       */
      public static final int US_DOING_VALUE = 2;


      public final int getNumber() {
        if (this == UNRECOGNIZED) {
          throw new IllegalArgumentException(
              "Can't get the number of an unknown enum value.");
        }
        return value;
      }

      /**
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @Deprecated
      public static UploadState valueOf(int value) {
        return forNumber(value);
      }

      public static UploadState forNumber(int value) {
        switch (value) {
          case 0: return US_SUCCESS;
          case 1: return US_FAILURE;
          case 2: return US_DOING;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<UploadState>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          UploadState> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<UploadState>() {
              public UploadState findValueByNumber(int number) {
                return UploadState.forNumber(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(ordinal());
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return cn.keptdata.one2data.header.message.protobuf.tool.LogUploadMessage.ReportLogUploadInfo.getDescriptor().getEnumTypes().get(0);
      }

      private static final UploadState[] VALUES = values();

      public static UploadState valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        if (desc.getIndex() == -1) {
          return UNRECOGNIZED;
        }
        return VALUES[desc.getIndex()];
      }

      private final int value;

      private UploadState(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:one2data.rbtmqmsgcli.LogUpload.ReportLogUploadInfo.UploadState)
    }

    public static final int UUID_KEY_FIELD_NUMBER = 1;
    private volatile Object uuidKey_;
    /**
     * <pre>
     * 节点内部唯一ID
     * </pre>
     *
     * <code>optional string uuid_key = 1;</code>
     */
    public String getUuidKey() {
      Object ref = uuidKey_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        uuidKey_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * 节点内部唯一ID
     * </pre>
     *
     * <code>optional string uuid_key = 1;</code>
     */
    public com.google.protobuf.ByteString
        getUuidKeyBytes() {
      Object ref = uuidKey_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        uuidKey_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int TASK_UUID_FIELD_NUMBER = 2;
    private volatile Object taskUuid_;
    /**
     * <pre>
     * 任务id
     * </pre>
     *
     * <code>optional string task_uuid = 2;</code>
     */
    public String getTaskUuid() {
      Object ref = taskUuid_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        taskUuid_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * 任务id
     * </pre>
     *
     * <code>optional string task_uuid = 2;</code>
     */
    public com.google.protobuf.ByteString
        getTaskUuidBytes() {
      Object ref = taskUuid_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        taskUuid_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int NODE_TYPE_FIELD_NUMBER = 3;
    private int nodeType_;
    /**
     * <pre>
     * 节点类型
     * </pre>
     *
     * <code>optional .one2data.rbtmqmsgcli.common.NodeType node_type = 3;</code>
     */
    public int getNodeTypeValue() {
      return nodeType_;
    }
    /**
     * <pre>
     * 节点类型
     * </pre>
     *
     * <code>optional .one2data.rbtmqmsgcli.common.NodeType node_type = 3;</code>
     */
    public cn.keptdata.one2data.header.message.protobuf.common.Node.NodeType getNodeType() {
      cn.keptdata.one2data.header.message.protobuf.common.Node.NodeType result = cn.keptdata.one2data.header.message.protobuf.common.Node.NodeType.valueOf(nodeType_);
      return result == null ? cn.keptdata.one2data.header.message.protobuf.common.Node.NodeType.UNRECOGNIZED : result;
    }

    public static final int STATE_FIELD_NUMBER = 4;
    private int state_;
    /**
     * <pre>
     * 上传状态
     * </pre>
     *
     * <code>optional .one2data.rbtmqmsgcli.LogUpload.ReportLogUploadInfo.UploadState state = 4;</code>
     */
    public int getStateValue() {
      return state_;
    }
    /**
     * <pre>
     * 上传状态
     * </pre>
     *
     * <code>optional .one2data.rbtmqmsgcli.LogUpload.ReportLogUploadInfo.UploadState state = 4;</code>
     */
    public cn.keptdata.one2data.header.message.protobuf.tool.LogUploadMessage.ReportLogUploadInfo.UploadState getState() {
      cn.keptdata.one2data.header.message.protobuf.tool.LogUploadMessage.ReportLogUploadInfo.UploadState result = cn.keptdata.one2data.header.message.protobuf.tool.LogUploadMessage.ReportLogUploadInfo.UploadState.valueOf(state_);
      return result == null ? cn.keptdata.one2data.header.message.protobuf.tool.LogUploadMessage.ReportLogUploadInfo.UploadState.UNRECOGNIZED : result;
    }

    public static final int MESSAGE_FIELD_NUMBER = 5;
    private volatile Object message_;
    /**
     * <pre>
     * 信息-错误状态使用
     * </pre>
     *
     * <code>optional string message = 5;</code>
     */
    public String getMessage() {
      Object ref = message_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        message_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * 信息-错误状态使用
     * </pre>
     *
     * <code>optional string message = 5;</code>
     */
    public com.google.protobuf.ByteString
        getMessageBytes() {
      Object ref = message_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        message_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int PROGRESS_FIELD_NUMBER = 6;
    private double progress_;
    /**
     * <pre>
     * 进度-预留
     * </pre>
     *
     * <code>optional double progress = 6;</code>
     */
    public double getProgress() {
      return progress_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getUuidKeyBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, uuidKey_);
      }
      if (!getTaskUuidBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, taskUuid_);
      }
      if (nodeType_ != cn.keptdata.one2data.header.message.protobuf.common.Node.NodeType.NT_CLIENT.getNumber()) {
        output.writeEnum(3, nodeType_);
      }
      if (state_ != cn.keptdata.one2data.header.message.protobuf.tool.LogUploadMessage.ReportLogUploadInfo.UploadState.US_SUCCESS.getNumber()) {
        output.writeEnum(4, state_);
      }
      if (!getMessageBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 5, message_);
      }
      if (progress_ != 0D) {
        output.writeDouble(6, progress_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getUuidKeyBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, uuidKey_);
      }
      if (!getTaskUuidBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, taskUuid_);
      }
      if (nodeType_ != cn.keptdata.one2data.header.message.protobuf.common.Node.NodeType.NT_CLIENT.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(3, nodeType_);
      }
      if (state_ != cn.keptdata.one2data.header.message.protobuf.tool.LogUploadMessage.ReportLogUploadInfo.UploadState.US_SUCCESS.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(4, state_);
      }
      if (!getMessageBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(5, message_);
      }
      if (progress_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(6, progress_);
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @Override
    public boolean equals(final Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof cn.keptdata.one2data.header.message.protobuf.tool.LogUploadMessage.ReportLogUploadInfo)) {
        return super.equals(obj);
      }
      cn.keptdata.one2data.header.message.protobuf.tool.LogUploadMessage.ReportLogUploadInfo other = (cn.keptdata.one2data.header.message.protobuf.tool.LogUploadMessage.ReportLogUploadInfo) obj;

      boolean result = true;
      result = result && getUuidKey()
          .equals(other.getUuidKey());
      result = result && getTaskUuid()
          .equals(other.getTaskUuid());
      result = result && nodeType_ == other.nodeType_;
      result = result && state_ == other.state_;
      result = result && getMessage()
          .equals(other.getMessage());
      result = result && (
          Double.doubleToLongBits(getProgress())
          == Double.doubleToLongBits(
              other.getProgress()));
      return result;
    }

    @Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptorForType().hashCode();
      hash = (37 * hash) + UUID_KEY_FIELD_NUMBER;
      hash = (53 * hash) + getUuidKey().hashCode();
      hash = (37 * hash) + TASK_UUID_FIELD_NUMBER;
      hash = (53 * hash) + getTaskUuid().hashCode();
      hash = (37 * hash) + NODE_TYPE_FIELD_NUMBER;
      hash = (53 * hash) + nodeType_;
      hash = (37 * hash) + STATE_FIELD_NUMBER;
      hash = (53 * hash) + state_;
      hash = (37 * hash) + MESSAGE_FIELD_NUMBER;
      hash = (53 * hash) + getMessage().hashCode();
      hash = (37 * hash) + PROGRESS_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          Double.doubleToLongBits(getProgress()));
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static cn.keptdata.one2data.header.message.protobuf.tool.LogUploadMessage.ReportLogUploadInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static cn.keptdata.one2data.header.message.protobuf.tool.LogUploadMessage.ReportLogUploadInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static cn.keptdata.one2data.header.message.protobuf.tool.LogUploadMessage.ReportLogUploadInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static cn.keptdata.one2data.header.message.protobuf.tool.LogUploadMessage.ReportLogUploadInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static cn.keptdata.one2data.header.message.protobuf.tool.LogUploadMessage.ReportLogUploadInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static cn.keptdata.one2data.header.message.protobuf.tool.LogUploadMessage.ReportLogUploadInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static cn.keptdata.one2data.header.message.protobuf.tool.LogUploadMessage.ReportLogUploadInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static cn.keptdata.one2data.header.message.protobuf.tool.LogUploadMessage.ReportLogUploadInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static cn.keptdata.one2data.header.message.protobuf.tool.LogUploadMessage.ReportLogUploadInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static cn.keptdata.one2data.header.message.protobuf.tool.LogUploadMessage.ReportLogUploadInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(cn.keptdata.one2data.header.message.protobuf.tool.LogUploadMessage.ReportLogUploadInfo prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * 日志上传 LogUpload 上报状态  LogUpload子进程 -&gt; WEB
     * </pre>
     *
     * Protobuf type {@code one2data.rbtmqmsgcli.LogUpload.ReportLogUploadInfo}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:one2data.rbtmqmsgcli.LogUpload.ReportLogUploadInfo)
        cn.keptdata.one2data.header.message.protobuf.tool.LogUploadMessage.ReportLogUploadInfoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return cn.keptdata.one2data.header.message.protobuf.tool.LogUploadMessage.internal_static_one2data_rbtmqmsgcli_LogUpload_ReportLogUploadInfo_descriptor;
      }

      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return cn.keptdata.one2data.header.message.protobuf.tool.LogUploadMessage.internal_static_one2data_rbtmqmsgcli_LogUpload_ReportLogUploadInfo_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                cn.keptdata.one2data.header.message.protobuf.tool.LogUploadMessage.ReportLogUploadInfo.class, cn.keptdata.one2data.header.message.protobuf.tool.LogUploadMessage.ReportLogUploadInfo.Builder.class);
      }

      // Construct using cn.keptdata.one2data.header.message.protobuf.tool.LogUploadMessage.ReportLogUploadInfo.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        uuidKey_ = "";

        taskUuid_ = "";

        nodeType_ = 0;

        state_ = 0;

        message_ = "";

        progress_ = 0D;

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return cn.keptdata.one2data.header.message.protobuf.tool.LogUploadMessage.internal_static_one2data_rbtmqmsgcli_LogUpload_ReportLogUploadInfo_descriptor;
      }

      public cn.keptdata.one2data.header.message.protobuf.tool.LogUploadMessage.ReportLogUploadInfo getDefaultInstanceForType() {
        return cn.keptdata.one2data.header.message.protobuf.tool.LogUploadMessage.ReportLogUploadInfo.getDefaultInstance();
      }

      public cn.keptdata.one2data.header.message.protobuf.tool.LogUploadMessage.ReportLogUploadInfo build() {
        cn.keptdata.one2data.header.message.protobuf.tool.LogUploadMessage.ReportLogUploadInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public cn.keptdata.one2data.header.message.protobuf.tool.LogUploadMessage.ReportLogUploadInfo buildPartial() {
        cn.keptdata.one2data.header.message.protobuf.tool.LogUploadMessage.ReportLogUploadInfo result = new cn.keptdata.one2data.header.message.protobuf.tool.LogUploadMessage.ReportLogUploadInfo(this);
        result.uuidKey_ = uuidKey_;
        result.taskUuid_ = taskUuid_;
        result.nodeType_ = nodeType_;
        result.state_ = state_;
        result.message_ = message_;
        result.progress_ = progress_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof cn.keptdata.one2data.header.message.protobuf.tool.LogUploadMessage.ReportLogUploadInfo) {
          return mergeFrom((cn.keptdata.one2data.header.message.protobuf.tool.LogUploadMessage.ReportLogUploadInfo)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(cn.keptdata.one2data.header.message.protobuf.tool.LogUploadMessage.ReportLogUploadInfo other) {
        if (other == cn.keptdata.one2data.header.message.protobuf.tool.LogUploadMessage.ReportLogUploadInfo.getDefaultInstance()) return this;
        if (!other.getUuidKey().isEmpty()) {
          uuidKey_ = other.uuidKey_;
          onChanged();
        }
        if (!other.getTaskUuid().isEmpty()) {
          taskUuid_ = other.taskUuid_;
          onChanged();
        }
        if (other.nodeType_ != 0) {
          setNodeTypeValue(other.getNodeTypeValue());
        }
        if (other.state_ != 0) {
          setStateValue(other.getStateValue());
        }
        if (!other.getMessage().isEmpty()) {
          message_ = other.message_;
          onChanged();
        }
        if (other.getProgress() != 0D) {
          setProgress(other.getProgress());
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        cn.keptdata.one2data.header.message.protobuf.tool.LogUploadMessage.ReportLogUploadInfo parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (cn.keptdata.one2data.header.message.protobuf.tool.LogUploadMessage.ReportLogUploadInfo) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private Object uuidKey_ = "";
      /**
       * <pre>
       * 节点内部唯一ID
       * </pre>
       *
       * <code>optional string uuid_key = 1;</code>
       */
      public String getUuidKey() {
        Object ref = uuidKey_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          uuidKey_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <pre>
       * 节点内部唯一ID
       * </pre>
       *
       * <code>optional string uuid_key = 1;</code>
       */
      public com.google.protobuf.ByteString
          getUuidKeyBytes() {
        Object ref = uuidKey_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          uuidKey_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * 节点内部唯一ID
       * </pre>
       *
       * <code>optional string uuid_key = 1;</code>
       */
      public Builder setUuidKey(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        uuidKey_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 节点内部唯一ID
       * </pre>
       *
       * <code>optional string uuid_key = 1;</code>
       */
      public Builder clearUuidKey() {
        
        uuidKey_ = getDefaultInstance().getUuidKey();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 节点内部唯一ID
       * </pre>
       *
       * <code>optional string uuid_key = 1;</code>
       */
      public Builder setUuidKeyBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        uuidKey_ = value;
        onChanged();
        return this;
      }

      private Object taskUuid_ = "";
      /**
       * <pre>
       * 任务id
       * </pre>
       *
       * <code>optional string task_uuid = 2;</code>
       */
      public String getTaskUuid() {
        Object ref = taskUuid_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          taskUuid_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <pre>
       * 任务id
       * </pre>
       *
       * <code>optional string task_uuid = 2;</code>
       */
      public com.google.protobuf.ByteString
          getTaskUuidBytes() {
        Object ref = taskUuid_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          taskUuid_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * 任务id
       * </pre>
       *
       * <code>optional string task_uuid = 2;</code>
       */
      public Builder setTaskUuid(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        taskUuid_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 任务id
       * </pre>
       *
       * <code>optional string task_uuid = 2;</code>
       */
      public Builder clearTaskUuid() {
        
        taskUuid_ = getDefaultInstance().getTaskUuid();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 任务id
       * </pre>
       *
       * <code>optional string task_uuid = 2;</code>
       */
      public Builder setTaskUuidBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        taskUuid_ = value;
        onChanged();
        return this;
      }

      private int nodeType_ = 0;
      /**
       * <pre>
       * 节点类型
       * </pre>
       *
       * <code>optional .one2data.rbtmqmsgcli.common.NodeType node_type = 3;</code>
       */
      public int getNodeTypeValue() {
        return nodeType_;
      }
      /**
       * <pre>
       * 节点类型
       * </pre>
       *
       * <code>optional .one2data.rbtmqmsgcli.common.NodeType node_type = 3;</code>
       */
      public Builder setNodeTypeValue(int value) {
        nodeType_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 节点类型
       * </pre>
       *
       * <code>optional .one2data.rbtmqmsgcli.common.NodeType node_type = 3;</code>
       */
      public cn.keptdata.one2data.header.message.protobuf.common.Node.NodeType getNodeType() {
        cn.keptdata.one2data.header.message.protobuf.common.Node.NodeType result = cn.keptdata.one2data.header.message.protobuf.common.Node.NodeType.valueOf(nodeType_);
        return result == null ? cn.keptdata.one2data.header.message.protobuf.common.Node.NodeType.UNRECOGNIZED : result;
      }
      /**
       * <pre>
       * 节点类型
       * </pre>
       *
       * <code>optional .one2data.rbtmqmsgcli.common.NodeType node_type = 3;</code>
       */
      public Builder setNodeType(cn.keptdata.one2data.header.message.protobuf.common.Node.NodeType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        nodeType_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 节点类型
       * </pre>
       *
       * <code>optional .one2data.rbtmqmsgcli.common.NodeType node_type = 3;</code>
       */
      public Builder clearNodeType() {
        
        nodeType_ = 0;
        onChanged();
        return this;
      }

      private int state_ = 0;
      /**
       * <pre>
       * 上传状态
       * </pre>
       *
       * <code>optional .one2data.rbtmqmsgcli.LogUpload.ReportLogUploadInfo.UploadState state = 4;</code>
       */
      public int getStateValue() {
        return state_;
      }
      /**
       * <pre>
       * 上传状态
       * </pre>
       *
       * <code>optional .one2data.rbtmqmsgcli.LogUpload.ReportLogUploadInfo.UploadState state = 4;</code>
       */
      public Builder setStateValue(int value) {
        state_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 上传状态
       * </pre>
       *
       * <code>optional .one2data.rbtmqmsgcli.LogUpload.ReportLogUploadInfo.UploadState state = 4;</code>
       */
      public cn.keptdata.one2data.header.message.protobuf.tool.LogUploadMessage.ReportLogUploadInfo.UploadState getState() {
        cn.keptdata.one2data.header.message.protobuf.tool.LogUploadMessage.ReportLogUploadInfo.UploadState result = cn.keptdata.one2data.header.message.protobuf.tool.LogUploadMessage.ReportLogUploadInfo.UploadState.valueOf(state_);
        return result == null ? cn.keptdata.one2data.header.message.protobuf.tool.LogUploadMessage.ReportLogUploadInfo.UploadState.UNRECOGNIZED : result;
      }
      /**
       * <pre>
       * 上传状态
       * </pre>
       *
       * <code>optional .one2data.rbtmqmsgcli.LogUpload.ReportLogUploadInfo.UploadState state = 4;</code>
       */
      public Builder setState(cn.keptdata.one2data.header.message.protobuf.tool.LogUploadMessage.ReportLogUploadInfo.UploadState value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        state_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 上传状态
       * </pre>
       *
       * <code>optional .one2data.rbtmqmsgcli.LogUpload.ReportLogUploadInfo.UploadState state = 4;</code>
       */
      public Builder clearState() {
        
        state_ = 0;
        onChanged();
        return this;
      }

      private Object message_ = "";
      /**
       * <pre>
       * 信息-错误状态使用
       * </pre>
       *
       * <code>optional string message = 5;</code>
       */
      public String getMessage() {
        Object ref = message_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          message_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <pre>
       * 信息-错误状态使用
       * </pre>
       *
       * <code>optional string message = 5;</code>
       */
      public com.google.protobuf.ByteString
          getMessageBytes() {
        Object ref = message_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          message_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * 信息-错误状态使用
       * </pre>
       *
       * <code>optional string message = 5;</code>
       */
      public Builder setMessage(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        message_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 信息-错误状态使用
       * </pre>
       *
       * <code>optional string message = 5;</code>
       */
      public Builder clearMessage() {
        
        message_ = getDefaultInstance().getMessage();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 信息-错误状态使用
       * </pre>
       *
       * <code>optional string message = 5;</code>
       */
      public Builder setMessageBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        message_ = value;
        onChanged();
        return this;
      }

      private double progress_ ;
      /**
       * <pre>
       * 进度-预留
       * </pre>
       *
       * <code>optional double progress = 6;</code>
       */
      public double getProgress() {
        return progress_;
      }
      /**
       * <pre>
       * 进度-预留
       * </pre>
       *
       * <code>optional double progress = 6;</code>
       */
      public Builder setProgress(double value) {
        
        progress_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 进度-预留
       * </pre>
       *
       * <code>optional double progress = 6;</code>
       */
      public Builder clearProgress() {
        
        progress_ = 0D;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:one2data.rbtmqmsgcli.LogUpload.ReportLogUploadInfo)
    }

    // @@protoc_insertion_point(class_scope:one2data.rbtmqmsgcli.LogUpload.ReportLogUploadInfo)
    private static final cn.keptdata.one2data.header.message.protobuf.tool.LogUploadMessage.ReportLogUploadInfo DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new cn.keptdata.one2data.header.message.protobuf.tool.LogUploadMessage.ReportLogUploadInfo();
    }

    public static cn.keptdata.one2data.header.message.protobuf.tool.LogUploadMessage.ReportLogUploadInfo getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ReportLogUploadInfo>
        PARSER = new com.google.protobuf.AbstractParser<ReportLogUploadInfo>() {
      public ReportLogUploadInfo parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new ReportLogUploadInfo(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<ReportLogUploadInfo> parser() {
      return PARSER;
    }

    @Override
    public com.google.protobuf.Parser<ReportLogUploadInfo> getParserForType() {
      return PARSER;
    }

    public cn.keptdata.one2data.header.message.protobuf.tool.LogUploadMessage.ReportLogUploadInfo getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ReportLogUploadInfoAckOrBuilder extends
      // @@protoc_insertion_point(interface_extends:one2data.rbtmqmsgcli.LogUpload.ReportLogUploadInfoAck)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional .one2data.rbtmqmsgcli.common.BaseAck base_ack = 1;</code>
     */
    boolean hasBaseAck();
    /**
     * <code>optional .one2data.rbtmqmsgcli.common.BaseAck base_ack = 1;</code>
     */
    cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck getBaseAck();
    /**
     * <code>optional .one2data.rbtmqmsgcli.common.BaseAck base_ack = 1;</code>
     */
    cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAckOrBuilder getBaseAckOrBuilder();
  }
  /**
   * Protobuf type {@code one2data.rbtmqmsgcli.LogUpload.ReportLogUploadInfoAck}
   */
  public  static final class ReportLogUploadInfoAck extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:one2data.rbtmqmsgcli.LogUpload.ReportLogUploadInfoAck)
      ReportLogUploadInfoAckOrBuilder {
    // Use ReportLogUploadInfoAck.newBuilder() to construct.
    private ReportLogUploadInfoAck(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ReportLogUploadInfoAck() {
    }

    @Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private ReportLogUploadInfoAck(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck.Builder subBuilder = null;
              if (baseAck_ != null) {
                subBuilder = baseAck_.toBuilder();
              }
              baseAck_ = input.readMessage(cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(baseAck_);
                baseAck_ = subBuilder.buildPartial();
              }

              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return cn.keptdata.one2data.header.message.protobuf.tool.LogUploadMessage.internal_static_one2data_rbtmqmsgcli_LogUpload_ReportLogUploadInfoAck_descriptor;
    }

    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return cn.keptdata.one2data.header.message.protobuf.tool.LogUploadMessage.internal_static_one2data_rbtmqmsgcli_LogUpload_ReportLogUploadInfoAck_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              cn.keptdata.one2data.header.message.protobuf.tool.LogUploadMessage.ReportLogUploadInfoAck.class, cn.keptdata.one2data.header.message.protobuf.tool.LogUploadMessage.ReportLogUploadInfoAck.Builder.class);
    }

    public static final int BASE_ACK_FIELD_NUMBER = 1;
    private cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck baseAck_;
    /**
     * <code>optional .one2data.rbtmqmsgcli.common.BaseAck base_ack = 1;</code>
     */
    public boolean hasBaseAck() {
      return baseAck_ != null;
    }
    /**
     * <code>optional .one2data.rbtmqmsgcli.common.BaseAck base_ack = 1;</code>
     */
    public cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck getBaseAck() {
      return baseAck_ == null ? cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck.getDefaultInstance() : baseAck_;
    }
    /**
     * <code>optional .one2data.rbtmqmsgcli.common.BaseAck base_ack = 1;</code>
     */
    public cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAckOrBuilder getBaseAckOrBuilder() {
      return getBaseAck();
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (baseAck_ != null) {
        output.writeMessage(1, getBaseAck());
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (baseAck_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getBaseAck());
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @Override
    public boolean equals(final Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof cn.keptdata.one2data.header.message.protobuf.tool.LogUploadMessage.ReportLogUploadInfoAck)) {
        return super.equals(obj);
      }
      cn.keptdata.one2data.header.message.protobuf.tool.LogUploadMessage.ReportLogUploadInfoAck other = (cn.keptdata.one2data.header.message.protobuf.tool.LogUploadMessage.ReportLogUploadInfoAck) obj;

      boolean result = true;
      result = result && (hasBaseAck() == other.hasBaseAck());
      if (hasBaseAck()) {
        result = result && getBaseAck()
            .equals(other.getBaseAck());
      }
      return result;
    }

    @Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptorForType().hashCode();
      if (hasBaseAck()) {
        hash = (37 * hash) + BASE_ACK_FIELD_NUMBER;
        hash = (53 * hash) + getBaseAck().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static cn.keptdata.one2data.header.message.protobuf.tool.LogUploadMessage.ReportLogUploadInfoAck parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static cn.keptdata.one2data.header.message.protobuf.tool.LogUploadMessage.ReportLogUploadInfoAck parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static cn.keptdata.one2data.header.message.protobuf.tool.LogUploadMessage.ReportLogUploadInfoAck parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static cn.keptdata.one2data.header.message.protobuf.tool.LogUploadMessage.ReportLogUploadInfoAck parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static cn.keptdata.one2data.header.message.protobuf.tool.LogUploadMessage.ReportLogUploadInfoAck parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static cn.keptdata.one2data.header.message.protobuf.tool.LogUploadMessage.ReportLogUploadInfoAck parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static cn.keptdata.one2data.header.message.protobuf.tool.LogUploadMessage.ReportLogUploadInfoAck parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static cn.keptdata.one2data.header.message.protobuf.tool.LogUploadMessage.ReportLogUploadInfoAck parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static cn.keptdata.one2data.header.message.protobuf.tool.LogUploadMessage.ReportLogUploadInfoAck parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static cn.keptdata.one2data.header.message.protobuf.tool.LogUploadMessage.ReportLogUploadInfoAck parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(cn.keptdata.one2data.header.message.protobuf.tool.LogUploadMessage.ReportLogUploadInfoAck prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code one2data.rbtmqmsgcli.LogUpload.ReportLogUploadInfoAck}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:one2data.rbtmqmsgcli.LogUpload.ReportLogUploadInfoAck)
        cn.keptdata.one2data.header.message.protobuf.tool.LogUploadMessage.ReportLogUploadInfoAckOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return cn.keptdata.one2data.header.message.protobuf.tool.LogUploadMessage.internal_static_one2data_rbtmqmsgcli_LogUpload_ReportLogUploadInfoAck_descriptor;
      }

      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return cn.keptdata.one2data.header.message.protobuf.tool.LogUploadMessage.internal_static_one2data_rbtmqmsgcli_LogUpload_ReportLogUploadInfoAck_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                cn.keptdata.one2data.header.message.protobuf.tool.LogUploadMessage.ReportLogUploadInfoAck.class, cn.keptdata.one2data.header.message.protobuf.tool.LogUploadMessage.ReportLogUploadInfoAck.Builder.class);
      }

      // Construct using cn.keptdata.one2data.header.message.protobuf.tool.LogUploadMessage.ReportLogUploadInfoAck.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        if (baseAckBuilder_ == null) {
          baseAck_ = null;
        } else {
          baseAck_ = null;
          baseAckBuilder_ = null;
        }
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return cn.keptdata.one2data.header.message.protobuf.tool.LogUploadMessage.internal_static_one2data_rbtmqmsgcli_LogUpload_ReportLogUploadInfoAck_descriptor;
      }

      public cn.keptdata.one2data.header.message.protobuf.tool.LogUploadMessage.ReportLogUploadInfoAck getDefaultInstanceForType() {
        return cn.keptdata.one2data.header.message.protobuf.tool.LogUploadMessage.ReportLogUploadInfoAck.getDefaultInstance();
      }

      public cn.keptdata.one2data.header.message.protobuf.tool.LogUploadMessage.ReportLogUploadInfoAck build() {
        cn.keptdata.one2data.header.message.protobuf.tool.LogUploadMessage.ReportLogUploadInfoAck result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public cn.keptdata.one2data.header.message.protobuf.tool.LogUploadMessage.ReportLogUploadInfoAck buildPartial() {
        cn.keptdata.one2data.header.message.protobuf.tool.LogUploadMessage.ReportLogUploadInfoAck result = new cn.keptdata.one2data.header.message.protobuf.tool.LogUploadMessage.ReportLogUploadInfoAck(this);
        if (baseAckBuilder_ == null) {
          result.baseAck_ = baseAck_;
        } else {
          result.baseAck_ = baseAckBuilder_.build();
        }
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof cn.keptdata.one2data.header.message.protobuf.tool.LogUploadMessage.ReportLogUploadInfoAck) {
          return mergeFrom((cn.keptdata.one2data.header.message.protobuf.tool.LogUploadMessage.ReportLogUploadInfoAck)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(cn.keptdata.one2data.header.message.protobuf.tool.LogUploadMessage.ReportLogUploadInfoAck other) {
        if (other == cn.keptdata.one2data.header.message.protobuf.tool.LogUploadMessage.ReportLogUploadInfoAck.getDefaultInstance()) return this;
        if (other.hasBaseAck()) {
          mergeBaseAck(other.getBaseAck());
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        cn.keptdata.one2data.header.message.protobuf.tool.LogUploadMessage.ReportLogUploadInfoAck parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (cn.keptdata.one2data.header.message.protobuf.tool.LogUploadMessage.ReportLogUploadInfoAck) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck baseAck_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck, cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck.Builder, cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAckOrBuilder> baseAckBuilder_;
      /**
       * <code>optional .one2data.rbtmqmsgcli.common.BaseAck base_ack = 1;</code>
       */
      public boolean hasBaseAck() {
        return baseAckBuilder_ != null || baseAck_ != null;
      }
      /**
       * <code>optional .one2data.rbtmqmsgcli.common.BaseAck base_ack = 1;</code>
       */
      public cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck getBaseAck() {
        if (baseAckBuilder_ == null) {
          return baseAck_ == null ? cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck.getDefaultInstance() : baseAck_;
        } else {
          return baseAckBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .one2data.rbtmqmsgcli.common.BaseAck base_ack = 1;</code>
       */
      public Builder setBaseAck(cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck value) {
        if (baseAckBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          baseAck_ = value;
          onChanged();
        } else {
          baseAckBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>optional .one2data.rbtmqmsgcli.common.BaseAck base_ack = 1;</code>
       */
      public Builder setBaseAck(
          cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck.Builder builderForValue) {
        if (baseAckBuilder_ == null) {
          baseAck_ = builderForValue.build();
          onChanged();
        } else {
          baseAckBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>optional .one2data.rbtmqmsgcli.common.BaseAck base_ack = 1;</code>
       */
      public Builder mergeBaseAck(cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck value) {
        if (baseAckBuilder_ == null) {
          if (baseAck_ != null) {
            baseAck_ =
              cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck.newBuilder(baseAck_).mergeFrom(value).buildPartial();
          } else {
            baseAck_ = value;
          }
          onChanged();
        } else {
          baseAckBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>optional .one2data.rbtmqmsgcli.common.BaseAck base_ack = 1;</code>
       */
      public Builder clearBaseAck() {
        if (baseAckBuilder_ == null) {
          baseAck_ = null;
          onChanged();
        } else {
          baseAck_ = null;
          baseAckBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>optional .one2data.rbtmqmsgcli.common.BaseAck base_ack = 1;</code>
       */
      public cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck.Builder getBaseAckBuilder() {
        
        onChanged();
        return getBaseAckFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .one2data.rbtmqmsgcli.common.BaseAck base_ack = 1;</code>
       */
      public cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAckOrBuilder getBaseAckOrBuilder() {
        if (baseAckBuilder_ != null) {
          return baseAckBuilder_.getMessageOrBuilder();
        } else {
          return baseAck_ == null ?
              cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck.getDefaultInstance() : baseAck_;
        }
      }
      /**
       * <code>optional .one2data.rbtmqmsgcli.common.BaseAck base_ack = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck, cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck.Builder, cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAckOrBuilder> 
          getBaseAckFieldBuilder() {
        if (baseAckBuilder_ == null) {
          baseAckBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck, cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck.Builder, cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAckOrBuilder>(
                  getBaseAck(),
                  getParentForChildren(),
                  isClean());
          baseAck_ = null;
        }
        return baseAckBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:one2data.rbtmqmsgcli.LogUpload.ReportLogUploadInfoAck)
    }

    // @@protoc_insertion_point(class_scope:one2data.rbtmqmsgcli.LogUpload.ReportLogUploadInfoAck)
    private static final cn.keptdata.one2data.header.message.protobuf.tool.LogUploadMessage.ReportLogUploadInfoAck DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new cn.keptdata.one2data.header.message.protobuf.tool.LogUploadMessage.ReportLogUploadInfoAck();
    }

    public static cn.keptdata.one2data.header.message.protobuf.tool.LogUploadMessage.ReportLogUploadInfoAck getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ReportLogUploadInfoAck>
        PARSER = new com.google.protobuf.AbstractParser<ReportLogUploadInfoAck>() {
      public ReportLogUploadInfoAck parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new ReportLogUploadInfoAck(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<ReportLogUploadInfoAck> parser() {
      return PARSER;
    }

    @Override
    public com.google.protobuf.Parser<ReportLogUploadInfoAck> getParserForType() {
      return PARSER;
    }

    public cn.keptdata.one2data.header.message.protobuf.tool.LogUploadMessage.ReportLogUploadInfoAck getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface SubscribeLogUploadProgressOrBuilder extends
      // @@protoc_insertion_point(interface_extends:one2data.rbtmqmsgcli.LogUpload.SubscribeLogUploadProgress)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * 节点内部唯一ID
     * </pre>
     *
     * <code>optional string uuid_key = 1;</code>
     */
    String getUuidKey();
    /**
     * <pre>
     * 节点内部唯一ID
     * </pre>
     *
     * <code>optional string uuid_key = 1;</code>
     */
    com.google.protobuf.ByteString
        getUuidKeyBytes();

    /**
     * <pre>
     * 日志上传进度上报时间间隔（单位：秒）
     * </pre>
     *
     * <code>optional int64 report_interval_seconds = 2;</code>
     */
    long getReportIntervalSeconds();

    /**
     * <pre>
     * 是否订阅
     * </pre>
     *
     * <code>optional bool subscribe = 3;</code>
     */
    boolean getSubscribe();
  }
  /**
   * <pre>
   *订阅日志上传进度
   * </pre>
   *
   * Protobuf type {@code one2data.rbtmqmsgcli.LogUpload.SubscribeLogUploadProgress}
   */
  public  static final class SubscribeLogUploadProgress extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:one2data.rbtmqmsgcli.LogUpload.SubscribeLogUploadProgress)
      SubscribeLogUploadProgressOrBuilder {
    // Use SubscribeLogUploadProgress.newBuilder() to construct.
    private SubscribeLogUploadProgress(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private SubscribeLogUploadProgress() {
      uuidKey_ = "";
      reportIntervalSeconds_ = 0L;
      subscribe_ = false;
    }

    @Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private SubscribeLogUploadProgress(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              String s = input.readStringRequireUtf8();

              uuidKey_ = s;
              break;
            }
            case 16: {

              reportIntervalSeconds_ = input.readInt64();
              break;
            }
            case 24: {

              subscribe_ = input.readBool();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return cn.keptdata.one2data.header.message.protobuf.tool.LogUploadMessage.internal_static_one2data_rbtmqmsgcli_LogUpload_SubscribeLogUploadProgress_descriptor;
    }

    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return cn.keptdata.one2data.header.message.protobuf.tool.LogUploadMessage.internal_static_one2data_rbtmqmsgcli_LogUpload_SubscribeLogUploadProgress_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              cn.keptdata.one2data.header.message.protobuf.tool.LogUploadMessage.SubscribeLogUploadProgress.class, cn.keptdata.one2data.header.message.protobuf.tool.LogUploadMessage.SubscribeLogUploadProgress.Builder.class);
    }

    public static final int UUID_KEY_FIELD_NUMBER = 1;
    private volatile Object uuidKey_;
    /**
     * <pre>
     * 节点内部唯一ID
     * </pre>
     *
     * <code>optional string uuid_key = 1;</code>
     */
    public String getUuidKey() {
      Object ref = uuidKey_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        uuidKey_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * 节点内部唯一ID
     * </pre>
     *
     * <code>optional string uuid_key = 1;</code>
     */
    public com.google.protobuf.ByteString
        getUuidKeyBytes() {
      Object ref = uuidKey_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        uuidKey_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int REPORT_INTERVAL_SECONDS_FIELD_NUMBER = 2;
    private long reportIntervalSeconds_;
    /**
     * <pre>
     * 日志上传进度上报时间间隔（单位：秒）
     * </pre>
     *
     * <code>optional int64 report_interval_seconds = 2;</code>
     */
    public long getReportIntervalSeconds() {
      return reportIntervalSeconds_;
    }

    public static final int SUBSCRIBE_FIELD_NUMBER = 3;
    private boolean subscribe_;
    /**
     * <pre>
     * 是否订阅
     * </pre>
     *
     * <code>optional bool subscribe = 3;</code>
     */
    public boolean getSubscribe() {
      return subscribe_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getUuidKeyBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, uuidKey_);
      }
      if (reportIntervalSeconds_ != 0L) {
        output.writeInt64(2, reportIntervalSeconds_);
      }
      if (subscribe_ != false) {
        output.writeBool(3, subscribe_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getUuidKeyBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, uuidKey_);
      }
      if (reportIntervalSeconds_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(2, reportIntervalSeconds_);
      }
      if (subscribe_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(3, subscribe_);
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @Override
    public boolean equals(final Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof cn.keptdata.one2data.header.message.protobuf.tool.LogUploadMessage.SubscribeLogUploadProgress)) {
        return super.equals(obj);
      }
      cn.keptdata.one2data.header.message.protobuf.tool.LogUploadMessage.SubscribeLogUploadProgress other = (cn.keptdata.one2data.header.message.protobuf.tool.LogUploadMessage.SubscribeLogUploadProgress) obj;

      boolean result = true;
      result = result && getUuidKey()
          .equals(other.getUuidKey());
      result = result && (getReportIntervalSeconds()
          == other.getReportIntervalSeconds());
      result = result && (getSubscribe()
          == other.getSubscribe());
      return result;
    }

    @Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptorForType().hashCode();
      hash = (37 * hash) + UUID_KEY_FIELD_NUMBER;
      hash = (53 * hash) + getUuidKey().hashCode();
      hash = (37 * hash) + REPORT_INTERVAL_SECONDS_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getReportIntervalSeconds());
      hash = (37 * hash) + SUBSCRIBE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getSubscribe());
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static cn.keptdata.one2data.header.message.protobuf.tool.LogUploadMessage.SubscribeLogUploadProgress parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static cn.keptdata.one2data.header.message.protobuf.tool.LogUploadMessage.SubscribeLogUploadProgress parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static cn.keptdata.one2data.header.message.protobuf.tool.LogUploadMessage.SubscribeLogUploadProgress parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static cn.keptdata.one2data.header.message.protobuf.tool.LogUploadMessage.SubscribeLogUploadProgress parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static cn.keptdata.one2data.header.message.protobuf.tool.LogUploadMessage.SubscribeLogUploadProgress parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static cn.keptdata.one2data.header.message.protobuf.tool.LogUploadMessage.SubscribeLogUploadProgress parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static cn.keptdata.one2data.header.message.protobuf.tool.LogUploadMessage.SubscribeLogUploadProgress parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static cn.keptdata.one2data.header.message.protobuf.tool.LogUploadMessage.SubscribeLogUploadProgress parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static cn.keptdata.one2data.header.message.protobuf.tool.LogUploadMessage.SubscribeLogUploadProgress parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static cn.keptdata.one2data.header.message.protobuf.tool.LogUploadMessage.SubscribeLogUploadProgress parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(cn.keptdata.one2data.header.message.protobuf.tool.LogUploadMessage.SubscribeLogUploadProgress prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     *订阅日志上传进度
     * </pre>
     *
     * Protobuf type {@code one2data.rbtmqmsgcli.LogUpload.SubscribeLogUploadProgress}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:one2data.rbtmqmsgcli.LogUpload.SubscribeLogUploadProgress)
        cn.keptdata.one2data.header.message.protobuf.tool.LogUploadMessage.SubscribeLogUploadProgressOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return cn.keptdata.one2data.header.message.protobuf.tool.LogUploadMessage.internal_static_one2data_rbtmqmsgcli_LogUpload_SubscribeLogUploadProgress_descriptor;
      }

      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return cn.keptdata.one2data.header.message.protobuf.tool.LogUploadMessage.internal_static_one2data_rbtmqmsgcli_LogUpload_SubscribeLogUploadProgress_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                cn.keptdata.one2data.header.message.protobuf.tool.LogUploadMessage.SubscribeLogUploadProgress.class, cn.keptdata.one2data.header.message.protobuf.tool.LogUploadMessage.SubscribeLogUploadProgress.Builder.class);
      }

      // Construct using cn.keptdata.one2data.header.message.protobuf.tool.LogUploadMessage.SubscribeLogUploadProgress.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        uuidKey_ = "";

        reportIntervalSeconds_ = 0L;

        subscribe_ = false;

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return cn.keptdata.one2data.header.message.protobuf.tool.LogUploadMessage.internal_static_one2data_rbtmqmsgcli_LogUpload_SubscribeLogUploadProgress_descriptor;
      }

      public cn.keptdata.one2data.header.message.protobuf.tool.LogUploadMessage.SubscribeLogUploadProgress getDefaultInstanceForType() {
        return cn.keptdata.one2data.header.message.protobuf.tool.LogUploadMessage.SubscribeLogUploadProgress.getDefaultInstance();
      }

      public cn.keptdata.one2data.header.message.protobuf.tool.LogUploadMessage.SubscribeLogUploadProgress build() {
        cn.keptdata.one2data.header.message.protobuf.tool.LogUploadMessage.SubscribeLogUploadProgress result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public cn.keptdata.one2data.header.message.protobuf.tool.LogUploadMessage.SubscribeLogUploadProgress buildPartial() {
        cn.keptdata.one2data.header.message.protobuf.tool.LogUploadMessage.SubscribeLogUploadProgress result = new cn.keptdata.one2data.header.message.protobuf.tool.LogUploadMessage.SubscribeLogUploadProgress(this);
        result.uuidKey_ = uuidKey_;
        result.reportIntervalSeconds_ = reportIntervalSeconds_;
        result.subscribe_ = subscribe_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof cn.keptdata.one2data.header.message.protobuf.tool.LogUploadMessage.SubscribeLogUploadProgress) {
          return mergeFrom((cn.keptdata.one2data.header.message.protobuf.tool.LogUploadMessage.SubscribeLogUploadProgress)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(cn.keptdata.one2data.header.message.protobuf.tool.LogUploadMessage.SubscribeLogUploadProgress other) {
        if (other == cn.keptdata.one2data.header.message.protobuf.tool.LogUploadMessage.SubscribeLogUploadProgress.getDefaultInstance()) return this;
        if (!other.getUuidKey().isEmpty()) {
          uuidKey_ = other.uuidKey_;
          onChanged();
        }
        if (other.getReportIntervalSeconds() != 0L) {
          setReportIntervalSeconds(other.getReportIntervalSeconds());
        }
        if (other.getSubscribe() != false) {
          setSubscribe(other.getSubscribe());
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        cn.keptdata.one2data.header.message.protobuf.tool.LogUploadMessage.SubscribeLogUploadProgress parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (cn.keptdata.one2data.header.message.protobuf.tool.LogUploadMessage.SubscribeLogUploadProgress) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private Object uuidKey_ = "";
      /**
       * <pre>
       * 节点内部唯一ID
       * </pre>
       *
       * <code>optional string uuid_key = 1;</code>
       */
      public String getUuidKey() {
        Object ref = uuidKey_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          uuidKey_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <pre>
       * 节点内部唯一ID
       * </pre>
       *
       * <code>optional string uuid_key = 1;</code>
       */
      public com.google.protobuf.ByteString
          getUuidKeyBytes() {
        Object ref = uuidKey_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          uuidKey_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * 节点内部唯一ID
       * </pre>
       *
       * <code>optional string uuid_key = 1;</code>
       */
      public Builder setUuidKey(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        uuidKey_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 节点内部唯一ID
       * </pre>
       *
       * <code>optional string uuid_key = 1;</code>
       */
      public Builder clearUuidKey() {
        
        uuidKey_ = getDefaultInstance().getUuidKey();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 节点内部唯一ID
       * </pre>
       *
       * <code>optional string uuid_key = 1;</code>
       */
      public Builder setUuidKeyBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        uuidKey_ = value;
        onChanged();
        return this;
      }

      private long reportIntervalSeconds_ ;
      /**
       * <pre>
       * 日志上传进度上报时间间隔（单位：秒）
       * </pre>
       *
       * <code>optional int64 report_interval_seconds = 2;</code>
       */
      public long getReportIntervalSeconds() {
        return reportIntervalSeconds_;
      }
      /**
       * <pre>
       * 日志上传进度上报时间间隔（单位：秒）
       * </pre>
       *
       * <code>optional int64 report_interval_seconds = 2;</code>
       */
      public Builder setReportIntervalSeconds(long value) {
        
        reportIntervalSeconds_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 日志上传进度上报时间间隔（单位：秒）
       * </pre>
       *
       * <code>optional int64 report_interval_seconds = 2;</code>
       */
      public Builder clearReportIntervalSeconds() {
        
        reportIntervalSeconds_ = 0L;
        onChanged();
        return this;
      }

      private boolean subscribe_ ;
      /**
       * <pre>
       * 是否订阅
       * </pre>
       *
       * <code>optional bool subscribe = 3;</code>
       */
      public boolean getSubscribe() {
        return subscribe_;
      }
      /**
       * <pre>
       * 是否订阅
       * </pre>
       *
       * <code>optional bool subscribe = 3;</code>
       */
      public Builder setSubscribe(boolean value) {
        
        subscribe_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 是否订阅
       * </pre>
       *
       * <code>optional bool subscribe = 3;</code>
       */
      public Builder clearSubscribe() {
        
        subscribe_ = false;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:one2data.rbtmqmsgcli.LogUpload.SubscribeLogUploadProgress)
    }

    // @@protoc_insertion_point(class_scope:one2data.rbtmqmsgcli.LogUpload.SubscribeLogUploadProgress)
    private static final cn.keptdata.one2data.header.message.protobuf.tool.LogUploadMessage.SubscribeLogUploadProgress DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new cn.keptdata.one2data.header.message.protobuf.tool.LogUploadMessage.SubscribeLogUploadProgress();
    }

    public static cn.keptdata.one2data.header.message.protobuf.tool.LogUploadMessage.SubscribeLogUploadProgress getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<SubscribeLogUploadProgress>
        PARSER = new com.google.protobuf.AbstractParser<SubscribeLogUploadProgress>() {
      public SubscribeLogUploadProgress parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new SubscribeLogUploadProgress(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<SubscribeLogUploadProgress> parser() {
      return PARSER;
    }

    @Override
    public com.google.protobuf.Parser<SubscribeLogUploadProgress> getParserForType() {
      return PARSER;
    }

    public cn.keptdata.one2data.header.message.protobuf.tool.LogUploadMessage.SubscribeLogUploadProgress getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_one2data_rbtmqmsgcli_LogUpload_StartNodeLogUpload_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_one2data_rbtmqmsgcli_LogUpload_StartNodeLogUpload_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_one2data_rbtmqmsgcli_LogUpload_StartNodeLogUploadAck_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_one2data_rbtmqmsgcli_LogUpload_StartNodeLogUploadAck_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_one2data_rbtmqmsgcli_LogUpload_LogUploadLogin_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_one2data_rbtmqmsgcli_LogUpload_LogUploadLogin_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_one2data_rbtmqmsgcli_LogUpload_LogUploadLoginAck_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_one2data_rbtmqmsgcli_LogUpload_LogUploadLoginAck_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_one2data_rbtmqmsgcli_LogUpload_ReportLogUploadInfo_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_one2data_rbtmqmsgcli_LogUpload_ReportLogUploadInfo_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_one2data_rbtmqmsgcli_LogUpload_ReportLogUploadInfoAck_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_one2data_rbtmqmsgcli_LogUpload_ReportLogUploadInfoAck_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_one2data_rbtmqmsgcli_LogUpload_SubscribeLogUploadProgress_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_one2data_rbtmqmsgcli_LogUpload_SubscribeLogUploadProgress_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    String[] descriptorData = {
      "\n\024tool/LogUpload.proto\022\036one2data.rbtmqms" +
      "gcli.LogUpload\032\023common/Common.proto\032\021com" +
      "mon/Node.proto\"9\n\022StartNodeLogUpload\022\020\n\010" +
      "uuid_key\030\001 \001(\t\022\021\n\ttask_uuid\030\002 \001(\t\"a\n\025Sta" +
      "rtNodeLogUploadAck\022\020\n\010uuid_key\030\001 \001(\t\0226\n\010" +
      "base_ack\030\002 \001(\0132$.one2data.rbtmqmsgcli.co" +
      "mmon.BaseAck\"o\n\016LogUploadLogin\022\020\n\010uuid_k" +
      "ey\030\001 \001(\t\022\021\n\ttask_uuid\030\002 \001(\t\0228\n\tnode_type" +
      "\030\003 \001(\0162%.one2data.rbtmqmsgcli.common.Nod" +
      "eType\"\343\001\n\021LogUploadLoginAck\0226\n\010base_ack\030",
      "\001 \001(\0132$.one2data.rbtmqmsgcli.common.Base" +
      "Ack\022\021\n\ts3_schema\030\002 \001(\t\022\023\n\013s3_endpoint\030\003 " +
      "\001(\t\022\030\n\020s3_access_key_id\030\004 \001(\t\022\025\n\rs3_secr" +
      "et_key\030\005 \001(\t\022\023\n\013bucket_name\030\006 \001(\t\022\023\n\013obj" +
      "ect_name\030\007 \001(\t\022\023\n\013is_compress\030\010 \001(\010\"\244\002\n\023" +
      "ReportLogUploadInfo\022\020\n\010uuid_key\030\001 \001(\t\022\021\n" +
      "\ttask_uuid\030\002 \001(\t\0228\n\tnode_type\030\003 \001(\0162%.on" +
      "e2data.rbtmqmsgcli.common.NodeType\022N\n\005st" +
      "ate\030\004 \001(\0162?.one2data.rbtmqmsgcli.LogUplo" +
      "ad.ReportLogUploadInfo.UploadState\022\017\n\007me",
      "ssage\030\005 \001(\t\022\020\n\010progress\030\006 \001(\001\";\n\013UploadS" +
      "tate\022\016\n\nUS_SUCCESS\020\000\022\016\n\nUS_FAILURE\020\001\022\014\n\010" +
      "US_DOING\020\002\"P\n\026ReportLogUploadInfoAck\0226\n\010" +
      "base_ack\030\001 \001(\0132$.one2data.rbtmqmsgcli.co" +
      "mmon.BaseAck\"b\n\032SubscribeLogUploadProgre" +
      "ss\022\020\n\010uuid_key\030\001 \001(\t\022\037\n\027report_interval_" +
      "seconds\030\002 \001(\003\022\021\n\tsubscribe\030\003 \001(\010BE\n1cn.k" +
      "eptdata.one2data.header.message.protobuf" +
      ".toolB\020LogUploadMessageb\006proto3"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          cn.keptdata.one2data.header.message.protobuf.common.Common.getDescriptor(),
          cn.keptdata.one2data.header.message.protobuf.common.Node.getDescriptor(),
        }, assigner);
    internal_static_one2data_rbtmqmsgcli_LogUpload_StartNodeLogUpload_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_one2data_rbtmqmsgcli_LogUpload_StartNodeLogUpload_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_one2data_rbtmqmsgcli_LogUpload_StartNodeLogUpload_descriptor,
        new String[] { "UuidKey", "TaskUuid", });
    internal_static_one2data_rbtmqmsgcli_LogUpload_StartNodeLogUploadAck_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_one2data_rbtmqmsgcli_LogUpload_StartNodeLogUploadAck_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_one2data_rbtmqmsgcli_LogUpload_StartNodeLogUploadAck_descriptor,
        new String[] { "UuidKey", "BaseAck", });
    internal_static_one2data_rbtmqmsgcli_LogUpload_LogUploadLogin_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_one2data_rbtmqmsgcli_LogUpload_LogUploadLogin_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_one2data_rbtmqmsgcli_LogUpload_LogUploadLogin_descriptor,
        new String[] { "UuidKey", "TaskUuid", "NodeType", });
    internal_static_one2data_rbtmqmsgcli_LogUpload_LogUploadLoginAck_descriptor =
      getDescriptor().getMessageTypes().get(3);
    internal_static_one2data_rbtmqmsgcli_LogUpload_LogUploadLoginAck_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_one2data_rbtmqmsgcli_LogUpload_LogUploadLoginAck_descriptor,
        new String[] { "BaseAck", "S3Schema", "S3Endpoint", "S3AccessKeyId", "S3SecretKey", "BucketName", "ObjectName", "IsCompress", });
    internal_static_one2data_rbtmqmsgcli_LogUpload_ReportLogUploadInfo_descriptor =
      getDescriptor().getMessageTypes().get(4);
    internal_static_one2data_rbtmqmsgcli_LogUpload_ReportLogUploadInfo_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_one2data_rbtmqmsgcli_LogUpload_ReportLogUploadInfo_descriptor,
        new String[] { "UuidKey", "TaskUuid", "NodeType", "State", "Message", "Progress", });
    internal_static_one2data_rbtmqmsgcli_LogUpload_ReportLogUploadInfoAck_descriptor =
      getDescriptor().getMessageTypes().get(5);
    internal_static_one2data_rbtmqmsgcli_LogUpload_ReportLogUploadInfoAck_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_one2data_rbtmqmsgcli_LogUpload_ReportLogUploadInfoAck_descriptor,
        new String[] { "BaseAck", });
    internal_static_one2data_rbtmqmsgcli_LogUpload_SubscribeLogUploadProgress_descriptor =
      getDescriptor().getMessageTypes().get(6);
    internal_static_one2data_rbtmqmsgcli_LogUpload_SubscribeLogUploadProgress_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_one2data_rbtmqmsgcli_LogUpload_SubscribeLogUploadProgress_descriptor,
        new String[] { "UuidKey", "ReportIntervalSeconds", "Subscribe", });
    cn.keptdata.one2data.header.message.protobuf.common.Common.getDescriptor();
    cn.keptdata.one2data.header.message.protobuf.common.Node.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
