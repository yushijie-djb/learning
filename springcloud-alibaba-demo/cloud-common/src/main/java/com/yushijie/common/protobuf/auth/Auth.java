// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: auth/auth.proto

package com.yushijie.common.protobuf.auth;

public final class Auth {
  private Auth() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  /**
   * <pre>
   * 
   * </pre>
   *
   * Protobuf enum {@code one2data.rbtmqmsgcli.auth.FunctionType}
   */
  public enum FunctionType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <pre>
     *默认值
     * </pre>
     *
     * <code>FT_DEFAULT = 0;</code>
     */
    FT_DEFAULT(0),
    /**
     * <pre>
     *时间点恢复
     * </pre>
     *
     * <code>FT_BACKUPDATARECOVERY = 1;</code>
     */
    FT_BACKUPDATARECOVERY(1),
    /**
     * <pre>
     *接管机恢复
     * </pre>
     *
     * <code>FT_TAKEOVERVMECOVERY = 2;</code>
     */
    FT_TAKEOVERVMECOVERY(2),
    /**
     * <pre>
     *实时恢复
     * </pre>
     *
     * <code>FT_REALTIMERECOVERY = 3;</code>
     */
    FT_REALTIMERECOVERY(3),
    /**
     * <pre>
     *远程复制
     * </pre>
     *
     * <code>FT_REMOTECOPY = 4;</code>
     */
    FT_REMOTECOPY(4),
    UNRECOGNIZED(-1),
    ;

    /**
     * <pre>
     *默认值
     * </pre>
     *
     * <code>FT_DEFAULT = 0;</code>
     */
    public static final int FT_DEFAULT_VALUE = 0;
    /**
     * <pre>
     *时间点恢复
     * </pre>
     *
     * <code>FT_BACKUPDATARECOVERY = 1;</code>
     */
    public static final int FT_BACKUPDATARECOVERY_VALUE = 1;
    /**
     * <pre>
     *接管机恢复
     * </pre>
     *
     * <code>FT_TAKEOVERVMECOVERY = 2;</code>
     */
    public static final int FT_TAKEOVERVMECOVERY_VALUE = 2;
    /**
     * <pre>
     *实时恢复
     * </pre>
     *
     * <code>FT_REALTIMERECOVERY = 3;</code>
     */
    public static final int FT_REALTIMERECOVERY_VALUE = 3;
    /**
     * <pre>
     *远程复制
     * </pre>
     *
     * <code>FT_REMOTECOPY = 4;</code>
     */
    public static final int FT_REMOTECOPY_VALUE = 4;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @Deprecated
    public static FunctionType valueOf(int value) {
      return forNumber(value);
    }

    public static FunctionType forNumber(int value) {
      switch (value) {
        case 0: return FT_DEFAULT;
        case 1: return FT_BACKUPDATARECOVERY;
        case 2: return FT_TAKEOVERVMECOVERY;
        case 3: return FT_REALTIMERECOVERY;
        case 4: return FT_REMOTECOPY;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<FunctionType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        FunctionType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<FunctionType>() {
            public FunctionType findValueByNumber(int number) {
              return FunctionType.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return cn.keptdata.one2data.header.message.protobuf.auth.Auth.getDescriptor().getEnumTypes().get(0);
    }

    private static final FunctionType[] VALUES = values();

    public static FunctionType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private FunctionType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:one2data.rbtmqmsgcli.auth.FunctionType)
  }

  public interface ImportLicenseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:one2data.rbtmqmsgcli.auth.ImportLicense)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     *授权证书内容
     * </pre>
     *
     * <code>optional bytes license = 1;</code>
     */
    com.google.protobuf.ByteString getLicense();
  }
  /**
   * <pre>
   *导入授权证书
   * </pre>
   *
   * Protobuf type {@code one2data.rbtmqmsgcli.auth.ImportLicense}
   */
  public  static final class ImportLicense extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:one2data.rbtmqmsgcli.auth.ImportLicense)
      ImportLicenseOrBuilder {
    // Use ImportLicense.newBuilder() to construct.
    private ImportLicense(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ImportLicense() {
      license_ = com.google.protobuf.ByteString.EMPTY;
    }

    @Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private ImportLicense(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {

              license_ = input.readBytes();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return cn.keptdata.one2data.header.message.protobuf.auth.Auth.internal_static_one2data_rbtmqmsgcli_auth_ImportLicense_descriptor;
    }

    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return cn.keptdata.one2data.header.message.protobuf.auth.Auth.internal_static_one2data_rbtmqmsgcli_auth_ImportLicense_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              cn.keptdata.one2data.header.message.protobuf.auth.Auth.ImportLicense.class, cn.keptdata.one2data.header.message.protobuf.auth.Auth.ImportLicense.Builder.class);
    }

    public static final int LICENSE_FIELD_NUMBER = 1;
    private com.google.protobuf.ByteString license_;
    /**
     * <pre>
     *授权证书内容
     * </pre>
     *
     * <code>optional bytes license = 1;</code>
     */
    public com.google.protobuf.ByteString getLicense() {
      return license_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!license_.isEmpty()) {
        output.writeBytes(1, license_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!license_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, license_);
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @Override
    public boolean equals(final Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof cn.keptdata.one2data.header.message.protobuf.auth.Auth.ImportLicense)) {
        return super.equals(obj);
      }
      cn.keptdata.one2data.header.message.protobuf.auth.Auth.ImportLicense other = (cn.keptdata.one2data.header.message.protobuf.auth.Auth.ImportLicense) obj;

      boolean result = true;
      result = result && getLicense()
          .equals(other.getLicense());
      return result;
    }

    @Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptorForType().hashCode();
      hash = (37 * hash) + LICENSE_FIELD_NUMBER;
      hash = (53 * hash) + getLicense().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static cn.keptdata.one2data.header.message.protobuf.auth.Auth.ImportLicense parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static cn.keptdata.one2data.header.message.protobuf.auth.Auth.ImportLicense parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static cn.keptdata.one2data.header.message.protobuf.auth.Auth.ImportLicense parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static cn.keptdata.one2data.header.message.protobuf.auth.Auth.ImportLicense parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static cn.keptdata.one2data.header.message.protobuf.auth.Auth.ImportLicense parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static cn.keptdata.one2data.header.message.protobuf.auth.Auth.ImportLicense parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static cn.keptdata.one2data.header.message.protobuf.auth.Auth.ImportLicense parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static cn.keptdata.one2data.header.message.protobuf.auth.Auth.ImportLicense parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static cn.keptdata.one2data.header.message.protobuf.auth.Auth.ImportLicense parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static cn.keptdata.one2data.header.message.protobuf.auth.Auth.ImportLicense parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(cn.keptdata.one2data.header.message.protobuf.auth.Auth.ImportLicense prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     *导入授权证书
     * </pre>
     *
     * Protobuf type {@code one2data.rbtmqmsgcli.auth.ImportLicense}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:one2data.rbtmqmsgcli.auth.ImportLicense)
        cn.keptdata.one2data.header.message.protobuf.auth.Auth.ImportLicenseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return cn.keptdata.one2data.header.message.protobuf.auth.Auth.internal_static_one2data_rbtmqmsgcli_auth_ImportLicense_descriptor;
      }

      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return cn.keptdata.one2data.header.message.protobuf.auth.Auth.internal_static_one2data_rbtmqmsgcli_auth_ImportLicense_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                cn.keptdata.one2data.header.message.protobuf.auth.Auth.ImportLicense.class, cn.keptdata.one2data.header.message.protobuf.auth.Auth.ImportLicense.Builder.class);
      }

      // Construct using cn.keptdata.one2data.header.message.protobuf.auth.Auth.ImportLicense.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        license_ = com.google.protobuf.ByteString.EMPTY;

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return cn.keptdata.one2data.header.message.protobuf.auth.Auth.internal_static_one2data_rbtmqmsgcli_auth_ImportLicense_descriptor;
      }

      public cn.keptdata.one2data.header.message.protobuf.auth.Auth.ImportLicense getDefaultInstanceForType() {
        return cn.keptdata.one2data.header.message.protobuf.auth.Auth.ImportLicense.getDefaultInstance();
      }

      public cn.keptdata.one2data.header.message.protobuf.auth.Auth.ImportLicense build() {
        cn.keptdata.one2data.header.message.protobuf.auth.Auth.ImportLicense result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public cn.keptdata.one2data.header.message.protobuf.auth.Auth.ImportLicense buildPartial() {
        cn.keptdata.one2data.header.message.protobuf.auth.Auth.ImportLicense result = new cn.keptdata.one2data.header.message.protobuf.auth.Auth.ImportLicense(this);
        result.license_ = license_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof cn.keptdata.one2data.header.message.protobuf.auth.Auth.ImportLicense) {
          return mergeFrom((cn.keptdata.one2data.header.message.protobuf.auth.Auth.ImportLicense)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(cn.keptdata.one2data.header.message.protobuf.auth.Auth.ImportLicense other) {
        if (other == cn.keptdata.one2data.header.message.protobuf.auth.Auth.ImportLicense.getDefaultInstance()) return this;
        if (other.getLicense() != com.google.protobuf.ByteString.EMPTY) {
          setLicense(other.getLicense());
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        cn.keptdata.one2data.header.message.protobuf.auth.Auth.ImportLicense parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (cn.keptdata.one2data.header.message.protobuf.auth.Auth.ImportLicense) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private com.google.protobuf.ByteString license_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <pre>
       *授权证书内容
       * </pre>
       *
       * <code>optional bytes license = 1;</code>
       */
      public com.google.protobuf.ByteString getLicense() {
        return license_;
      }
      /**
       * <pre>
       *授权证书内容
       * </pre>
       *
       * <code>optional bytes license = 1;</code>
       */
      public Builder setLicense(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        license_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *授权证书内容
       * </pre>
       *
       * <code>optional bytes license = 1;</code>
       */
      public Builder clearLicense() {
        
        license_ = getDefaultInstance().getLicense();
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:one2data.rbtmqmsgcli.auth.ImportLicense)
    }

    // @@protoc_insertion_point(class_scope:one2data.rbtmqmsgcli.auth.ImportLicense)
    private static final cn.keptdata.one2data.header.message.protobuf.auth.Auth.ImportLicense DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new cn.keptdata.one2data.header.message.protobuf.auth.Auth.ImportLicense();
    }

    public static cn.keptdata.one2data.header.message.protobuf.auth.Auth.ImportLicense getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ImportLicense>
        PARSER = new com.google.protobuf.AbstractParser<ImportLicense>() {
      public ImportLicense parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new ImportLicense(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<ImportLicense> parser() {
      return PARSER;
    }

    @Override
    public com.google.protobuf.Parser<ImportLicense> getParserForType() {
      return PARSER;
    }

    public cn.keptdata.one2data.header.message.protobuf.auth.Auth.ImportLicense getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ImportLicenseAckOrBuilder extends
      // @@protoc_insertion_point(interface_extends:one2data.rbtmqmsgcli.auth.ImportLicenseAck)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     *导入结果
     * </pre>
     *
     * <code>optional .one2data.rbtmqmsgcli.common.BaseAck base_ack = 1;</code>
     */
    boolean hasBaseAck();
    /**
     * <pre>
     *导入结果
     * </pre>
     *
     * <code>optional .one2data.rbtmqmsgcli.common.BaseAck base_ack = 1;</code>
     */
    cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck getBaseAck();
    /**
     * <pre>
     *导入结果
     * </pre>
     *
     * <code>optional .one2data.rbtmqmsgcli.common.BaseAck base_ack = 1;</code>
     */
    cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAckOrBuilder getBaseAckOrBuilder();

    /**
     * <pre>
     *导入的License JSON 化授权详情信息
     * </pre>
     *
     * <code>optional bytes license_detail = 2;</code>
     */
    com.google.protobuf.ByteString getLicenseDetail();
  }
  /**
   * <pre>
   *证书导入响应信息
   * </pre>
   *
   * Protobuf type {@code one2data.rbtmqmsgcli.auth.ImportLicenseAck}
   */
  public  static final class ImportLicenseAck extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:one2data.rbtmqmsgcli.auth.ImportLicenseAck)
      ImportLicenseAckOrBuilder {
    // Use ImportLicenseAck.newBuilder() to construct.
    private ImportLicenseAck(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ImportLicenseAck() {
      licenseDetail_ = com.google.protobuf.ByteString.EMPTY;
    }

    @Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private ImportLicenseAck(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck.Builder subBuilder = null;
              if (baseAck_ != null) {
                subBuilder = baseAck_.toBuilder();
              }
              baseAck_ = input.readMessage(cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(baseAck_);
                baseAck_ = subBuilder.buildPartial();
              }

              break;
            }
            case 18: {

              licenseDetail_ = input.readBytes();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return cn.keptdata.one2data.header.message.protobuf.auth.Auth.internal_static_one2data_rbtmqmsgcli_auth_ImportLicenseAck_descriptor;
    }

    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return cn.keptdata.one2data.header.message.protobuf.auth.Auth.internal_static_one2data_rbtmqmsgcli_auth_ImportLicenseAck_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              cn.keptdata.one2data.header.message.protobuf.auth.Auth.ImportLicenseAck.class, cn.keptdata.one2data.header.message.protobuf.auth.Auth.ImportLicenseAck.Builder.class);
    }

    public static final int BASE_ACK_FIELD_NUMBER = 1;
    private cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck baseAck_;
    /**
     * <pre>
     *导入结果
     * </pre>
     *
     * <code>optional .one2data.rbtmqmsgcli.common.BaseAck base_ack = 1;</code>
     */
    public boolean hasBaseAck() {
      return baseAck_ != null;
    }
    /**
     * <pre>
     *导入结果
     * </pre>
     *
     * <code>optional .one2data.rbtmqmsgcli.common.BaseAck base_ack = 1;</code>
     */
    public cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck getBaseAck() {
      return baseAck_ == null ? cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck.getDefaultInstance() : baseAck_;
    }
    /**
     * <pre>
     *导入结果
     * </pre>
     *
     * <code>optional .one2data.rbtmqmsgcli.common.BaseAck base_ack = 1;</code>
     */
    public cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAckOrBuilder getBaseAckOrBuilder() {
      return getBaseAck();
    }

    public static final int LICENSE_DETAIL_FIELD_NUMBER = 2;
    private com.google.protobuf.ByteString licenseDetail_;
    /**
     * <pre>
     *导入的License JSON 化授权详情信息
     * </pre>
     *
     * <code>optional bytes license_detail = 2;</code>
     */
    public com.google.protobuf.ByteString getLicenseDetail() {
      return licenseDetail_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (baseAck_ != null) {
        output.writeMessage(1, getBaseAck());
      }
      if (!licenseDetail_.isEmpty()) {
        output.writeBytes(2, licenseDetail_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (baseAck_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getBaseAck());
      }
      if (!licenseDetail_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, licenseDetail_);
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @Override
    public boolean equals(final Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof cn.keptdata.one2data.header.message.protobuf.auth.Auth.ImportLicenseAck)) {
        return super.equals(obj);
      }
      cn.keptdata.one2data.header.message.protobuf.auth.Auth.ImportLicenseAck other = (cn.keptdata.one2data.header.message.protobuf.auth.Auth.ImportLicenseAck) obj;

      boolean result = true;
      result = result && (hasBaseAck() == other.hasBaseAck());
      if (hasBaseAck()) {
        result = result && getBaseAck()
            .equals(other.getBaseAck());
      }
      result = result && getLicenseDetail()
          .equals(other.getLicenseDetail());
      return result;
    }

    @Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptorForType().hashCode();
      if (hasBaseAck()) {
        hash = (37 * hash) + BASE_ACK_FIELD_NUMBER;
        hash = (53 * hash) + getBaseAck().hashCode();
      }
      hash = (37 * hash) + LICENSE_DETAIL_FIELD_NUMBER;
      hash = (53 * hash) + getLicenseDetail().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static cn.keptdata.one2data.header.message.protobuf.auth.Auth.ImportLicenseAck parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static cn.keptdata.one2data.header.message.protobuf.auth.Auth.ImportLicenseAck parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static cn.keptdata.one2data.header.message.protobuf.auth.Auth.ImportLicenseAck parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static cn.keptdata.one2data.header.message.protobuf.auth.Auth.ImportLicenseAck parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static cn.keptdata.one2data.header.message.protobuf.auth.Auth.ImportLicenseAck parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static cn.keptdata.one2data.header.message.protobuf.auth.Auth.ImportLicenseAck parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static cn.keptdata.one2data.header.message.protobuf.auth.Auth.ImportLicenseAck parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static cn.keptdata.one2data.header.message.protobuf.auth.Auth.ImportLicenseAck parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static cn.keptdata.one2data.header.message.protobuf.auth.Auth.ImportLicenseAck parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static cn.keptdata.one2data.header.message.protobuf.auth.Auth.ImportLicenseAck parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(cn.keptdata.one2data.header.message.protobuf.auth.Auth.ImportLicenseAck prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     *证书导入响应信息
     * </pre>
     *
     * Protobuf type {@code one2data.rbtmqmsgcli.auth.ImportLicenseAck}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:one2data.rbtmqmsgcli.auth.ImportLicenseAck)
        cn.keptdata.one2data.header.message.protobuf.auth.Auth.ImportLicenseAckOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return cn.keptdata.one2data.header.message.protobuf.auth.Auth.internal_static_one2data_rbtmqmsgcli_auth_ImportLicenseAck_descriptor;
      }

      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return cn.keptdata.one2data.header.message.protobuf.auth.Auth.internal_static_one2data_rbtmqmsgcli_auth_ImportLicenseAck_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                cn.keptdata.one2data.header.message.protobuf.auth.Auth.ImportLicenseAck.class, cn.keptdata.one2data.header.message.protobuf.auth.Auth.ImportLicenseAck.Builder.class);
      }

      // Construct using cn.keptdata.one2data.header.message.protobuf.auth.Auth.ImportLicenseAck.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        if (baseAckBuilder_ == null) {
          baseAck_ = null;
        } else {
          baseAck_ = null;
          baseAckBuilder_ = null;
        }
        licenseDetail_ = com.google.protobuf.ByteString.EMPTY;

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return cn.keptdata.one2data.header.message.protobuf.auth.Auth.internal_static_one2data_rbtmqmsgcli_auth_ImportLicenseAck_descriptor;
      }

      public cn.keptdata.one2data.header.message.protobuf.auth.Auth.ImportLicenseAck getDefaultInstanceForType() {
        return cn.keptdata.one2data.header.message.protobuf.auth.Auth.ImportLicenseAck.getDefaultInstance();
      }

      public cn.keptdata.one2data.header.message.protobuf.auth.Auth.ImportLicenseAck build() {
        cn.keptdata.one2data.header.message.protobuf.auth.Auth.ImportLicenseAck result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public cn.keptdata.one2data.header.message.protobuf.auth.Auth.ImportLicenseAck buildPartial() {
        cn.keptdata.one2data.header.message.protobuf.auth.Auth.ImportLicenseAck result = new cn.keptdata.one2data.header.message.protobuf.auth.Auth.ImportLicenseAck(this);
        if (baseAckBuilder_ == null) {
          result.baseAck_ = baseAck_;
        } else {
          result.baseAck_ = baseAckBuilder_.build();
        }
        result.licenseDetail_ = licenseDetail_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof cn.keptdata.one2data.header.message.protobuf.auth.Auth.ImportLicenseAck) {
          return mergeFrom((cn.keptdata.one2data.header.message.protobuf.auth.Auth.ImportLicenseAck)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(cn.keptdata.one2data.header.message.protobuf.auth.Auth.ImportLicenseAck other) {
        if (other == cn.keptdata.one2data.header.message.protobuf.auth.Auth.ImportLicenseAck.getDefaultInstance()) return this;
        if (other.hasBaseAck()) {
          mergeBaseAck(other.getBaseAck());
        }
        if (other.getLicenseDetail() != com.google.protobuf.ByteString.EMPTY) {
          setLicenseDetail(other.getLicenseDetail());
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        cn.keptdata.one2data.header.message.protobuf.auth.Auth.ImportLicenseAck parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (cn.keptdata.one2data.header.message.protobuf.auth.Auth.ImportLicenseAck) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck baseAck_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck, cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck.Builder, cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAckOrBuilder> baseAckBuilder_;
      /**
       * <pre>
       *导入结果
       * </pre>
       *
       * <code>optional .one2data.rbtmqmsgcli.common.BaseAck base_ack = 1;</code>
       */
      public boolean hasBaseAck() {
        return baseAckBuilder_ != null || baseAck_ != null;
      }
      /**
       * <pre>
       *导入结果
       * </pre>
       *
       * <code>optional .one2data.rbtmqmsgcli.common.BaseAck base_ack = 1;</code>
       */
      public cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck getBaseAck() {
        if (baseAckBuilder_ == null) {
          return baseAck_ == null ? cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck.getDefaultInstance() : baseAck_;
        } else {
          return baseAckBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       *导入结果
       * </pre>
       *
       * <code>optional .one2data.rbtmqmsgcli.common.BaseAck base_ack = 1;</code>
       */
      public Builder setBaseAck(cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck value) {
        if (baseAckBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          baseAck_ = value;
          onChanged();
        } else {
          baseAckBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       *导入结果
       * </pre>
       *
       * <code>optional .one2data.rbtmqmsgcli.common.BaseAck base_ack = 1;</code>
       */
      public Builder setBaseAck(
          cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck.Builder builderForValue) {
        if (baseAckBuilder_ == null) {
          baseAck_ = builderForValue.build();
          onChanged();
        } else {
          baseAckBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       *导入结果
       * </pre>
       *
       * <code>optional .one2data.rbtmqmsgcli.common.BaseAck base_ack = 1;</code>
       */
      public Builder mergeBaseAck(cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck value) {
        if (baseAckBuilder_ == null) {
          if (baseAck_ != null) {
            baseAck_ =
              cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck.newBuilder(baseAck_).mergeFrom(value).buildPartial();
          } else {
            baseAck_ = value;
          }
          onChanged();
        } else {
          baseAckBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       *导入结果
       * </pre>
       *
       * <code>optional .one2data.rbtmqmsgcli.common.BaseAck base_ack = 1;</code>
       */
      public Builder clearBaseAck() {
        if (baseAckBuilder_ == null) {
          baseAck_ = null;
          onChanged();
        } else {
          baseAck_ = null;
          baseAckBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       *导入结果
       * </pre>
       *
       * <code>optional .one2data.rbtmqmsgcli.common.BaseAck base_ack = 1;</code>
       */
      public cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck.Builder getBaseAckBuilder() {
        
        onChanged();
        return getBaseAckFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       *导入结果
       * </pre>
       *
       * <code>optional .one2data.rbtmqmsgcli.common.BaseAck base_ack = 1;</code>
       */
      public cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAckOrBuilder getBaseAckOrBuilder() {
        if (baseAckBuilder_ != null) {
          return baseAckBuilder_.getMessageOrBuilder();
        } else {
          return baseAck_ == null ?
              cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck.getDefaultInstance() : baseAck_;
        }
      }
      /**
       * <pre>
       *导入结果
       * </pre>
       *
       * <code>optional .one2data.rbtmqmsgcli.common.BaseAck base_ack = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck, cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck.Builder, cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAckOrBuilder> 
          getBaseAckFieldBuilder() {
        if (baseAckBuilder_ == null) {
          baseAckBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck, cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck.Builder, cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAckOrBuilder>(
                  getBaseAck(),
                  getParentForChildren(),
                  isClean());
          baseAck_ = null;
        }
        return baseAckBuilder_;
      }

      private com.google.protobuf.ByteString licenseDetail_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <pre>
       *导入的License JSON 化授权详情信息
       * </pre>
       *
       * <code>optional bytes license_detail = 2;</code>
       */
      public com.google.protobuf.ByteString getLicenseDetail() {
        return licenseDetail_;
      }
      /**
       * <pre>
       *导入的License JSON 化授权详情信息
       * </pre>
       *
       * <code>optional bytes license_detail = 2;</code>
       */
      public Builder setLicenseDetail(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        licenseDetail_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *导入的License JSON 化授权详情信息
       * </pre>
       *
       * <code>optional bytes license_detail = 2;</code>
       */
      public Builder clearLicenseDetail() {
        
        licenseDetail_ = getDefaultInstance().getLicenseDetail();
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:one2data.rbtmqmsgcli.auth.ImportLicenseAck)
    }

    // @@protoc_insertion_point(class_scope:one2data.rbtmqmsgcli.auth.ImportLicenseAck)
    private static final cn.keptdata.one2data.header.message.protobuf.auth.Auth.ImportLicenseAck DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new cn.keptdata.one2data.header.message.protobuf.auth.Auth.ImportLicenseAck();
    }

    public static cn.keptdata.one2data.header.message.protobuf.auth.Auth.ImportLicenseAck getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ImportLicenseAck>
        PARSER = new com.google.protobuf.AbstractParser<ImportLicenseAck>() {
      public ImportLicenseAck parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new ImportLicenseAck(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<ImportLicenseAck> parser() {
      return PARSER;
    }

    @Override
    public com.google.protobuf.Parser<ImportLicenseAck> getParserForType() {
      return PARSER;
    }

    public cn.keptdata.one2data.header.message.protobuf.auth.Auth.ImportLicenseAck getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface CheckLicenseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:one2data.rbtmqmsgcli.auth.CheckLicense)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     *授权证书内容
     * </pre>
     *
     * <code>optional bytes license = 1;</code>
     */
    com.google.protobuf.ByteString getLicense();
  }
  /**
   * <pre>
   *检查证书
   * </pre>
   *
   * Protobuf type {@code one2data.rbtmqmsgcli.auth.CheckLicense}
   */
  public  static final class CheckLicense extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:one2data.rbtmqmsgcli.auth.CheckLicense)
      CheckLicenseOrBuilder {
    // Use CheckLicense.newBuilder() to construct.
    private CheckLicense(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private CheckLicense() {
      license_ = com.google.protobuf.ByteString.EMPTY;
    }

    @Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private CheckLicense(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {

              license_ = input.readBytes();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return cn.keptdata.one2data.header.message.protobuf.auth.Auth.internal_static_one2data_rbtmqmsgcli_auth_CheckLicense_descriptor;
    }

    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return cn.keptdata.one2data.header.message.protobuf.auth.Auth.internal_static_one2data_rbtmqmsgcli_auth_CheckLicense_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              cn.keptdata.one2data.header.message.protobuf.auth.Auth.CheckLicense.class, cn.keptdata.one2data.header.message.protobuf.auth.Auth.CheckLicense.Builder.class);
    }

    public static final int LICENSE_FIELD_NUMBER = 1;
    private com.google.protobuf.ByteString license_;
    /**
     * <pre>
     *授权证书内容
     * </pre>
     *
     * <code>optional bytes license = 1;</code>
     */
    public com.google.protobuf.ByteString getLicense() {
      return license_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!license_.isEmpty()) {
        output.writeBytes(1, license_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!license_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, license_);
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @Override
    public boolean equals(final Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof cn.keptdata.one2data.header.message.protobuf.auth.Auth.CheckLicense)) {
        return super.equals(obj);
      }
      cn.keptdata.one2data.header.message.protobuf.auth.Auth.CheckLicense other = (cn.keptdata.one2data.header.message.protobuf.auth.Auth.CheckLicense) obj;

      boolean result = true;
      result = result && getLicense()
          .equals(other.getLicense());
      return result;
    }

    @Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptorForType().hashCode();
      hash = (37 * hash) + LICENSE_FIELD_NUMBER;
      hash = (53 * hash) + getLicense().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static cn.keptdata.one2data.header.message.protobuf.auth.Auth.CheckLicense parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static cn.keptdata.one2data.header.message.protobuf.auth.Auth.CheckLicense parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static cn.keptdata.one2data.header.message.protobuf.auth.Auth.CheckLicense parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static cn.keptdata.one2data.header.message.protobuf.auth.Auth.CheckLicense parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static cn.keptdata.one2data.header.message.protobuf.auth.Auth.CheckLicense parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static cn.keptdata.one2data.header.message.protobuf.auth.Auth.CheckLicense parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static cn.keptdata.one2data.header.message.protobuf.auth.Auth.CheckLicense parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static cn.keptdata.one2data.header.message.protobuf.auth.Auth.CheckLicense parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static cn.keptdata.one2data.header.message.protobuf.auth.Auth.CheckLicense parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static cn.keptdata.one2data.header.message.protobuf.auth.Auth.CheckLicense parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(cn.keptdata.one2data.header.message.protobuf.auth.Auth.CheckLicense prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     *检查证书
     * </pre>
     *
     * Protobuf type {@code one2data.rbtmqmsgcli.auth.CheckLicense}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:one2data.rbtmqmsgcli.auth.CheckLicense)
        cn.keptdata.one2data.header.message.protobuf.auth.Auth.CheckLicenseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return cn.keptdata.one2data.header.message.protobuf.auth.Auth.internal_static_one2data_rbtmqmsgcli_auth_CheckLicense_descriptor;
      }

      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return cn.keptdata.one2data.header.message.protobuf.auth.Auth.internal_static_one2data_rbtmqmsgcli_auth_CheckLicense_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                cn.keptdata.one2data.header.message.protobuf.auth.Auth.CheckLicense.class, cn.keptdata.one2data.header.message.protobuf.auth.Auth.CheckLicense.Builder.class);
      }

      // Construct using cn.keptdata.one2data.header.message.protobuf.auth.Auth.CheckLicense.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        license_ = com.google.protobuf.ByteString.EMPTY;

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return cn.keptdata.one2data.header.message.protobuf.auth.Auth.internal_static_one2data_rbtmqmsgcli_auth_CheckLicense_descriptor;
      }

      public cn.keptdata.one2data.header.message.protobuf.auth.Auth.CheckLicense getDefaultInstanceForType() {
        return cn.keptdata.one2data.header.message.protobuf.auth.Auth.CheckLicense.getDefaultInstance();
      }

      public cn.keptdata.one2data.header.message.protobuf.auth.Auth.CheckLicense build() {
        cn.keptdata.one2data.header.message.protobuf.auth.Auth.CheckLicense result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public cn.keptdata.one2data.header.message.protobuf.auth.Auth.CheckLicense buildPartial() {
        cn.keptdata.one2data.header.message.protobuf.auth.Auth.CheckLicense result = new cn.keptdata.one2data.header.message.protobuf.auth.Auth.CheckLicense(this);
        result.license_ = license_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof cn.keptdata.one2data.header.message.protobuf.auth.Auth.CheckLicense) {
          return mergeFrom((cn.keptdata.one2data.header.message.protobuf.auth.Auth.CheckLicense)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(cn.keptdata.one2data.header.message.protobuf.auth.Auth.CheckLicense other) {
        if (other == cn.keptdata.one2data.header.message.protobuf.auth.Auth.CheckLicense.getDefaultInstance()) return this;
        if (other.getLicense() != com.google.protobuf.ByteString.EMPTY) {
          setLicense(other.getLicense());
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        cn.keptdata.one2data.header.message.protobuf.auth.Auth.CheckLicense parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (cn.keptdata.one2data.header.message.protobuf.auth.Auth.CheckLicense) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private com.google.protobuf.ByteString license_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <pre>
       *授权证书内容
       * </pre>
       *
       * <code>optional bytes license = 1;</code>
       */
      public com.google.protobuf.ByteString getLicense() {
        return license_;
      }
      /**
       * <pre>
       *授权证书内容
       * </pre>
       *
       * <code>optional bytes license = 1;</code>
       */
      public Builder setLicense(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        license_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *授权证书内容
       * </pre>
       *
       * <code>optional bytes license = 1;</code>
       */
      public Builder clearLicense() {
        
        license_ = getDefaultInstance().getLicense();
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:one2data.rbtmqmsgcli.auth.CheckLicense)
    }

    // @@protoc_insertion_point(class_scope:one2data.rbtmqmsgcli.auth.CheckLicense)
    private static final cn.keptdata.one2data.header.message.protobuf.auth.Auth.CheckLicense DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new cn.keptdata.one2data.header.message.protobuf.auth.Auth.CheckLicense();
    }

    public static cn.keptdata.one2data.header.message.protobuf.auth.Auth.CheckLicense getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<CheckLicense>
        PARSER = new com.google.protobuf.AbstractParser<CheckLicense>() {
      public CheckLicense parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new CheckLicense(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<CheckLicense> parser() {
      return PARSER;
    }

    @Override
    public com.google.protobuf.Parser<CheckLicense> getParserForType() {
      return PARSER;
    }

    public cn.keptdata.one2data.header.message.protobuf.auth.Auth.CheckLicense getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface CheckLicenseAckOrBuilder extends
      // @@protoc_insertion_point(interface_extends:one2data.rbtmqmsgcli.auth.CheckLicenseAck)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     *检查结果
     * </pre>
     *
     * <code>optional .one2data.rbtmqmsgcli.common.BaseAck base_ack = 1;</code>
     */
    boolean hasBaseAck();
    /**
     * <pre>
     *检查结果
     * </pre>
     *
     * <code>optional .one2data.rbtmqmsgcli.common.BaseAck base_ack = 1;</code>
     */
    cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck getBaseAck();
    /**
     * <pre>
     *检查结果
     * </pre>
     *
     * <code>optional .one2data.rbtmqmsgcli.common.BaseAck base_ack = 1;</code>
     */
    cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAckOrBuilder getBaseAckOrBuilder();

    /**
     * <pre>
     *导入的License JSON 化授权详情信息
     * </pre>
     *
     * <code>optional bytes license_detail = 2;</code>
     */
    com.google.protobuf.ByteString getLicenseDetail();
  }
  /**
   * <pre>
   *检查证书信息
   * </pre>
   *
   * Protobuf type {@code one2data.rbtmqmsgcli.auth.CheckLicenseAck}
   */
  public  static final class CheckLicenseAck extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:one2data.rbtmqmsgcli.auth.CheckLicenseAck)
      CheckLicenseAckOrBuilder {
    // Use CheckLicenseAck.newBuilder() to construct.
    private CheckLicenseAck(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private CheckLicenseAck() {
      licenseDetail_ = com.google.protobuf.ByteString.EMPTY;
    }

    @Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private CheckLicenseAck(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck.Builder subBuilder = null;
              if (baseAck_ != null) {
                subBuilder = baseAck_.toBuilder();
              }
              baseAck_ = input.readMessage(cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(baseAck_);
                baseAck_ = subBuilder.buildPartial();
              }

              break;
            }
            case 18: {

              licenseDetail_ = input.readBytes();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return cn.keptdata.one2data.header.message.protobuf.auth.Auth.internal_static_one2data_rbtmqmsgcli_auth_CheckLicenseAck_descriptor;
    }

    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return cn.keptdata.one2data.header.message.protobuf.auth.Auth.internal_static_one2data_rbtmqmsgcli_auth_CheckLicenseAck_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              cn.keptdata.one2data.header.message.protobuf.auth.Auth.CheckLicenseAck.class, cn.keptdata.one2data.header.message.protobuf.auth.Auth.CheckLicenseAck.Builder.class);
    }

    public static final int BASE_ACK_FIELD_NUMBER = 1;
    private cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck baseAck_;
    /**
     * <pre>
     *检查结果
     * </pre>
     *
     * <code>optional .one2data.rbtmqmsgcli.common.BaseAck base_ack = 1;</code>
     */
    public boolean hasBaseAck() {
      return baseAck_ != null;
    }
    /**
     * <pre>
     *检查结果
     * </pre>
     *
     * <code>optional .one2data.rbtmqmsgcli.common.BaseAck base_ack = 1;</code>
     */
    public cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck getBaseAck() {
      return baseAck_ == null ? cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck.getDefaultInstance() : baseAck_;
    }
    /**
     * <pre>
     *检查结果
     * </pre>
     *
     * <code>optional .one2data.rbtmqmsgcli.common.BaseAck base_ack = 1;</code>
     */
    public cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAckOrBuilder getBaseAckOrBuilder() {
      return getBaseAck();
    }

    public static final int LICENSE_DETAIL_FIELD_NUMBER = 2;
    private com.google.protobuf.ByteString licenseDetail_;
    /**
     * <pre>
     *导入的License JSON 化授权详情信息
     * </pre>
     *
     * <code>optional bytes license_detail = 2;</code>
     */
    public com.google.protobuf.ByteString getLicenseDetail() {
      return licenseDetail_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (baseAck_ != null) {
        output.writeMessage(1, getBaseAck());
      }
      if (!licenseDetail_.isEmpty()) {
        output.writeBytes(2, licenseDetail_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (baseAck_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getBaseAck());
      }
      if (!licenseDetail_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, licenseDetail_);
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @Override
    public boolean equals(final Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof cn.keptdata.one2data.header.message.protobuf.auth.Auth.CheckLicenseAck)) {
        return super.equals(obj);
      }
      cn.keptdata.one2data.header.message.protobuf.auth.Auth.CheckLicenseAck other = (cn.keptdata.one2data.header.message.protobuf.auth.Auth.CheckLicenseAck) obj;

      boolean result = true;
      result = result && (hasBaseAck() == other.hasBaseAck());
      if (hasBaseAck()) {
        result = result && getBaseAck()
            .equals(other.getBaseAck());
      }
      result = result && getLicenseDetail()
          .equals(other.getLicenseDetail());
      return result;
    }

    @Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptorForType().hashCode();
      if (hasBaseAck()) {
        hash = (37 * hash) + BASE_ACK_FIELD_NUMBER;
        hash = (53 * hash) + getBaseAck().hashCode();
      }
      hash = (37 * hash) + LICENSE_DETAIL_FIELD_NUMBER;
      hash = (53 * hash) + getLicenseDetail().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static cn.keptdata.one2data.header.message.protobuf.auth.Auth.CheckLicenseAck parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static cn.keptdata.one2data.header.message.protobuf.auth.Auth.CheckLicenseAck parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static cn.keptdata.one2data.header.message.protobuf.auth.Auth.CheckLicenseAck parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static cn.keptdata.one2data.header.message.protobuf.auth.Auth.CheckLicenseAck parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static cn.keptdata.one2data.header.message.protobuf.auth.Auth.CheckLicenseAck parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static cn.keptdata.one2data.header.message.protobuf.auth.Auth.CheckLicenseAck parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static cn.keptdata.one2data.header.message.protobuf.auth.Auth.CheckLicenseAck parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static cn.keptdata.one2data.header.message.protobuf.auth.Auth.CheckLicenseAck parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static cn.keptdata.one2data.header.message.protobuf.auth.Auth.CheckLicenseAck parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static cn.keptdata.one2data.header.message.protobuf.auth.Auth.CheckLicenseAck parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(cn.keptdata.one2data.header.message.protobuf.auth.Auth.CheckLicenseAck prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     *检查证书信息
     * </pre>
     *
     * Protobuf type {@code one2data.rbtmqmsgcli.auth.CheckLicenseAck}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:one2data.rbtmqmsgcli.auth.CheckLicenseAck)
        cn.keptdata.one2data.header.message.protobuf.auth.Auth.CheckLicenseAckOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return cn.keptdata.one2data.header.message.protobuf.auth.Auth.internal_static_one2data_rbtmqmsgcli_auth_CheckLicenseAck_descriptor;
      }

      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return cn.keptdata.one2data.header.message.protobuf.auth.Auth.internal_static_one2data_rbtmqmsgcli_auth_CheckLicenseAck_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                cn.keptdata.one2data.header.message.protobuf.auth.Auth.CheckLicenseAck.class, cn.keptdata.one2data.header.message.protobuf.auth.Auth.CheckLicenseAck.Builder.class);
      }

      // Construct using cn.keptdata.one2data.header.message.protobuf.auth.Auth.CheckLicenseAck.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        if (baseAckBuilder_ == null) {
          baseAck_ = null;
        } else {
          baseAck_ = null;
          baseAckBuilder_ = null;
        }
        licenseDetail_ = com.google.protobuf.ByteString.EMPTY;

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return cn.keptdata.one2data.header.message.protobuf.auth.Auth.internal_static_one2data_rbtmqmsgcli_auth_CheckLicenseAck_descriptor;
      }

      public cn.keptdata.one2data.header.message.protobuf.auth.Auth.CheckLicenseAck getDefaultInstanceForType() {
        return cn.keptdata.one2data.header.message.protobuf.auth.Auth.CheckLicenseAck.getDefaultInstance();
      }

      public cn.keptdata.one2data.header.message.protobuf.auth.Auth.CheckLicenseAck build() {
        cn.keptdata.one2data.header.message.protobuf.auth.Auth.CheckLicenseAck result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public cn.keptdata.one2data.header.message.protobuf.auth.Auth.CheckLicenseAck buildPartial() {
        cn.keptdata.one2data.header.message.protobuf.auth.Auth.CheckLicenseAck result = new cn.keptdata.one2data.header.message.protobuf.auth.Auth.CheckLicenseAck(this);
        if (baseAckBuilder_ == null) {
          result.baseAck_ = baseAck_;
        } else {
          result.baseAck_ = baseAckBuilder_.build();
        }
        result.licenseDetail_ = licenseDetail_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof cn.keptdata.one2data.header.message.protobuf.auth.Auth.CheckLicenseAck) {
          return mergeFrom((cn.keptdata.one2data.header.message.protobuf.auth.Auth.CheckLicenseAck)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(cn.keptdata.one2data.header.message.protobuf.auth.Auth.CheckLicenseAck other) {
        if (other == cn.keptdata.one2data.header.message.protobuf.auth.Auth.CheckLicenseAck.getDefaultInstance()) return this;
        if (other.hasBaseAck()) {
          mergeBaseAck(other.getBaseAck());
        }
        if (other.getLicenseDetail() != com.google.protobuf.ByteString.EMPTY) {
          setLicenseDetail(other.getLicenseDetail());
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        cn.keptdata.one2data.header.message.protobuf.auth.Auth.CheckLicenseAck parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (cn.keptdata.one2data.header.message.protobuf.auth.Auth.CheckLicenseAck) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck baseAck_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck, cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck.Builder, cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAckOrBuilder> baseAckBuilder_;
      /**
       * <pre>
       *检查结果
       * </pre>
       *
       * <code>optional .one2data.rbtmqmsgcli.common.BaseAck base_ack = 1;</code>
       */
      public boolean hasBaseAck() {
        return baseAckBuilder_ != null || baseAck_ != null;
      }
      /**
       * <pre>
       *检查结果
       * </pre>
       *
       * <code>optional .one2data.rbtmqmsgcli.common.BaseAck base_ack = 1;</code>
       */
      public cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck getBaseAck() {
        if (baseAckBuilder_ == null) {
          return baseAck_ == null ? cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck.getDefaultInstance() : baseAck_;
        } else {
          return baseAckBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       *检查结果
       * </pre>
       *
       * <code>optional .one2data.rbtmqmsgcli.common.BaseAck base_ack = 1;</code>
       */
      public Builder setBaseAck(cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck value) {
        if (baseAckBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          baseAck_ = value;
          onChanged();
        } else {
          baseAckBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       *检查结果
       * </pre>
       *
       * <code>optional .one2data.rbtmqmsgcli.common.BaseAck base_ack = 1;</code>
       */
      public Builder setBaseAck(
          cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck.Builder builderForValue) {
        if (baseAckBuilder_ == null) {
          baseAck_ = builderForValue.build();
          onChanged();
        } else {
          baseAckBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       *检查结果
       * </pre>
       *
       * <code>optional .one2data.rbtmqmsgcli.common.BaseAck base_ack = 1;</code>
       */
      public Builder mergeBaseAck(cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck value) {
        if (baseAckBuilder_ == null) {
          if (baseAck_ != null) {
            baseAck_ =
              cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck.newBuilder(baseAck_).mergeFrom(value).buildPartial();
          } else {
            baseAck_ = value;
          }
          onChanged();
        } else {
          baseAckBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       *检查结果
       * </pre>
       *
       * <code>optional .one2data.rbtmqmsgcli.common.BaseAck base_ack = 1;</code>
       */
      public Builder clearBaseAck() {
        if (baseAckBuilder_ == null) {
          baseAck_ = null;
          onChanged();
        } else {
          baseAck_ = null;
          baseAckBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       *检查结果
       * </pre>
       *
       * <code>optional .one2data.rbtmqmsgcli.common.BaseAck base_ack = 1;</code>
       */
      public cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck.Builder getBaseAckBuilder() {
        
        onChanged();
        return getBaseAckFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       *检查结果
       * </pre>
       *
       * <code>optional .one2data.rbtmqmsgcli.common.BaseAck base_ack = 1;</code>
       */
      public cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAckOrBuilder getBaseAckOrBuilder() {
        if (baseAckBuilder_ != null) {
          return baseAckBuilder_.getMessageOrBuilder();
        } else {
          return baseAck_ == null ?
              cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck.getDefaultInstance() : baseAck_;
        }
      }
      /**
       * <pre>
       *检查结果
       * </pre>
       *
       * <code>optional .one2data.rbtmqmsgcli.common.BaseAck base_ack = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck, cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck.Builder, cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAckOrBuilder> 
          getBaseAckFieldBuilder() {
        if (baseAckBuilder_ == null) {
          baseAckBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck, cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck.Builder, cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAckOrBuilder>(
                  getBaseAck(),
                  getParentForChildren(),
                  isClean());
          baseAck_ = null;
        }
        return baseAckBuilder_;
      }

      private com.google.protobuf.ByteString licenseDetail_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <pre>
       *导入的License JSON 化授权详情信息
       * </pre>
       *
       * <code>optional bytes license_detail = 2;</code>
       */
      public com.google.protobuf.ByteString getLicenseDetail() {
        return licenseDetail_;
      }
      /**
       * <pre>
       *导入的License JSON 化授权详情信息
       * </pre>
       *
       * <code>optional bytes license_detail = 2;</code>
       */
      public Builder setLicenseDetail(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        licenseDetail_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *导入的License JSON 化授权详情信息
       * </pre>
       *
       * <code>optional bytes license_detail = 2;</code>
       */
      public Builder clearLicenseDetail() {
        
        licenseDetail_ = getDefaultInstance().getLicenseDetail();
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:one2data.rbtmqmsgcli.auth.CheckLicenseAck)
    }

    // @@protoc_insertion_point(class_scope:one2data.rbtmqmsgcli.auth.CheckLicenseAck)
    private static final cn.keptdata.one2data.header.message.protobuf.auth.Auth.CheckLicenseAck DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new cn.keptdata.one2data.header.message.protobuf.auth.Auth.CheckLicenseAck();
    }

    public static cn.keptdata.one2data.header.message.protobuf.auth.Auth.CheckLicenseAck getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<CheckLicenseAck>
        PARSER = new com.google.protobuf.AbstractParser<CheckLicenseAck>() {
      public CheckLicenseAck parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new CheckLicenseAck(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<CheckLicenseAck> parser() {
      return PARSER;
    }

    @Override
    public com.google.protobuf.Parser<CheckLicenseAck> getParserForType() {
      return PARSER;
    }

    public cn.keptdata.one2data.header.message.protobuf.auth.Auth.CheckLicenseAck getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface QueryLicenseDetailOrBuilder extends
      // @@protoc_insertion_point(interface_extends:one2data.rbtmqmsgcli.auth.QueryLicenseDetail)
      com.google.protobuf.MessageOrBuilder {
  }
  /**
   * <pre>
   *查询授权详情
   * </pre>
   *
   * Protobuf type {@code one2data.rbtmqmsgcli.auth.QueryLicenseDetail}
   */
  public  static final class QueryLicenseDetail extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:one2data.rbtmqmsgcli.auth.QueryLicenseDetail)
      QueryLicenseDetailOrBuilder {
    // Use QueryLicenseDetail.newBuilder() to construct.
    private QueryLicenseDetail(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private QueryLicenseDetail() {
    }

    @Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private QueryLicenseDetail(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return cn.keptdata.one2data.header.message.protobuf.auth.Auth.internal_static_one2data_rbtmqmsgcli_auth_QueryLicenseDetail_descriptor;
    }

    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return cn.keptdata.one2data.header.message.protobuf.auth.Auth.internal_static_one2data_rbtmqmsgcli_auth_QueryLicenseDetail_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              cn.keptdata.one2data.header.message.protobuf.auth.Auth.QueryLicenseDetail.class, cn.keptdata.one2data.header.message.protobuf.auth.Auth.QueryLicenseDetail.Builder.class);
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @Override
    public boolean equals(final Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof cn.keptdata.one2data.header.message.protobuf.auth.Auth.QueryLicenseDetail)) {
        return super.equals(obj);
      }
      cn.keptdata.one2data.header.message.protobuf.auth.Auth.QueryLicenseDetail other = (cn.keptdata.one2data.header.message.protobuf.auth.Auth.QueryLicenseDetail) obj;

      boolean result = true;
      return result;
    }

    @Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptorForType().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static cn.keptdata.one2data.header.message.protobuf.auth.Auth.QueryLicenseDetail parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static cn.keptdata.one2data.header.message.protobuf.auth.Auth.QueryLicenseDetail parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static cn.keptdata.one2data.header.message.protobuf.auth.Auth.QueryLicenseDetail parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static cn.keptdata.one2data.header.message.protobuf.auth.Auth.QueryLicenseDetail parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static cn.keptdata.one2data.header.message.protobuf.auth.Auth.QueryLicenseDetail parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static cn.keptdata.one2data.header.message.protobuf.auth.Auth.QueryLicenseDetail parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static cn.keptdata.one2data.header.message.protobuf.auth.Auth.QueryLicenseDetail parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static cn.keptdata.one2data.header.message.protobuf.auth.Auth.QueryLicenseDetail parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static cn.keptdata.one2data.header.message.protobuf.auth.Auth.QueryLicenseDetail parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static cn.keptdata.one2data.header.message.protobuf.auth.Auth.QueryLicenseDetail parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(cn.keptdata.one2data.header.message.protobuf.auth.Auth.QueryLicenseDetail prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     *查询授权详情
     * </pre>
     *
     * Protobuf type {@code one2data.rbtmqmsgcli.auth.QueryLicenseDetail}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:one2data.rbtmqmsgcli.auth.QueryLicenseDetail)
        cn.keptdata.one2data.header.message.protobuf.auth.Auth.QueryLicenseDetailOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return cn.keptdata.one2data.header.message.protobuf.auth.Auth.internal_static_one2data_rbtmqmsgcli_auth_QueryLicenseDetail_descriptor;
      }

      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return cn.keptdata.one2data.header.message.protobuf.auth.Auth.internal_static_one2data_rbtmqmsgcli_auth_QueryLicenseDetail_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                cn.keptdata.one2data.header.message.protobuf.auth.Auth.QueryLicenseDetail.class, cn.keptdata.one2data.header.message.protobuf.auth.Auth.QueryLicenseDetail.Builder.class);
      }

      // Construct using cn.keptdata.one2data.header.message.protobuf.auth.Auth.QueryLicenseDetail.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return cn.keptdata.one2data.header.message.protobuf.auth.Auth.internal_static_one2data_rbtmqmsgcli_auth_QueryLicenseDetail_descriptor;
      }

      public cn.keptdata.one2data.header.message.protobuf.auth.Auth.QueryLicenseDetail getDefaultInstanceForType() {
        return cn.keptdata.one2data.header.message.protobuf.auth.Auth.QueryLicenseDetail.getDefaultInstance();
      }

      public cn.keptdata.one2data.header.message.protobuf.auth.Auth.QueryLicenseDetail build() {
        cn.keptdata.one2data.header.message.protobuf.auth.Auth.QueryLicenseDetail result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public cn.keptdata.one2data.header.message.protobuf.auth.Auth.QueryLicenseDetail buildPartial() {
        cn.keptdata.one2data.header.message.protobuf.auth.Auth.QueryLicenseDetail result = new cn.keptdata.one2data.header.message.protobuf.auth.Auth.QueryLicenseDetail(this);
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof cn.keptdata.one2data.header.message.protobuf.auth.Auth.QueryLicenseDetail) {
          return mergeFrom((cn.keptdata.one2data.header.message.protobuf.auth.Auth.QueryLicenseDetail)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(cn.keptdata.one2data.header.message.protobuf.auth.Auth.QueryLicenseDetail other) {
        if (other == cn.keptdata.one2data.header.message.protobuf.auth.Auth.QueryLicenseDetail.getDefaultInstance()) return this;
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        cn.keptdata.one2data.header.message.protobuf.auth.Auth.QueryLicenseDetail parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (cn.keptdata.one2data.header.message.protobuf.auth.Auth.QueryLicenseDetail) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:one2data.rbtmqmsgcli.auth.QueryLicenseDetail)
    }

    // @@protoc_insertion_point(class_scope:one2data.rbtmqmsgcli.auth.QueryLicenseDetail)
    private static final cn.keptdata.one2data.header.message.protobuf.auth.Auth.QueryLicenseDetail DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new cn.keptdata.one2data.header.message.protobuf.auth.Auth.QueryLicenseDetail();
    }

    public static cn.keptdata.one2data.header.message.protobuf.auth.Auth.QueryLicenseDetail getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<QueryLicenseDetail>
        PARSER = new com.google.protobuf.AbstractParser<QueryLicenseDetail>() {
      public QueryLicenseDetail parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new QueryLicenseDetail(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<QueryLicenseDetail> parser() {
      return PARSER;
    }

    @Override
    public com.google.protobuf.Parser<QueryLicenseDetail> getParserForType() {
      return PARSER;
    }

    public cn.keptdata.one2data.header.message.protobuf.auth.Auth.QueryLicenseDetail getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface QueryLicenseDetailAckOrBuilder extends
      // @@protoc_insertion_point(interface_extends:one2data.rbtmqmsgcli.auth.QueryLicenseDetailAck)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     *查询结果
     * </pre>
     *
     * <code>optional .one2data.rbtmqmsgcli.common.BaseAck base_ack = 1;</code>
     */
    boolean hasBaseAck();
    /**
     * <pre>
     *查询结果
     * </pre>
     *
     * <code>optional .one2data.rbtmqmsgcli.common.BaseAck base_ack = 1;</code>
     */
    cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck getBaseAck();
    /**
     * <pre>
     *查询结果
     * </pre>
     *
     * <code>optional .one2data.rbtmqmsgcli.common.BaseAck base_ack = 1;</code>
     */
    cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAckOrBuilder getBaseAckOrBuilder();

    /**
     * <pre>
     *JSON 化授权详情信息
     * </pre>
     *
     * <code>optional bytes license_detail = 2;</code>
     */
    com.google.protobuf.ByteString getLicenseDetail();
  }
  /**
   * <pre>
   *查询授权详情响应
   * </pre>
   *
   * Protobuf type {@code one2data.rbtmqmsgcli.auth.QueryLicenseDetailAck}
   */
  public  static final class QueryLicenseDetailAck extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:one2data.rbtmqmsgcli.auth.QueryLicenseDetailAck)
      QueryLicenseDetailAckOrBuilder {
    // Use QueryLicenseDetailAck.newBuilder() to construct.
    private QueryLicenseDetailAck(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private QueryLicenseDetailAck() {
      licenseDetail_ = com.google.protobuf.ByteString.EMPTY;
    }

    @Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private QueryLicenseDetailAck(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck.Builder subBuilder = null;
              if (baseAck_ != null) {
                subBuilder = baseAck_.toBuilder();
              }
              baseAck_ = input.readMessage(cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(baseAck_);
                baseAck_ = subBuilder.buildPartial();
              }

              break;
            }
            case 18: {

              licenseDetail_ = input.readBytes();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return cn.keptdata.one2data.header.message.protobuf.auth.Auth.internal_static_one2data_rbtmqmsgcli_auth_QueryLicenseDetailAck_descriptor;
    }

    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return cn.keptdata.one2data.header.message.protobuf.auth.Auth.internal_static_one2data_rbtmqmsgcli_auth_QueryLicenseDetailAck_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              cn.keptdata.one2data.header.message.protobuf.auth.Auth.QueryLicenseDetailAck.class, cn.keptdata.one2data.header.message.protobuf.auth.Auth.QueryLicenseDetailAck.Builder.class);
    }

    public static final int BASE_ACK_FIELD_NUMBER = 1;
    private cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck baseAck_;
    /**
     * <pre>
     *查询结果
     * </pre>
     *
     * <code>optional .one2data.rbtmqmsgcli.common.BaseAck base_ack = 1;</code>
     */
    public boolean hasBaseAck() {
      return baseAck_ != null;
    }
    /**
     * <pre>
     *查询结果
     * </pre>
     *
     * <code>optional .one2data.rbtmqmsgcli.common.BaseAck base_ack = 1;</code>
     */
    public cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck getBaseAck() {
      return baseAck_ == null ? cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck.getDefaultInstance() : baseAck_;
    }
    /**
     * <pre>
     *查询结果
     * </pre>
     *
     * <code>optional .one2data.rbtmqmsgcli.common.BaseAck base_ack = 1;</code>
     */
    public cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAckOrBuilder getBaseAckOrBuilder() {
      return getBaseAck();
    }

    public static final int LICENSE_DETAIL_FIELD_NUMBER = 2;
    private com.google.protobuf.ByteString licenseDetail_;
    /**
     * <pre>
     *JSON 化授权详情信息
     * </pre>
     *
     * <code>optional bytes license_detail = 2;</code>
     */
    public com.google.protobuf.ByteString getLicenseDetail() {
      return licenseDetail_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (baseAck_ != null) {
        output.writeMessage(1, getBaseAck());
      }
      if (!licenseDetail_.isEmpty()) {
        output.writeBytes(2, licenseDetail_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (baseAck_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getBaseAck());
      }
      if (!licenseDetail_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, licenseDetail_);
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @Override
    public boolean equals(final Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof cn.keptdata.one2data.header.message.protobuf.auth.Auth.QueryLicenseDetailAck)) {
        return super.equals(obj);
      }
      cn.keptdata.one2data.header.message.protobuf.auth.Auth.QueryLicenseDetailAck other = (cn.keptdata.one2data.header.message.protobuf.auth.Auth.QueryLicenseDetailAck) obj;

      boolean result = true;
      result = result && (hasBaseAck() == other.hasBaseAck());
      if (hasBaseAck()) {
        result = result && getBaseAck()
            .equals(other.getBaseAck());
      }
      result = result && getLicenseDetail()
          .equals(other.getLicenseDetail());
      return result;
    }

    @Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptorForType().hashCode();
      if (hasBaseAck()) {
        hash = (37 * hash) + BASE_ACK_FIELD_NUMBER;
        hash = (53 * hash) + getBaseAck().hashCode();
      }
      hash = (37 * hash) + LICENSE_DETAIL_FIELD_NUMBER;
      hash = (53 * hash) + getLicenseDetail().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static cn.keptdata.one2data.header.message.protobuf.auth.Auth.QueryLicenseDetailAck parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static cn.keptdata.one2data.header.message.protobuf.auth.Auth.QueryLicenseDetailAck parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static cn.keptdata.one2data.header.message.protobuf.auth.Auth.QueryLicenseDetailAck parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static cn.keptdata.one2data.header.message.protobuf.auth.Auth.QueryLicenseDetailAck parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static cn.keptdata.one2data.header.message.protobuf.auth.Auth.QueryLicenseDetailAck parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static cn.keptdata.one2data.header.message.protobuf.auth.Auth.QueryLicenseDetailAck parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static cn.keptdata.one2data.header.message.protobuf.auth.Auth.QueryLicenseDetailAck parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static cn.keptdata.one2data.header.message.protobuf.auth.Auth.QueryLicenseDetailAck parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static cn.keptdata.one2data.header.message.protobuf.auth.Auth.QueryLicenseDetailAck parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static cn.keptdata.one2data.header.message.protobuf.auth.Auth.QueryLicenseDetailAck parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(cn.keptdata.one2data.header.message.protobuf.auth.Auth.QueryLicenseDetailAck prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     *查询授权详情响应
     * </pre>
     *
     * Protobuf type {@code one2data.rbtmqmsgcli.auth.QueryLicenseDetailAck}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:one2data.rbtmqmsgcli.auth.QueryLicenseDetailAck)
        cn.keptdata.one2data.header.message.protobuf.auth.Auth.QueryLicenseDetailAckOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return cn.keptdata.one2data.header.message.protobuf.auth.Auth.internal_static_one2data_rbtmqmsgcli_auth_QueryLicenseDetailAck_descriptor;
      }

      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return cn.keptdata.one2data.header.message.protobuf.auth.Auth.internal_static_one2data_rbtmqmsgcli_auth_QueryLicenseDetailAck_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                cn.keptdata.one2data.header.message.protobuf.auth.Auth.QueryLicenseDetailAck.class, cn.keptdata.one2data.header.message.protobuf.auth.Auth.QueryLicenseDetailAck.Builder.class);
      }

      // Construct using cn.keptdata.one2data.header.message.protobuf.auth.Auth.QueryLicenseDetailAck.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        if (baseAckBuilder_ == null) {
          baseAck_ = null;
        } else {
          baseAck_ = null;
          baseAckBuilder_ = null;
        }
        licenseDetail_ = com.google.protobuf.ByteString.EMPTY;

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return cn.keptdata.one2data.header.message.protobuf.auth.Auth.internal_static_one2data_rbtmqmsgcli_auth_QueryLicenseDetailAck_descriptor;
      }

      public cn.keptdata.one2data.header.message.protobuf.auth.Auth.QueryLicenseDetailAck getDefaultInstanceForType() {
        return cn.keptdata.one2data.header.message.protobuf.auth.Auth.QueryLicenseDetailAck.getDefaultInstance();
      }

      public cn.keptdata.one2data.header.message.protobuf.auth.Auth.QueryLicenseDetailAck build() {
        cn.keptdata.one2data.header.message.protobuf.auth.Auth.QueryLicenseDetailAck result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public cn.keptdata.one2data.header.message.protobuf.auth.Auth.QueryLicenseDetailAck buildPartial() {
        cn.keptdata.one2data.header.message.protobuf.auth.Auth.QueryLicenseDetailAck result = new cn.keptdata.one2data.header.message.protobuf.auth.Auth.QueryLicenseDetailAck(this);
        if (baseAckBuilder_ == null) {
          result.baseAck_ = baseAck_;
        } else {
          result.baseAck_ = baseAckBuilder_.build();
        }
        result.licenseDetail_ = licenseDetail_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof cn.keptdata.one2data.header.message.protobuf.auth.Auth.QueryLicenseDetailAck) {
          return mergeFrom((cn.keptdata.one2data.header.message.protobuf.auth.Auth.QueryLicenseDetailAck)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(cn.keptdata.one2data.header.message.protobuf.auth.Auth.QueryLicenseDetailAck other) {
        if (other == cn.keptdata.one2data.header.message.protobuf.auth.Auth.QueryLicenseDetailAck.getDefaultInstance()) return this;
        if (other.hasBaseAck()) {
          mergeBaseAck(other.getBaseAck());
        }
        if (other.getLicenseDetail() != com.google.protobuf.ByteString.EMPTY) {
          setLicenseDetail(other.getLicenseDetail());
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        cn.keptdata.one2data.header.message.protobuf.auth.Auth.QueryLicenseDetailAck parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (cn.keptdata.one2data.header.message.protobuf.auth.Auth.QueryLicenseDetailAck) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck baseAck_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck, cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck.Builder, cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAckOrBuilder> baseAckBuilder_;
      /**
       * <pre>
       *查询结果
       * </pre>
       *
       * <code>optional .one2data.rbtmqmsgcli.common.BaseAck base_ack = 1;</code>
       */
      public boolean hasBaseAck() {
        return baseAckBuilder_ != null || baseAck_ != null;
      }
      /**
       * <pre>
       *查询结果
       * </pre>
       *
       * <code>optional .one2data.rbtmqmsgcli.common.BaseAck base_ack = 1;</code>
       */
      public cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck getBaseAck() {
        if (baseAckBuilder_ == null) {
          return baseAck_ == null ? cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck.getDefaultInstance() : baseAck_;
        } else {
          return baseAckBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       *查询结果
       * </pre>
       *
       * <code>optional .one2data.rbtmqmsgcli.common.BaseAck base_ack = 1;</code>
       */
      public Builder setBaseAck(cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck value) {
        if (baseAckBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          baseAck_ = value;
          onChanged();
        } else {
          baseAckBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       *查询结果
       * </pre>
       *
       * <code>optional .one2data.rbtmqmsgcli.common.BaseAck base_ack = 1;</code>
       */
      public Builder setBaseAck(
          cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck.Builder builderForValue) {
        if (baseAckBuilder_ == null) {
          baseAck_ = builderForValue.build();
          onChanged();
        } else {
          baseAckBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       *查询结果
       * </pre>
       *
       * <code>optional .one2data.rbtmqmsgcli.common.BaseAck base_ack = 1;</code>
       */
      public Builder mergeBaseAck(cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck value) {
        if (baseAckBuilder_ == null) {
          if (baseAck_ != null) {
            baseAck_ =
              cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck.newBuilder(baseAck_).mergeFrom(value).buildPartial();
          } else {
            baseAck_ = value;
          }
          onChanged();
        } else {
          baseAckBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       *查询结果
       * </pre>
       *
       * <code>optional .one2data.rbtmqmsgcli.common.BaseAck base_ack = 1;</code>
       */
      public Builder clearBaseAck() {
        if (baseAckBuilder_ == null) {
          baseAck_ = null;
          onChanged();
        } else {
          baseAck_ = null;
          baseAckBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       *查询结果
       * </pre>
       *
       * <code>optional .one2data.rbtmqmsgcli.common.BaseAck base_ack = 1;</code>
       */
      public cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck.Builder getBaseAckBuilder() {
        
        onChanged();
        return getBaseAckFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       *查询结果
       * </pre>
       *
       * <code>optional .one2data.rbtmqmsgcli.common.BaseAck base_ack = 1;</code>
       */
      public cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAckOrBuilder getBaseAckOrBuilder() {
        if (baseAckBuilder_ != null) {
          return baseAckBuilder_.getMessageOrBuilder();
        } else {
          return baseAck_ == null ?
              cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck.getDefaultInstance() : baseAck_;
        }
      }
      /**
       * <pre>
       *查询结果
       * </pre>
       *
       * <code>optional .one2data.rbtmqmsgcli.common.BaseAck base_ack = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck, cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck.Builder, cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAckOrBuilder> 
          getBaseAckFieldBuilder() {
        if (baseAckBuilder_ == null) {
          baseAckBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck, cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck.Builder, cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAckOrBuilder>(
                  getBaseAck(),
                  getParentForChildren(),
                  isClean());
          baseAck_ = null;
        }
        return baseAckBuilder_;
      }

      private com.google.protobuf.ByteString licenseDetail_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <pre>
       *JSON 化授权详情信息
       * </pre>
       *
       * <code>optional bytes license_detail = 2;</code>
       */
      public com.google.protobuf.ByteString getLicenseDetail() {
        return licenseDetail_;
      }
      /**
       * <pre>
       *JSON 化授权详情信息
       * </pre>
       *
       * <code>optional bytes license_detail = 2;</code>
       */
      public Builder setLicenseDetail(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        licenseDetail_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *JSON 化授权详情信息
       * </pre>
       *
       * <code>optional bytes license_detail = 2;</code>
       */
      public Builder clearLicenseDetail() {
        
        licenseDetail_ = getDefaultInstance().getLicenseDetail();
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:one2data.rbtmqmsgcli.auth.QueryLicenseDetailAck)
    }

    // @@protoc_insertion_point(class_scope:one2data.rbtmqmsgcli.auth.QueryLicenseDetailAck)
    private static final cn.keptdata.one2data.header.message.protobuf.auth.Auth.QueryLicenseDetailAck DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new cn.keptdata.one2data.header.message.protobuf.auth.Auth.QueryLicenseDetailAck();
    }

    public static cn.keptdata.one2data.header.message.protobuf.auth.Auth.QueryLicenseDetailAck getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<QueryLicenseDetailAck>
        PARSER = new com.google.protobuf.AbstractParser<QueryLicenseDetailAck>() {
      public QueryLicenseDetailAck parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new QueryLicenseDetailAck(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<QueryLicenseDetailAck> parser() {
      return PARSER;
    }

    @Override
    public com.google.protobuf.Parser<QueryLicenseDetailAck> getParserForType() {
      return PARSER;
    }

    public cn.keptdata.one2data.header.message.protobuf.auth.Auth.QueryLicenseDetailAck getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ApplyNodeLicenseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:one2data.rbtmqmsgcli.auth.ApplyNodeLicense)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     *组件节点类型
     * </pre>
     *
     * <code>optional .one2data.rbtmqmsgcli.common.NodeType node_type = 1;</code>
     */
    int getNodeTypeValue();
    /**
     * <pre>
     *组件节点类型
     * </pre>
     *
     * <code>optional .one2data.rbtmqmsgcli.common.NodeType node_type = 1;</code>
     */
    cn.keptdata.one2data.header.message.protobuf.common.Node.NodeType getNodeType();

    /**
     * <pre>
     *节点内部唯一ID
     * </pre>
     *
     * <code>optional string uuid_key = 2;</code>
     */
    String getUuidKey();
    /**
     * <pre>
     *节点内部唯一ID
     * </pre>
     *
     * <code>optional string uuid_key = 2;</code>
     */
    com.google.protobuf.ByteString
        getUuidKeyBytes();
  }
  /**
   * <pre>
   *节点申请授权
   * </pre>
   *
   * Protobuf type {@code one2data.rbtmqmsgcli.auth.ApplyNodeLicense}
   */
  public  static final class ApplyNodeLicense extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:one2data.rbtmqmsgcli.auth.ApplyNodeLicense)
      ApplyNodeLicenseOrBuilder {
    // Use ApplyNodeLicense.newBuilder() to construct.
    private ApplyNodeLicense(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ApplyNodeLicense() {
      nodeType_ = 0;
      uuidKey_ = "";
    }

    @Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private ApplyNodeLicense(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();

              nodeType_ = rawValue;
              break;
            }
            case 18: {
              String s = input.readStringRequireUtf8();

              uuidKey_ = s;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return cn.keptdata.one2data.header.message.protobuf.auth.Auth.internal_static_one2data_rbtmqmsgcli_auth_ApplyNodeLicense_descriptor;
    }

    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return cn.keptdata.one2data.header.message.protobuf.auth.Auth.internal_static_one2data_rbtmqmsgcli_auth_ApplyNodeLicense_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              cn.keptdata.one2data.header.message.protobuf.auth.Auth.ApplyNodeLicense.class, cn.keptdata.one2data.header.message.protobuf.auth.Auth.ApplyNodeLicense.Builder.class);
    }

    public static final int NODE_TYPE_FIELD_NUMBER = 1;
    private int nodeType_;
    /**
     * <pre>
     *组件节点类型
     * </pre>
     *
     * <code>optional .one2data.rbtmqmsgcli.common.NodeType node_type = 1;</code>
     */
    public int getNodeTypeValue() {
      return nodeType_;
    }
    /**
     * <pre>
     *组件节点类型
     * </pre>
     *
     * <code>optional .one2data.rbtmqmsgcli.common.NodeType node_type = 1;</code>
     */
    public cn.keptdata.one2data.header.message.protobuf.common.Node.NodeType getNodeType() {
      cn.keptdata.one2data.header.message.protobuf.common.Node.NodeType result = cn.keptdata.one2data.header.message.protobuf.common.Node.NodeType.valueOf(nodeType_);
      return result == null ? cn.keptdata.one2data.header.message.protobuf.common.Node.NodeType.UNRECOGNIZED : result;
    }

    public static final int UUID_KEY_FIELD_NUMBER = 2;
    private volatile Object uuidKey_;
    /**
     * <pre>
     *节点内部唯一ID
     * </pre>
     *
     * <code>optional string uuid_key = 2;</code>
     */
    public String getUuidKey() {
      Object ref = uuidKey_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        uuidKey_ = s;
        return s;
      }
    }
    /**
     * <pre>
     *节点内部唯一ID
     * </pre>
     *
     * <code>optional string uuid_key = 2;</code>
     */
    public com.google.protobuf.ByteString
        getUuidKeyBytes() {
      Object ref = uuidKey_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        uuidKey_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (nodeType_ != cn.keptdata.one2data.header.message.protobuf.common.Node.NodeType.NT_CLIENT.getNumber()) {
        output.writeEnum(1, nodeType_);
      }
      if (!getUuidKeyBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, uuidKey_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (nodeType_ != cn.keptdata.one2data.header.message.protobuf.common.Node.NodeType.NT_CLIENT.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, nodeType_);
      }
      if (!getUuidKeyBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, uuidKey_);
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @Override
    public boolean equals(final Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof cn.keptdata.one2data.header.message.protobuf.auth.Auth.ApplyNodeLicense)) {
        return super.equals(obj);
      }
      cn.keptdata.one2data.header.message.protobuf.auth.Auth.ApplyNodeLicense other = (cn.keptdata.one2data.header.message.protobuf.auth.Auth.ApplyNodeLicense) obj;

      boolean result = true;
      result = result && nodeType_ == other.nodeType_;
      result = result && getUuidKey()
          .equals(other.getUuidKey());
      return result;
    }

    @Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptorForType().hashCode();
      hash = (37 * hash) + NODE_TYPE_FIELD_NUMBER;
      hash = (53 * hash) + nodeType_;
      hash = (37 * hash) + UUID_KEY_FIELD_NUMBER;
      hash = (53 * hash) + getUuidKey().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static cn.keptdata.one2data.header.message.protobuf.auth.Auth.ApplyNodeLicense parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static cn.keptdata.one2data.header.message.protobuf.auth.Auth.ApplyNodeLicense parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static cn.keptdata.one2data.header.message.protobuf.auth.Auth.ApplyNodeLicense parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static cn.keptdata.one2data.header.message.protobuf.auth.Auth.ApplyNodeLicense parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static cn.keptdata.one2data.header.message.protobuf.auth.Auth.ApplyNodeLicense parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static cn.keptdata.one2data.header.message.protobuf.auth.Auth.ApplyNodeLicense parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static cn.keptdata.one2data.header.message.protobuf.auth.Auth.ApplyNodeLicense parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static cn.keptdata.one2data.header.message.protobuf.auth.Auth.ApplyNodeLicense parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static cn.keptdata.one2data.header.message.protobuf.auth.Auth.ApplyNodeLicense parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static cn.keptdata.one2data.header.message.protobuf.auth.Auth.ApplyNodeLicense parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(cn.keptdata.one2data.header.message.protobuf.auth.Auth.ApplyNodeLicense prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     *节点申请授权
     * </pre>
     *
     * Protobuf type {@code one2data.rbtmqmsgcli.auth.ApplyNodeLicense}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:one2data.rbtmqmsgcli.auth.ApplyNodeLicense)
        cn.keptdata.one2data.header.message.protobuf.auth.Auth.ApplyNodeLicenseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return cn.keptdata.one2data.header.message.protobuf.auth.Auth.internal_static_one2data_rbtmqmsgcli_auth_ApplyNodeLicense_descriptor;
      }

      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return cn.keptdata.one2data.header.message.protobuf.auth.Auth.internal_static_one2data_rbtmqmsgcli_auth_ApplyNodeLicense_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                cn.keptdata.one2data.header.message.protobuf.auth.Auth.ApplyNodeLicense.class, cn.keptdata.one2data.header.message.protobuf.auth.Auth.ApplyNodeLicense.Builder.class);
      }

      // Construct using cn.keptdata.one2data.header.message.protobuf.auth.Auth.ApplyNodeLicense.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        nodeType_ = 0;

        uuidKey_ = "";

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return cn.keptdata.one2data.header.message.protobuf.auth.Auth.internal_static_one2data_rbtmqmsgcli_auth_ApplyNodeLicense_descriptor;
      }

      public cn.keptdata.one2data.header.message.protobuf.auth.Auth.ApplyNodeLicense getDefaultInstanceForType() {
        return cn.keptdata.one2data.header.message.protobuf.auth.Auth.ApplyNodeLicense.getDefaultInstance();
      }

      public cn.keptdata.one2data.header.message.protobuf.auth.Auth.ApplyNodeLicense build() {
        cn.keptdata.one2data.header.message.protobuf.auth.Auth.ApplyNodeLicense result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public cn.keptdata.one2data.header.message.protobuf.auth.Auth.ApplyNodeLicense buildPartial() {
        cn.keptdata.one2data.header.message.protobuf.auth.Auth.ApplyNodeLicense result = new cn.keptdata.one2data.header.message.protobuf.auth.Auth.ApplyNodeLicense(this);
        result.nodeType_ = nodeType_;
        result.uuidKey_ = uuidKey_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof cn.keptdata.one2data.header.message.protobuf.auth.Auth.ApplyNodeLicense) {
          return mergeFrom((cn.keptdata.one2data.header.message.protobuf.auth.Auth.ApplyNodeLicense)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(cn.keptdata.one2data.header.message.protobuf.auth.Auth.ApplyNodeLicense other) {
        if (other == cn.keptdata.one2data.header.message.protobuf.auth.Auth.ApplyNodeLicense.getDefaultInstance()) return this;
        if (other.nodeType_ != 0) {
          setNodeTypeValue(other.getNodeTypeValue());
        }
        if (!other.getUuidKey().isEmpty()) {
          uuidKey_ = other.uuidKey_;
          onChanged();
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        cn.keptdata.one2data.header.message.protobuf.auth.Auth.ApplyNodeLicense parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (cn.keptdata.one2data.header.message.protobuf.auth.Auth.ApplyNodeLicense) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private int nodeType_ = 0;
      /**
       * <pre>
       *组件节点类型
       * </pre>
       *
       * <code>optional .one2data.rbtmqmsgcli.common.NodeType node_type = 1;</code>
       */
      public int getNodeTypeValue() {
        return nodeType_;
      }
      /**
       * <pre>
       *组件节点类型
       * </pre>
       *
       * <code>optional .one2data.rbtmqmsgcli.common.NodeType node_type = 1;</code>
       */
      public Builder setNodeTypeValue(int value) {
        nodeType_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *组件节点类型
       * </pre>
       *
       * <code>optional .one2data.rbtmqmsgcli.common.NodeType node_type = 1;</code>
       */
      public cn.keptdata.one2data.header.message.protobuf.common.Node.NodeType getNodeType() {
        cn.keptdata.one2data.header.message.protobuf.common.Node.NodeType result = cn.keptdata.one2data.header.message.protobuf.common.Node.NodeType.valueOf(nodeType_);
        return result == null ? cn.keptdata.one2data.header.message.protobuf.common.Node.NodeType.UNRECOGNIZED : result;
      }
      /**
       * <pre>
       *组件节点类型
       * </pre>
       *
       * <code>optional .one2data.rbtmqmsgcli.common.NodeType node_type = 1;</code>
       */
      public Builder setNodeType(cn.keptdata.one2data.header.message.protobuf.common.Node.NodeType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        nodeType_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *组件节点类型
       * </pre>
       *
       * <code>optional .one2data.rbtmqmsgcli.common.NodeType node_type = 1;</code>
       */
      public Builder clearNodeType() {
        
        nodeType_ = 0;
        onChanged();
        return this;
      }

      private Object uuidKey_ = "";
      /**
       * <pre>
       *节点内部唯一ID
       * </pre>
       *
       * <code>optional string uuid_key = 2;</code>
       */
      public String getUuidKey() {
        Object ref = uuidKey_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          uuidKey_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <pre>
       *节点内部唯一ID
       * </pre>
       *
       * <code>optional string uuid_key = 2;</code>
       */
      public com.google.protobuf.ByteString
          getUuidKeyBytes() {
        Object ref = uuidKey_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          uuidKey_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *节点内部唯一ID
       * </pre>
       *
       * <code>optional string uuid_key = 2;</code>
       */
      public Builder setUuidKey(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        uuidKey_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *节点内部唯一ID
       * </pre>
       *
       * <code>optional string uuid_key = 2;</code>
       */
      public Builder clearUuidKey() {
        
        uuidKey_ = getDefaultInstance().getUuidKey();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *节点内部唯一ID
       * </pre>
       *
       * <code>optional string uuid_key = 2;</code>
       */
      public Builder setUuidKeyBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        uuidKey_ = value;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:one2data.rbtmqmsgcli.auth.ApplyNodeLicense)
    }

    // @@protoc_insertion_point(class_scope:one2data.rbtmqmsgcli.auth.ApplyNodeLicense)
    private static final cn.keptdata.one2data.header.message.protobuf.auth.Auth.ApplyNodeLicense DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new cn.keptdata.one2data.header.message.protobuf.auth.Auth.ApplyNodeLicense();
    }

    public static cn.keptdata.one2data.header.message.protobuf.auth.Auth.ApplyNodeLicense getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ApplyNodeLicense>
        PARSER = new com.google.protobuf.AbstractParser<ApplyNodeLicense>() {
      public ApplyNodeLicense parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new ApplyNodeLicense(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<ApplyNodeLicense> parser() {
      return PARSER;
    }

    @Override
    public com.google.protobuf.Parser<ApplyNodeLicense> getParserForType() {
      return PARSER;
    }

    public cn.keptdata.one2data.header.message.protobuf.auth.Auth.ApplyNodeLicense getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ApplyNodeLicenseAckOrBuilder extends
      // @@protoc_insertion_point(interface_extends:one2data.rbtmqmsgcli.auth.ApplyNodeLicenseAck)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     *授权结果
     * </pre>
     *
     * <code>optional .one2data.rbtmqmsgcli.common.BaseAck base_ack = 1;</code>
     */
    boolean hasBaseAck();
    /**
     * <pre>
     *授权结果
     * </pre>
     *
     * <code>optional .one2data.rbtmqmsgcli.common.BaseAck base_ack = 1;</code>
     */
    cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck getBaseAck();
    /**
     * <pre>
     *授权结果
     * </pre>
     *
     * <code>optional .one2data.rbtmqmsgcli.common.BaseAck base_ack = 1;</code>
     */
    cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAckOrBuilder getBaseAckOrBuilder();

    /**
     * <pre>
     *组件节点类型
     * </pre>
     *
     * <code>optional .one2data.rbtmqmsgcli.common.NodeType node_type = 2;</code>
     */
    int getNodeTypeValue();
    /**
     * <pre>
     *组件节点类型
     * </pre>
     *
     * <code>optional .one2data.rbtmqmsgcli.common.NodeType node_type = 2;</code>
     */
    cn.keptdata.one2data.header.message.protobuf.common.Node.NodeType getNodeType();

    /**
     * <pre>
     *节点内部唯一ID
     * </pre>
     *
     * <code>optional string uuid_key = 3;</code>
     */
    String getUuidKey();
    /**
     * <pre>
     *节点内部唯一ID
     * </pre>
     *
     * <code>optional string uuid_key = 3;</code>
     */
    com.google.protobuf.ByteString
        getUuidKeyBytes();

    /**
     * <pre>
     *授权摘要内容
     * </pre>
     *
     * <code>optional string auth_digest = 4;</code>
     */
    String getAuthDigest();
    /**
     * <pre>
     *授权摘要内容
     * </pre>
     *
     * <code>optional string auth_digest = 4;</code>
     */
    com.google.protobuf.ByteString
        getAuthDigestBytes();
  }
  /**
   * <pre>
   *节点申请授权响应
   * </pre>
   *
   * Protobuf type {@code one2data.rbtmqmsgcli.auth.ApplyNodeLicenseAck}
   */
  public  static final class ApplyNodeLicenseAck extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:one2data.rbtmqmsgcli.auth.ApplyNodeLicenseAck)
      ApplyNodeLicenseAckOrBuilder {
    // Use ApplyNodeLicenseAck.newBuilder() to construct.
    private ApplyNodeLicenseAck(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ApplyNodeLicenseAck() {
      nodeType_ = 0;
      uuidKey_ = "";
      authDigest_ = "";
    }

    @Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private ApplyNodeLicenseAck(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck.Builder subBuilder = null;
              if (baseAck_ != null) {
                subBuilder = baseAck_.toBuilder();
              }
              baseAck_ = input.readMessage(cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(baseAck_);
                baseAck_ = subBuilder.buildPartial();
              }

              break;
            }
            case 16: {
              int rawValue = input.readEnum();

              nodeType_ = rawValue;
              break;
            }
            case 26: {
              String s = input.readStringRequireUtf8();

              uuidKey_ = s;
              break;
            }
            case 34: {
              String s = input.readStringRequireUtf8();

              authDigest_ = s;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return cn.keptdata.one2data.header.message.protobuf.auth.Auth.internal_static_one2data_rbtmqmsgcli_auth_ApplyNodeLicenseAck_descriptor;
    }

    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return cn.keptdata.one2data.header.message.protobuf.auth.Auth.internal_static_one2data_rbtmqmsgcli_auth_ApplyNodeLicenseAck_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              cn.keptdata.one2data.header.message.protobuf.auth.Auth.ApplyNodeLicenseAck.class, cn.keptdata.one2data.header.message.protobuf.auth.Auth.ApplyNodeLicenseAck.Builder.class);
    }

    public static final int BASE_ACK_FIELD_NUMBER = 1;
    private cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck baseAck_;
    /**
     * <pre>
     *授权结果
     * </pre>
     *
     * <code>optional .one2data.rbtmqmsgcli.common.BaseAck base_ack = 1;</code>
     */
    public boolean hasBaseAck() {
      return baseAck_ != null;
    }
    /**
     * <pre>
     *授权结果
     * </pre>
     *
     * <code>optional .one2data.rbtmqmsgcli.common.BaseAck base_ack = 1;</code>
     */
    public cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck getBaseAck() {
      return baseAck_ == null ? cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck.getDefaultInstance() : baseAck_;
    }
    /**
     * <pre>
     *授权结果
     * </pre>
     *
     * <code>optional .one2data.rbtmqmsgcli.common.BaseAck base_ack = 1;</code>
     */
    public cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAckOrBuilder getBaseAckOrBuilder() {
      return getBaseAck();
    }

    public static final int NODE_TYPE_FIELD_NUMBER = 2;
    private int nodeType_;
    /**
     * <pre>
     *组件节点类型
     * </pre>
     *
     * <code>optional .one2data.rbtmqmsgcli.common.NodeType node_type = 2;</code>
     */
    public int getNodeTypeValue() {
      return nodeType_;
    }
    /**
     * <pre>
     *组件节点类型
     * </pre>
     *
     * <code>optional .one2data.rbtmqmsgcli.common.NodeType node_type = 2;</code>
     */
    public cn.keptdata.one2data.header.message.protobuf.common.Node.NodeType getNodeType() {
      cn.keptdata.one2data.header.message.protobuf.common.Node.NodeType result = cn.keptdata.one2data.header.message.protobuf.common.Node.NodeType.valueOf(nodeType_);
      return result == null ? cn.keptdata.one2data.header.message.protobuf.common.Node.NodeType.UNRECOGNIZED : result;
    }

    public static final int UUID_KEY_FIELD_NUMBER = 3;
    private volatile Object uuidKey_;
    /**
     * <pre>
     *节点内部唯一ID
     * </pre>
     *
     * <code>optional string uuid_key = 3;</code>
     */
    public String getUuidKey() {
      Object ref = uuidKey_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        uuidKey_ = s;
        return s;
      }
    }
    /**
     * <pre>
     *节点内部唯一ID
     * </pre>
     *
     * <code>optional string uuid_key = 3;</code>
     */
    public com.google.protobuf.ByteString
        getUuidKeyBytes() {
      Object ref = uuidKey_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        uuidKey_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int AUTH_DIGEST_FIELD_NUMBER = 4;
    private volatile Object authDigest_;
    /**
     * <pre>
     *授权摘要内容
     * </pre>
     *
     * <code>optional string auth_digest = 4;</code>
     */
    public String getAuthDigest() {
      Object ref = authDigest_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        authDigest_ = s;
        return s;
      }
    }
    /**
     * <pre>
     *授权摘要内容
     * </pre>
     *
     * <code>optional string auth_digest = 4;</code>
     */
    public com.google.protobuf.ByteString
        getAuthDigestBytes() {
      Object ref = authDigest_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        authDigest_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (baseAck_ != null) {
        output.writeMessage(1, getBaseAck());
      }
      if (nodeType_ != cn.keptdata.one2data.header.message.protobuf.common.Node.NodeType.NT_CLIENT.getNumber()) {
        output.writeEnum(2, nodeType_);
      }
      if (!getUuidKeyBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 3, uuidKey_);
      }
      if (!getAuthDigestBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 4, authDigest_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (baseAck_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getBaseAck());
      }
      if (nodeType_ != cn.keptdata.one2data.header.message.protobuf.common.Node.NodeType.NT_CLIENT.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(2, nodeType_);
      }
      if (!getUuidKeyBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, uuidKey_);
      }
      if (!getAuthDigestBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(4, authDigest_);
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @Override
    public boolean equals(final Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof cn.keptdata.one2data.header.message.protobuf.auth.Auth.ApplyNodeLicenseAck)) {
        return super.equals(obj);
      }
      cn.keptdata.one2data.header.message.protobuf.auth.Auth.ApplyNodeLicenseAck other = (cn.keptdata.one2data.header.message.protobuf.auth.Auth.ApplyNodeLicenseAck) obj;

      boolean result = true;
      result = result && (hasBaseAck() == other.hasBaseAck());
      if (hasBaseAck()) {
        result = result && getBaseAck()
            .equals(other.getBaseAck());
      }
      result = result && nodeType_ == other.nodeType_;
      result = result && getUuidKey()
          .equals(other.getUuidKey());
      result = result && getAuthDigest()
          .equals(other.getAuthDigest());
      return result;
    }

    @Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptorForType().hashCode();
      if (hasBaseAck()) {
        hash = (37 * hash) + BASE_ACK_FIELD_NUMBER;
        hash = (53 * hash) + getBaseAck().hashCode();
      }
      hash = (37 * hash) + NODE_TYPE_FIELD_NUMBER;
      hash = (53 * hash) + nodeType_;
      hash = (37 * hash) + UUID_KEY_FIELD_NUMBER;
      hash = (53 * hash) + getUuidKey().hashCode();
      hash = (37 * hash) + AUTH_DIGEST_FIELD_NUMBER;
      hash = (53 * hash) + getAuthDigest().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static cn.keptdata.one2data.header.message.protobuf.auth.Auth.ApplyNodeLicenseAck parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static cn.keptdata.one2data.header.message.protobuf.auth.Auth.ApplyNodeLicenseAck parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static cn.keptdata.one2data.header.message.protobuf.auth.Auth.ApplyNodeLicenseAck parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static cn.keptdata.one2data.header.message.protobuf.auth.Auth.ApplyNodeLicenseAck parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static cn.keptdata.one2data.header.message.protobuf.auth.Auth.ApplyNodeLicenseAck parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static cn.keptdata.one2data.header.message.protobuf.auth.Auth.ApplyNodeLicenseAck parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static cn.keptdata.one2data.header.message.protobuf.auth.Auth.ApplyNodeLicenseAck parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static cn.keptdata.one2data.header.message.protobuf.auth.Auth.ApplyNodeLicenseAck parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static cn.keptdata.one2data.header.message.protobuf.auth.Auth.ApplyNodeLicenseAck parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static cn.keptdata.one2data.header.message.protobuf.auth.Auth.ApplyNodeLicenseAck parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(cn.keptdata.one2data.header.message.protobuf.auth.Auth.ApplyNodeLicenseAck prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     *节点申请授权响应
     * </pre>
     *
     * Protobuf type {@code one2data.rbtmqmsgcli.auth.ApplyNodeLicenseAck}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:one2data.rbtmqmsgcli.auth.ApplyNodeLicenseAck)
        cn.keptdata.one2data.header.message.protobuf.auth.Auth.ApplyNodeLicenseAckOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return cn.keptdata.one2data.header.message.protobuf.auth.Auth.internal_static_one2data_rbtmqmsgcli_auth_ApplyNodeLicenseAck_descriptor;
      }

      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return cn.keptdata.one2data.header.message.protobuf.auth.Auth.internal_static_one2data_rbtmqmsgcli_auth_ApplyNodeLicenseAck_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                cn.keptdata.one2data.header.message.protobuf.auth.Auth.ApplyNodeLicenseAck.class, cn.keptdata.one2data.header.message.protobuf.auth.Auth.ApplyNodeLicenseAck.Builder.class);
      }

      // Construct using cn.keptdata.one2data.header.message.protobuf.auth.Auth.ApplyNodeLicenseAck.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        if (baseAckBuilder_ == null) {
          baseAck_ = null;
        } else {
          baseAck_ = null;
          baseAckBuilder_ = null;
        }
        nodeType_ = 0;

        uuidKey_ = "";

        authDigest_ = "";

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return cn.keptdata.one2data.header.message.protobuf.auth.Auth.internal_static_one2data_rbtmqmsgcli_auth_ApplyNodeLicenseAck_descriptor;
      }

      public cn.keptdata.one2data.header.message.protobuf.auth.Auth.ApplyNodeLicenseAck getDefaultInstanceForType() {
        return cn.keptdata.one2data.header.message.protobuf.auth.Auth.ApplyNodeLicenseAck.getDefaultInstance();
      }

      public cn.keptdata.one2data.header.message.protobuf.auth.Auth.ApplyNodeLicenseAck build() {
        cn.keptdata.one2data.header.message.protobuf.auth.Auth.ApplyNodeLicenseAck result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public cn.keptdata.one2data.header.message.protobuf.auth.Auth.ApplyNodeLicenseAck buildPartial() {
        cn.keptdata.one2data.header.message.protobuf.auth.Auth.ApplyNodeLicenseAck result = new cn.keptdata.one2data.header.message.protobuf.auth.Auth.ApplyNodeLicenseAck(this);
        if (baseAckBuilder_ == null) {
          result.baseAck_ = baseAck_;
        } else {
          result.baseAck_ = baseAckBuilder_.build();
        }
        result.nodeType_ = nodeType_;
        result.uuidKey_ = uuidKey_;
        result.authDigest_ = authDigest_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof cn.keptdata.one2data.header.message.protobuf.auth.Auth.ApplyNodeLicenseAck) {
          return mergeFrom((cn.keptdata.one2data.header.message.protobuf.auth.Auth.ApplyNodeLicenseAck)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(cn.keptdata.one2data.header.message.protobuf.auth.Auth.ApplyNodeLicenseAck other) {
        if (other == cn.keptdata.one2data.header.message.protobuf.auth.Auth.ApplyNodeLicenseAck.getDefaultInstance()) return this;
        if (other.hasBaseAck()) {
          mergeBaseAck(other.getBaseAck());
        }
        if (other.nodeType_ != 0) {
          setNodeTypeValue(other.getNodeTypeValue());
        }
        if (!other.getUuidKey().isEmpty()) {
          uuidKey_ = other.uuidKey_;
          onChanged();
        }
        if (!other.getAuthDigest().isEmpty()) {
          authDigest_ = other.authDigest_;
          onChanged();
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        cn.keptdata.one2data.header.message.protobuf.auth.Auth.ApplyNodeLicenseAck parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (cn.keptdata.one2data.header.message.protobuf.auth.Auth.ApplyNodeLicenseAck) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck baseAck_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck, cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck.Builder, cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAckOrBuilder> baseAckBuilder_;
      /**
       * <pre>
       *授权结果
       * </pre>
       *
       * <code>optional .one2data.rbtmqmsgcli.common.BaseAck base_ack = 1;</code>
       */
      public boolean hasBaseAck() {
        return baseAckBuilder_ != null || baseAck_ != null;
      }
      /**
       * <pre>
       *授权结果
       * </pre>
       *
       * <code>optional .one2data.rbtmqmsgcli.common.BaseAck base_ack = 1;</code>
       */
      public cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck getBaseAck() {
        if (baseAckBuilder_ == null) {
          return baseAck_ == null ? cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck.getDefaultInstance() : baseAck_;
        } else {
          return baseAckBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       *授权结果
       * </pre>
       *
       * <code>optional .one2data.rbtmqmsgcli.common.BaseAck base_ack = 1;</code>
       */
      public Builder setBaseAck(cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck value) {
        if (baseAckBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          baseAck_ = value;
          onChanged();
        } else {
          baseAckBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       *授权结果
       * </pre>
       *
       * <code>optional .one2data.rbtmqmsgcli.common.BaseAck base_ack = 1;</code>
       */
      public Builder setBaseAck(
          cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck.Builder builderForValue) {
        if (baseAckBuilder_ == null) {
          baseAck_ = builderForValue.build();
          onChanged();
        } else {
          baseAckBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       *授权结果
       * </pre>
       *
       * <code>optional .one2data.rbtmqmsgcli.common.BaseAck base_ack = 1;</code>
       */
      public Builder mergeBaseAck(cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck value) {
        if (baseAckBuilder_ == null) {
          if (baseAck_ != null) {
            baseAck_ =
              cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck.newBuilder(baseAck_).mergeFrom(value).buildPartial();
          } else {
            baseAck_ = value;
          }
          onChanged();
        } else {
          baseAckBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       *授权结果
       * </pre>
       *
       * <code>optional .one2data.rbtmqmsgcli.common.BaseAck base_ack = 1;</code>
       */
      public Builder clearBaseAck() {
        if (baseAckBuilder_ == null) {
          baseAck_ = null;
          onChanged();
        } else {
          baseAck_ = null;
          baseAckBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       *授权结果
       * </pre>
       *
       * <code>optional .one2data.rbtmqmsgcli.common.BaseAck base_ack = 1;</code>
       */
      public cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck.Builder getBaseAckBuilder() {
        
        onChanged();
        return getBaseAckFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       *授权结果
       * </pre>
       *
       * <code>optional .one2data.rbtmqmsgcli.common.BaseAck base_ack = 1;</code>
       */
      public cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAckOrBuilder getBaseAckOrBuilder() {
        if (baseAckBuilder_ != null) {
          return baseAckBuilder_.getMessageOrBuilder();
        } else {
          return baseAck_ == null ?
              cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck.getDefaultInstance() : baseAck_;
        }
      }
      /**
       * <pre>
       *授权结果
       * </pre>
       *
       * <code>optional .one2data.rbtmqmsgcli.common.BaseAck base_ack = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck, cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck.Builder, cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAckOrBuilder> 
          getBaseAckFieldBuilder() {
        if (baseAckBuilder_ == null) {
          baseAckBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck, cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck.Builder, cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAckOrBuilder>(
                  getBaseAck(),
                  getParentForChildren(),
                  isClean());
          baseAck_ = null;
        }
        return baseAckBuilder_;
      }

      private int nodeType_ = 0;
      /**
       * <pre>
       *组件节点类型
       * </pre>
       *
       * <code>optional .one2data.rbtmqmsgcli.common.NodeType node_type = 2;</code>
       */
      public int getNodeTypeValue() {
        return nodeType_;
      }
      /**
       * <pre>
       *组件节点类型
       * </pre>
       *
       * <code>optional .one2data.rbtmqmsgcli.common.NodeType node_type = 2;</code>
       */
      public Builder setNodeTypeValue(int value) {
        nodeType_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *组件节点类型
       * </pre>
       *
       * <code>optional .one2data.rbtmqmsgcli.common.NodeType node_type = 2;</code>
       */
      public cn.keptdata.one2data.header.message.protobuf.common.Node.NodeType getNodeType() {
        cn.keptdata.one2data.header.message.protobuf.common.Node.NodeType result = cn.keptdata.one2data.header.message.protobuf.common.Node.NodeType.valueOf(nodeType_);
        return result == null ? cn.keptdata.one2data.header.message.protobuf.common.Node.NodeType.UNRECOGNIZED : result;
      }
      /**
       * <pre>
       *组件节点类型
       * </pre>
       *
       * <code>optional .one2data.rbtmqmsgcli.common.NodeType node_type = 2;</code>
       */
      public Builder setNodeType(cn.keptdata.one2data.header.message.protobuf.common.Node.NodeType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        nodeType_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *组件节点类型
       * </pre>
       *
       * <code>optional .one2data.rbtmqmsgcli.common.NodeType node_type = 2;</code>
       */
      public Builder clearNodeType() {
        
        nodeType_ = 0;
        onChanged();
        return this;
      }

      private Object uuidKey_ = "";
      /**
       * <pre>
       *节点内部唯一ID
       * </pre>
       *
       * <code>optional string uuid_key = 3;</code>
       */
      public String getUuidKey() {
        Object ref = uuidKey_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          uuidKey_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <pre>
       *节点内部唯一ID
       * </pre>
       *
       * <code>optional string uuid_key = 3;</code>
       */
      public com.google.protobuf.ByteString
          getUuidKeyBytes() {
        Object ref = uuidKey_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          uuidKey_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *节点内部唯一ID
       * </pre>
       *
       * <code>optional string uuid_key = 3;</code>
       */
      public Builder setUuidKey(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        uuidKey_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *节点内部唯一ID
       * </pre>
       *
       * <code>optional string uuid_key = 3;</code>
       */
      public Builder clearUuidKey() {
        
        uuidKey_ = getDefaultInstance().getUuidKey();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *节点内部唯一ID
       * </pre>
       *
       * <code>optional string uuid_key = 3;</code>
       */
      public Builder setUuidKeyBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        uuidKey_ = value;
        onChanged();
        return this;
      }

      private Object authDigest_ = "";
      /**
       * <pre>
       *授权摘要内容
       * </pre>
       *
       * <code>optional string auth_digest = 4;</code>
       */
      public String getAuthDigest() {
        Object ref = authDigest_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          authDigest_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <pre>
       *授权摘要内容
       * </pre>
       *
       * <code>optional string auth_digest = 4;</code>
       */
      public com.google.protobuf.ByteString
          getAuthDigestBytes() {
        Object ref = authDigest_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          authDigest_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *授权摘要内容
       * </pre>
       *
       * <code>optional string auth_digest = 4;</code>
       */
      public Builder setAuthDigest(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        authDigest_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *授权摘要内容
       * </pre>
       *
       * <code>optional string auth_digest = 4;</code>
       */
      public Builder clearAuthDigest() {
        
        authDigest_ = getDefaultInstance().getAuthDigest();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *授权摘要内容
       * </pre>
       *
       * <code>optional string auth_digest = 4;</code>
       */
      public Builder setAuthDigestBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        authDigest_ = value;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:one2data.rbtmqmsgcli.auth.ApplyNodeLicenseAck)
    }

    // @@protoc_insertion_point(class_scope:one2data.rbtmqmsgcli.auth.ApplyNodeLicenseAck)
    private static final cn.keptdata.one2data.header.message.protobuf.auth.Auth.ApplyNodeLicenseAck DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new cn.keptdata.one2data.header.message.protobuf.auth.Auth.ApplyNodeLicenseAck();
    }

    public static cn.keptdata.one2data.header.message.protobuf.auth.Auth.ApplyNodeLicenseAck getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ApplyNodeLicenseAck>
        PARSER = new com.google.protobuf.AbstractParser<ApplyNodeLicenseAck>() {
      public ApplyNodeLicenseAck parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new ApplyNodeLicenseAck(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<ApplyNodeLicenseAck> parser() {
      return PARSER;
    }

    @Override
    public com.google.protobuf.Parser<ApplyNodeLicenseAck> getParserForType() {
      return PARSER;
    }

    public cn.keptdata.one2data.header.message.protobuf.auth.Auth.ApplyNodeLicenseAck getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ApplyFunctionLicenseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:one2data.rbtmqmsgcli.auth.ApplyFunctionLicense)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     *组件节点类型
     * </pre>
     *
     * <code>optional .one2data.rbtmqmsgcli.auth.FunctionType function_type = 1;</code>
     */
    int getFunctionTypeValue();
    /**
     * <pre>
     *组件节点类型
     * </pre>
     *
     * <code>optional .one2data.rbtmqmsgcli.auth.FunctionType function_type = 1;</code>
     */
    cn.keptdata.one2data.header.message.protobuf.auth.Auth.FunctionType getFunctionType();

    /**
     * <pre>
     *业务资源唯一ID
     * </pre>
     *
     * <code>optional string business_resource_uuid = 2;</code>
     */
    String getBusinessResourceUuid();
    /**
     * <pre>
     *业务资源唯一ID
     * </pre>
     *
     * <code>optional string business_resource_uuid = 2;</code>
     */
    com.google.protobuf.ByteString
        getBusinessResourceUuidBytes();
  }
  /**
   * <pre>
   * 功能授权
   * </pre>
   *
   * Protobuf type {@code one2data.rbtmqmsgcli.auth.ApplyFunctionLicense}
   */
  public  static final class ApplyFunctionLicense extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:one2data.rbtmqmsgcli.auth.ApplyFunctionLicense)
      ApplyFunctionLicenseOrBuilder {
    // Use ApplyFunctionLicense.newBuilder() to construct.
    private ApplyFunctionLicense(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ApplyFunctionLicense() {
      functionType_ = 0;
      businessResourceUuid_ = "";
    }

    @Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private ApplyFunctionLicense(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();

              functionType_ = rawValue;
              break;
            }
            case 18: {
              String s = input.readStringRequireUtf8();

              businessResourceUuid_ = s;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return cn.keptdata.one2data.header.message.protobuf.auth.Auth.internal_static_one2data_rbtmqmsgcli_auth_ApplyFunctionLicense_descriptor;
    }

    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return cn.keptdata.one2data.header.message.protobuf.auth.Auth.internal_static_one2data_rbtmqmsgcli_auth_ApplyFunctionLicense_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              cn.keptdata.one2data.header.message.protobuf.auth.Auth.ApplyFunctionLicense.class, cn.keptdata.one2data.header.message.protobuf.auth.Auth.ApplyFunctionLicense.Builder.class);
    }

    public static final int FUNCTION_TYPE_FIELD_NUMBER = 1;
    private int functionType_;
    /**
     * <pre>
     *组件节点类型
     * </pre>
     *
     * <code>optional .one2data.rbtmqmsgcli.auth.FunctionType function_type = 1;</code>
     */
    public int getFunctionTypeValue() {
      return functionType_;
    }
    /**
     * <pre>
     *组件节点类型
     * </pre>
     *
     * <code>optional .one2data.rbtmqmsgcli.auth.FunctionType function_type = 1;</code>
     */
    public cn.keptdata.one2data.header.message.protobuf.auth.Auth.FunctionType getFunctionType() {
      cn.keptdata.one2data.header.message.protobuf.auth.Auth.FunctionType result = cn.keptdata.one2data.header.message.protobuf.auth.Auth.FunctionType.valueOf(functionType_);
      return result == null ? cn.keptdata.one2data.header.message.protobuf.auth.Auth.FunctionType.UNRECOGNIZED : result;
    }

    public static final int BUSINESS_RESOURCE_UUID_FIELD_NUMBER = 2;
    private volatile Object businessResourceUuid_;
    /**
     * <pre>
     *业务资源唯一ID
     * </pre>
     *
     * <code>optional string business_resource_uuid = 2;</code>
     */
    public String getBusinessResourceUuid() {
      Object ref = businessResourceUuid_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        businessResourceUuid_ = s;
        return s;
      }
    }
    /**
     * <pre>
     *业务资源唯一ID
     * </pre>
     *
     * <code>optional string business_resource_uuid = 2;</code>
     */
    public com.google.protobuf.ByteString
        getBusinessResourceUuidBytes() {
      Object ref = businessResourceUuid_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        businessResourceUuid_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (functionType_ != cn.keptdata.one2data.header.message.protobuf.auth.Auth.FunctionType.FT_DEFAULT.getNumber()) {
        output.writeEnum(1, functionType_);
      }
      if (!getBusinessResourceUuidBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, businessResourceUuid_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (functionType_ != cn.keptdata.one2data.header.message.protobuf.auth.Auth.FunctionType.FT_DEFAULT.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, functionType_);
      }
      if (!getBusinessResourceUuidBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, businessResourceUuid_);
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @Override
    public boolean equals(final Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof cn.keptdata.one2data.header.message.protobuf.auth.Auth.ApplyFunctionLicense)) {
        return super.equals(obj);
      }
      cn.keptdata.one2data.header.message.protobuf.auth.Auth.ApplyFunctionLicense other = (cn.keptdata.one2data.header.message.protobuf.auth.Auth.ApplyFunctionLicense) obj;

      boolean result = true;
      result = result && functionType_ == other.functionType_;
      result = result && getBusinessResourceUuid()
          .equals(other.getBusinessResourceUuid());
      return result;
    }

    @Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptorForType().hashCode();
      hash = (37 * hash) + FUNCTION_TYPE_FIELD_NUMBER;
      hash = (53 * hash) + functionType_;
      hash = (37 * hash) + BUSINESS_RESOURCE_UUID_FIELD_NUMBER;
      hash = (53 * hash) + getBusinessResourceUuid().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static cn.keptdata.one2data.header.message.protobuf.auth.Auth.ApplyFunctionLicense parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static cn.keptdata.one2data.header.message.protobuf.auth.Auth.ApplyFunctionLicense parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static cn.keptdata.one2data.header.message.protobuf.auth.Auth.ApplyFunctionLicense parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static cn.keptdata.one2data.header.message.protobuf.auth.Auth.ApplyFunctionLicense parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static cn.keptdata.one2data.header.message.protobuf.auth.Auth.ApplyFunctionLicense parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static cn.keptdata.one2data.header.message.protobuf.auth.Auth.ApplyFunctionLicense parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static cn.keptdata.one2data.header.message.protobuf.auth.Auth.ApplyFunctionLicense parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static cn.keptdata.one2data.header.message.protobuf.auth.Auth.ApplyFunctionLicense parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static cn.keptdata.one2data.header.message.protobuf.auth.Auth.ApplyFunctionLicense parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static cn.keptdata.one2data.header.message.protobuf.auth.Auth.ApplyFunctionLicense parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(cn.keptdata.one2data.header.message.protobuf.auth.Auth.ApplyFunctionLicense prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * 功能授权
     * </pre>
     *
     * Protobuf type {@code one2data.rbtmqmsgcli.auth.ApplyFunctionLicense}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:one2data.rbtmqmsgcli.auth.ApplyFunctionLicense)
        cn.keptdata.one2data.header.message.protobuf.auth.Auth.ApplyFunctionLicenseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return cn.keptdata.one2data.header.message.protobuf.auth.Auth.internal_static_one2data_rbtmqmsgcli_auth_ApplyFunctionLicense_descriptor;
      }

      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return cn.keptdata.one2data.header.message.protobuf.auth.Auth.internal_static_one2data_rbtmqmsgcli_auth_ApplyFunctionLicense_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                cn.keptdata.one2data.header.message.protobuf.auth.Auth.ApplyFunctionLicense.class, cn.keptdata.one2data.header.message.protobuf.auth.Auth.ApplyFunctionLicense.Builder.class);
      }

      // Construct using cn.keptdata.one2data.header.message.protobuf.auth.Auth.ApplyFunctionLicense.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        functionType_ = 0;

        businessResourceUuid_ = "";

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return cn.keptdata.one2data.header.message.protobuf.auth.Auth.internal_static_one2data_rbtmqmsgcli_auth_ApplyFunctionLicense_descriptor;
      }

      public cn.keptdata.one2data.header.message.protobuf.auth.Auth.ApplyFunctionLicense getDefaultInstanceForType() {
        return cn.keptdata.one2data.header.message.protobuf.auth.Auth.ApplyFunctionLicense.getDefaultInstance();
      }

      public cn.keptdata.one2data.header.message.protobuf.auth.Auth.ApplyFunctionLicense build() {
        cn.keptdata.one2data.header.message.protobuf.auth.Auth.ApplyFunctionLicense result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public cn.keptdata.one2data.header.message.protobuf.auth.Auth.ApplyFunctionLicense buildPartial() {
        cn.keptdata.one2data.header.message.protobuf.auth.Auth.ApplyFunctionLicense result = new cn.keptdata.one2data.header.message.protobuf.auth.Auth.ApplyFunctionLicense(this);
        result.functionType_ = functionType_;
        result.businessResourceUuid_ = businessResourceUuid_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof cn.keptdata.one2data.header.message.protobuf.auth.Auth.ApplyFunctionLicense) {
          return mergeFrom((cn.keptdata.one2data.header.message.protobuf.auth.Auth.ApplyFunctionLicense)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(cn.keptdata.one2data.header.message.protobuf.auth.Auth.ApplyFunctionLicense other) {
        if (other == cn.keptdata.one2data.header.message.protobuf.auth.Auth.ApplyFunctionLicense.getDefaultInstance()) return this;
        if (other.functionType_ != 0) {
          setFunctionTypeValue(other.getFunctionTypeValue());
        }
        if (!other.getBusinessResourceUuid().isEmpty()) {
          businessResourceUuid_ = other.businessResourceUuid_;
          onChanged();
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        cn.keptdata.one2data.header.message.protobuf.auth.Auth.ApplyFunctionLicense parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (cn.keptdata.one2data.header.message.protobuf.auth.Auth.ApplyFunctionLicense) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private int functionType_ = 0;
      /**
       * <pre>
       *组件节点类型
       * </pre>
       *
       * <code>optional .one2data.rbtmqmsgcli.auth.FunctionType function_type = 1;</code>
       */
      public int getFunctionTypeValue() {
        return functionType_;
      }
      /**
       * <pre>
       *组件节点类型
       * </pre>
       *
       * <code>optional .one2data.rbtmqmsgcli.auth.FunctionType function_type = 1;</code>
       */
      public Builder setFunctionTypeValue(int value) {
        functionType_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *组件节点类型
       * </pre>
       *
       * <code>optional .one2data.rbtmqmsgcli.auth.FunctionType function_type = 1;</code>
       */
      public cn.keptdata.one2data.header.message.protobuf.auth.Auth.FunctionType getFunctionType() {
        cn.keptdata.one2data.header.message.protobuf.auth.Auth.FunctionType result = cn.keptdata.one2data.header.message.protobuf.auth.Auth.FunctionType.valueOf(functionType_);
        return result == null ? cn.keptdata.one2data.header.message.protobuf.auth.Auth.FunctionType.UNRECOGNIZED : result;
      }
      /**
       * <pre>
       *组件节点类型
       * </pre>
       *
       * <code>optional .one2data.rbtmqmsgcli.auth.FunctionType function_type = 1;</code>
       */
      public Builder setFunctionType(cn.keptdata.one2data.header.message.protobuf.auth.Auth.FunctionType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        functionType_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *组件节点类型
       * </pre>
       *
       * <code>optional .one2data.rbtmqmsgcli.auth.FunctionType function_type = 1;</code>
       */
      public Builder clearFunctionType() {
        
        functionType_ = 0;
        onChanged();
        return this;
      }

      private Object businessResourceUuid_ = "";
      /**
       * <pre>
       *业务资源唯一ID
       * </pre>
       *
       * <code>optional string business_resource_uuid = 2;</code>
       */
      public String getBusinessResourceUuid() {
        Object ref = businessResourceUuid_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          businessResourceUuid_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <pre>
       *业务资源唯一ID
       * </pre>
       *
       * <code>optional string business_resource_uuid = 2;</code>
       */
      public com.google.protobuf.ByteString
          getBusinessResourceUuidBytes() {
        Object ref = businessResourceUuid_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          businessResourceUuid_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *业务资源唯一ID
       * </pre>
       *
       * <code>optional string business_resource_uuid = 2;</code>
       */
      public Builder setBusinessResourceUuid(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        businessResourceUuid_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *业务资源唯一ID
       * </pre>
       *
       * <code>optional string business_resource_uuid = 2;</code>
       */
      public Builder clearBusinessResourceUuid() {
        
        businessResourceUuid_ = getDefaultInstance().getBusinessResourceUuid();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *业务资源唯一ID
       * </pre>
       *
       * <code>optional string business_resource_uuid = 2;</code>
       */
      public Builder setBusinessResourceUuidBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        businessResourceUuid_ = value;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:one2data.rbtmqmsgcli.auth.ApplyFunctionLicense)
    }

    // @@protoc_insertion_point(class_scope:one2data.rbtmqmsgcli.auth.ApplyFunctionLicense)
    private static final cn.keptdata.one2data.header.message.protobuf.auth.Auth.ApplyFunctionLicense DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new cn.keptdata.one2data.header.message.protobuf.auth.Auth.ApplyFunctionLicense();
    }

    public static cn.keptdata.one2data.header.message.protobuf.auth.Auth.ApplyFunctionLicense getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ApplyFunctionLicense>
        PARSER = new com.google.protobuf.AbstractParser<ApplyFunctionLicense>() {
      public ApplyFunctionLicense parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new ApplyFunctionLicense(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<ApplyFunctionLicense> parser() {
      return PARSER;
    }

    @Override
    public com.google.protobuf.Parser<ApplyFunctionLicense> getParserForType() {
      return PARSER;
    }

    public cn.keptdata.one2data.header.message.protobuf.auth.Auth.ApplyFunctionLicense getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ApplyFunctionLicenseAckOrBuilder extends
      // @@protoc_insertion_point(interface_extends:one2data.rbtmqmsgcli.auth.ApplyFunctionLicenseAck)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     *授权结果
     * </pre>
     *
     * <code>optional .one2data.rbtmqmsgcli.common.BaseAck base_ack = 1;</code>
     */
    boolean hasBaseAck();
    /**
     * <pre>
     *授权结果
     * </pre>
     *
     * <code>optional .one2data.rbtmqmsgcli.common.BaseAck base_ack = 1;</code>
     */
    cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck getBaseAck();
    /**
     * <pre>
     *授权结果
     * </pre>
     *
     * <code>optional .one2data.rbtmqmsgcli.common.BaseAck base_ack = 1;</code>
     */
    cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAckOrBuilder getBaseAckOrBuilder();

    /**
     * <pre>
     *功能类型
     * </pre>
     *
     * <code>optional .one2data.rbtmqmsgcli.auth.FunctionType function_type = 2;</code>
     */
    int getFunctionTypeValue();
    /**
     * <pre>
     *功能类型
     * </pre>
     *
     * <code>optional .one2data.rbtmqmsgcli.auth.FunctionType function_type = 2;</code>
     */
    cn.keptdata.one2data.header.message.protobuf.auth.Auth.FunctionType getFunctionType();

    /**
     * <pre>
     *业务资源唯一ID
     * </pre>
     *
     * <code>optional string business_resource_uuid = 3;</code>
     */
    String getBusinessResourceUuid();
    /**
     * <pre>
     *业务资源唯一ID
     * </pre>
     *
     * <code>optional string business_resource_uuid = 3;</code>
     */
    com.google.protobuf.ByteString
        getBusinessResourceUuidBytes();
  }
  /**
   * <pre>
   *功能申请授权响应
   * </pre>
   *
   * Protobuf type {@code one2data.rbtmqmsgcli.auth.ApplyFunctionLicenseAck}
   */
  public  static final class ApplyFunctionLicenseAck extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:one2data.rbtmqmsgcli.auth.ApplyFunctionLicenseAck)
      ApplyFunctionLicenseAckOrBuilder {
    // Use ApplyFunctionLicenseAck.newBuilder() to construct.
    private ApplyFunctionLicenseAck(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ApplyFunctionLicenseAck() {
      functionType_ = 0;
      businessResourceUuid_ = "";
    }

    @Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private ApplyFunctionLicenseAck(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck.Builder subBuilder = null;
              if (baseAck_ != null) {
                subBuilder = baseAck_.toBuilder();
              }
              baseAck_ = input.readMessage(cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(baseAck_);
                baseAck_ = subBuilder.buildPartial();
              }

              break;
            }
            case 16: {
              int rawValue = input.readEnum();

              functionType_ = rawValue;
              break;
            }
            case 26: {
              String s = input.readStringRequireUtf8();

              businessResourceUuid_ = s;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return cn.keptdata.one2data.header.message.protobuf.auth.Auth.internal_static_one2data_rbtmqmsgcli_auth_ApplyFunctionLicenseAck_descriptor;
    }

    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return cn.keptdata.one2data.header.message.protobuf.auth.Auth.internal_static_one2data_rbtmqmsgcli_auth_ApplyFunctionLicenseAck_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              cn.keptdata.one2data.header.message.protobuf.auth.Auth.ApplyFunctionLicenseAck.class, cn.keptdata.one2data.header.message.protobuf.auth.Auth.ApplyFunctionLicenseAck.Builder.class);
    }

    public static final int BASE_ACK_FIELD_NUMBER = 1;
    private cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck baseAck_;
    /**
     * <pre>
     *授权结果
     * </pre>
     *
     * <code>optional .one2data.rbtmqmsgcli.common.BaseAck base_ack = 1;</code>
     */
    public boolean hasBaseAck() {
      return baseAck_ != null;
    }
    /**
     * <pre>
     *授权结果
     * </pre>
     *
     * <code>optional .one2data.rbtmqmsgcli.common.BaseAck base_ack = 1;</code>
     */
    public cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck getBaseAck() {
      return baseAck_ == null ? cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck.getDefaultInstance() : baseAck_;
    }
    /**
     * <pre>
     *授权结果
     * </pre>
     *
     * <code>optional .one2data.rbtmqmsgcli.common.BaseAck base_ack = 1;</code>
     */
    public cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAckOrBuilder getBaseAckOrBuilder() {
      return getBaseAck();
    }

    public static final int FUNCTION_TYPE_FIELD_NUMBER = 2;
    private int functionType_;
    /**
     * <pre>
     *功能类型
     * </pre>
     *
     * <code>optional .one2data.rbtmqmsgcli.auth.FunctionType function_type = 2;</code>
     */
    public int getFunctionTypeValue() {
      return functionType_;
    }
    /**
     * <pre>
     *功能类型
     * </pre>
     *
     * <code>optional .one2data.rbtmqmsgcli.auth.FunctionType function_type = 2;</code>
     */
    public cn.keptdata.one2data.header.message.protobuf.auth.Auth.FunctionType getFunctionType() {
      cn.keptdata.one2data.header.message.protobuf.auth.Auth.FunctionType result = cn.keptdata.one2data.header.message.protobuf.auth.Auth.FunctionType.valueOf(functionType_);
      return result == null ? cn.keptdata.one2data.header.message.protobuf.auth.Auth.FunctionType.UNRECOGNIZED : result;
    }

    public static final int BUSINESS_RESOURCE_UUID_FIELD_NUMBER = 3;
    private volatile Object businessResourceUuid_;
    /**
     * <pre>
     *业务资源唯一ID
     * </pre>
     *
     * <code>optional string business_resource_uuid = 3;</code>
     */
    public String getBusinessResourceUuid() {
      Object ref = businessResourceUuid_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        businessResourceUuid_ = s;
        return s;
      }
    }
    /**
     * <pre>
     *业务资源唯一ID
     * </pre>
     *
     * <code>optional string business_resource_uuid = 3;</code>
     */
    public com.google.protobuf.ByteString
        getBusinessResourceUuidBytes() {
      Object ref = businessResourceUuid_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        businessResourceUuid_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (baseAck_ != null) {
        output.writeMessage(1, getBaseAck());
      }
      if (functionType_ != cn.keptdata.one2data.header.message.protobuf.auth.Auth.FunctionType.FT_DEFAULT.getNumber()) {
        output.writeEnum(2, functionType_);
      }
      if (!getBusinessResourceUuidBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 3, businessResourceUuid_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (baseAck_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getBaseAck());
      }
      if (functionType_ != cn.keptdata.one2data.header.message.protobuf.auth.Auth.FunctionType.FT_DEFAULT.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(2, functionType_);
      }
      if (!getBusinessResourceUuidBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, businessResourceUuid_);
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @Override
    public boolean equals(final Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof cn.keptdata.one2data.header.message.protobuf.auth.Auth.ApplyFunctionLicenseAck)) {
        return super.equals(obj);
      }
      cn.keptdata.one2data.header.message.protobuf.auth.Auth.ApplyFunctionLicenseAck other = (cn.keptdata.one2data.header.message.protobuf.auth.Auth.ApplyFunctionLicenseAck) obj;

      boolean result = true;
      result = result && (hasBaseAck() == other.hasBaseAck());
      if (hasBaseAck()) {
        result = result && getBaseAck()
            .equals(other.getBaseAck());
      }
      result = result && functionType_ == other.functionType_;
      result = result && getBusinessResourceUuid()
          .equals(other.getBusinessResourceUuid());
      return result;
    }

    @Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptorForType().hashCode();
      if (hasBaseAck()) {
        hash = (37 * hash) + BASE_ACK_FIELD_NUMBER;
        hash = (53 * hash) + getBaseAck().hashCode();
      }
      hash = (37 * hash) + FUNCTION_TYPE_FIELD_NUMBER;
      hash = (53 * hash) + functionType_;
      hash = (37 * hash) + BUSINESS_RESOURCE_UUID_FIELD_NUMBER;
      hash = (53 * hash) + getBusinessResourceUuid().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static cn.keptdata.one2data.header.message.protobuf.auth.Auth.ApplyFunctionLicenseAck parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static cn.keptdata.one2data.header.message.protobuf.auth.Auth.ApplyFunctionLicenseAck parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static cn.keptdata.one2data.header.message.protobuf.auth.Auth.ApplyFunctionLicenseAck parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static cn.keptdata.one2data.header.message.protobuf.auth.Auth.ApplyFunctionLicenseAck parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static cn.keptdata.one2data.header.message.protobuf.auth.Auth.ApplyFunctionLicenseAck parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static cn.keptdata.one2data.header.message.protobuf.auth.Auth.ApplyFunctionLicenseAck parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static cn.keptdata.one2data.header.message.protobuf.auth.Auth.ApplyFunctionLicenseAck parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static cn.keptdata.one2data.header.message.protobuf.auth.Auth.ApplyFunctionLicenseAck parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static cn.keptdata.one2data.header.message.protobuf.auth.Auth.ApplyFunctionLicenseAck parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static cn.keptdata.one2data.header.message.protobuf.auth.Auth.ApplyFunctionLicenseAck parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(cn.keptdata.one2data.header.message.protobuf.auth.Auth.ApplyFunctionLicenseAck prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     *功能申请授权响应
     * </pre>
     *
     * Protobuf type {@code one2data.rbtmqmsgcli.auth.ApplyFunctionLicenseAck}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:one2data.rbtmqmsgcli.auth.ApplyFunctionLicenseAck)
        cn.keptdata.one2data.header.message.protobuf.auth.Auth.ApplyFunctionLicenseAckOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return cn.keptdata.one2data.header.message.protobuf.auth.Auth.internal_static_one2data_rbtmqmsgcli_auth_ApplyFunctionLicenseAck_descriptor;
      }

      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return cn.keptdata.one2data.header.message.protobuf.auth.Auth.internal_static_one2data_rbtmqmsgcli_auth_ApplyFunctionLicenseAck_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                cn.keptdata.one2data.header.message.protobuf.auth.Auth.ApplyFunctionLicenseAck.class, cn.keptdata.one2data.header.message.protobuf.auth.Auth.ApplyFunctionLicenseAck.Builder.class);
      }

      // Construct using cn.keptdata.one2data.header.message.protobuf.auth.Auth.ApplyFunctionLicenseAck.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        if (baseAckBuilder_ == null) {
          baseAck_ = null;
        } else {
          baseAck_ = null;
          baseAckBuilder_ = null;
        }
        functionType_ = 0;

        businessResourceUuid_ = "";

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return cn.keptdata.one2data.header.message.protobuf.auth.Auth.internal_static_one2data_rbtmqmsgcli_auth_ApplyFunctionLicenseAck_descriptor;
      }

      public cn.keptdata.one2data.header.message.protobuf.auth.Auth.ApplyFunctionLicenseAck getDefaultInstanceForType() {
        return cn.keptdata.one2data.header.message.protobuf.auth.Auth.ApplyFunctionLicenseAck.getDefaultInstance();
      }

      public cn.keptdata.one2data.header.message.protobuf.auth.Auth.ApplyFunctionLicenseAck build() {
        cn.keptdata.one2data.header.message.protobuf.auth.Auth.ApplyFunctionLicenseAck result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public cn.keptdata.one2data.header.message.protobuf.auth.Auth.ApplyFunctionLicenseAck buildPartial() {
        cn.keptdata.one2data.header.message.protobuf.auth.Auth.ApplyFunctionLicenseAck result = new cn.keptdata.one2data.header.message.protobuf.auth.Auth.ApplyFunctionLicenseAck(this);
        if (baseAckBuilder_ == null) {
          result.baseAck_ = baseAck_;
        } else {
          result.baseAck_ = baseAckBuilder_.build();
        }
        result.functionType_ = functionType_;
        result.businessResourceUuid_ = businessResourceUuid_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof cn.keptdata.one2data.header.message.protobuf.auth.Auth.ApplyFunctionLicenseAck) {
          return mergeFrom((cn.keptdata.one2data.header.message.protobuf.auth.Auth.ApplyFunctionLicenseAck)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(cn.keptdata.one2data.header.message.protobuf.auth.Auth.ApplyFunctionLicenseAck other) {
        if (other == cn.keptdata.one2data.header.message.protobuf.auth.Auth.ApplyFunctionLicenseAck.getDefaultInstance()) return this;
        if (other.hasBaseAck()) {
          mergeBaseAck(other.getBaseAck());
        }
        if (other.functionType_ != 0) {
          setFunctionTypeValue(other.getFunctionTypeValue());
        }
        if (!other.getBusinessResourceUuid().isEmpty()) {
          businessResourceUuid_ = other.businessResourceUuid_;
          onChanged();
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        cn.keptdata.one2data.header.message.protobuf.auth.Auth.ApplyFunctionLicenseAck parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (cn.keptdata.one2data.header.message.protobuf.auth.Auth.ApplyFunctionLicenseAck) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck baseAck_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck, cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck.Builder, cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAckOrBuilder> baseAckBuilder_;
      /**
       * <pre>
       *授权结果
       * </pre>
       *
       * <code>optional .one2data.rbtmqmsgcli.common.BaseAck base_ack = 1;</code>
       */
      public boolean hasBaseAck() {
        return baseAckBuilder_ != null || baseAck_ != null;
      }
      /**
       * <pre>
       *授权结果
       * </pre>
       *
       * <code>optional .one2data.rbtmqmsgcli.common.BaseAck base_ack = 1;</code>
       */
      public cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck getBaseAck() {
        if (baseAckBuilder_ == null) {
          return baseAck_ == null ? cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck.getDefaultInstance() : baseAck_;
        } else {
          return baseAckBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       *授权结果
       * </pre>
       *
       * <code>optional .one2data.rbtmqmsgcli.common.BaseAck base_ack = 1;</code>
       */
      public Builder setBaseAck(cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck value) {
        if (baseAckBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          baseAck_ = value;
          onChanged();
        } else {
          baseAckBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       *授权结果
       * </pre>
       *
       * <code>optional .one2data.rbtmqmsgcli.common.BaseAck base_ack = 1;</code>
       */
      public Builder setBaseAck(
          cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck.Builder builderForValue) {
        if (baseAckBuilder_ == null) {
          baseAck_ = builderForValue.build();
          onChanged();
        } else {
          baseAckBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       *授权结果
       * </pre>
       *
       * <code>optional .one2data.rbtmqmsgcli.common.BaseAck base_ack = 1;</code>
       */
      public Builder mergeBaseAck(cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck value) {
        if (baseAckBuilder_ == null) {
          if (baseAck_ != null) {
            baseAck_ =
              cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck.newBuilder(baseAck_).mergeFrom(value).buildPartial();
          } else {
            baseAck_ = value;
          }
          onChanged();
        } else {
          baseAckBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       *授权结果
       * </pre>
       *
       * <code>optional .one2data.rbtmqmsgcli.common.BaseAck base_ack = 1;</code>
       */
      public Builder clearBaseAck() {
        if (baseAckBuilder_ == null) {
          baseAck_ = null;
          onChanged();
        } else {
          baseAck_ = null;
          baseAckBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       *授权结果
       * </pre>
       *
       * <code>optional .one2data.rbtmqmsgcli.common.BaseAck base_ack = 1;</code>
       */
      public cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck.Builder getBaseAckBuilder() {
        
        onChanged();
        return getBaseAckFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       *授权结果
       * </pre>
       *
       * <code>optional .one2data.rbtmqmsgcli.common.BaseAck base_ack = 1;</code>
       */
      public cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAckOrBuilder getBaseAckOrBuilder() {
        if (baseAckBuilder_ != null) {
          return baseAckBuilder_.getMessageOrBuilder();
        } else {
          return baseAck_ == null ?
              cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck.getDefaultInstance() : baseAck_;
        }
      }
      /**
       * <pre>
       *授权结果
       * </pre>
       *
       * <code>optional .one2data.rbtmqmsgcli.common.BaseAck base_ack = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck, cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck.Builder, cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAckOrBuilder> 
          getBaseAckFieldBuilder() {
        if (baseAckBuilder_ == null) {
          baseAckBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck, cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck.Builder, cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAckOrBuilder>(
                  getBaseAck(),
                  getParentForChildren(),
                  isClean());
          baseAck_ = null;
        }
        return baseAckBuilder_;
      }

      private int functionType_ = 0;
      /**
       * <pre>
       *功能类型
       * </pre>
       *
       * <code>optional .one2data.rbtmqmsgcli.auth.FunctionType function_type = 2;</code>
       */
      public int getFunctionTypeValue() {
        return functionType_;
      }
      /**
       * <pre>
       *功能类型
       * </pre>
       *
       * <code>optional .one2data.rbtmqmsgcli.auth.FunctionType function_type = 2;</code>
       */
      public Builder setFunctionTypeValue(int value) {
        functionType_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *功能类型
       * </pre>
       *
       * <code>optional .one2data.rbtmqmsgcli.auth.FunctionType function_type = 2;</code>
       */
      public cn.keptdata.one2data.header.message.protobuf.auth.Auth.FunctionType getFunctionType() {
        cn.keptdata.one2data.header.message.protobuf.auth.Auth.FunctionType result = cn.keptdata.one2data.header.message.protobuf.auth.Auth.FunctionType.valueOf(functionType_);
        return result == null ? cn.keptdata.one2data.header.message.protobuf.auth.Auth.FunctionType.UNRECOGNIZED : result;
      }
      /**
       * <pre>
       *功能类型
       * </pre>
       *
       * <code>optional .one2data.rbtmqmsgcli.auth.FunctionType function_type = 2;</code>
       */
      public Builder setFunctionType(cn.keptdata.one2data.header.message.protobuf.auth.Auth.FunctionType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        functionType_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *功能类型
       * </pre>
       *
       * <code>optional .one2data.rbtmqmsgcli.auth.FunctionType function_type = 2;</code>
       */
      public Builder clearFunctionType() {
        
        functionType_ = 0;
        onChanged();
        return this;
      }

      private Object businessResourceUuid_ = "";
      /**
       * <pre>
       *业务资源唯一ID
       * </pre>
       *
       * <code>optional string business_resource_uuid = 3;</code>
       */
      public String getBusinessResourceUuid() {
        Object ref = businessResourceUuid_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          businessResourceUuid_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <pre>
       *业务资源唯一ID
       * </pre>
       *
       * <code>optional string business_resource_uuid = 3;</code>
       */
      public com.google.protobuf.ByteString
          getBusinessResourceUuidBytes() {
        Object ref = businessResourceUuid_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          businessResourceUuid_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *业务资源唯一ID
       * </pre>
       *
       * <code>optional string business_resource_uuid = 3;</code>
       */
      public Builder setBusinessResourceUuid(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        businessResourceUuid_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *业务资源唯一ID
       * </pre>
       *
       * <code>optional string business_resource_uuid = 3;</code>
       */
      public Builder clearBusinessResourceUuid() {
        
        businessResourceUuid_ = getDefaultInstance().getBusinessResourceUuid();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *业务资源唯一ID
       * </pre>
       *
       * <code>optional string business_resource_uuid = 3;</code>
       */
      public Builder setBusinessResourceUuidBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        businessResourceUuid_ = value;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:one2data.rbtmqmsgcli.auth.ApplyFunctionLicenseAck)
    }

    // @@protoc_insertion_point(class_scope:one2data.rbtmqmsgcli.auth.ApplyFunctionLicenseAck)
    private static final cn.keptdata.one2data.header.message.protobuf.auth.Auth.ApplyFunctionLicenseAck DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new cn.keptdata.one2data.header.message.protobuf.auth.Auth.ApplyFunctionLicenseAck();
    }

    public static cn.keptdata.one2data.header.message.protobuf.auth.Auth.ApplyFunctionLicenseAck getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ApplyFunctionLicenseAck>
        PARSER = new com.google.protobuf.AbstractParser<ApplyFunctionLicenseAck>() {
      public ApplyFunctionLicenseAck parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new ApplyFunctionLicenseAck(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<ApplyFunctionLicenseAck> parser() {
      return PARSER;
    }

    @Override
    public com.google.protobuf.Parser<ApplyFunctionLicenseAck> getParserForType() {
      return PARSER;
    }

    public cn.keptdata.one2data.header.message.protobuf.auth.Auth.ApplyFunctionLicenseAck getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface RevokeNodeLicenseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:one2data.rbtmqmsgcli.auth.RevokeNodeLicense)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     *组件节点类型
     * </pre>
     *
     * <code>optional .one2data.rbtmqmsgcli.common.NodeType node_type = 1;</code>
     */
    int getNodeTypeValue();
    /**
     * <pre>
     *组件节点类型
     * </pre>
     *
     * <code>optional .one2data.rbtmqmsgcli.common.NodeType node_type = 1;</code>
     */
    cn.keptdata.one2data.header.message.protobuf.common.Node.NodeType getNodeType();

    /**
     * <pre>
     *节点内部唯一ID
     * </pre>
     *
     * <code>optional string uuid_key = 2;</code>
     */
    String getUuidKey();
    /**
     * <pre>
     *节点内部唯一ID
     * </pre>
     *
     * <code>optional string uuid_key = 2;</code>
     */
    com.google.protobuf.ByteString
        getUuidKeyBytes();
  }
  /**
   * <pre>
   *撤销节点授权
   * </pre>
   *
   * Protobuf type {@code one2data.rbtmqmsgcli.auth.RevokeNodeLicense}
   */
  public  static final class RevokeNodeLicense extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:one2data.rbtmqmsgcli.auth.RevokeNodeLicense)
      RevokeNodeLicenseOrBuilder {
    // Use RevokeNodeLicense.newBuilder() to construct.
    private RevokeNodeLicense(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private RevokeNodeLicense() {
      nodeType_ = 0;
      uuidKey_ = "";
    }

    @Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private RevokeNodeLicense(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();

              nodeType_ = rawValue;
              break;
            }
            case 18: {
              String s = input.readStringRequireUtf8();

              uuidKey_ = s;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return cn.keptdata.one2data.header.message.protobuf.auth.Auth.internal_static_one2data_rbtmqmsgcli_auth_RevokeNodeLicense_descriptor;
    }

    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return cn.keptdata.one2data.header.message.protobuf.auth.Auth.internal_static_one2data_rbtmqmsgcli_auth_RevokeNodeLicense_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              cn.keptdata.one2data.header.message.protobuf.auth.Auth.RevokeNodeLicense.class, cn.keptdata.one2data.header.message.protobuf.auth.Auth.RevokeNodeLicense.Builder.class);
    }

    public static final int NODE_TYPE_FIELD_NUMBER = 1;
    private int nodeType_;
    /**
     * <pre>
     *组件节点类型
     * </pre>
     *
     * <code>optional .one2data.rbtmqmsgcli.common.NodeType node_type = 1;</code>
     */
    public int getNodeTypeValue() {
      return nodeType_;
    }
    /**
     * <pre>
     *组件节点类型
     * </pre>
     *
     * <code>optional .one2data.rbtmqmsgcli.common.NodeType node_type = 1;</code>
     */
    public cn.keptdata.one2data.header.message.protobuf.common.Node.NodeType getNodeType() {
      cn.keptdata.one2data.header.message.protobuf.common.Node.NodeType result = cn.keptdata.one2data.header.message.protobuf.common.Node.NodeType.valueOf(nodeType_);
      return result == null ? cn.keptdata.one2data.header.message.protobuf.common.Node.NodeType.UNRECOGNIZED : result;
    }

    public static final int UUID_KEY_FIELD_NUMBER = 2;
    private volatile Object uuidKey_;
    /**
     * <pre>
     *节点内部唯一ID
     * </pre>
     *
     * <code>optional string uuid_key = 2;</code>
     */
    public String getUuidKey() {
      Object ref = uuidKey_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        uuidKey_ = s;
        return s;
      }
    }
    /**
     * <pre>
     *节点内部唯一ID
     * </pre>
     *
     * <code>optional string uuid_key = 2;</code>
     */
    public com.google.protobuf.ByteString
        getUuidKeyBytes() {
      Object ref = uuidKey_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        uuidKey_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (nodeType_ != cn.keptdata.one2data.header.message.protobuf.common.Node.NodeType.NT_CLIENT.getNumber()) {
        output.writeEnum(1, nodeType_);
      }
      if (!getUuidKeyBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, uuidKey_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (nodeType_ != cn.keptdata.one2data.header.message.protobuf.common.Node.NodeType.NT_CLIENT.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, nodeType_);
      }
      if (!getUuidKeyBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, uuidKey_);
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @Override
    public boolean equals(final Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof cn.keptdata.one2data.header.message.protobuf.auth.Auth.RevokeNodeLicense)) {
        return super.equals(obj);
      }
      cn.keptdata.one2data.header.message.protobuf.auth.Auth.RevokeNodeLicense other = (cn.keptdata.one2data.header.message.protobuf.auth.Auth.RevokeNodeLicense) obj;

      boolean result = true;
      result = result && nodeType_ == other.nodeType_;
      result = result && getUuidKey()
          .equals(other.getUuidKey());
      return result;
    }

    @Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptorForType().hashCode();
      hash = (37 * hash) + NODE_TYPE_FIELD_NUMBER;
      hash = (53 * hash) + nodeType_;
      hash = (37 * hash) + UUID_KEY_FIELD_NUMBER;
      hash = (53 * hash) + getUuidKey().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static cn.keptdata.one2data.header.message.protobuf.auth.Auth.RevokeNodeLicense parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static cn.keptdata.one2data.header.message.protobuf.auth.Auth.RevokeNodeLicense parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static cn.keptdata.one2data.header.message.protobuf.auth.Auth.RevokeNodeLicense parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static cn.keptdata.one2data.header.message.protobuf.auth.Auth.RevokeNodeLicense parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static cn.keptdata.one2data.header.message.protobuf.auth.Auth.RevokeNodeLicense parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static cn.keptdata.one2data.header.message.protobuf.auth.Auth.RevokeNodeLicense parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static cn.keptdata.one2data.header.message.protobuf.auth.Auth.RevokeNodeLicense parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static cn.keptdata.one2data.header.message.protobuf.auth.Auth.RevokeNodeLicense parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static cn.keptdata.one2data.header.message.protobuf.auth.Auth.RevokeNodeLicense parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static cn.keptdata.one2data.header.message.protobuf.auth.Auth.RevokeNodeLicense parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(cn.keptdata.one2data.header.message.protobuf.auth.Auth.RevokeNodeLicense prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     *撤销节点授权
     * </pre>
     *
     * Protobuf type {@code one2data.rbtmqmsgcli.auth.RevokeNodeLicense}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:one2data.rbtmqmsgcli.auth.RevokeNodeLicense)
        cn.keptdata.one2data.header.message.protobuf.auth.Auth.RevokeNodeLicenseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return cn.keptdata.one2data.header.message.protobuf.auth.Auth.internal_static_one2data_rbtmqmsgcli_auth_RevokeNodeLicense_descriptor;
      }

      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return cn.keptdata.one2data.header.message.protobuf.auth.Auth.internal_static_one2data_rbtmqmsgcli_auth_RevokeNodeLicense_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                cn.keptdata.one2data.header.message.protobuf.auth.Auth.RevokeNodeLicense.class, cn.keptdata.one2data.header.message.protobuf.auth.Auth.RevokeNodeLicense.Builder.class);
      }

      // Construct using cn.keptdata.one2data.header.message.protobuf.auth.Auth.RevokeNodeLicense.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        nodeType_ = 0;

        uuidKey_ = "";

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return cn.keptdata.one2data.header.message.protobuf.auth.Auth.internal_static_one2data_rbtmqmsgcli_auth_RevokeNodeLicense_descriptor;
      }

      public cn.keptdata.one2data.header.message.protobuf.auth.Auth.RevokeNodeLicense getDefaultInstanceForType() {
        return cn.keptdata.one2data.header.message.protobuf.auth.Auth.RevokeNodeLicense.getDefaultInstance();
      }

      public cn.keptdata.one2data.header.message.protobuf.auth.Auth.RevokeNodeLicense build() {
        cn.keptdata.one2data.header.message.protobuf.auth.Auth.RevokeNodeLicense result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public cn.keptdata.one2data.header.message.protobuf.auth.Auth.RevokeNodeLicense buildPartial() {
        cn.keptdata.one2data.header.message.protobuf.auth.Auth.RevokeNodeLicense result = new cn.keptdata.one2data.header.message.protobuf.auth.Auth.RevokeNodeLicense(this);
        result.nodeType_ = nodeType_;
        result.uuidKey_ = uuidKey_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof cn.keptdata.one2data.header.message.protobuf.auth.Auth.RevokeNodeLicense) {
          return mergeFrom((cn.keptdata.one2data.header.message.protobuf.auth.Auth.RevokeNodeLicense)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(cn.keptdata.one2data.header.message.protobuf.auth.Auth.RevokeNodeLicense other) {
        if (other == cn.keptdata.one2data.header.message.protobuf.auth.Auth.RevokeNodeLicense.getDefaultInstance()) return this;
        if (other.nodeType_ != 0) {
          setNodeTypeValue(other.getNodeTypeValue());
        }
        if (!other.getUuidKey().isEmpty()) {
          uuidKey_ = other.uuidKey_;
          onChanged();
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        cn.keptdata.one2data.header.message.protobuf.auth.Auth.RevokeNodeLicense parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (cn.keptdata.one2data.header.message.protobuf.auth.Auth.RevokeNodeLicense) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private int nodeType_ = 0;
      /**
       * <pre>
       *组件节点类型
       * </pre>
       *
       * <code>optional .one2data.rbtmqmsgcli.common.NodeType node_type = 1;</code>
       */
      public int getNodeTypeValue() {
        return nodeType_;
      }
      /**
       * <pre>
       *组件节点类型
       * </pre>
       *
       * <code>optional .one2data.rbtmqmsgcli.common.NodeType node_type = 1;</code>
       */
      public Builder setNodeTypeValue(int value) {
        nodeType_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *组件节点类型
       * </pre>
       *
       * <code>optional .one2data.rbtmqmsgcli.common.NodeType node_type = 1;</code>
       */
      public cn.keptdata.one2data.header.message.protobuf.common.Node.NodeType getNodeType() {
        cn.keptdata.one2data.header.message.protobuf.common.Node.NodeType result = cn.keptdata.one2data.header.message.protobuf.common.Node.NodeType.valueOf(nodeType_);
        return result == null ? cn.keptdata.one2data.header.message.protobuf.common.Node.NodeType.UNRECOGNIZED : result;
      }
      /**
       * <pre>
       *组件节点类型
       * </pre>
       *
       * <code>optional .one2data.rbtmqmsgcli.common.NodeType node_type = 1;</code>
       */
      public Builder setNodeType(cn.keptdata.one2data.header.message.protobuf.common.Node.NodeType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        nodeType_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *组件节点类型
       * </pre>
       *
       * <code>optional .one2data.rbtmqmsgcli.common.NodeType node_type = 1;</code>
       */
      public Builder clearNodeType() {
        
        nodeType_ = 0;
        onChanged();
        return this;
      }

      private Object uuidKey_ = "";
      /**
       * <pre>
       *节点内部唯一ID
       * </pre>
       *
       * <code>optional string uuid_key = 2;</code>
       */
      public String getUuidKey() {
        Object ref = uuidKey_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          uuidKey_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <pre>
       *节点内部唯一ID
       * </pre>
       *
       * <code>optional string uuid_key = 2;</code>
       */
      public com.google.protobuf.ByteString
          getUuidKeyBytes() {
        Object ref = uuidKey_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          uuidKey_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *节点内部唯一ID
       * </pre>
       *
       * <code>optional string uuid_key = 2;</code>
       */
      public Builder setUuidKey(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        uuidKey_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *节点内部唯一ID
       * </pre>
       *
       * <code>optional string uuid_key = 2;</code>
       */
      public Builder clearUuidKey() {
        
        uuidKey_ = getDefaultInstance().getUuidKey();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *节点内部唯一ID
       * </pre>
       *
       * <code>optional string uuid_key = 2;</code>
       */
      public Builder setUuidKeyBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        uuidKey_ = value;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:one2data.rbtmqmsgcli.auth.RevokeNodeLicense)
    }

    // @@protoc_insertion_point(class_scope:one2data.rbtmqmsgcli.auth.RevokeNodeLicense)
    private static final cn.keptdata.one2data.header.message.protobuf.auth.Auth.RevokeNodeLicense DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new cn.keptdata.one2data.header.message.protobuf.auth.Auth.RevokeNodeLicense();
    }

    public static cn.keptdata.one2data.header.message.protobuf.auth.Auth.RevokeNodeLicense getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<RevokeNodeLicense>
        PARSER = new com.google.protobuf.AbstractParser<RevokeNodeLicense>() {
      public RevokeNodeLicense parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new RevokeNodeLicense(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<RevokeNodeLicense> parser() {
      return PARSER;
    }

    @Override
    public com.google.protobuf.Parser<RevokeNodeLicense> getParserForType() {
      return PARSER;
    }

    public cn.keptdata.one2data.header.message.protobuf.auth.Auth.RevokeNodeLicense getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface RevokeNodeLicenseAckOrBuilder extends
      // @@protoc_insertion_point(interface_extends:one2data.rbtmqmsgcli.auth.RevokeNodeLicenseAck)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     *授权结果
     * </pre>
     *
     * <code>optional .one2data.rbtmqmsgcli.common.BaseAck base_ack = 1;</code>
     */
    boolean hasBaseAck();
    /**
     * <pre>
     *授权结果
     * </pre>
     *
     * <code>optional .one2data.rbtmqmsgcli.common.BaseAck base_ack = 1;</code>
     */
    cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck getBaseAck();
    /**
     * <pre>
     *授权结果
     * </pre>
     *
     * <code>optional .one2data.rbtmqmsgcli.common.BaseAck base_ack = 1;</code>
     */
    cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAckOrBuilder getBaseAckOrBuilder();

    /**
     * <pre>
     *组件节点类型
     * </pre>
     *
     * <code>optional .one2data.rbtmqmsgcli.common.NodeType node_type = 2;</code>
     */
    int getNodeTypeValue();
    /**
     * <pre>
     *组件节点类型
     * </pre>
     *
     * <code>optional .one2data.rbtmqmsgcli.common.NodeType node_type = 2;</code>
     */
    cn.keptdata.one2data.header.message.protobuf.common.Node.NodeType getNodeType();

    /**
     * <pre>
     *节点内部唯一ID
     * </pre>
     *
     * <code>optional string uuid_key = 3;</code>
     */
    String getUuidKey();
    /**
     * <pre>
     *节点内部唯一ID
     * </pre>
     *
     * <code>optional string uuid_key = 3;</code>
     */
    com.google.protobuf.ByteString
        getUuidKeyBytes();
  }
  /**
   * <pre>
   *撤销节点授权响应
   * </pre>
   *
   * Protobuf type {@code one2data.rbtmqmsgcli.auth.RevokeNodeLicenseAck}
   */
  public  static final class RevokeNodeLicenseAck extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:one2data.rbtmqmsgcli.auth.RevokeNodeLicenseAck)
      RevokeNodeLicenseAckOrBuilder {
    // Use RevokeNodeLicenseAck.newBuilder() to construct.
    private RevokeNodeLicenseAck(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private RevokeNodeLicenseAck() {
      nodeType_ = 0;
      uuidKey_ = "";
    }

    @Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private RevokeNodeLicenseAck(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck.Builder subBuilder = null;
              if (baseAck_ != null) {
                subBuilder = baseAck_.toBuilder();
              }
              baseAck_ = input.readMessage(cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(baseAck_);
                baseAck_ = subBuilder.buildPartial();
              }

              break;
            }
            case 16: {
              int rawValue = input.readEnum();

              nodeType_ = rawValue;
              break;
            }
            case 26: {
              String s = input.readStringRequireUtf8();

              uuidKey_ = s;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return cn.keptdata.one2data.header.message.protobuf.auth.Auth.internal_static_one2data_rbtmqmsgcli_auth_RevokeNodeLicenseAck_descriptor;
    }

    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return cn.keptdata.one2data.header.message.protobuf.auth.Auth.internal_static_one2data_rbtmqmsgcli_auth_RevokeNodeLicenseAck_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              cn.keptdata.one2data.header.message.protobuf.auth.Auth.RevokeNodeLicenseAck.class, cn.keptdata.one2data.header.message.protobuf.auth.Auth.RevokeNodeLicenseAck.Builder.class);
    }

    public static final int BASE_ACK_FIELD_NUMBER = 1;
    private cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck baseAck_;
    /**
     * <pre>
     *授权结果
     * </pre>
     *
     * <code>optional .one2data.rbtmqmsgcli.common.BaseAck base_ack = 1;</code>
     */
    public boolean hasBaseAck() {
      return baseAck_ != null;
    }
    /**
     * <pre>
     *授权结果
     * </pre>
     *
     * <code>optional .one2data.rbtmqmsgcli.common.BaseAck base_ack = 1;</code>
     */
    public cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck getBaseAck() {
      return baseAck_ == null ? cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck.getDefaultInstance() : baseAck_;
    }
    /**
     * <pre>
     *授权结果
     * </pre>
     *
     * <code>optional .one2data.rbtmqmsgcli.common.BaseAck base_ack = 1;</code>
     */
    public cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAckOrBuilder getBaseAckOrBuilder() {
      return getBaseAck();
    }

    public static final int NODE_TYPE_FIELD_NUMBER = 2;
    private int nodeType_;
    /**
     * <pre>
     *组件节点类型
     * </pre>
     *
     * <code>optional .one2data.rbtmqmsgcli.common.NodeType node_type = 2;</code>
     */
    public int getNodeTypeValue() {
      return nodeType_;
    }
    /**
     * <pre>
     *组件节点类型
     * </pre>
     *
     * <code>optional .one2data.rbtmqmsgcli.common.NodeType node_type = 2;</code>
     */
    public cn.keptdata.one2data.header.message.protobuf.common.Node.NodeType getNodeType() {
      cn.keptdata.one2data.header.message.protobuf.common.Node.NodeType result = cn.keptdata.one2data.header.message.protobuf.common.Node.NodeType.valueOf(nodeType_);
      return result == null ? cn.keptdata.one2data.header.message.protobuf.common.Node.NodeType.UNRECOGNIZED : result;
    }

    public static final int UUID_KEY_FIELD_NUMBER = 3;
    private volatile Object uuidKey_;
    /**
     * <pre>
     *节点内部唯一ID
     * </pre>
     *
     * <code>optional string uuid_key = 3;</code>
     */
    public String getUuidKey() {
      Object ref = uuidKey_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        uuidKey_ = s;
        return s;
      }
    }
    /**
     * <pre>
     *节点内部唯一ID
     * </pre>
     *
     * <code>optional string uuid_key = 3;</code>
     */
    public com.google.protobuf.ByteString
        getUuidKeyBytes() {
      Object ref = uuidKey_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        uuidKey_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (baseAck_ != null) {
        output.writeMessage(1, getBaseAck());
      }
      if (nodeType_ != cn.keptdata.one2data.header.message.protobuf.common.Node.NodeType.NT_CLIENT.getNumber()) {
        output.writeEnum(2, nodeType_);
      }
      if (!getUuidKeyBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 3, uuidKey_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (baseAck_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getBaseAck());
      }
      if (nodeType_ != cn.keptdata.one2data.header.message.protobuf.common.Node.NodeType.NT_CLIENT.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(2, nodeType_);
      }
      if (!getUuidKeyBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, uuidKey_);
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @Override
    public boolean equals(final Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof cn.keptdata.one2data.header.message.protobuf.auth.Auth.RevokeNodeLicenseAck)) {
        return super.equals(obj);
      }
      cn.keptdata.one2data.header.message.protobuf.auth.Auth.RevokeNodeLicenseAck other = (cn.keptdata.one2data.header.message.protobuf.auth.Auth.RevokeNodeLicenseAck) obj;

      boolean result = true;
      result = result && (hasBaseAck() == other.hasBaseAck());
      if (hasBaseAck()) {
        result = result && getBaseAck()
            .equals(other.getBaseAck());
      }
      result = result && nodeType_ == other.nodeType_;
      result = result && getUuidKey()
          .equals(other.getUuidKey());
      return result;
    }

    @Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptorForType().hashCode();
      if (hasBaseAck()) {
        hash = (37 * hash) + BASE_ACK_FIELD_NUMBER;
        hash = (53 * hash) + getBaseAck().hashCode();
      }
      hash = (37 * hash) + NODE_TYPE_FIELD_NUMBER;
      hash = (53 * hash) + nodeType_;
      hash = (37 * hash) + UUID_KEY_FIELD_NUMBER;
      hash = (53 * hash) + getUuidKey().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static cn.keptdata.one2data.header.message.protobuf.auth.Auth.RevokeNodeLicenseAck parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static cn.keptdata.one2data.header.message.protobuf.auth.Auth.RevokeNodeLicenseAck parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static cn.keptdata.one2data.header.message.protobuf.auth.Auth.RevokeNodeLicenseAck parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static cn.keptdata.one2data.header.message.protobuf.auth.Auth.RevokeNodeLicenseAck parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static cn.keptdata.one2data.header.message.protobuf.auth.Auth.RevokeNodeLicenseAck parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static cn.keptdata.one2data.header.message.protobuf.auth.Auth.RevokeNodeLicenseAck parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static cn.keptdata.one2data.header.message.protobuf.auth.Auth.RevokeNodeLicenseAck parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static cn.keptdata.one2data.header.message.protobuf.auth.Auth.RevokeNodeLicenseAck parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static cn.keptdata.one2data.header.message.protobuf.auth.Auth.RevokeNodeLicenseAck parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static cn.keptdata.one2data.header.message.protobuf.auth.Auth.RevokeNodeLicenseAck parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(cn.keptdata.one2data.header.message.protobuf.auth.Auth.RevokeNodeLicenseAck prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     *撤销节点授权响应
     * </pre>
     *
     * Protobuf type {@code one2data.rbtmqmsgcli.auth.RevokeNodeLicenseAck}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:one2data.rbtmqmsgcli.auth.RevokeNodeLicenseAck)
        cn.keptdata.one2data.header.message.protobuf.auth.Auth.RevokeNodeLicenseAckOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return cn.keptdata.one2data.header.message.protobuf.auth.Auth.internal_static_one2data_rbtmqmsgcli_auth_RevokeNodeLicenseAck_descriptor;
      }

      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return cn.keptdata.one2data.header.message.protobuf.auth.Auth.internal_static_one2data_rbtmqmsgcli_auth_RevokeNodeLicenseAck_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                cn.keptdata.one2data.header.message.protobuf.auth.Auth.RevokeNodeLicenseAck.class, cn.keptdata.one2data.header.message.protobuf.auth.Auth.RevokeNodeLicenseAck.Builder.class);
      }

      // Construct using cn.keptdata.one2data.header.message.protobuf.auth.Auth.RevokeNodeLicenseAck.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        if (baseAckBuilder_ == null) {
          baseAck_ = null;
        } else {
          baseAck_ = null;
          baseAckBuilder_ = null;
        }
        nodeType_ = 0;

        uuidKey_ = "";

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return cn.keptdata.one2data.header.message.protobuf.auth.Auth.internal_static_one2data_rbtmqmsgcli_auth_RevokeNodeLicenseAck_descriptor;
      }

      public cn.keptdata.one2data.header.message.protobuf.auth.Auth.RevokeNodeLicenseAck getDefaultInstanceForType() {
        return cn.keptdata.one2data.header.message.protobuf.auth.Auth.RevokeNodeLicenseAck.getDefaultInstance();
      }

      public cn.keptdata.one2data.header.message.protobuf.auth.Auth.RevokeNodeLicenseAck build() {
        cn.keptdata.one2data.header.message.protobuf.auth.Auth.RevokeNodeLicenseAck result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public cn.keptdata.one2data.header.message.protobuf.auth.Auth.RevokeNodeLicenseAck buildPartial() {
        cn.keptdata.one2data.header.message.protobuf.auth.Auth.RevokeNodeLicenseAck result = new cn.keptdata.one2data.header.message.protobuf.auth.Auth.RevokeNodeLicenseAck(this);
        if (baseAckBuilder_ == null) {
          result.baseAck_ = baseAck_;
        } else {
          result.baseAck_ = baseAckBuilder_.build();
        }
        result.nodeType_ = nodeType_;
        result.uuidKey_ = uuidKey_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof cn.keptdata.one2data.header.message.protobuf.auth.Auth.RevokeNodeLicenseAck) {
          return mergeFrom((cn.keptdata.one2data.header.message.protobuf.auth.Auth.RevokeNodeLicenseAck)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(cn.keptdata.one2data.header.message.protobuf.auth.Auth.RevokeNodeLicenseAck other) {
        if (other == cn.keptdata.one2data.header.message.protobuf.auth.Auth.RevokeNodeLicenseAck.getDefaultInstance()) return this;
        if (other.hasBaseAck()) {
          mergeBaseAck(other.getBaseAck());
        }
        if (other.nodeType_ != 0) {
          setNodeTypeValue(other.getNodeTypeValue());
        }
        if (!other.getUuidKey().isEmpty()) {
          uuidKey_ = other.uuidKey_;
          onChanged();
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        cn.keptdata.one2data.header.message.protobuf.auth.Auth.RevokeNodeLicenseAck parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (cn.keptdata.one2data.header.message.protobuf.auth.Auth.RevokeNodeLicenseAck) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck baseAck_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck, cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck.Builder, cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAckOrBuilder> baseAckBuilder_;
      /**
       * <pre>
       *授权结果
       * </pre>
       *
       * <code>optional .one2data.rbtmqmsgcli.common.BaseAck base_ack = 1;</code>
       */
      public boolean hasBaseAck() {
        return baseAckBuilder_ != null || baseAck_ != null;
      }
      /**
       * <pre>
       *授权结果
       * </pre>
       *
       * <code>optional .one2data.rbtmqmsgcli.common.BaseAck base_ack = 1;</code>
       */
      public cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck getBaseAck() {
        if (baseAckBuilder_ == null) {
          return baseAck_ == null ? cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck.getDefaultInstance() : baseAck_;
        } else {
          return baseAckBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       *授权结果
       * </pre>
       *
       * <code>optional .one2data.rbtmqmsgcli.common.BaseAck base_ack = 1;</code>
       */
      public Builder setBaseAck(cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck value) {
        if (baseAckBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          baseAck_ = value;
          onChanged();
        } else {
          baseAckBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       *授权结果
       * </pre>
       *
       * <code>optional .one2data.rbtmqmsgcli.common.BaseAck base_ack = 1;</code>
       */
      public Builder setBaseAck(
          cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck.Builder builderForValue) {
        if (baseAckBuilder_ == null) {
          baseAck_ = builderForValue.build();
          onChanged();
        } else {
          baseAckBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       *授权结果
       * </pre>
       *
       * <code>optional .one2data.rbtmqmsgcli.common.BaseAck base_ack = 1;</code>
       */
      public Builder mergeBaseAck(cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck value) {
        if (baseAckBuilder_ == null) {
          if (baseAck_ != null) {
            baseAck_ =
              cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck.newBuilder(baseAck_).mergeFrom(value).buildPartial();
          } else {
            baseAck_ = value;
          }
          onChanged();
        } else {
          baseAckBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       *授权结果
       * </pre>
       *
       * <code>optional .one2data.rbtmqmsgcli.common.BaseAck base_ack = 1;</code>
       */
      public Builder clearBaseAck() {
        if (baseAckBuilder_ == null) {
          baseAck_ = null;
          onChanged();
        } else {
          baseAck_ = null;
          baseAckBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       *授权结果
       * </pre>
       *
       * <code>optional .one2data.rbtmqmsgcli.common.BaseAck base_ack = 1;</code>
       */
      public cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck.Builder getBaseAckBuilder() {
        
        onChanged();
        return getBaseAckFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       *授权结果
       * </pre>
       *
       * <code>optional .one2data.rbtmqmsgcli.common.BaseAck base_ack = 1;</code>
       */
      public cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAckOrBuilder getBaseAckOrBuilder() {
        if (baseAckBuilder_ != null) {
          return baseAckBuilder_.getMessageOrBuilder();
        } else {
          return baseAck_ == null ?
              cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck.getDefaultInstance() : baseAck_;
        }
      }
      /**
       * <pre>
       *授权结果
       * </pre>
       *
       * <code>optional .one2data.rbtmqmsgcli.common.BaseAck base_ack = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck, cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck.Builder, cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAckOrBuilder> 
          getBaseAckFieldBuilder() {
        if (baseAckBuilder_ == null) {
          baseAckBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck, cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck.Builder, cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAckOrBuilder>(
                  getBaseAck(),
                  getParentForChildren(),
                  isClean());
          baseAck_ = null;
        }
        return baseAckBuilder_;
      }

      private int nodeType_ = 0;
      /**
       * <pre>
       *组件节点类型
       * </pre>
       *
       * <code>optional .one2data.rbtmqmsgcli.common.NodeType node_type = 2;</code>
       */
      public int getNodeTypeValue() {
        return nodeType_;
      }
      /**
       * <pre>
       *组件节点类型
       * </pre>
       *
       * <code>optional .one2data.rbtmqmsgcli.common.NodeType node_type = 2;</code>
       */
      public Builder setNodeTypeValue(int value) {
        nodeType_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *组件节点类型
       * </pre>
       *
       * <code>optional .one2data.rbtmqmsgcli.common.NodeType node_type = 2;</code>
       */
      public cn.keptdata.one2data.header.message.protobuf.common.Node.NodeType getNodeType() {
        cn.keptdata.one2data.header.message.protobuf.common.Node.NodeType result = cn.keptdata.one2data.header.message.protobuf.common.Node.NodeType.valueOf(nodeType_);
        return result == null ? cn.keptdata.one2data.header.message.protobuf.common.Node.NodeType.UNRECOGNIZED : result;
      }
      /**
       * <pre>
       *组件节点类型
       * </pre>
       *
       * <code>optional .one2data.rbtmqmsgcli.common.NodeType node_type = 2;</code>
       */
      public Builder setNodeType(cn.keptdata.one2data.header.message.protobuf.common.Node.NodeType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        nodeType_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *组件节点类型
       * </pre>
       *
       * <code>optional .one2data.rbtmqmsgcli.common.NodeType node_type = 2;</code>
       */
      public Builder clearNodeType() {
        
        nodeType_ = 0;
        onChanged();
        return this;
      }

      private Object uuidKey_ = "";
      /**
       * <pre>
       *节点内部唯一ID
       * </pre>
       *
       * <code>optional string uuid_key = 3;</code>
       */
      public String getUuidKey() {
        Object ref = uuidKey_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          uuidKey_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <pre>
       *节点内部唯一ID
       * </pre>
       *
       * <code>optional string uuid_key = 3;</code>
       */
      public com.google.protobuf.ByteString
          getUuidKeyBytes() {
        Object ref = uuidKey_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          uuidKey_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *节点内部唯一ID
       * </pre>
       *
       * <code>optional string uuid_key = 3;</code>
       */
      public Builder setUuidKey(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        uuidKey_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *节点内部唯一ID
       * </pre>
       *
       * <code>optional string uuid_key = 3;</code>
       */
      public Builder clearUuidKey() {
        
        uuidKey_ = getDefaultInstance().getUuidKey();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *节点内部唯一ID
       * </pre>
       *
       * <code>optional string uuid_key = 3;</code>
       */
      public Builder setUuidKeyBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        uuidKey_ = value;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:one2data.rbtmqmsgcli.auth.RevokeNodeLicenseAck)
    }

    // @@protoc_insertion_point(class_scope:one2data.rbtmqmsgcli.auth.RevokeNodeLicenseAck)
    private static final cn.keptdata.one2data.header.message.protobuf.auth.Auth.RevokeNodeLicenseAck DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new cn.keptdata.one2data.header.message.protobuf.auth.Auth.RevokeNodeLicenseAck();
    }

    public static cn.keptdata.one2data.header.message.protobuf.auth.Auth.RevokeNodeLicenseAck getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<RevokeNodeLicenseAck>
        PARSER = new com.google.protobuf.AbstractParser<RevokeNodeLicenseAck>() {
      public RevokeNodeLicenseAck parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new RevokeNodeLicenseAck(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<RevokeNodeLicenseAck> parser() {
      return PARSER;
    }

    @Override
    public com.google.protobuf.Parser<RevokeNodeLicenseAck> getParserForType() {
      return PARSER;
    }

    public cn.keptdata.one2data.header.message.protobuf.auth.Auth.RevokeNodeLicenseAck getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface RevokeFunctionLicenseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:one2data.rbtmqmsgcli.auth.RevokeFunctionLicense)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     *组件节点类型
     * </pre>
     *
     * <code>optional .one2data.rbtmqmsgcli.auth.FunctionType function_type = 1;</code>
     */
    int getFunctionTypeValue();
    /**
     * <pre>
     *组件节点类型
     * </pre>
     *
     * <code>optional .one2data.rbtmqmsgcli.auth.FunctionType function_type = 1;</code>
     */
    cn.keptdata.one2data.header.message.protobuf.auth.Auth.FunctionType getFunctionType();

    /**
     * <pre>
     *业务资源唯一ID
     * </pre>
     *
     * <code>optional string business_resource_uuid = 2;</code>
     */
    String getBusinessResourceUuid();
    /**
     * <pre>
     *业务资源唯一ID
     * </pre>
     *
     * <code>optional string business_resource_uuid = 2;</code>
     */
    com.google.protobuf.ByteString
        getBusinessResourceUuidBytes();
  }
  /**
   * <pre>
   * 撤销功能授权
   * </pre>
   *
   * Protobuf type {@code one2data.rbtmqmsgcli.auth.RevokeFunctionLicense}
   */
  public  static final class RevokeFunctionLicense extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:one2data.rbtmqmsgcli.auth.RevokeFunctionLicense)
      RevokeFunctionLicenseOrBuilder {
    // Use RevokeFunctionLicense.newBuilder() to construct.
    private RevokeFunctionLicense(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private RevokeFunctionLicense() {
      functionType_ = 0;
      businessResourceUuid_ = "";
    }

    @Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private RevokeFunctionLicense(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();

              functionType_ = rawValue;
              break;
            }
            case 18: {
              String s = input.readStringRequireUtf8();

              businessResourceUuid_ = s;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return cn.keptdata.one2data.header.message.protobuf.auth.Auth.internal_static_one2data_rbtmqmsgcli_auth_RevokeFunctionLicense_descriptor;
    }

    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return cn.keptdata.one2data.header.message.protobuf.auth.Auth.internal_static_one2data_rbtmqmsgcli_auth_RevokeFunctionLicense_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              cn.keptdata.one2data.header.message.protobuf.auth.Auth.RevokeFunctionLicense.class, cn.keptdata.one2data.header.message.protobuf.auth.Auth.RevokeFunctionLicense.Builder.class);
    }

    public static final int FUNCTION_TYPE_FIELD_NUMBER = 1;
    private int functionType_;
    /**
     * <pre>
     *组件节点类型
     * </pre>
     *
     * <code>optional .one2data.rbtmqmsgcli.auth.FunctionType function_type = 1;</code>
     */
    public int getFunctionTypeValue() {
      return functionType_;
    }
    /**
     * <pre>
     *组件节点类型
     * </pre>
     *
     * <code>optional .one2data.rbtmqmsgcli.auth.FunctionType function_type = 1;</code>
     */
    public cn.keptdata.one2data.header.message.protobuf.auth.Auth.FunctionType getFunctionType() {
      cn.keptdata.one2data.header.message.protobuf.auth.Auth.FunctionType result = cn.keptdata.one2data.header.message.protobuf.auth.Auth.FunctionType.valueOf(functionType_);
      return result == null ? cn.keptdata.one2data.header.message.protobuf.auth.Auth.FunctionType.UNRECOGNIZED : result;
    }

    public static final int BUSINESS_RESOURCE_UUID_FIELD_NUMBER = 2;
    private volatile Object businessResourceUuid_;
    /**
     * <pre>
     *业务资源唯一ID
     * </pre>
     *
     * <code>optional string business_resource_uuid = 2;</code>
     */
    public String getBusinessResourceUuid() {
      Object ref = businessResourceUuid_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        businessResourceUuid_ = s;
        return s;
      }
    }
    /**
     * <pre>
     *业务资源唯一ID
     * </pre>
     *
     * <code>optional string business_resource_uuid = 2;</code>
     */
    public com.google.protobuf.ByteString
        getBusinessResourceUuidBytes() {
      Object ref = businessResourceUuid_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        businessResourceUuid_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (functionType_ != cn.keptdata.one2data.header.message.protobuf.auth.Auth.FunctionType.FT_DEFAULT.getNumber()) {
        output.writeEnum(1, functionType_);
      }
      if (!getBusinessResourceUuidBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, businessResourceUuid_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (functionType_ != cn.keptdata.one2data.header.message.protobuf.auth.Auth.FunctionType.FT_DEFAULT.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, functionType_);
      }
      if (!getBusinessResourceUuidBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, businessResourceUuid_);
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @Override
    public boolean equals(final Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof cn.keptdata.one2data.header.message.protobuf.auth.Auth.RevokeFunctionLicense)) {
        return super.equals(obj);
      }
      cn.keptdata.one2data.header.message.protobuf.auth.Auth.RevokeFunctionLicense other = (cn.keptdata.one2data.header.message.protobuf.auth.Auth.RevokeFunctionLicense) obj;

      boolean result = true;
      result = result && functionType_ == other.functionType_;
      result = result && getBusinessResourceUuid()
          .equals(other.getBusinessResourceUuid());
      return result;
    }

    @Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptorForType().hashCode();
      hash = (37 * hash) + FUNCTION_TYPE_FIELD_NUMBER;
      hash = (53 * hash) + functionType_;
      hash = (37 * hash) + BUSINESS_RESOURCE_UUID_FIELD_NUMBER;
      hash = (53 * hash) + getBusinessResourceUuid().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static cn.keptdata.one2data.header.message.protobuf.auth.Auth.RevokeFunctionLicense parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static cn.keptdata.one2data.header.message.protobuf.auth.Auth.RevokeFunctionLicense parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static cn.keptdata.one2data.header.message.protobuf.auth.Auth.RevokeFunctionLicense parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static cn.keptdata.one2data.header.message.protobuf.auth.Auth.RevokeFunctionLicense parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static cn.keptdata.one2data.header.message.protobuf.auth.Auth.RevokeFunctionLicense parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static cn.keptdata.one2data.header.message.protobuf.auth.Auth.RevokeFunctionLicense parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static cn.keptdata.one2data.header.message.protobuf.auth.Auth.RevokeFunctionLicense parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static cn.keptdata.one2data.header.message.protobuf.auth.Auth.RevokeFunctionLicense parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static cn.keptdata.one2data.header.message.protobuf.auth.Auth.RevokeFunctionLicense parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static cn.keptdata.one2data.header.message.protobuf.auth.Auth.RevokeFunctionLicense parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(cn.keptdata.one2data.header.message.protobuf.auth.Auth.RevokeFunctionLicense prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * 撤销功能授权
     * </pre>
     *
     * Protobuf type {@code one2data.rbtmqmsgcli.auth.RevokeFunctionLicense}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:one2data.rbtmqmsgcli.auth.RevokeFunctionLicense)
        cn.keptdata.one2data.header.message.protobuf.auth.Auth.RevokeFunctionLicenseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return cn.keptdata.one2data.header.message.protobuf.auth.Auth.internal_static_one2data_rbtmqmsgcli_auth_RevokeFunctionLicense_descriptor;
      }

      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return cn.keptdata.one2data.header.message.protobuf.auth.Auth.internal_static_one2data_rbtmqmsgcli_auth_RevokeFunctionLicense_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                cn.keptdata.one2data.header.message.protobuf.auth.Auth.RevokeFunctionLicense.class, cn.keptdata.one2data.header.message.protobuf.auth.Auth.RevokeFunctionLicense.Builder.class);
      }

      // Construct using cn.keptdata.one2data.header.message.protobuf.auth.Auth.RevokeFunctionLicense.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        functionType_ = 0;

        businessResourceUuid_ = "";

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return cn.keptdata.one2data.header.message.protobuf.auth.Auth.internal_static_one2data_rbtmqmsgcli_auth_RevokeFunctionLicense_descriptor;
      }

      public cn.keptdata.one2data.header.message.protobuf.auth.Auth.RevokeFunctionLicense getDefaultInstanceForType() {
        return cn.keptdata.one2data.header.message.protobuf.auth.Auth.RevokeFunctionLicense.getDefaultInstance();
      }

      public cn.keptdata.one2data.header.message.protobuf.auth.Auth.RevokeFunctionLicense build() {
        cn.keptdata.one2data.header.message.protobuf.auth.Auth.RevokeFunctionLicense result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public cn.keptdata.one2data.header.message.protobuf.auth.Auth.RevokeFunctionLicense buildPartial() {
        cn.keptdata.one2data.header.message.protobuf.auth.Auth.RevokeFunctionLicense result = new cn.keptdata.one2data.header.message.protobuf.auth.Auth.RevokeFunctionLicense(this);
        result.functionType_ = functionType_;
        result.businessResourceUuid_ = businessResourceUuid_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof cn.keptdata.one2data.header.message.protobuf.auth.Auth.RevokeFunctionLicense) {
          return mergeFrom((cn.keptdata.one2data.header.message.protobuf.auth.Auth.RevokeFunctionLicense)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(cn.keptdata.one2data.header.message.protobuf.auth.Auth.RevokeFunctionLicense other) {
        if (other == cn.keptdata.one2data.header.message.protobuf.auth.Auth.RevokeFunctionLicense.getDefaultInstance()) return this;
        if (other.functionType_ != 0) {
          setFunctionTypeValue(other.getFunctionTypeValue());
        }
        if (!other.getBusinessResourceUuid().isEmpty()) {
          businessResourceUuid_ = other.businessResourceUuid_;
          onChanged();
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        cn.keptdata.one2data.header.message.protobuf.auth.Auth.RevokeFunctionLicense parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (cn.keptdata.one2data.header.message.protobuf.auth.Auth.RevokeFunctionLicense) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private int functionType_ = 0;
      /**
       * <pre>
       *组件节点类型
       * </pre>
       *
       * <code>optional .one2data.rbtmqmsgcli.auth.FunctionType function_type = 1;</code>
       */
      public int getFunctionTypeValue() {
        return functionType_;
      }
      /**
       * <pre>
       *组件节点类型
       * </pre>
       *
       * <code>optional .one2data.rbtmqmsgcli.auth.FunctionType function_type = 1;</code>
       */
      public Builder setFunctionTypeValue(int value) {
        functionType_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *组件节点类型
       * </pre>
       *
       * <code>optional .one2data.rbtmqmsgcli.auth.FunctionType function_type = 1;</code>
       */
      public cn.keptdata.one2data.header.message.protobuf.auth.Auth.FunctionType getFunctionType() {
        cn.keptdata.one2data.header.message.protobuf.auth.Auth.FunctionType result = cn.keptdata.one2data.header.message.protobuf.auth.Auth.FunctionType.valueOf(functionType_);
        return result == null ? cn.keptdata.one2data.header.message.protobuf.auth.Auth.FunctionType.UNRECOGNIZED : result;
      }
      /**
       * <pre>
       *组件节点类型
       * </pre>
       *
       * <code>optional .one2data.rbtmqmsgcli.auth.FunctionType function_type = 1;</code>
       */
      public Builder setFunctionType(cn.keptdata.one2data.header.message.protobuf.auth.Auth.FunctionType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        functionType_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *组件节点类型
       * </pre>
       *
       * <code>optional .one2data.rbtmqmsgcli.auth.FunctionType function_type = 1;</code>
       */
      public Builder clearFunctionType() {
        
        functionType_ = 0;
        onChanged();
        return this;
      }

      private Object businessResourceUuid_ = "";
      /**
       * <pre>
       *业务资源唯一ID
       * </pre>
       *
       * <code>optional string business_resource_uuid = 2;</code>
       */
      public String getBusinessResourceUuid() {
        Object ref = businessResourceUuid_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          businessResourceUuid_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <pre>
       *业务资源唯一ID
       * </pre>
       *
       * <code>optional string business_resource_uuid = 2;</code>
       */
      public com.google.protobuf.ByteString
          getBusinessResourceUuidBytes() {
        Object ref = businessResourceUuid_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          businessResourceUuid_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *业务资源唯一ID
       * </pre>
       *
       * <code>optional string business_resource_uuid = 2;</code>
       */
      public Builder setBusinessResourceUuid(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        businessResourceUuid_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *业务资源唯一ID
       * </pre>
       *
       * <code>optional string business_resource_uuid = 2;</code>
       */
      public Builder clearBusinessResourceUuid() {
        
        businessResourceUuid_ = getDefaultInstance().getBusinessResourceUuid();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *业务资源唯一ID
       * </pre>
       *
       * <code>optional string business_resource_uuid = 2;</code>
       */
      public Builder setBusinessResourceUuidBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        businessResourceUuid_ = value;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:one2data.rbtmqmsgcli.auth.RevokeFunctionLicense)
    }

    // @@protoc_insertion_point(class_scope:one2data.rbtmqmsgcli.auth.RevokeFunctionLicense)
    private static final cn.keptdata.one2data.header.message.protobuf.auth.Auth.RevokeFunctionLicense DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new cn.keptdata.one2data.header.message.protobuf.auth.Auth.RevokeFunctionLicense();
    }

    public static cn.keptdata.one2data.header.message.protobuf.auth.Auth.RevokeFunctionLicense getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<RevokeFunctionLicense>
        PARSER = new com.google.protobuf.AbstractParser<RevokeFunctionLicense>() {
      public RevokeFunctionLicense parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new RevokeFunctionLicense(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<RevokeFunctionLicense> parser() {
      return PARSER;
    }

    @Override
    public com.google.protobuf.Parser<RevokeFunctionLicense> getParserForType() {
      return PARSER;
    }

    public cn.keptdata.one2data.header.message.protobuf.auth.Auth.RevokeFunctionLicense getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface RevokeFunctionLicenseAckOrBuilder extends
      // @@protoc_insertion_point(interface_extends:one2data.rbtmqmsgcli.auth.RevokeFunctionLicenseAck)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     *授权结果
     * </pre>
     *
     * <code>optional .one2data.rbtmqmsgcli.common.BaseAck base_ack = 1;</code>
     */
    boolean hasBaseAck();
    /**
     * <pre>
     *授权结果
     * </pre>
     *
     * <code>optional .one2data.rbtmqmsgcli.common.BaseAck base_ack = 1;</code>
     */
    cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck getBaseAck();
    /**
     * <pre>
     *授权结果
     * </pre>
     *
     * <code>optional .one2data.rbtmqmsgcli.common.BaseAck base_ack = 1;</code>
     */
    cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAckOrBuilder getBaseAckOrBuilder();

    /**
     * <pre>
     *功能类型
     * </pre>
     *
     * <code>optional .one2data.rbtmqmsgcli.auth.FunctionType function_type = 2;</code>
     */
    int getFunctionTypeValue();
    /**
     * <pre>
     *功能类型
     * </pre>
     *
     * <code>optional .one2data.rbtmqmsgcli.auth.FunctionType function_type = 2;</code>
     */
    cn.keptdata.one2data.header.message.protobuf.auth.Auth.FunctionType getFunctionType();

    /**
     * <pre>
     *业务资源唯一ID
     * </pre>
     *
     * <code>optional string business_resource_uuid = 3;</code>
     */
    String getBusinessResourceUuid();
    /**
     * <pre>
     *业务资源唯一ID
     * </pre>
     *
     * <code>optional string business_resource_uuid = 3;</code>
     */
    com.google.protobuf.ByteString
        getBusinessResourceUuidBytes();
  }
  /**
   * <pre>
   *撤销功能授权响应
   * </pre>
   *
   * Protobuf type {@code one2data.rbtmqmsgcli.auth.RevokeFunctionLicenseAck}
   */
  public  static final class RevokeFunctionLicenseAck extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:one2data.rbtmqmsgcli.auth.RevokeFunctionLicenseAck)
      RevokeFunctionLicenseAckOrBuilder {
    // Use RevokeFunctionLicenseAck.newBuilder() to construct.
    private RevokeFunctionLicenseAck(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private RevokeFunctionLicenseAck() {
      functionType_ = 0;
      businessResourceUuid_ = "";
    }

    @Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private RevokeFunctionLicenseAck(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck.Builder subBuilder = null;
              if (baseAck_ != null) {
                subBuilder = baseAck_.toBuilder();
              }
              baseAck_ = input.readMessage(cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(baseAck_);
                baseAck_ = subBuilder.buildPartial();
              }

              break;
            }
            case 16: {
              int rawValue = input.readEnum();

              functionType_ = rawValue;
              break;
            }
            case 26: {
              String s = input.readStringRequireUtf8();

              businessResourceUuid_ = s;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return cn.keptdata.one2data.header.message.protobuf.auth.Auth.internal_static_one2data_rbtmqmsgcli_auth_RevokeFunctionLicenseAck_descriptor;
    }

    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return cn.keptdata.one2data.header.message.protobuf.auth.Auth.internal_static_one2data_rbtmqmsgcli_auth_RevokeFunctionLicenseAck_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              cn.keptdata.one2data.header.message.protobuf.auth.Auth.RevokeFunctionLicenseAck.class, cn.keptdata.one2data.header.message.protobuf.auth.Auth.RevokeFunctionLicenseAck.Builder.class);
    }

    public static final int BASE_ACK_FIELD_NUMBER = 1;
    private cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck baseAck_;
    /**
     * <pre>
     *授权结果
     * </pre>
     *
     * <code>optional .one2data.rbtmqmsgcli.common.BaseAck base_ack = 1;</code>
     */
    public boolean hasBaseAck() {
      return baseAck_ != null;
    }
    /**
     * <pre>
     *授权结果
     * </pre>
     *
     * <code>optional .one2data.rbtmqmsgcli.common.BaseAck base_ack = 1;</code>
     */
    public cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck getBaseAck() {
      return baseAck_ == null ? cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck.getDefaultInstance() : baseAck_;
    }
    /**
     * <pre>
     *授权结果
     * </pre>
     *
     * <code>optional .one2data.rbtmqmsgcli.common.BaseAck base_ack = 1;</code>
     */
    public cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAckOrBuilder getBaseAckOrBuilder() {
      return getBaseAck();
    }

    public static final int FUNCTION_TYPE_FIELD_NUMBER = 2;
    private int functionType_;
    /**
     * <pre>
     *功能类型
     * </pre>
     *
     * <code>optional .one2data.rbtmqmsgcli.auth.FunctionType function_type = 2;</code>
     */
    public int getFunctionTypeValue() {
      return functionType_;
    }
    /**
     * <pre>
     *功能类型
     * </pre>
     *
     * <code>optional .one2data.rbtmqmsgcli.auth.FunctionType function_type = 2;</code>
     */
    public cn.keptdata.one2data.header.message.protobuf.auth.Auth.FunctionType getFunctionType() {
      cn.keptdata.one2data.header.message.protobuf.auth.Auth.FunctionType result = cn.keptdata.one2data.header.message.protobuf.auth.Auth.FunctionType.valueOf(functionType_);
      return result == null ? cn.keptdata.one2data.header.message.protobuf.auth.Auth.FunctionType.UNRECOGNIZED : result;
    }

    public static final int BUSINESS_RESOURCE_UUID_FIELD_NUMBER = 3;
    private volatile Object businessResourceUuid_;
    /**
     * <pre>
     *业务资源唯一ID
     * </pre>
     *
     * <code>optional string business_resource_uuid = 3;</code>
     */
    public String getBusinessResourceUuid() {
      Object ref = businessResourceUuid_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        businessResourceUuid_ = s;
        return s;
      }
    }
    /**
     * <pre>
     *业务资源唯一ID
     * </pre>
     *
     * <code>optional string business_resource_uuid = 3;</code>
     */
    public com.google.protobuf.ByteString
        getBusinessResourceUuidBytes() {
      Object ref = businessResourceUuid_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        businessResourceUuid_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (baseAck_ != null) {
        output.writeMessage(1, getBaseAck());
      }
      if (functionType_ != cn.keptdata.one2data.header.message.protobuf.auth.Auth.FunctionType.FT_DEFAULT.getNumber()) {
        output.writeEnum(2, functionType_);
      }
      if (!getBusinessResourceUuidBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 3, businessResourceUuid_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (baseAck_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getBaseAck());
      }
      if (functionType_ != cn.keptdata.one2data.header.message.protobuf.auth.Auth.FunctionType.FT_DEFAULT.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(2, functionType_);
      }
      if (!getBusinessResourceUuidBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, businessResourceUuid_);
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @Override
    public boolean equals(final Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof cn.keptdata.one2data.header.message.protobuf.auth.Auth.RevokeFunctionLicenseAck)) {
        return super.equals(obj);
      }
      cn.keptdata.one2data.header.message.protobuf.auth.Auth.RevokeFunctionLicenseAck other = (cn.keptdata.one2data.header.message.protobuf.auth.Auth.RevokeFunctionLicenseAck) obj;

      boolean result = true;
      result = result && (hasBaseAck() == other.hasBaseAck());
      if (hasBaseAck()) {
        result = result && getBaseAck()
            .equals(other.getBaseAck());
      }
      result = result && functionType_ == other.functionType_;
      result = result && getBusinessResourceUuid()
          .equals(other.getBusinessResourceUuid());
      return result;
    }

    @Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptorForType().hashCode();
      if (hasBaseAck()) {
        hash = (37 * hash) + BASE_ACK_FIELD_NUMBER;
        hash = (53 * hash) + getBaseAck().hashCode();
      }
      hash = (37 * hash) + FUNCTION_TYPE_FIELD_NUMBER;
      hash = (53 * hash) + functionType_;
      hash = (37 * hash) + BUSINESS_RESOURCE_UUID_FIELD_NUMBER;
      hash = (53 * hash) + getBusinessResourceUuid().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static cn.keptdata.one2data.header.message.protobuf.auth.Auth.RevokeFunctionLicenseAck parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static cn.keptdata.one2data.header.message.protobuf.auth.Auth.RevokeFunctionLicenseAck parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static cn.keptdata.one2data.header.message.protobuf.auth.Auth.RevokeFunctionLicenseAck parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static cn.keptdata.one2data.header.message.protobuf.auth.Auth.RevokeFunctionLicenseAck parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static cn.keptdata.one2data.header.message.protobuf.auth.Auth.RevokeFunctionLicenseAck parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static cn.keptdata.one2data.header.message.protobuf.auth.Auth.RevokeFunctionLicenseAck parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static cn.keptdata.one2data.header.message.protobuf.auth.Auth.RevokeFunctionLicenseAck parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static cn.keptdata.one2data.header.message.protobuf.auth.Auth.RevokeFunctionLicenseAck parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static cn.keptdata.one2data.header.message.protobuf.auth.Auth.RevokeFunctionLicenseAck parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static cn.keptdata.one2data.header.message.protobuf.auth.Auth.RevokeFunctionLicenseAck parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(cn.keptdata.one2data.header.message.protobuf.auth.Auth.RevokeFunctionLicenseAck prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     *撤销功能授权响应
     * </pre>
     *
     * Protobuf type {@code one2data.rbtmqmsgcli.auth.RevokeFunctionLicenseAck}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:one2data.rbtmqmsgcli.auth.RevokeFunctionLicenseAck)
        cn.keptdata.one2data.header.message.protobuf.auth.Auth.RevokeFunctionLicenseAckOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return cn.keptdata.one2data.header.message.protobuf.auth.Auth.internal_static_one2data_rbtmqmsgcli_auth_RevokeFunctionLicenseAck_descriptor;
      }

      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return cn.keptdata.one2data.header.message.protobuf.auth.Auth.internal_static_one2data_rbtmqmsgcli_auth_RevokeFunctionLicenseAck_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                cn.keptdata.one2data.header.message.protobuf.auth.Auth.RevokeFunctionLicenseAck.class, cn.keptdata.one2data.header.message.protobuf.auth.Auth.RevokeFunctionLicenseAck.Builder.class);
      }

      // Construct using cn.keptdata.one2data.header.message.protobuf.auth.Auth.RevokeFunctionLicenseAck.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        if (baseAckBuilder_ == null) {
          baseAck_ = null;
        } else {
          baseAck_ = null;
          baseAckBuilder_ = null;
        }
        functionType_ = 0;

        businessResourceUuid_ = "";

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return cn.keptdata.one2data.header.message.protobuf.auth.Auth.internal_static_one2data_rbtmqmsgcli_auth_RevokeFunctionLicenseAck_descriptor;
      }

      public cn.keptdata.one2data.header.message.protobuf.auth.Auth.RevokeFunctionLicenseAck getDefaultInstanceForType() {
        return cn.keptdata.one2data.header.message.protobuf.auth.Auth.RevokeFunctionLicenseAck.getDefaultInstance();
      }

      public cn.keptdata.one2data.header.message.protobuf.auth.Auth.RevokeFunctionLicenseAck build() {
        cn.keptdata.one2data.header.message.protobuf.auth.Auth.RevokeFunctionLicenseAck result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public cn.keptdata.one2data.header.message.protobuf.auth.Auth.RevokeFunctionLicenseAck buildPartial() {
        cn.keptdata.one2data.header.message.protobuf.auth.Auth.RevokeFunctionLicenseAck result = new cn.keptdata.one2data.header.message.protobuf.auth.Auth.RevokeFunctionLicenseAck(this);
        if (baseAckBuilder_ == null) {
          result.baseAck_ = baseAck_;
        } else {
          result.baseAck_ = baseAckBuilder_.build();
        }
        result.functionType_ = functionType_;
        result.businessResourceUuid_ = businessResourceUuid_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof cn.keptdata.one2data.header.message.protobuf.auth.Auth.RevokeFunctionLicenseAck) {
          return mergeFrom((cn.keptdata.one2data.header.message.protobuf.auth.Auth.RevokeFunctionLicenseAck)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(cn.keptdata.one2data.header.message.protobuf.auth.Auth.RevokeFunctionLicenseAck other) {
        if (other == cn.keptdata.one2data.header.message.protobuf.auth.Auth.RevokeFunctionLicenseAck.getDefaultInstance()) return this;
        if (other.hasBaseAck()) {
          mergeBaseAck(other.getBaseAck());
        }
        if (other.functionType_ != 0) {
          setFunctionTypeValue(other.getFunctionTypeValue());
        }
        if (!other.getBusinessResourceUuid().isEmpty()) {
          businessResourceUuid_ = other.businessResourceUuid_;
          onChanged();
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        cn.keptdata.one2data.header.message.protobuf.auth.Auth.RevokeFunctionLicenseAck parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (cn.keptdata.one2data.header.message.protobuf.auth.Auth.RevokeFunctionLicenseAck) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck baseAck_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck, cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck.Builder, cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAckOrBuilder> baseAckBuilder_;
      /**
       * <pre>
       *授权结果
       * </pre>
       *
       * <code>optional .one2data.rbtmqmsgcli.common.BaseAck base_ack = 1;</code>
       */
      public boolean hasBaseAck() {
        return baseAckBuilder_ != null || baseAck_ != null;
      }
      /**
       * <pre>
       *授权结果
       * </pre>
       *
       * <code>optional .one2data.rbtmqmsgcli.common.BaseAck base_ack = 1;</code>
       */
      public cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck getBaseAck() {
        if (baseAckBuilder_ == null) {
          return baseAck_ == null ? cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck.getDefaultInstance() : baseAck_;
        } else {
          return baseAckBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       *授权结果
       * </pre>
       *
       * <code>optional .one2data.rbtmqmsgcli.common.BaseAck base_ack = 1;</code>
       */
      public Builder setBaseAck(cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck value) {
        if (baseAckBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          baseAck_ = value;
          onChanged();
        } else {
          baseAckBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       *授权结果
       * </pre>
       *
       * <code>optional .one2data.rbtmqmsgcli.common.BaseAck base_ack = 1;</code>
       */
      public Builder setBaseAck(
          cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck.Builder builderForValue) {
        if (baseAckBuilder_ == null) {
          baseAck_ = builderForValue.build();
          onChanged();
        } else {
          baseAckBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       *授权结果
       * </pre>
       *
       * <code>optional .one2data.rbtmqmsgcli.common.BaseAck base_ack = 1;</code>
       */
      public Builder mergeBaseAck(cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck value) {
        if (baseAckBuilder_ == null) {
          if (baseAck_ != null) {
            baseAck_ =
              cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck.newBuilder(baseAck_).mergeFrom(value).buildPartial();
          } else {
            baseAck_ = value;
          }
          onChanged();
        } else {
          baseAckBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       *授权结果
       * </pre>
       *
       * <code>optional .one2data.rbtmqmsgcli.common.BaseAck base_ack = 1;</code>
       */
      public Builder clearBaseAck() {
        if (baseAckBuilder_ == null) {
          baseAck_ = null;
          onChanged();
        } else {
          baseAck_ = null;
          baseAckBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       *授权结果
       * </pre>
       *
       * <code>optional .one2data.rbtmqmsgcli.common.BaseAck base_ack = 1;</code>
       */
      public cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck.Builder getBaseAckBuilder() {
        
        onChanged();
        return getBaseAckFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       *授权结果
       * </pre>
       *
       * <code>optional .one2data.rbtmqmsgcli.common.BaseAck base_ack = 1;</code>
       */
      public cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAckOrBuilder getBaseAckOrBuilder() {
        if (baseAckBuilder_ != null) {
          return baseAckBuilder_.getMessageOrBuilder();
        } else {
          return baseAck_ == null ?
              cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck.getDefaultInstance() : baseAck_;
        }
      }
      /**
       * <pre>
       *授权结果
       * </pre>
       *
       * <code>optional .one2data.rbtmqmsgcli.common.BaseAck base_ack = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck, cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck.Builder, cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAckOrBuilder> 
          getBaseAckFieldBuilder() {
        if (baseAckBuilder_ == null) {
          baseAckBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck, cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck.Builder, cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAckOrBuilder>(
                  getBaseAck(),
                  getParentForChildren(),
                  isClean());
          baseAck_ = null;
        }
        return baseAckBuilder_;
      }

      private int functionType_ = 0;
      /**
       * <pre>
       *功能类型
       * </pre>
       *
       * <code>optional .one2data.rbtmqmsgcli.auth.FunctionType function_type = 2;</code>
       */
      public int getFunctionTypeValue() {
        return functionType_;
      }
      /**
       * <pre>
       *功能类型
       * </pre>
       *
       * <code>optional .one2data.rbtmqmsgcli.auth.FunctionType function_type = 2;</code>
       */
      public Builder setFunctionTypeValue(int value) {
        functionType_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *功能类型
       * </pre>
       *
       * <code>optional .one2data.rbtmqmsgcli.auth.FunctionType function_type = 2;</code>
       */
      public cn.keptdata.one2data.header.message.protobuf.auth.Auth.FunctionType getFunctionType() {
        cn.keptdata.one2data.header.message.protobuf.auth.Auth.FunctionType result = cn.keptdata.one2data.header.message.protobuf.auth.Auth.FunctionType.valueOf(functionType_);
        return result == null ? cn.keptdata.one2data.header.message.protobuf.auth.Auth.FunctionType.UNRECOGNIZED : result;
      }
      /**
       * <pre>
       *功能类型
       * </pre>
       *
       * <code>optional .one2data.rbtmqmsgcli.auth.FunctionType function_type = 2;</code>
       */
      public Builder setFunctionType(cn.keptdata.one2data.header.message.protobuf.auth.Auth.FunctionType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        functionType_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *功能类型
       * </pre>
       *
       * <code>optional .one2data.rbtmqmsgcli.auth.FunctionType function_type = 2;</code>
       */
      public Builder clearFunctionType() {
        
        functionType_ = 0;
        onChanged();
        return this;
      }

      private Object businessResourceUuid_ = "";
      /**
       * <pre>
       *业务资源唯一ID
       * </pre>
       *
       * <code>optional string business_resource_uuid = 3;</code>
       */
      public String getBusinessResourceUuid() {
        Object ref = businessResourceUuid_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          businessResourceUuid_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <pre>
       *业务资源唯一ID
       * </pre>
       *
       * <code>optional string business_resource_uuid = 3;</code>
       */
      public com.google.protobuf.ByteString
          getBusinessResourceUuidBytes() {
        Object ref = businessResourceUuid_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          businessResourceUuid_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *业务资源唯一ID
       * </pre>
       *
       * <code>optional string business_resource_uuid = 3;</code>
       */
      public Builder setBusinessResourceUuid(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        businessResourceUuid_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *业务资源唯一ID
       * </pre>
       *
       * <code>optional string business_resource_uuid = 3;</code>
       */
      public Builder clearBusinessResourceUuid() {
        
        businessResourceUuid_ = getDefaultInstance().getBusinessResourceUuid();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *业务资源唯一ID
       * </pre>
       *
       * <code>optional string business_resource_uuid = 3;</code>
       */
      public Builder setBusinessResourceUuidBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        businessResourceUuid_ = value;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:one2data.rbtmqmsgcli.auth.RevokeFunctionLicenseAck)
    }

    // @@protoc_insertion_point(class_scope:one2data.rbtmqmsgcli.auth.RevokeFunctionLicenseAck)
    private static final cn.keptdata.one2data.header.message.protobuf.auth.Auth.RevokeFunctionLicenseAck DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new cn.keptdata.one2data.header.message.protobuf.auth.Auth.RevokeFunctionLicenseAck();
    }

    public static cn.keptdata.one2data.header.message.protobuf.auth.Auth.RevokeFunctionLicenseAck getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<RevokeFunctionLicenseAck>
        PARSER = new com.google.protobuf.AbstractParser<RevokeFunctionLicenseAck>() {
      public RevokeFunctionLicenseAck parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new RevokeFunctionLicenseAck(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<RevokeFunctionLicenseAck> parser() {
      return PARSER;
    }

    @Override
    public com.google.protobuf.Parser<RevokeFunctionLicenseAck> getParserForType() {
      return PARSER;
    }

    public cn.keptdata.one2data.header.message.protobuf.auth.Auth.RevokeFunctionLicenseAck getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface CorrectNodeLicenseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:one2data.rbtmqmsgcli.auth.CorrectNodeLicense)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     *需要修正的客户端UUIDKey
     * </pre>
     *
     * <code>repeated string client_uuid_key = 1;</code>
     */
    java.util.List<String>
        getClientUuidKeyList();
    /**
     * <pre>
     *需要修正的客户端UUIDKey
     * </pre>
     *
     * <code>repeated string client_uuid_key = 1;</code>
     */
    int getClientUuidKeyCount();
    /**
     * <pre>
     *需要修正的客户端UUIDKey
     * </pre>
     *
     * <code>repeated string client_uuid_key = 1;</code>
     */
    String getClientUuidKey(int index);
    /**
     * <pre>
     *需要修正的客户端UUIDKey
     * </pre>
     *
     * <code>repeated string client_uuid_key = 1;</code>
     */
    com.google.protobuf.ByteString
        getClientUuidKeyBytes(int index);

    /**
     * <pre>
     *需要修正的计算节点UUIDKey
     * </pre>
     *
     * <code>repeated string ecs_uuid_key = 2;</code>
     */
    java.util.List<String>
        getEcsUuidKeyList();
    /**
     * <pre>
     *需要修正的计算节点UUIDKey
     * </pre>
     *
     * <code>repeated string ecs_uuid_key = 2;</code>
     */
    int getEcsUuidKeyCount();
    /**
     * <pre>
     *需要修正的计算节点UUIDKey
     * </pre>
     *
     * <code>repeated string ecs_uuid_key = 2;</code>
     */
    String getEcsUuidKey(int index);
    /**
     * <pre>
     *需要修正的计算节点UUIDKey
     * </pre>
     *
     * <code>repeated string ecs_uuid_key = 2;</code>
     */
    com.google.protobuf.ByteString
        getEcsUuidKeyBytes(int index);

    /**
     * <pre>
     *需要修正的存储节点UUIDKey
     * </pre>
     *
     * <code>repeated string storage_uuid_key = 3;</code>
     */
    java.util.List<String>
        getStorageUuidKeyList();
    /**
     * <pre>
     *需要修正的存储节点UUIDKey
     * </pre>
     *
     * <code>repeated string storage_uuid_key = 3;</code>
     */
    int getStorageUuidKeyCount();
    /**
     * <pre>
     *需要修正的存储节点UUIDKey
     * </pre>
     *
     * <code>repeated string storage_uuid_key = 3;</code>
     */
    String getStorageUuidKey(int index);
    /**
     * <pre>
     *需要修正的存储节点UUIDKey
     * </pre>
     *
     * <code>repeated string storage_uuid_key = 3;</code>
     */
    com.google.protobuf.ByteString
        getStorageUuidKeyBytes(int index);
  }
  /**
   * <pre>
   *订正(校正)授权信息
   * </pre>
   *
   * Protobuf type {@code one2data.rbtmqmsgcli.auth.CorrectNodeLicense}
   */
  public  static final class CorrectNodeLicense extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:one2data.rbtmqmsgcli.auth.CorrectNodeLicense)
      CorrectNodeLicenseOrBuilder {
    // Use CorrectNodeLicense.newBuilder() to construct.
    private CorrectNodeLicense(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private CorrectNodeLicense() {
      clientUuidKey_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      ecsUuidKey_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      storageUuidKey_ = com.google.protobuf.LazyStringArrayList.EMPTY;
    }

    @Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private CorrectNodeLicense(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              String s = input.readStringRequireUtf8();
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                clientUuidKey_ = new com.google.protobuf.LazyStringArrayList();
                mutable_bitField0_ |= 0x00000001;
              }
              clientUuidKey_.add(s);
              break;
            }
            case 18: {
              String s = input.readStringRequireUtf8();
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                ecsUuidKey_ = new com.google.protobuf.LazyStringArrayList();
                mutable_bitField0_ |= 0x00000002;
              }
              ecsUuidKey_.add(s);
              break;
            }
            case 26: {
              String s = input.readStringRequireUtf8();
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                storageUuidKey_ = new com.google.protobuf.LazyStringArrayList();
                mutable_bitField0_ |= 0x00000004;
              }
              storageUuidKey_.add(s);
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          clientUuidKey_ = clientUuidKey_.getUnmodifiableView();
        }
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          ecsUuidKey_ = ecsUuidKey_.getUnmodifiableView();
        }
        if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
          storageUuidKey_ = storageUuidKey_.getUnmodifiableView();
        }
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return cn.keptdata.one2data.header.message.protobuf.auth.Auth.internal_static_one2data_rbtmqmsgcli_auth_CorrectNodeLicense_descriptor;
    }

    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return cn.keptdata.one2data.header.message.protobuf.auth.Auth.internal_static_one2data_rbtmqmsgcli_auth_CorrectNodeLicense_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              cn.keptdata.one2data.header.message.protobuf.auth.Auth.CorrectNodeLicense.class, cn.keptdata.one2data.header.message.protobuf.auth.Auth.CorrectNodeLicense.Builder.class);
    }

    public static final int CLIENT_UUID_KEY_FIELD_NUMBER = 1;
    private com.google.protobuf.LazyStringList clientUuidKey_;
    /**
     * <pre>
     *需要修正的客户端UUIDKey
     * </pre>
     *
     * <code>repeated string client_uuid_key = 1;</code>
     */
    public com.google.protobuf.ProtocolStringList
        getClientUuidKeyList() {
      return clientUuidKey_;
    }
    /**
     * <pre>
     *需要修正的客户端UUIDKey
     * </pre>
     *
     * <code>repeated string client_uuid_key = 1;</code>
     */
    public int getClientUuidKeyCount() {
      return clientUuidKey_.size();
    }
    /**
     * <pre>
     *需要修正的客户端UUIDKey
     * </pre>
     *
     * <code>repeated string client_uuid_key = 1;</code>
     */
    public String getClientUuidKey(int index) {
      return clientUuidKey_.get(index);
    }
    /**
     * <pre>
     *需要修正的客户端UUIDKey
     * </pre>
     *
     * <code>repeated string client_uuid_key = 1;</code>
     */
    public com.google.protobuf.ByteString
        getClientUuidKeyBytes(int index) {
      return clientUuidKey_.getByteString(index);
    }

    public static final int ECS_UUID_KEY_FIELD_NUMBER = 2;
    private com.google.protobuf.LazyStringList ecsUuidKey_;
    /**
     * <pre>
     *需要修正的计算节点UUIDKey
     * </pre>
     *
     * <code>repeated string ecs_uuid_key = 2;</code>
     */
    public com.google.protobuf.ProtocolStringList
        getEcsUuidKeyList() {
      return ecsUuidKey_;
    }
    /**
     * <pre>
     *需要修正的计算节点UUIDKey
     * </pre>
     *
     * <code>repeated string ecs_uuid_key = 2;</code>
     */
    public int getEcsUuidKeyCount() {
      return ecsUuidKey_.size();
    }
    /**
     * <pre>
     *需要修正的计算节点UUIDKey
     * </pre>
     *
     * <code>repeated string ecs_uuid_key = 2;</code>
     */
    public String getEcsUuidKey(int index) {
      return ecsUuidKey_.get(index);
    }
    /**
     * <pre>
     *需要修正的计算节点UUIDKey
     * </pre>
     *
     * <code>repeated string ecs_uuid_key = 2;</code>
     */
    public com.google.protobuf.ByteString
        getEcsUuidKeyBytes(int index) {
      return ecsUuidKey_.getByteString(index);
    }

    public static final int STORAGE_UUID_KEY_FIELD_NUMBER = 3;
    private com.google.protobuf.LazyStringList storageUuidKey_;
    /**
     * <pre>
     *需要修正的存储节点UUIDKey
     * </pre>
     *
     * <code>repeated string storage_uuid_key = 3;</code>
     */
    public com.google.protobuf.ProtocolStringList
        getStorageUuidKeyList() {
      return storageUuidKey_;
    }
    /**
     * <pre>
     *需要修正的存储节点UUIDKey
     * </pre>
     *
     * <code>repeated string storage_uuid_key = 3;</code>
     */
    public int getStorageUuidKeyCount() {
      return storageUuidKey_.size();
    }
    /**
     * <pre>
     *需要修正的存储节点UUIDKey
     * </pre>
     *
     * <code>repeated string storage_uuid_key = 3;</code>
     */
    public String getStorageUuidKey(int index) {
      return storageUuidKey_.get(index);
    }
    /**
     * <pre>
     *需要修正的存储节点UUIDKey
     * </pre>
     *
     * <code>repeated string storage_uuid_key = 3;</code>
     */
    public com.google.protobuf.ByteString
        getStorageUuidKeyBytes(int index) {
      return storageUuidKey_.getByteString(index);
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < clientUuidKey_.size(); i++) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, clientUuidKey_.getRaw(i));
      }
      for (int i = 0; i < ecsUuidKey_.size(); i++) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, ecsUuidKey_.getRaw(i));
      }
      for (int i = 0; i < storageUuidKey_.size(); i++) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 3, storageUuidKey_.getRaw(i));
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      {
        int dataSize = 0;
        for (int i = 0; i < clientUuidKey_.size(); i++) {
          dataSize += computeStringSizeNoTag(clientUuidKey_.getRaw(i));
        }
        size += dataSize;
        size += 1 * getClientUuidKeyList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < ecsUuidKey_.size(); i++) {
          dataSize += computeStringSizeNoTag(ecsUuidKey_.getRaw(i));
        }
        size += dataSize;
        size += 1 * getEcsUuidKeyList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < storageUuidKey_.size(); i++) {
          dataSize += computeStringSizeNoTag(storageUuidKey_.getRaw(i));
        }
        size += dataSize;
        size += 1 * getStorageUuidKeyList().size();
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @Override
    public boolean equals(final Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof cn.keptdata.one2data.header.message.protobuf.auth.Auth.CorrectNodeLicense)) {
        return super.equals(obj);
      }
      cn.keptdata.one2data.header.message.protobuf.auth.Auth.CorrectNodeLicense other = (cn.keptdata.one2data.header.message.protobuf.auth.Auth.CorrectNodeLicense) obj;

      boolean result = true;
      result = result && getClientUuidKeyList()
          .equals(other.getClientUuidKeyList());
      result = result && getEcsUuidKeyList()
          .equals(other.getEcsUuidKeyList());
      result = result && getStorageUuidKeyList()
          .equals(other.getStorageUuidKeyList());
      return result;
    }

    @Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptorForType().hashCode();
      if (getClientUuidKeyCount() > 0) {
        hash = (37 * hash) + CLIENT_UUID_KEY_FIELD_NUMBER;
        hash = (53 * hash) + getClientUuidKeyList().hashCode();
      }
      if (getEcsUuidKeyCount() > 0) {
        hash = (37 * hash) + ECS_UUID_KEY_FIELD_NUMBER;
        hash = (53 * hash) + getEcsUuidKeyList().hashCode();
      }
      if (getStorageUuidKeyCount() > 0) {
        hash = (37 * hash) + STORAGE_UUID_KEY_FIELD_NUMBER;
        hash = (53 * hash) + getStorageUuidKeyList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static cn.keptdata.one2data.header.message.protobuf.auth.Auth.CorrectNodeLicense parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static cn.keptdata.one2data.header.message.protobuf.auth.Auth.CorrectNodeLicense parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static cn.keptdata.one2data.header.message.protobuf.auth.Auth.CorrectNodeLicense parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static cn.keptdata.one2data.header.message.protobuf.auth.Auth.CorrectNodeLicense parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static cn.keptdata.one2data.header.message.protobuf.auth.Auth.CorrectNodeLicense parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static cn.keptdata.one2data.header.message.protobuf.auth.Auth.CorrectNodeLicense parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static cn.keptdata.one2data.header.message.protobuf.auth.Auth.CorrectNodeLicense parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static cn.keptdata.one2data.header.message.protobuf.auth.Auth.CorrectNodeLicense parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static cn.keptdata.one2data.header.message.protobuf.auth.Auth.CorrectNodeLicense parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static cn.keptdata.one2data.header.message.protobuf.auth.Auth.CorrectNodeLicense parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(cn.keptdata.one2data.header.message.protobuf.auth.Auth.CorrectNodeLicense prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     *订正(校正)授权信息
     * </pre>
     *
     * Protobuf type {@code one2data.rbtmqmsgcli.auth.CorrectNodeLicense}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:one2data.rbtmqmsgcli.auth.CorrectNodeLicense)
        cn.keptdata.one2data.header.message.protobuf.auth.Auth.CorrectNodeLicenseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return cn.keptdata.one2data.header.message.protobuf.auth.Auth.internal_static_one2data_rbtmqmsgcli_auth_CorrectNodeLicense_descriptor;
      }

      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return cn.keptdata.one2data.header.message.protobuf.auth.Auth.internal_static_one2data_rbtmqmsgcli_auth_CorrectNodeLicense_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                cn.keptdata.one2data.header.message.protobuf.auth.Auth.CorrectNodeLicense.class, cn.keptdata.one2data.header.message.protobuf.auth.Auth.CorrectNodeLicense.Builder.class);
      }

      // Construct using cn.keptdata.one2data.header.message.protobuf.auth.Auth.CorrectNodeLicense.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        clientUuidKey_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000001);
        ecsUuidKey_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000002);
        storageUuidKey_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return cn.keptdata.one2data.header.message.protobuf.auth.Auth.internal_static_one2data_rbtmqmsgcli_auth_CorrectNodeLicense_descriptor;
      }

      public cn.keptdata.one2data.header.message.protobuf.auth.Auth.CorrectNodeLicense getDefaultInstanceForType() {
        return cn.keptdata.one2data.header.message.protobuf.auth.Auth.CorrectNodeLicense.getDefaultInstance();
      }

      public cn.keptdata.one2data.header.message.protobuf.auth.Auth.CorrectNodeLicense build() {
        cn.keptdata.one2data.header.message.protobuf.auth.Auth.CorrectNodeLicense result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public cn.keptdata.one2data.header.message.protobuf.auth.Auth.CorrectNodeLicense buildPartial() {
        cn.keptdata.one2data.header.message.protobuf.auth.Auth.CorrectNodeLicense result = new cn.keptdata.one2data.header.message.protobuf.auth.Auth.CorrectNodeLicense(this);
        int from_bitField0_ = bitField0_;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          clientUuidKey_ = clientUuidKey_.getUnmodifiableView();
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.clientUuidKey_ = clientUuidKey_;
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          ecsUuidKey_ = ecsUuidKey_.getUnmodifiableView();
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.ecsUuidKey_ = ecsUuidKey_;
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          storageUuidKey_ = storageUuidKey_.getUnmodifiableView();
          bitField0_ = (bitField0_ & ~0x00000004);
        }
        result.storageUuidKey_ = storageUuidKey_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof cn.keptdata.one2data.header.message.protobuf.auth.Auth.CorrectNodeLicense) {
          return mergeFrom((cn.keptdata.one2data.header.message.protobuf.auth.Auth.CorrectNodeLicense)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(cn.keptdata.one2data.header.message.protobuf.auth.Auth.CorrectNodeLicense other) {
        if (other == cn.keptdata.one2data.header.message.protobuf.auth.Auth.CorrectNodeLicense.getDefaultInstance()) return this;
        if (!other.clientUuidKey_.isEmpty()) {
          if (clientUuidKey_.isEmpty()) {
            clientUuidKey_ = other.clientUuidKey_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureClientUuidKeyIsMutable();
            clientUuidKey_.addAll(other.clientUuidKey_);
          }
          onChanged();
        }
        if (!other.ecsUuidKey_.isEmpty()) {
          if (ecsUuidKey_.isEmpty()) {
            ecsUuidKey_ = other.ecsUuidKey_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureEcsUuidKeyIsMutable();
            ecsUuidKey_.addAll(other.ecsUuidKey_);
          }
          onChanged();
        }
        if (!other.storageUuidKey_.isEmpty()) {
          if (storageUuidKey_.isEmpty()) {
            storageUuidKey_ = other.storageUuidKey_;
            bitField0_ = (bitField0_ & ~0x00000004);
          } else {
            ensureStorageUuidKeyIsMutable();
            storageUuidKey_.addAll(other.storageUuidKey_);
          }
          onChanged();
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        cn.keptdata.one2data.header.message.protobuf.auth.Auth.CorrectNodeLicense parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (cn.keptdata.one2data.header.message.protobuf.auth.Auth.CorrectNodeLicense) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private com.google.protobuf.LazyStringList clientUuidKey_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      private void ensureClientUuidKeyIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          clientUuidKey_ = new com.google.protobuf.LazyStringArrayList(clientUuidKey_);
          bitField0_ |= 0x00000001;
         }
      }
      /**
       * <pre>
       *需要修正的客户端UUIDKey
       * </pre>
       *
       * <code>repeated string client_uuid_key = 1;</code>
       */
      public com.google.protobuf.ProtocolStringList
          getClientUuidKeyList() {
        return clientUuidKey_.getUnmodifiableView();
      }
      /**
       * <pre>
       *需要修正的客户端UUIDKey
       * </pre>
       *
       * <code>repeated string client_uuid_key = 1;</code>
       */
      public int getClientUuidKeyCount() {
        return clientUuidKey_.size();
      }
      /**
       * <pre>
       *需要修正的客户端UUIDKey
       * </pre>
       *
       * <code>repeated string client_uuid_key = 1;</code>
       */
      public String getClientUuidKey(int index) {
        return clientUuidKey_.get(index);
      }
      /**
       * <pre>
       *需要修正的客户端UUIDKey
       * </pre>
       *
       * <code>repeated string client_uuid_key = 1;</code>
       */
      public com.google.protobuf.ByteString
          getClientUuidKeyBytes(int index) {
        return clientUuidKey_.getByteString(index);
      }
      /**
       * <pre>
       *需要修正的客户端UUIDKey
       * </pre>
       *
       * <code>repeated string client_uuid_key = 1;</code>
       */
      public Builder setClientUuidKey(
          int index, String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureClientUuidKeyIsMutable();
        clientUuidKey_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       *需要修正的客户端UUIDKey
       * </pre>
       *
       * <code>repeated string client_uuid_key = 1;</code>
       */
      public Builder addClientUuidKey(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureClientUuidKeyIsMutable();
        clientUuidKey_.add(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       *需要修正的客户端UUIDKey
       * </pre>
       *
       * <code>repeated string client_uuid_key = 1;</code>
       */
      public Builder addAllClientUuidKey(
          Iterable<String> values) {
        ensureClientUuidKeyIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, clientUuidKey_);
        onChanged();
        return this;
      }
      /**
       * <pre>
       *需要修正的客户端UUIDKey
       * </pre>
       *
       * <code>repeated string client_uuid_key = 1;</code>
       */
      public Builder clearClientUuidKey() {
        clientUuidKey_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }
      /**
       * <pre>
       *需要修正的客户端UUIDKey
       * </pre>
       *
       * <code>repeated string client_uuid_key = 1;</code>
       */
      public Builder addClientUuidKeyBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        ensureClientUuidKeyIsMutable();
        clientUuidKey_.add(value);
        onChanged();
        return this;
      }

      private com.google.protobuf.LazyStringList ecsUuidKey_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      private void ensureEcsUuidKeyIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          ecsUuidKey_ = new com.google.protobuf.LazyStringArrayList(ecsUuidKey_);
          bitField0_ |= 0x00000002;
         }
      }
      /**
       * <pre>
       *需要修正的计算节点UUIDKey
       * </pre>
       *
       * <code>repeated string ecs_uuid_key = 2;</code>
       */
      public com.google.protobuf.ProtocolStringList
          getEcsUuidKeyList() {
        return ecsUuidKey_.getUnmodifiableView();
      }
      /**
       * <pre>
       *需要修正的计算节点UUIDKey
       * </pre>
       *
       * <code>repeated string ecs_uuid_key = 2;</code>
       */
      public int getEcsUuidKeyCount() {
        return ecsUuidKey_.size();
      }
      /**
       * <pre>
       *需要修正的计算节点UUIDKey
       * </pre>
       *
       * <code>repeated string ecs_uuid_key = 2;</code>
       */
      public String getEcsUuidKey(int index) {
        return ecsUuidKey_.get(index);
      }
      /**
       * <pre>
       *需要修正的计算节点UUIDKey
       * </pre>
       *
       * <code>repeated string ecs_uuid_key = 2;</code>
       */
      public com.google.protobuf.ByteString
          getEcsUuidKeyBytes(int index) {
        return ecsUuidKey_.getByteString(index);
      }
      /**
       * <pre>
       *需要修正的计算节点UUIDKey
       * </pre>
       *
       * <code>repeated string ecs_uuid_key = 2;</code>
       */
      public Builder setEcsUuidKey(
          int index, String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureEcsUuidKeyIsMutable();
        ecsUuidKey_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       *需要修正的计算节点UUIDKey
       * </pre>
       *
       * <code>repeated string ecs_uuid_key = 2;</code>
       */
      public Builder addEcsUuidKey(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureEcsUuidKeyIsMutable();
        ecsUuidKey_.add(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       *需要修正的计算节点UUIDKey
       * </pre>
       *
       * <code>repeated string ecs_uuid_key = 2;</code>
       */
      public Builder addAllEcsUuidKey(
          Iterable<String> values) {
        ensureEcsUuidKeyIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, ecsUuidKey_);
        onChanged();
        return this;
      }
      /**
       * <pre>
       *需要修正的计算节点UUIDKey
       * </pre>
       *
       * <code>repeated string ecs_uuid_key = 2;</code>
       */
      public Builder clearEcsUuidKey() {
        ecsUuidKey_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }
      /**
       * <pre>
       *需要修正的计算节点UUIDKey
       * </pre>
       *
       * <code>repeated string ecs_uuid_key = 2;</code>
       */
      public Builder addEcsUuidKeyBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        ensureEcsUuidKeyIsMutable();
        ecsUuidKey_.add(value);
        onChanged();
        return this;
      }

      private com.google.protobuf.LazyStringList storageUuidKey_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      private void ensureStorageUuidKeyIsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          storageUuidKey_ = new com.google.protobuf.LazyStringArrayList(storageUuidKey_);
          bitField0_ |= 0x00000004;
         }
      }
      /**
       * <pre>
       *需要修正的存储节点UUIDKey
       * </pre>
       *
       * <code>repeated string storage_uuid_key = 3;</code>
       */
      public com.google.protobuf.ProtocolStringList
          getStorageUuidKeyList() {
        return storageUuidKey_.getUnmodifiableView();
      }
      /**
       * <pre>
       *需要修正的存储节点UUIDKey
       * </pre>
       *
       * <code>repeated string storage_uuid_key = 3;</code>
       */
      public int getStorageUuidKeyCount() {
        return storageUuidKey_.size();
      }
      /**
       * <pre>
       *需要修正的存储节点UUIDKey
       * </pre>
       *
       * <code>repeated string storage_uuid_key = 3;</code>
       */
      public String getStorageUuidKey(int index) {
        return storageUuidKey_.get(index);
      }
      /**
       * <pre>
       *需要修正的存储节点UUIDKey
       * </pre>
       *
       * <code>repeated string storage_uuid_key = 3;</code>
       */
      public com.google.protobuf.ByteString
          getStorageUuidKeyBytes(int index) {
        return storageUuidKey_.getByteString(index);
      }
      /**
       * <pre>
       *需要修正的存储节点UUIDKey
       * </pre>
       *
       * <code>repeated string storage_uuid_key = 3;</code>
       */
      public Builder setStorageUuidKey(
          int index, String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureStorageUuidKeyIsMutable();
        storageUuidKey_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       *需要修正的存储节点UUIDKey
       * </pre>
       *
       * <code>repeated string storage_uuid_key = 3;</code>
       */
      public Builder addStorageUuidKey(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureStorageUuidKeyIsMutable();
        storageUuidKey_.add(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       *需要修正的存储节点UUIDKey
       * </pre>
       *
       * <code>repeated string storage_uuid_key = 3;</code>
       */
      public Builder addAllStorageUuidKey(
          Iterable<String> values) {
        ensureStorageUuidKeyIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, storageUuidKey_);
        onChanged();
        return this;
      }
      /**
       * <pre>
       *需要修正的存储节点UUIDKey
       * </pre>
       *
       * <code>repeated string storage_uuid_key = 3;</code>
       */
      public Builder clearStorageUuidKey() {
        storageUuidKey_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
        return this;
      }
      /**
       * <pre>
       *需要修正的存储节点UUIDKey
       * </pre>
       *
       * <code>repeated string storage_uuid_key = 3;</code>
       */
      public Builder addStorageUuidKeyBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        ensureStorageUuidKeyIsMutable();
        storageUuidKey_.add(value);
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:one2data.rbtmqmsgcli.auth.CorrectNodeLicense)
    }

    // @@protoc_insertion_point(class_scope:one2data.rbtmqmsgcli.auth.CorrectNodeLicense)
    private static final cn.keptdata.one2data.header.message.protobuf.auth.Auth.CorrectNodeLicense DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new cn.keptdata.one2data.header.message.protobuf.auth.Auth.CorrectNodeLicense();
    }

    public static cn.keptdata.one2data.header.message.protobuf.auth.Auth.CorrectNodeLicense getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<CorrectNodeLicense>
        PARSER = new com.google.protobuf.AbstractParser<CorrectNodeLicense>() {
      public CorrectNodeLicense parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new CorrectNodeLicense(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<CorrectNodeLicense> parser() {
      return PARSER;
    }

    @Override
    public com.google.protobuf.Parser<CorrectNodeLicense> getParserForType() {
      return PARSER;
    }

    public cn.keptdata.one2data.header.message.protobuf.auth.Auth.CorrectNodeLicense getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface CorrectNodeLicenseAckOrBuilder extends
      // @@protoc_insertion_point(interface_extends:one2data.rbtmqmsgcli.auth.CorrectNodeLicenseAck)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     *订正结果
     * </pre>
     *
     * <code>optional .one2data.rbtmqmsgcli.common.BaseAck base_ack = 1;</code>
     */
    boolean hasBaseAck();
    /**
     * <pre>
     *订正结果
     * </pre>
     *
     * <code>optional .one2data.rbtmqmsgcli.common.BaseAck base_ack = 1;</code>
     */
    cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck getBaseAck();
    /**
     * <pre>
     *订正结果
     * </pre>
     *
     * <code>optional .one2data.rbtmqmsgcli.common.BaseAck base_ack = 1;</code>
     */
    cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAckOrBuilder getBaseAckOrBuilder();
  }
  /**
   * <pre>
   *订正授权响应结果
   * </pre>
   *
   * Protobuf type {@code one2data.rbtmqmsgcli.auth.CorrectNodeLicenseAck}
   */
  public  static final class CorrectNodeLicenseAck extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:one2data.rbtmqmsgcli.auth.CorrectNodeLicenseAck)
      CorrectNodeLicenseAckOrBuilder {
    // Use CorrectNodeLicenseAck.newBuilder() to construct.
    private CorrectNodeLicenseAck(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private CorrectNodeLicenseAck() {
    }

    @Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private CorrectNodeLicenseAck(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck.Builder subBuilder = null;
              if (baseAck_ != null) {
                subBuilder = baseAck_.toBuilder();
              }
              baseAck_ = input.readMessage(cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(baseAck_);
                baseAck_ = subBuilder.buildPartial();
              }

              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return cn.keptdata.one2data.header.message.protobuf.auth.Auth.internal_static_one2data_rbtmqmsgcli_auth_CorrectNodeLicenseAck_descriptor;
    }

    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return cn.keptdata.one2data.header.message.protobuf.auth.Auth.internal_static_one2data_rbtmqmsgcli_auth_CorrectNodeLicenseAck_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              cn.keptdata.one2data.header.message.protobuf.auth.Auth.CorrectNodeLicenseAck.class, cn.keptdata.one2data.header.message.protobuf.auth.Auth.CorrectNodeLicenseAck.Builder.class);
    }

    public static final int BASE_ACK_FIELD_NUMBER = 1;
    private cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck baseAck_;
    /**
     * <pre>
     *订正结果
     * </pre>
     *
     * <code>optional .one2data.rbtmqmsgcli.common.BaseAck base_ack = 1;</code>
     */
    public boolean hasBaseAck() {
      return baseAck_ != null;
    }
    /**
     * <pre>
     *订正结果
     * </pre>
     *
     * <code>optional .one2data.rbtmqmsgcli.common.BaseAck base_ack = 1;</code>
     */
    public cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck getBaseAck() {
      return baseAck_ == null ? cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck.getDefaultInstance() : baseAck_;
    }
    /**
     * <pre>
     *订正结果
     * </pre>
     *
     * <code>optional .one2data.rbtmqmsgcli.common.BaseAck base_ack = 1;</code>
     */
    public cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAckOrBuilder getBaseAckOrBuilder() {
      return getBaseAck();
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (baseAck_ != null) {
        output.writeMessage(1, getBaseAck());
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (baseAck_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getBaseAck());
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @Override
    public boolean equals(final Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof cn.keptdata.one2data.header.message.protobuf.auth.Auth.CorrectNodeLicenseAck)) {
        return super.equals(obj);
      }
      cn.keptdata.one2data.header.message.protobuf.auth.Auth.CorrectNodeLicenseAck other = (cn.keptdata.one2data.header.message.protobuf.auth.Auth.CorrectNodeLicenseAck) obj;

      boolean result = true;
      result = result && (hasBaseAck() == other.hasBaseAck());
      if (hasBaseAck()) {
        result = result && getBaseAck()
            .equals(other.getBaseAck());
      }
      return result;
    }

    @Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptorForType().hashCode();
      if (hasBaseAck()) {
        hash = (37 * hash) + BASE_ACK_FIELD_NUMBER;
        hash = (53 * hash) + getBaseAck().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static cn.keptdata.one2data.header.message.protobuf.auth.Auth.CorrectNodeLicenseAck parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static cn.keptdata.one2data.header.message.protobuf.auth.Auth.CorrectNodeLicenseAck parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static cn.keptdata.one2data.header.message.protobuf.auth.Auth.CorrectNodeLicenseAck parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static cn.keptdata.one2data.header.message.protobuf.auth.Auth.CorrectNodeLicenseAck parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static cn.keptdata.one2data.header.message.protobuf.auth.Auth.CorrectNodeLicenseAck parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static cn.keptdata.one2data.header.message.protobuf.auth.Auth.CorrectNodeLicenseAck parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static cn.keptdata.one2data.header.message.protobuf.auth.Auth.CorrectNodeLicenseAck parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static cn.keptdata.one2data.header.message.protobuf.auth.Auth.CorrectNodeLicenseAck parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static cn.keptdata.one2data.header.message.protobuf.auth.Auth.CorrectNodeLicenseAck parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static cn.keptdata.one2data.header.message.protobuf.auth.Auth.CorrectNodeLicenseAck parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(cn.keptdata.one2data.header.message.protobuf.auth.Auth.CorrectNodeLicenseAck prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     *订正授权响应结果
     * </pre>
     *
     * Protobuf type {@code one2data.rbtmqmsgcli.auth.CorrectNodeLicenseAck}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:one2data.rbtmqmsgcli.auth.CorrectNodeLicenseAck)
        cn.keptdata.one2data.header.message.protobuf.auth.Auth.CorrectNodeLicenseAckOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return cn.keptdata.one2data.header.message.protobuf.auth.Auth.internal_static_one2data_rbtmqmsgcli_auth_CorrectNodeLicenseAck_descriptor;
      }

      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return cn.keptdata.one2data.header.message.protobuf.auth.Auth.internal_static_one2data_rbtmqmsgcli_auth_CorrectNodeLicenseAck_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                cn.keptdata.one2data.header.message.protobuf.auth.Auth.CorrectNodeLicenseAck.class, cn.keptdata.one2data.header.message.protobuf.auth.Auth.CorrectNodeLicenseAck.Builder.class);
      }

      // Construct using cn.keptdata.one2data.header.message.protobuf.auth.Auth.CorrectNodeLicenseAck.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        if (baseAckBuilder_ == null) {
          baseAck_ = null;
        } else {
          baseAck_ = null;
          baseAckBuilder_ = null;
        }
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return cn.keptdata.one2data.header.message.protobuf.auth.Auth.internal_static_one2data_rbtmqmsgcli_auth_CorrectNodeLicenseAck_descriptor;
      }

      public cn.keptdata.one2data.header.message.protobuf.auth.Auth.CorrectNodeLicenseAck getDefaultInstanceForType() {
        return cn.keptdata.one2data.header.message.protobuf.auth.Auth.CorrectNodeLicenseAck.getDefaultInstance();
      }

      public cn.keptdata.one2data.header.message.protobuf.auth.Auth.CorrectNodeLicenseAck build() {
        cn.keptdata.one2data.header.message.protobuf.auth.Auth.CorrectNodeLicenseAck result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public cn.keptdata.one2data.header.message.protobuf.auth.Auth.CorrectNodeLicenseAck buildPartial() {
        cn.keptdata.one2data.header.message.protobuf.auth.Auth.CorrectNodeLicenseAck result = new cn.keptdata.one2data.header.message.protobuf.auth.Auth.CorrectNodeLicenseAck(this);
        if (baseAckBuilder_ == null) {
          result.baseAck_ = baseAck_;
        } else {
          result.baseAck_ = baseAckBuilder_.build();
        }
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof cn.keptdata.one2data.header.message.protobuf.auth.Auth.CorrectNodeLicenseAck) {
          return mergeFrom((cn.keptdata.one2data.header.message.protobuf.auth.Auth.CorrectNodeLicenseAck)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(cn.keptdata.one2data.header.message.protobuf.auth.Auth.CorrectNodeLicenseAck other) {
        if (other == cn.keptdata.one2data.header.message.protobuf.auth.Auth.CorrectNodeLicenseAck.getDefaultInstance()) return this;
        if (other.hasBaseAck()) {
          mergeBaseAck(other.getBaseAck());
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        cn.keptdata.one2data.header.message.protobuf.auth.Auth.CorrectNodeLicenseAck parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (cn.keptdata.one2data.header.message.protobuf.auth.Auth.CorrectNodeLicenseAck) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck baseAck_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck, cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck.Builder, cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAckOrBuilder> baseAckBuilder_;
      /**
       * <pre>
       *订正结果
       * </pre>
       *
       * <code>optional .one2data.rbtmqmsgcli.common.BaseAck base_ack = 1;</code>
       */
      public boolean hasBaseAck() {
        return baseAckBuilder_ != null || baseAck_ != null;
      }
      /**
       * <pre>
       *订正结果
       * </pre>
       *
       * <code>optional .one2data.rbtmqmsgcli.common.BaseAck base_ack = 1;</code>
       */
      public cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck getBaseAck() {
        if (baseAckBuilder_ == null) {
          return baseAck_ == null ? cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck.getDefaultInstance() : baseAck_;
        } else {
          return baseAckBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       *订正结果
       * </pre>
       *
       * <code>optional .one2data.rbtmqmsgcli.common.BaseAck base_ack = 1;</code>
       */
      public Builder setBaseAck(cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck value) {
        if (baseAckBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          baseAck_ = value;
          onChanged();
        } else {
          baseAckBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       *订正结果
       * </pre>
       *
       * <code>optional .one2data.rbtmqmsgcli.common.BaseAck base_ack = 1;</code>
       */
      public Builder setBaseAck(
          cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck.Builder builderForValue) {
        if (baseAckBuilder_ == null) {
          baseAck_ = builderForValue.build();
          onChanged();
        } else {
          baseAckBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       *订正结果
       * </pre>
       *
       * <code>optional .one2data.rbtmqmsgcli.common.BaseAck base_ack = 1;</code>
       */
      public Builder mergeBaseAck(cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck value) {
        if (baseAckBuilder_ == null) {
          if (baseAck_ != null) {
            baseAck_ =
              cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck.newBuilder(baseAck_).mergeFrom(value).buildPartial();
          } else {
            baseAck_ = value;
          }
          onChanged();
        } else {
          baseAckBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       *订正结果
       * </pre>
       *
       * <code>optional .one2data.rbtmqmsgcli.common.BaseAck base_ack = 1;</code>
       */
      public Builder clearBaseAck() {
        if (baseAckBuilder_ == null) {
          baseAck_ = null;
          onChanged();
        } else {
          baseAck_ = null;
          baseAckBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       *订正结果
       * </pre>
       *
       * <code>optional .one2data.rbtmqmsgcli.common.BaseAck base_ack = 1;</code>
       */
      public cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck.Builder getBaseAckBuilder() {
        
        onChanged();
        return getBaseAckFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       *订正结果
       * </pre>
       *
       * <code>optional .one2data.rbtmqmsgcli.common.BaseAck base_ack = 1;</code>
       */
      public cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAckOrBuilder getBaseAckOrBuilder() {
        if (baseAckBuilder_ != null) {
          return baseAckBuilder_.getMessageOrBuilder();
        } else {
          return baseAck_ == null ?
              cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck.getDefaultInstance() : baseAck_;
        }
      }
      /**
       * <pre>
       *订正结果
       * </pre>
       *
       * <code>optional .one2data.rbtmqmsgcli.common.BaseAck base_ack = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck, cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck.Builder, cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAckOrBuilder> 
          getBaseAckFieldBuilder() {
        if (baseAckBuilder_ == null) {
          baseAckBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck, cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck.Builder, cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAckOrBuilder>(
                  getBaseAck(),
                  getParentForChildren(),
                  isClean());
          baseAck_ = null;
        }
        return baseAckBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:one2data.rbtmqmsgcli.auth.CorrectNodeLicenseAck)
    }

    // @@protoc_insertion_point(class_scope:one2data.rbtmqmsgcli.auth.CorrectNodeLicenseAck)
    private static final cn.keptdata.one2data.header.message.protobuf.auth.Auth.CorrectNodeLicenseAck DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new cn.keptdata.one2data.header.message.protobuf.auth.Auth.CorrectNodeLicenseAck();
    }

    public static cn.keptdata.one2data.header.message.protobuf.auth.Auth.CorrectNodeLicenseAck getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<CorrectNodeLicenseAck>
        PARSER = new com.google.protobuf.AbstractParser<CorrectNodeLicenseAck>() {
      public CorrectNodeLicenseAck parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new CorrectNodeLicenseAck(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<CorrectNodeLicenseAck> parser() {
      return PARSER;
    }

    @Override
    public com.google.protobuf.Parser<CorrectNodeLicenseAck> getParserForType() {
      return PARSER;
    }

    public cn.keptdata.one2data.header.message.protobuf.auth.Auth.CorrectNodeLicenseAck getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface VerifyLicenseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:one2data.rbtmqmsgcli.auth.VerifyLicense)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     *组件节点类型
     * </pre>
     *
     * <code>optional .one2data.rbtmqmsgcli.common.NodeType node_type = 1;</code>
     */
    int getNodeTypeValue();
    /**
     * <pre>
     *组件节点类型
     * </pre>
     *
     * <code>optional .one2data.rbtmqmsgcli.common.NodeType node_type = 1;</code>
     */
    cn.keptdata.one2data.header.message.protobuf.common.Node.NodeType getNodeType();

    /**
     * <pre>
     *节点内部唯一ID
     * </pre>
     *
     * <code>optional string uuid_key = 2;</code>
     */
    String getUuidKey();
    /**
     * <pre>
     *节点内部唯一ID
     * </pre>
     *
     * <code>optional string uuid_key = 2;</code>
     */
    com.google.protobuf.ByteString
        getUuidKeyBytes();

    /**
     * <pre>
     *证书信息
     * </pre>
     *
     * <code>optional string license_content = 3;</code>
     */
    String getLicenseContent();
    /**
     * <pre>
     *证书信息
     * </pre>
     *
     * <code>optional string license_content = 3;</code>
     */
    com.google.protobuf.ByteString
        getLicenseContentBytes();
  }
  /**
   * <pre>
   *存储、客户端请求认证服务器进行认证
   * </pre>
   *
   * Protobuf type {@code one2data.rbtmqmsgcli.auth.VerifyLicense}
   */
  public  static final class VerifyLicense extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:one2data.rbtmqmsgcli.auth.VerifyLicense)
      VerifyLicenseOrBuilder {
    // Use VerifyLicense.newBuilder() to construct.
    private VerifyLicense(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private VerifyLicense() {
      nodeType_ = 0;
      uuidKey_ = "";
      licenseContent_ = "";
    }

    @Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private VerifyLicense(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();

              nodeType_ = rawValue;
              break;
            }
            case 18: {
              String s = input.readStringRequireUtf8();

              uuidKey_ = s;
              break;
            }
            case 26: {
              String s = input.readStringRequireUtf8();

              licenseContent_ = s;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return cn.keptdata.one2data.header.message.protobuf.auth.Auth.internal_static_one2data_rbtmqmsgcli_auth_VerifyLicense_descriptor;
    }

    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return cn.keptdata.one2data.header.message.protobuf.auth.Auth.internal_static_one2data_rbtmqmsgcli_auth_VerifyLicense_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              cn.keptdata.one2data.header.message.protobuf.auth.Auth.VerifyLicense.class, cn.keptdata.one2data.header.message.protobuf.auth.Auth.VerifyLicense.Builder.class);
    }

    public static final int NODE_TYPE_FIELD_NUMBER = 1;
    private int nodeType_;
    /**
     * <pre>
     *组件节点类型
     * </pre>
     *
     * <code>optional .one2data.rbtmqmsgcli.common.NodeType node_type = 1;</code>
     */
    public int getNodeTypeValue() {
      return nodeType_;
    }
    /**
     * <pre>
     *组件节点类型
     * </pre>
     *
     * <code>optional .one2data.rbtmqmsgcli.common.NodeType node_type = 1;</code>
     */
    public cn.keptdata.one2data.header.message.protobuf.common.Node.NodeType getNodeType() {
      cn.keptdata.one2data.header.message.protobuf.common.Node.NodeType result = cn.keptdata.one2data.header.message.protobuf.common.Node.NodeType.valueOf(nodeType_);
      return result == null ? cn.keptdata.one2data.header.message.protobuf.common.Node.NodeType.UNRECOGNIZED : result;
    }

    public static final int UUID_KEY_FIELD_NUMBER = 2;
    private volatile Object uuidKey_;
    /**
     * <pre>
     *节点内部唯一ID
     * </pre>
     *
     * <code>optional string uuid_key = 2;</code>
     */
    public String getUuidKey() {
      Object ref = uuidKey_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        uuidKey_ = s;
        return s;
      }
    }
    /**
     * <pre>
     *节点内部唯一ID
     * </pre>
     *
     * <code>optional string uuid_key = 2;</code>
     */
    public com.google.protobuf.ByteString
        getUuidKeyBytes() {
      Object ref = uuidKey_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        uuidKey_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int LICENSE_CONTENT_FIELD_NUMBER = 3;
    private volatile Object licenseContent_;
    /**
     * <pre>
     *证书信息
     * </pre>
     *
     * <code>optional string license_content = 3;</code>
     */
    public String getLicenseContent() {
      Object ref = licenseContent_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        licenseContent_ = s;
        return s;
      }
    }
    /**
     * <pre>
     *证书信息
     * </pre>
     *
     * <code>optional string license_content = 3;</code>
     */
    public com.google.protobuf.ByteString
        getLicenseContentBytes() {
      Object ref = licenseContent_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        licenseContent_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (nodeType_ != cn.keptdata.one2data.header.message.protobuf.common.Node.NodeType.NT_CLIENT.getNumber()) {
        output.writeEnum(1, nodeType_);
      }
      if (!getUuidKeyBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, uuidKey_);
      }
      if (!getLicenseContentBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 3, licenseContent_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (nodeType_ != cn.keptdata.one2data.header.message.protobuf.common.Node.NodeType.NT_CLIENT.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, nodeType_);
      }
      if (!getUuidKeyBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, uuidKey_);
      }
      if (!getLicenseContentBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, licenseContent_);
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @Override
    public boolean equals(final Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof cn.keptdata.one2data.header.message.protobuf.auth.Auth.VerifyLicense)) {
        return super.equals(obj);
      }
      cn.keptdata.one2data.header.message.protobuf.auth.Auth.VerifyLicense other = (cn.keptdata.one2data.header.message.protobuf.auth.Auth.VerifyLicense) obj;

      boolean result = true;
      result = result && nodeType_ == other.nodeType_;
      result = result && getUuidKey()
          .equals(other.getUuidKey());
      result = result && getLicenseContent()
          .equals(other.getLicenseContent());
      return result;
    }

    @Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptorForType().hashCode();
      hash = (37 * hash) + NODE_TYPE_FIELD_NUMBER;
      hash = (53 * hash) + nodeType_;
      hash = (37 * hash) + UUID_KEY_FIELD_NUMBER;
      hash = (53 * hash) + getUuidKey().hashCode();
      hash = (37 * hash) + LICENSE_CONTENT_FIELD_NUMBER;
      hash = (53 * hash) + getLicenseContent().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static cn.keptdata.one2data.header.message.protobuf.auth.Auth.VerifyLicense parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static cn.keptdata.one2data.header.message.protobuf.auth.Auth.VerifyLicense parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static cn.keptdata.one2data.header.message.protobuf.auth.Auth.VerifyLicense parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static cn.keptdata.one2data.header.message.protobuf.auth.Auth.VerifyLicense parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static cn.keptdata.one2data.header.message.protobuf.auth.Auth.VerifyLicense parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static cn.keptdata.one2data.header.message.protobuf.auth.Auth.VerifyLicense parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static cn.keptdata.one2data.header.message.protobuf.auth.Auth.VerifyLicense parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static cn.keptdata.one2data.header.message.protobuf.auth.Auth.VerifyLicense parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static cn.keptdata.one2data.header.message.protobuf.auth.Auth.VerifyLicense parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static cn.keptdata.one2data.header.message.protobuf.auth.Auth.VerifyLicense parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(cn.keptdata.one2data.header.message.protobuf.auth.Auth.VerifyLicense prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     *存储、客户端请求认证服务器进行认证
     * </pre>
     *
     * Protobuf type {@code one2data.rbtmqmsgcli.auth.VerifyLicense}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:one2data.rbtmqmsgcli.auth.VerifyLicense)
        cn.keptdata.one2data.header.message.protobuf.auth.Auth.VerifyLicenseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return cn.keptdata.one2data.header.message.protobuf.auth.Auth.internal_static_one2data_rbtmqmsgcli_auth_VerifyLicense_descriptor;
      }

      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return cn.keptdata.one2data.header.message.protobuf.auth.Auth.internal_static_one2data_rbtmqmsgcli_auth_VerifyLicense_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                cn.keptdata.one2data.header.message.protobuf.auth.Auth.VerifyLicense.class, cn.keptdata.one2data.header.message.protobuf.auth.Auth.VerifyLicense.Builder.class);
      }

      // Construct using cn.keptdata.one2data.header.message.protobuf.auth.Auth.VerifyLicense.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        nodeType_ = 0;

        uuidKey_ = "";

        licenseContent_ = "";

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return cn.keptdata.one2data.header.message.protobuf.auth.Auth.internal_static_one2data_rbtmqmsgcli_auth_VerifyLicense_descriptor;
      }

      public cn.keptdata.one2data.header.message.protobuf.auth.Auth.VerifyLicense getDefaultInstanceForType() {
        return cn.keptdata.one2data.header.message.protobuf.auth.Auth.VerifyLicense.getDefaultInstance();
      }

      public cn.keptdata.one2data.header.message.protobuf.auth.Auth.VerifyLicense build() {
        cn.keptdata.one2data.header.message.protobuf.auth.Auth.VerifyLicense result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public cn.keptdata.one2data.header.message.protobuf.auth.Auth.VerifyLicense buildPartial() {
        cn.keptdata.one2data.header.message.protobuf.auth.Auth.VerifyLicense result = new cn.keptdata.one2data.header.message.protobuf.auth.Auth.VerifyLicense(this);
        result.nodeType_ = nodeType_;
        result.uuidKey_ = uuidKey_;
        result.licenseContent_ = licenseContent_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof cn.keptdata.one2data.header.message.protobuf.auth.Auth.VerifyLicense) {
          return mergeFrom((cn.keptdata.one2data.header.message.protobuf.auth.Auth.VerifyLicense)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(cn.keptdata.one2data.header.message.protobuf.auth.Auth.VerifyLicense other) {
        if (other == cn.keptdata.one2data.header.message.protobuf.auth.Auth.VerifyLicense.getDefaultInstance()) return this;
        if (other.nodeType_ != 0) {
          setNodeTypeValue(other.getNodeTypeValue());
        }
        if (!other.getUuidKey().isEmpty()) {
          uuidKey_ = other.uuidKey_;
          onChanged();
        }
        if (!other.getLicenseContent().isEmpty()) {
          licenseContent_ = other.licenseContent_;
          onChanged();
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        cn.keptdata.one2data.header.message.protobuf.auth.Auth.VerifyLicense parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (cn.keptdata.one2data.header.message.protobuf.auth.Auth.VerifyLicense) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private int nodeType_ = 0;
      /**
       * <pre>
       *组件节点类型
       * </pre>
       *
       * <code>optional .one2data.rbtmqmsgcli.common.NodeType node_type = 1;</code>
       */
      public int getNodeTypeValue() {
        return nodeType_;
      }
      /**
       * <pre>
       *组件节点类型
       * </pre>
       *
       * <code>optional .one2data.rbtmqmsgcli.common.NodeType node_type = 1;</code>
       */
      public Builder setNodeTypeValue(int value) {
        nodeType_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *组件节点类型
       * </pre>
       *
       * <code>optional .one2data.rbtmqmsgcli.common.NodeType node_type = 1;</code>
       */
      public cn.keptdata.one2data.header.message.protobuf.common.Node.NodeType getNodeType() {
        cn.keptdata.one2data.header.message.protobuf.common.Node.NodeType result = cn.keptdata.one2data.header.message.protobuf.common.Node.NodeType.valueOf(nodeType_);
        return result == null ? cn.keptdata.one2data.header.message.protobuf.common.Node.NodeType.UNRECOGNIZED : result;
      }
      /**
       * <pre>
       *组件节点类型
       * </pre>
       *
       * <code>optional .one2data.rbtmqmsgcli.common.NodeType node_type = 1;</code>
       */
      public Builder setNodeType(cn.keptdata.one2data.header.message.protobuf.common.Node.NodeType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        nodeType_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *组件节点类型
       * </pre>
       *
       * <code>optional .one2data.rbtmqmsgcli.common.NodeType node_type = 1;</code>
       */
      public Builder clearNodeType() {
        
        nodeType_ = 0;
        onChanged();
        return this;
      }

      private Object uuidKey_ = "";
      /**
       * <pre>
       *节点内部唯一ID
       * </pre>
       *
       * <code>optional string uuid_key = 2;</code>
       */
      public String getUuidKey() {
        Object ref = uuidKey_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          uuidKey_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <pre>
       *节点内部唯一ID
       * </pre>
       *
       * <code>optional string uuid_key = 2;</code>
       */
      public com.google.protobuf.ByteString
          getUuidKeyBytes() {
        Object ref = uuidKey_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          uuidKey_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *节点内部唯一ID
       * </pre>
       *
       * <code>optional string uuid_key = 2;</code>
       */
      public Builder setUuidKey(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        uuidKey_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *节点内部唯一ID
       * </pre>
       *
       * <code>optional string uuid_key = 2;</code>
       */
      public Builder clearUuidKey() {
        
        uuidKey_ = getDefaultInstance().getUuidKey();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *节点内部唯一ID
       * </pre>
       *
       * <code>optional string uuid_key = 2;</code>
       */
      public Builder setUuidKeyBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        uuidKey_ = value;
        onChanged();
        return this;
      }

      private Object licenseContent_ = "";
      /**
       * <pre>
       *证书信息
       * </pre>
       *
       * <code>optional string license_content = 3;</code>
       */
      public String getLicenseContent() {
        Object ref = licenseContent_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          licenseContent_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <pre>
       *证书信息
       * </pre>
       *
       * <code>optional string license_content = 3;</code>
       */
      public com.google.protobuf.ByteString
          getLicenseContentBytes() {
        Object ref = licenseContent_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          licenseContent_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *证书信息
       * </pre>
       *
       * <code>optional string license_content = 3;</code>
       */
      public Builder setLicenseContent(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        licenseContent_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *证书信息
       * </pre>
       *
       * <code>optional string license_content = 3;</code>
       */
      public Builder clearLicenseContent() {
        
        licenseContent_ = getDefaultInstance().getLicenseContent();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *证书信息
       * </pre>
       *
       * <code>optional string license_content = 3;</code>
       */
      public Builder setLicenseContentBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        licenseContent_ = value;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:one2data.rbtmqmsgcli.auth.VerifyLicense)
    }

    // @@protoc_insertion_point(class_scope:one2data.rbtmqmsgcli.auth.VerifyLicense)
    private static final cn.keptdata.one2data.header.message.protobuf.auth.Auth.VerifyLicense DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new cn.keptdata.one2data.header.message.protobuf.auth.Auth.VerifyLicense();
    }

    public static cn.keptdata.one2data.header.message.protobuf.auth.Auth.VerifyLicense getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<VerifyLicense>
        PARSER = new com.google.protobuf.AbstractParser<VerifyLicense>() {
      public VerifyLicense parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new VerifyLicense(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<VerifyLicense> parser() {
      return PARSER;
    }

    @Override
    public com.google.protobuf.Parser<VerifyLicense> getParserForType() {
      return PARSER;
    }

    public cn.keptdata.one2data.header.message.protobuf.auth.Auth.VerifyLicense getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface VerifyLicenseAckOrBuilder extends
      // @@protoc_insertion_point(interface_extends:one2data.rbtmqmsgcli.auth.VerifyLicenseAck)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     *认证结果
     * </pre>
     *
     * <code>optional .one2data.rbtmqmsgcli.common.BaseAck base_ack = 1;</code>
     */
    boolean hasBaseAck();
    /**
     * <pre>
     *认证结果
     * </pre>
     *
     * <code>optional .one2data.rbtmqmsgcli.common.BaseAck base_ack = 1;</code>
     */
    cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck getBaseAck();
    /**
     * <pre>
     *认证结果
     * </pre>
     *
     * <code>optional .one2data.rbtmqmsgcli.common.BaseAck base_ack = 1;</code>
     */
    cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAckOrBuilder getBaseAckOrBuilder();

    /**
     * <pre>
     *节点连接认证信息
     * </pre>
     *
     * <code>optional string access_token = 2;</code>
     */
    String getAccessToken();
    /**
     * <pre>
     *节点连接认证信息
     * </pre>
     *
     * <code>optional string access_token = 2;</code>
     */
    com.google.protobuf.ByteString
        getAccessTokenBytes();
  }
  /**
   * <pre>
   *认证结果
   * </pre>
   *
   * Protobuf type {@code one2data.rbtmqmsgcli.auth.VerifyLicenseAck}
   */
  public  static final class VerifyLicenseAck extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:one2data.rbtmqmsgcli.auth.VerifyLicenseAck)
      VerifyLicenseAckOrBuilder {
    // Use VerifyLicenseAck.newBuilder() to construct.
    private VerifyLicenseAck(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private VerifyLicenseAck() {
      accessToken_ = "";
    }

    @Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private VerifyLicenseAck(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck.Builder subBuilder = null;
              if (baseAck_ != null) {
                subBuilder = baseAck_.toBuilder();
              }
              baseAck_ = input.readMessage(cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(baseAck_);
                baseAck_ = subBuilder.buildPartial();
              }

              break;
            }
            case 18: {
              String s = input.readStringRequireUtf8();

              accessToken_ = s;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return cn.keptdata.one2data.header.message.protobuf.auth.Auth.internal_static_one2data_rbtmqmsgcli_auth_VerifyLicenseAck_descriptor;
    }

    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return cn.keptdata.one2data.header.message.protobuf.auth.Auth.internal_static_one2data_rbtmqmsgcli_auth_VerifyLicenseAck_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              cn.keptdata.one2data.header.message.protobuf.auth.Auth.VerifyLicenseAck.class, cn.keptdata.one2data.header.message.protobuf.auth.Auth.VerifyLicenseAck.Builder.class);
    }

    public static final int BASE_ACK_FIELD_NUMBER = 1;
    private cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck baseAck_;
    /**
     * <pre>
     *认证结果
     * </pre>
     *
     * <code>optional .one2data.rbtmqmsgcli.common.BaseAck base_ack = 1;</code>
     */
    public boolean hasBaseAck() {
      return baseAck_ != null;
    }
    /**
     * <pre>
     *认证结果
     * </pre>
     *
     * <code>optional .one2data.rbtmqmsgcli.common.BaseAck base_ack = 1;</code>
     */
    public cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck getBaseAck() {
      return baseAck_ == null ? cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck.getDefaultInstance() : baseAck_;
    }
    /**
     * <pre>
     *认证结果
     * </pre>
     *
     * <code>optional .one2data.rbtmqmsgcli.common.BaseAck base_ack = 1;</code>
     */
    public cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAckOrBuilder getBaseAckOrBuilder() {
      return getBaseAck();
    }

    public static final int ACCESS_TOKEN_FIELD_NUMBER = 2;
    private volatile Object accessToken_;
    /**
     * <pre>
     *节点连接认证信息
     * </pre>
     *
     * <code>optional string access_token = 2;</code>
     */
    public String getAccessToken() {
      Object ref = accessToken_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        accessToken_ = s;
        return s;
      }
    }
    /**
     * <pre>
     *节点连接认证信息
     * </pre>
     *
     * <code>optional string access_token = 2;</code>
     */
    public com.google.protobuf.ByteString
        getAccessTokenBytes() {
      Object ref = accessToken_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        accessToken_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (baseAck_ != null) {
        output.writeMessage(1, getBaseAck());
      }
      if (!getAccessTokenBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, accessToken_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (baseAck_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getBaseAck());
      }
      if (!getAccessTokenBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, accessToken_);
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @Override
    public boolean equals(final Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof cn.keptdata.one2data.header.message.protobuf.auth.Auth.VerifyLicenseAck)) {
        return super.equals(obj);
      }
      cn.keptdata.one2data.header.message.protobuf.auth.Auth.VerifyLicenseAck other = (cn.keptdata.one2data.header.message.protobuf.auth.Auth.VerifyLicenseAck) obj;

      boolean result = true;
      result = result && (hasBaseAck() == other.hasBaseAck());
      if (hasBaseAck()) {
        result = result && getBaseAck()
            .equals(other.getBaseAck());
      }
      result = result && getAccessToken()
          .equals(other.getAccessToken());
      return result;
    }

    @Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptorForType().hashCode();
      if (hasBaseAck()) {
        hash = (37 * hash) + BASE_ACK_FIELD_NUMBER;
        hash = (53 * hash) + getBaseAck().hashCode();
      }
      hash = (37 * hash) + ACCESS_TOKEN_FIELD_NUMBER;
      hash = (53 * hash) + getAccessToken().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static cn.keptdata.one2data.header.message.protobuf.auth.Auth.VerifyLicenseAck parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static cn.keptdata.one2data.header.message.protobuf.auth.Auth.VerifyLicenseAck parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static cn.keptdata.one2data.header.message.protobuf.auth.Auth.VerifyLicenseAck parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static cn.keptdata.one2data.header.message.protobuf.auth.Auth.VerifyLicenseAck parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static cn.keptdata.one2data.header.message.protobuf.auth.Auth.VerifyLicenseAck parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static cn.keptdata.one2data.header.message.protobuf.auth.Auth.VerifyLicenseAck parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static cn.keptdata.one2data.header.message.protobuf.auth.Auth.VerifyLicenseAck parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static cn.keptdata.one2data.header.message.protobuf.auth.Auth.VerifyLicenseAck parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static cn.keptdata.one2data.header.message.protobuf.auth.Auth.VerifyLicenseAck parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static cn.keptdata.one2data.header.message.protobuf.auth.Auth.VerifyLicenseAck parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(cn.keptdata.one2data.header.message.protobuf.auth.Auth.VerifyLicenseAck prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     *认证结果
     * </pre>
     *
     * Protobuf type {@code one2data.rbtmqmsgcli.auth.VerifyLicenseAck}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:one2data.rbtmqmsgcli.auth.VerifyLicenseAck)
        cn.keptdata.one2data.header.message.protobuf.auth.Auth.VerifyLicenseAckOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return cn.keptdata.one2data.header.message.protobuf.auth.Auth.internal_static_one2data_rbtmqmsgcli_auth_VerifyLicenseAck_descriptor;
      }

      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return cn.keptdata.one2data.header.message.protobuf.auth.Auth.internal_static_one2data_rbtmqmsgcli_auth_VerifyLicenseAck_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                cn.keptdata.one2data.header.message.protobuf.auth.Auth.VerifyLicenseAck.class, cn.keptdata.one2data.header.message.protobuf.auth.Auth.VerifyLicenseAck.Builder.class);
      }

      // Construct using cn.keptdata.one2data.header.message.protobuf.auth.Auth.VerifyLicenseAck.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        if (baseAckBuilder_ == null) {
          baseAck_ = null;
        } else {
          baseAck_ = null;
          baseAckBuilder_ = null;
        }
        accessToken_ = "";

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return cn.keptdata.one2data.header.message.protobuf.auth.Auth.internal_static_one2data_rbtmqmsgcli_auth_VerifyLicenseAck_descriptor;
      }

      public cn.keptdata.one2data.header.message.protobuf.auth.Auth.VerifyLicenseAck getDefaultInstanceForType() {
        return cn.keptdata.one2data.header.message.protobuf.auth.Auth.VerifyLicenseAck.getDefaultInstance();
      }

      public cn.keptdata.one2data.header.message.protobuf.auth.Auth.VerifyLicenseAck build() {
        cn.keptdata.one2data.header.message.protobuf.auth.Auth.VerifyLicenseAck result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public cn.keptdata.one2data.header.message.protobuf.auth.Auth.VerifyLicenseAck buildPartial() {
        cn.keptdata.one2data.header.message.protobuf.auth.Auth.VerifyLicenseAck result = new cn.keptdata.one2data.header.message.protobuf.auth.Auth.VerifyLicenseAck(this);
        if (baseAckBuilder_ == null) {
          result.baseAck_ = baseAck_;
        } else {
          result.baseAck_ = baseAckBuilder_.build();
        }
        result.accessToken_ = accessToken_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof cn.keptdata.one2data.header.message.protobuf.auth.Auth.VerifyLicenseAck) {
          return mergeFrom((cn.keptdata.one2data.header.message.protobuf.auth.Auth.VerifyLicenseAck)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(cn.keptdata.one2data.header.message.protobuf.auth.Auth.VerifyLicenseAck other) {
        if (other == cn.keptdata.one2data.header.message.protobuf.auth.Auth.VerifyLicenseAck.getDefaultInstance()) return this;
        if (other.hasBaseAck()) {
          mergeBaseAck(other.getBaseAck());
        }
        if (!other.getAccessToken().isEmpty()) {
          accessToken_ = other.accessToken_;
          onChanged();
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        cn.keptdata.one2data.header.message.protobuf.auth.Auth.VerifyLicenseAck parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (cn.keptdata.one2data.header.message.protobuf.auth.Auth.VerifyLicenseAck) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck baseAck_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck, cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck.Builder, cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAckOrBuilder> baseAckBuilder_;
      /**
       * <pre>
       *认证结果
       * </pre>
       *
       * <code>optional .one2data.rbtmqmsgcli.common.BaseAck base_ack = 1;</code>
       */
      public boolean hasBaseAck() {
        return baseAckBuilder_ != null || baseAck_ != null;
      }
      /**
       * <pre>
       *认证结果
       * </pre>
       *
       * <code>optional .one2data.rbtmqmsgcli.common.BaseAck base_ack = 1;</code>
       */
      public cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck getBaseAck() {
        if (baseAckBuilder_ == null) {
          return baseAck_ == null ? cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck.getDefaultInstance() : baseAck_;
        } else {
          return baseAckBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       *认证结果
       * </pre>
       *
       * <code>optional .one2data.rbtmqmsgcli.common.BaseAck base_ack = 1;</code>
       */
      public Builder setBaseAck(cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck value) {
        if (baseAckBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          baseAck_ = value;
          onChanged();
        } else {
          baseAckBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       *认证结果
       * </pre>
       *
       * <code>optional .one2data.rbtmqmsgcli.common.BaseAck base_ack = 1;</code>
       */
      public Builder setBaseAck(
          cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck.Builder builderForValue) {
        if (baseAckBuilder_ == null) {
          baseAck_ = builderForValue.build();
          onChanged();
        } else {
          baseAckBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       *认证结果
       * </pre>
       *
       * <code>optional .one2data.rbtmqmsgcli.common.BaseAck base_ack = 1;</code>
       */
      public Builder mergeBaseAck(cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck value) {
        if (baseAckBuilder_ == null) {
          if (baseAck_ != null) {
            baseAck_ =
              cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck.newBuilder(baseAck_).mergeFrom(value).buildPartial();
          } else {
            baseAck_ = value;
          }
          onChanged();
        } else {
          baseAckBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       *认证结果
       * </pre>
       *
       * <code>optional .one2data.rbtmqmsgcli.common.BaseAck base_ack = 1;</code>
       */
      public Builder clearBaseAck() {
        if (baseAckBuilder_ == null) {
          baseAck_ = null;
          onChanged();
        } else {
          baseAck_ = null;
          baseAckBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       *认证结果
       * </pre>
       *
       * <code>optional .one2data.rbtmqmsgcli.common.BaseAck base_ack = 1;</code>
       */
      public cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck.Builder getBaseAckBuilder() {
        
        onChanged();
        return getBaseAckFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       *认证结果
       * </pre>
       *
       * <code>optional .one2data.rbtmqmsgcli.common.BaseAck base_ack = 1;</code>
       */
      public cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAckOrBuilder getBaseAckOrBuilder() {
        if (baseAckBuilder_ != null) {
          return baseAckBuilder_.getMessageOrBuilder();
        } else {
          return baseAck_ == null ?
              cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck.getDefaultInstance() : baseAck_;
        }
      }
      /**
       * <pre>
       *认证结果
       * </pre>
       *
       * <code>optional .one2data.rbtmqmsgcli.common.BaseAck base_ack = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck, cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck.Builder, cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAckOrBuilder> 
          getBaseAckFieldBuilder() {
        if (baseAckBuilder_ == null) {
          baseAckBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck, cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck.Builder, cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAckOrBuilder>(
                  getBaseAck(),
                  getParentForChildren(),
                  isClean());
          baseAck_ = null;
        }
        return baseAckBuilder_;
      }

      private Object accessToken_ = "";
      /**
       * <pre>
       *节点连接认证信息
       * </pre>
       *
       * <code>optional string access_token = 2;</code>
       */
      public String getAccessToken() {
        Object ref = accessToken_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          accessToken_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <pre>
       *节点连接认证信息
       * </pre>
       *
       * <code>optional string access_token = 2;</code>
       */
      public com.google.protobuf.ByteString
          getAccessTokenBytes() {
        Object ref = accessToken_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          accessToken_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *节点连接认证信息
       * </pre>
       *
       * <code>optional string access_token = 2;</code>
       */
      public Builder setAccessToken(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        accessToken_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *节点连接认证信息
       * </pre>
       *
       * <code>optional string access_token = 2;</code>
       */
      public Builder clearAccessToken() {
        
        accessToken_ = getDefaultInstance().getAccessToken();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *节点连接认证信息
       * </pre>
       *
       * <code>optional string access_token = 2;</code>
       */
      public Builder setAccessTokenBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        accessToken_ = value;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:one2data.rbtmqmsgcli.auth.VerifyLicenseAck)
    }

    // @@protoc_insertion_point(class_scope:one2data.rbtmqmsgcli.auth.VerifyLicenseAck)
    private static final cn.keptdata.one2data.header.message.protobuf.auth.Auth.VerifyLicenseAck DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new cn.keptdata.one2data.header.message.protobuf.auth.Auth.VerifyLicenseAck();
    }

    public static cn.keptdata.one2data.header.message.protobuf.auth.Auth.VerifyLicenseAck getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<VerifyLicenseAck>
        PARSER = new com.google.protobuf.AbstractParser<VerifyLicenseAck>() {
      public VerifyLicenseAck parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new VerifyLicenseAck(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<VerifyLicenseAck> parser() {
      return PARSER;
    }

    @Override
    public com.google.protobuf.Parser<VerifyLicenseAck> getParserForType() {
      return PARSER;
    }

    public cn.keptdata.one2data.header.message.protobuf.auth.Auth.VerifyLicenseAck getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ReportLicenseExpireOrBuilder extends
      // @@protoc_insertion_point(interface_extends:one2data.rbtmqmsgcli.auth.ReportLicenseExpire)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     *是否过期
     * </pre>
     *
     * <code>optional bool is_expire = 1;</code>
     */
    boolean getIsExpire();

    /**
     * <pre>
     *错误码
     * </pre>
     *
     * <code>optional uint32 error_code = 2;</code>
     */
    int getErrorCode();
  }
  /**
   * <pre>
   *任务服务上报授权过期信息
   * </pre>
   *
   * Protobuf type {@code one2data.rbtmqmsgcli.auth.ReportLicenseExpire}
   */
  public  static final class ReportLicenseExpire extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:one2data.rbtmqmsgcli.auth.ReportLicenseExpire)
      ReportLicenseExpireOrBuilder {
    // Use ReportLicenseExpire.newBuilder() to construct.
    private ReportLicenseExpire(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ReportLicenseExpire() {
      isExpire_ = false;
      errorCode_ = 0;
    }

    @Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private ReportLicenseExpire(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 8: {

              isExpire_ = input.readBool();
              break;
            }
            case 16: {

              errorCode_ = input.readUInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return cn.keptdata.one2data.header.message.protobuf.auth.Auth.internal_static_one2data_rbtmqmsgcli_auth_ReportLicenseExpire_descriptor;
    }

    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return cn.keptdata.one2data.header.message.protobuf.auth.Auth.internal_static_one2data_rbtmqmsgcli_auth_ReportLicenseExpire_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              cn.keptdata.one2data.header.message.protobuf.auth.Auth.ReportLicenseExpire.class, cn.keptdata.one2data.header.message.protobuf.auth.Auth.ReportLicenseExpire.Builder.class);
    }

    public static final int IS_EXPIRE_FIELD_NUMBER = 1;
    private boolean isExpire_;
    /**
     * <pre>
     *是否过期
     * </pre>
     *
     * <code>optional bool is_expire = 1;</code>
     */
    public boolean getIsExpire() {
      return isExpire_;
    }

    public static final int ERROR_CODE_FIELD_NUMBER = 2;
    private int errorCode_;
    /**
     * <pre>
     *错误码
     * </pre>
     *
     * <code>optional uint32 error_code = 2;</code>
     */
    public int getErrorCode() {
      return errorCode_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (isExpire_ != false) {
        output.writeBool(1, isExpire_);
      }
      if (errorCode_ != 0) {
        output.writeUInt32(2, errorCode_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (isExpire_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(1, isExpire_);
      }
      if (errorCode_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, errorCode_);
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @Override
    public boolean equals(final Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof cn.keptdata.one2data.header.message.protobuf.auth.Auth.ReportLicenseExpire)) {
        return super.equals(obj);
      }
      cn.keptdata.one2data.header.message.protobuf.auth.Auth.ReportLicenseExpire other = (cn.keptdata.one2data.header.message.protobuf.auth.Auth.ReportLicenseExpire) obj;

      boolean result = true;
      result = result && (getIsExpire()
          == other.getIsExpire());
      result = result && (getErrorCode()
          == other.getErrorCode());
      return result;
    }

    @Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptorForType().hashCode();
      hash = (37 * hash) + IS_EXPIRE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getIsExpire());
      hash = (37 * hash) + ERROR_CODE_FIELD_NUMBER;
      hash = (53 * hash) + getErrorCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static cn.keptdata.one2data.header.message.protobuf.auth.Auth.ReportLicenseExpire parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static cn.keptdata.one2data.header.message.protobuf.auth.Auth.ReportLicenseExpire parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static cn.keptdata.one2data.header.message.protobuf.auth.Auth.ReportLicenseExpire parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static cn.keptdata.one2data.header.message.protobuf.auth.Auth.ReportLicenseExpire parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static cn.keptdata.one2data.header.message.protobuf.auth.Auth.ReportLicenseExpire parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static cn.keptdata.one2data.header.message.protobuf.auth.Auth.ReportLicenseExpire parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static cn.keptdata.one2data.header.message.protobuf.auth.Auth.ReportLicenseExpire parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static cn.keptdata.one2data.header.message.protobuf.auth.Auth.ReportLicenseExpire parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static cn.keptdata.one2data.header.message.protobuf.auth.Auth.ReportLicenseExpire parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static cn.keptdata.one2data.header.message.protobuf.auth.Auth.ReportLicenseExpire parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(cn.keptdata.one2data.header.message.protobuf.auth.Auth.ReportLicenseExpire prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     *任务服务上报授权过期信息
     * </pre>
     *
     * Protobuf type {@code one2data.rbtmqmsgcli.auth.ReportLicenseExpire}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:one2data.rbtmqmsgcli.auth.ReportLicenseExpire)
        cn.keptdata.one2data.header.message.protobuf.auth.Auth.ReportLicenseExpireOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return cn.keptdata.one2data.header.message.protobuf.auth.Auth.internal_static_one2data_rbtmqmsgcli_auth_ReportLicenseExpire_descriptor;
      }

      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return cn.keptdata.one2data.header.message.protobuf.auth.Auth.internal_static_one2data_rbtmqmsgcli_auth_ReportLicenseExpire_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                cn.keptdata.one2data.header.message.protobuf.auth.Auth.ReportLicenseExpire.class, cn.keptdata.one2data.header.message.protobuf.auth.Auth.ReportLicenseExpire.Builder.class);
      }

      // Construct using cn.keptdata.one2data.header.message.protobuf.auth.Auth.ReportLicenseExpire.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        isExpire_ = false;

        errorCode_ = 0;

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return cn.keptdata.one2data.header.message.protobuf.auth.Auth.internal_static_one2data_rbtmqmsgcli_auth_ReportLicenseExpire_descriptor;
      }

      public cn.keptdata.one2data.header.message.protobuf.auth.Auth.ReportLicenseExpire getDefaultInstanceForType() {
        return cn.keptdata.one2data.header.message.protobuf.auth.Auth.ReportLicenseExpire.getDefaultInstance();
      }

      public cn.keptdata.one2data.header.message.protobuf.auth.Auth.ReportLicenseExpire build() {
        cn.keptdata.one2data.header.message.protobuf.auth.Auth.ReportLicenseExpire result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public cn.keptdata.one2data.header.message.protobuf.auth.Auth.ReportLicenseExpire buildPartial() {
        cn.keptdata.one2data.header.message.protobuf.auth.Auth.ReportLicenseExpire result = new cn.keptdata.one2data.header.message.protobuf.auth.Auth.ReportLicenseExpire(this);
        result.isExpire_ = isExpire_;
        result.errorCode_ = errorCode_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof cn.keptdata.one2data.header.message.protobuf.auth.Auth.ReportLicenseExpire) {
          return mergeFrom((cn.keptdata.one2data.header.message.protobuf.auth.Auth.ReportLicenseExpire)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(cn.keptdata.one2data.header.message.protobuf.auth.Auth.ReportLicenseExpire other) {
        if (other == cn.keptdata.one2data.header.message.protobuf.auth.Auth.ReportLicenseExpire.getDefaultInstance()) return this;
        if (other.getIsExpire() != false) {
          setIsExpire(other.getIsExpire());
        }
        if (other.getErrorCode() != 0) {
          setErrorCode(other.getErrorCode());
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        cn.keptdata.one2data.header.message.protobuf.auth.Auth.ReportLicenseExpire parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (cn.keptdata.one2data.header.message.protobuf.auth.Auth.ReportLicenseExpire) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private boolean isExpire_ ;
      /**
       * <pre>
       *是否过期
       * </pre>
       *
       * <code>optional bool is_expire = 1;</code>
       */
      public boolean getIsExpire() {
        return isExpire_;
      }
      /**
       * <pre>
       *是否过期
       * </pre>
       *
       * <code>optional bool is_expire = 1;</code>
       */
      public Builder setIsExpire(boolean value) {
        
        isExpire_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *是否过期
       * </pre>
       *
       * <code>optional bool is_expire = 1;</code>
       */
      public Builder clearIsExpire() {
        
        isExpire_ = false;
        onChanged();
        return this;
      }

      private int errorCode_ ;
      /**
       * <pre>
       *错误码
       * </pre>
       *
       * <code>optional uint32 error_code = 2;</code>
       */
      public int getErrorCode() {
        return errorCode_;
      }
      /**
       * <pre>
       *错误码
       * </pre>
       *
       * <code>optional uint32 error_code = 2;</code>
       */
      public Builder setErrorCode(int value) {
        
        errorCode_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *错误码
       * </pre>
       *
       * <code>optional uint32 error_code = 2;</code>
       */
      public Builder clearErrorCode() {
        
        errorCode_ = 0;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:one2data.rbtmqmsgcli.auth.ReportLicenseExpire)
    }

    // @@protoc_insertion_point(class_scope:one2data.rbtmqmsgcli.auth.ReportLicenseExpire)
    private static final cn.keptdata.one2data.header.message.protobuf.auth.Auth.ReportLicenseExpire DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new cn.keptdata.one2data.header.message.protobuf.auth.Auth.ReportLicenseExpire();
    }

    public static cn.keptdata.one2data.header.message.protobuf.auth.Auth.ReportLicenseExpire getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ReportLicenseExpire>
        PARSER = new com.google.protobuf.AbstractParser<ReportLicenseExpire>() {
      public ReportLicenseExpire parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new ReportLicenseExpire(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<ReportLicenseExpire> parser() {
      return PARSER;
    }

    @Override
    public com.google.protobuf.Parser<ReportLicenseExpire> getParserForType() {
      return PARSER;
    }

    public cn.keptdata.one2data.header.message.protobuf.auth.Auth.ReportLicenseExpire getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface AcquireLicenseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:one2data.rbtmqmsgcli.auth.AcquireLicense)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     *物理信息
     * </pre>
     *
     * <code>optional string client_hardinfo = 1;</code>
     */
    String getClientHardinfo();
    /**
     * <pre>
     *物理信息
     * </pre>
     *
     * <code>optional string client_hardinfo = 1;</code>
     */
    com.google.protobuf.ByteString
        getClientHardinfoBytes();

    /**
     * <pre>
     *授权细节
     * </pre>
     *
     * <code>optional string lic_json = 2;</code>
     */
    String getLicJson();
    /**
     * <pre>
     *授权细节
     * </pre>
     *
     * <code>optional string lic_json = 2;</code>
     */
    com.google.protobuf.ByteString
        getLicJsonBytes();

    /**
     * <pre>
     *授权硬件码
     * </pre>
     *
     * <code>optional string lic_hardinfo = 3;</code>
     */
    String getLicHardinfo();
    /**
     * <pre>
     *授权硬件码
     * </pre>
     *
     * <code>optional string lic_hardinfo = 3;</code>
     */
    com.google.protobuf.ByteString
        getLicHardinfoBytes();

    /**
     * <pre>
     *生成路
     * </pre>
     *
     * <code>optional string lic_outpath = 4;</code>
     */
    String getLicOutpath();
    /**
     * <pre>
     *生成路
     * </pre>
     *
     * <code>optional string lic_outpath = 4;</code>
     */
    com.google.protobuf.ByteString
        getLicOutpathBytes();

    /**
     * <pre>
     * 实际授权信息
     * </pre>
     *
     * <code>optional bytes byte_lic_json = 5;</code>
     */
    com.google.protobuf.ByteString getByteLicJson();

    /**
     * <pre>
     * 实际物理信息
     * </pre>
     *
     * <code>optional bytes byte_lic_hardinfo = 6;</code>
     */
    com.google.protobuf.ByteString getByteLicHardinfo();
  }
  /**
   * Protobuf type {@code one2data.rbtmqmsgcli.auth.AcquireLicense}
   */
  public  static final class AcquireLicense extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:one2data.rbtmqmsgcli.auth.AcquireLicense)
      AcquireLicenseOrBuilder {
    // Use AcquireLicense.newBuilder() to construct.
    private AcquireLicense(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private AcquireLicense() {
      clientHardinfo_ = "";
      licJson_ = "";
      licHardinfo_ = "";
      licOutpath_ = "";
      byteLicJson_ = com.google.protobuf.ByteString.EMPTY;
      byteLicHardinfo_ = com.google.protobuf.ByteString.EMPTY;
    }

    @Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private AcquireLicense(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              String s = input.readStringRequireUtf8();

              clientHardinfo_ = s;
              break;
            }
            case 18: {
              String s = input.readStringRequireUtf8();

              licJson_ = s;
              break;
            }
            case 26: {
              String s = input.readStringRequireUtf8();

              licHardinfo_ = s;
              break;
            }
            case 34: {
              String s = input.readStringRequireUtf8();

              licOutpath_ = s;
              break;
            }
            case 42: {

              byteLicJson_ = input.readBytes();
              break;
            }
            case 50: {

              byteLicHardinfo_ = input.readBytes();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return cn.keptdata.one2data.header.message.protobuf.auth.Auth.internal_static_one2data_rbtmqmsgcli_auth_AcquireLicense_descriptor;
    }

    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return cn.keptdata.one2data.header.message.protobuf.auth.Auth.internal_static_one2data_rbtmqmsgcli_auth_AcquireLicense_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              cn.keptdata.one2data.header.message.protobuf.auth.Auth.AcquireLicense.class, cn.keptdata.one2data.header.message.protobuf.auth.Auth.AcquireLicense.Builder.class);
    }

    public static final int CLIENT_HARDINFO_FIELD_NUMBER = 1;
    private volatile Object clientHardinfo_;
    /**
     * <pre>
     *物理信息
     * </pre>
     *
     * <code>optional string client_hardinfo = 1;</code>
     */
    public String getClientHardinfo() {
      Object ref = clientHardinfo_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        clientHardinfo_ = s;
        return s;
      }
    }
    /**
     * <pre>
     *物理信息
     * </pre>
     *
     * <code>optional string client_hardinfo = 1;</code>
     */
    public com.google.protobuf.ByteString
        getClientHardinfoBytes() {
      Object ref = clientHardinfo_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        clientHardinfo_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int LIC_JSON_FIELD_NUMBER = 2;
    private volatile Object licJson_;
    /**
     * <pre>
     *授权细节
     * </pre>
     *
     * <code>optional string lic_json = 2;</code>
     */
    public String getLicJson() {
      Object ref = licJson_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        licJson_ = s;
        return s;
      }
    }
    /**
     * <pre>
     *授权细节
     * </pre>
     *
     * <code>optional string lic_json = 2;</code>
     */
    public com.google.protobuf.ByteString
        getLicJsonBytes() {
      Object ref = licJson_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        licJson_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int LIC_HARDINFO_FIELD_NUMBER = 3;
    private volatile Object licHardinfo_;
    /**
     * <pre>
     *授权硬件码
     * </pre>
     *
     * <code>optional string lic_hardinfo = 3;</code>
     */
    public String getLicHardinfo() {
      Object ref = licHardinfo_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        licHardinfo_ = s;
        return s;
      }
    }
    /**
     * <pre>
     *授权硬件码
     * </pre>
     *
     * <code>optional string lic_hardinfo = 3;</code>
     */
    public com.google.protobuf.ByteString
        getLicHardinfoBytes() {
      Object ref = licHardinfo_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        licHardinfo_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int LIC_OUTPATH_FIELD_NUMBER = 4;
    private volatile Object licOutpath_;
    /**
     * <pre>
     *生成路
     * </pre>
     *
     * <code>optional string lic_outpath = 4;</code>
     */
    public String getLicOutpath() {
      Object ref = licOutpath_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        licOutpath_ = s;
        return s;
      }
    }
    /**
     * <pre>
     *生成路
     * </pre>
     *
     * <code>optional string lic_outpath = 4;</code>
     */
    public com.google.protobuf.ByteString
        getLicOutpathBytes() {
      Object ref = licOutpath_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        licOutpath_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int BYTE_LIC_JSON_FIELD_NUMBER = 5;
    private com.google.protobuf.ByteString byteLicJson_;
    /**
     * <pre>
     * 实际授权信息
     * </pre>
     *
     * <code>optional bytes byte_lic_json = 5;</code>
     */
    public com.google.protobuf.ByteString getByteLicJson() {
      return byteLicJson_;
    }

    public static final int BYTE_LIC_HARDINFO_FIELD_NUMBER = 6;
    private com.google.protobuf.ByteString byteLicHardinfo_;
    /**
     * <pre>
     * 实际物理信息
     * </pre>
     *
     * <code>optional bytes byte_lic_hardinfo = 6;</code>
     */
    public com.google.protobuf.ByteString getByteLicHardinfo() {
      return byteLicHardinfo_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getClientHardinfoBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, clientHardinfo_);
      }
      if (!getLicJsonBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, licJson_);
      }
      if (!getLicHardinfoBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 3, licHardinfo_);
      }
      if (!getLicOutpathBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 4, licOutpath_);
      }
      if (!byteLicJson_.isEmpty()) {
        output.writeBytes(5, byteLicJson_);
      }
      if (!byteLicHardinfo_.isEmpty()) {
        output.writeBytes(6, byteLicHardinfo_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getClientHardinfoBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, clientHardinfo_);
      }
      if (!getLicJsonBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, licJson_);
      }
      if (!getLicHardinfoBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, licHardinfo_);
      }
      if (!getLicOutpathBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(4, licOutpath_);
      }
      if (!byteLicJson_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(5, byteLicJson_);
      }
      if (!byteLicHardinfo_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(6, byteLicHardinfo_);
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @Override
    public boolean equals(final Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof cn.keptdata.one2data.header.message.protobuf.auth.Auth.AcquireLicense)) {
        return super.equals(obj);
      }
      cn.keptdata.one2data.header.message.protobuf.auth.Auth.AcquireLicense other = (cn.keptdata.one2data.header.message.protobuf.auth.Auth.AcquireLicense) obj;

      boolean result = true;
      result = result && getClientHardinfo()
          .equals(other.getClientHardinfo());
      result = result && getLicJson()
          .equals(other.getLicJson());
      result = result && getLicHardinfo()
          .equals(other.getLicHardinfo());
      result = result && getLicOutpath()
          .equals(other.getLicOutpath());
      result = result && getByteLicJson()
          .equals(other.getByteLicJson());
      result = result && getByteLicHardinfo()
          .equals(other.getByteLicHardinfo());
      return result;
    }

    @Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptorForType().hashCode();
      hash = (37 * hash) + CLIENT_HARDINFO_FIELD_NUMBER;
      hash = (53 * hash) + getClientHardinfo().hashCode();
      hash = (37 * hash) + LIC_JSON_FIELD_NUMBER;
      hash = (53 * hash) + getLicJson().hashCode();
      hash = (37 * hash) + LIC_HARDINFO_FIELD_NUMBER;
      hash = (53 * hash) + getLicHardinfo().hashCode();
      hash = (37 * hash) + LIC_OUTPATH_FIELD_NUMBER;
      hash = (53 * hash) + getLicOutpath().hashCode();
      hash = (37 * hash) + BYTE_LIC_JSON_FIELD_NUMBER;
      hash = (53 * hash) + getByteLicJson().hashCode();
      hash = (37 * hash) + BYTE_LIC_HARDINFO_FIELD_NUMBER;
      hash = (53 * hash) + getByteLicHardinfo().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static cn.keptdata.one2data.header.message.protobuf.auth.Auth.AcquireLicense parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static cn.keptdata.one2data.header.message.protobuf.auth.Auth.AcquireLicense parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static cn.keptdata.one2data.header.message.protobuf.auth.Auth.AcquireLicense parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static cn.keptdata.one2data.header.message.protobuf.auth.Auth.AcquireLicense parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static cn.keptdata.one2data.header.message.protobuf.auth.Auth.AcquireLicense parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static cn.keptdata.one2data.header.message.protobuf.auth.Auth.AcquireLicense parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static cn.keptdata.one2data.header.message.protobuf.auth.Auth.AcquireLicense parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static cn.keptdata.one2data.header.message.protobuf.auth.Auth.AcquireLicense parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static cn.keptdata.one2data.header.message.protobuf.auth.Auth.AcquireLicense parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static cn.keptdata.one2data.header.message.protobuf.auth.Auth.AcquireLicense parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(cn.keptdata.one2data.header.message.protobuf.auth.Auth.AcquireLicense prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code one2data.rbtmqmsgcli.auth.AcquireLicense}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:one2data.rbtmqmsgcli.auth.AcquireLicense)
        cn.keptdata.one2data.header.message.protobuf.auth.Auth.AcquireLicenseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return cn.keptdata.one2data.header.message.protobuf.auth.Auth.internal_static_one2data_rbtmqmsgcli_auth_AcquireLicense_descriptor;
      }

      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return cn.keptdata.one2data.header.message.protobuf.auth.Auth.internal_static_one2data_rbtmqmsgcli_auth_AcquireLicense_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                cn.keptdata.one2data.header.message.protobuf.auth.Auth.AcquireLicense.class, cn.keptdata.one2data.header.message.protobuf.auth.Auth.AcquireLicense.Builder.class);
      }

      // Construct using cn.keptdata.one2data.header.message.protobuf.auth.Auth.AcquireLicense.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        clientHardinfo_ = "";

        licJson_ = "";

        licHardinfo_ = "";

        licOutpath_ = "";

        byteLicJson_ = com.google.protobuf.ByteString.EMPTY;

        byteLicHardinfo_ = com.google.protobuf.ByteString.EMPTY;

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return cn.keptdata.one2data.header.message.protobuf.auth.Auth.internal_static_one2data_rbtmqmsgcli_auth_AcquireLicense_descriptor;
      }

      public cn.keptdata.one2data.header.message.protobuf.auth.Auth.AcquireLicense getDefaultInstanceForType() {
        return cn.keptdata.one2data.header.message.protobuf.auth.Auth.AcquireLicense.getDefaultInstance();
      }

      public cn.keptdata.one2data.header.message.protobuf.auth.Auth.AcquireLicense build() {
        cn.keptdata.one2data.header.message.protobuf.auth.Auth.AcquireLicense result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public cn.keptdata.one2data.header.message.protobuf.auth.Auth.AcquireLicense buildPartial() {
        cn.keptdata.one2data.header.message.protobuf.auth.Auth.AcquireLicense result = new cn.keptdata.one2data.header.message.protobuf.auth.Auth.AcquireLicense(this);
        result.clientHardinfo_ = clientHardinfo_;
        result.licJson_ = licJson_;
        result.licHardinfo_ = licHardinfo_;
        result.licOutpath_ = licOutpath_;
        result.byteLicJson_ = byteLicJson_;
        result.byteLicHardinfo_ = byteLicHardinfo_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof cn.keptdata.one2data.header.message.protobuf.auth.Auth.AcquireLicense) {
          return mergeFrom((cn.keptdata.one2data.header.message.protobuf.auth.Auth.AcquireLicense)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(cn.keptdata.one2data.header.message.protobuf.auth.Auth.AcquireLicense other) {
        if (other == cn.keptdata.one2data.header.message.protobuf.auth.Auth.AcquireLicense.getDefaultInstance()) return this;
        if (!other.getClientHardinfo().isEmpty()) {
          clientHardinfo_ = other.clientHardinfo_;
          onChanged();
        }
        if (!other.getLicJson().isEmpty()) {
          licJson_ = other.licJson_;
          onChanged();
        }
        if (!other.getLicHardinfo().isEmpty()) {
          licHardinfo_ = other.licHardinfo_;
          onChanged();
        }
        if (!other.getLicOutpath().isEmpty()) {
          licOutpath_ = other.licOutpath_;
          onChanged();
        }
        if (other.getByteLicJson() != com.google.protobuf.ByteString.EMPTY) {
          setByteLicJson(other.getByteLicJson());
        }
        if (other.getByteLicHardinfo() != com.google.protobuf.ByteString.EMPTY) {
          setByteLicHardinfo(other.getByteLicHardinfo());
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        cn.keptdata.one2data.header.message.protobuf.auth.Auth.AcquireLicense parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (cn.keptdata.one2data.header.message.protobuf.auth.Auth.AcquireLicense) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private Object clientHardinfo_ = "";
      /**
       * <pre>
       *物理信息
       * </pre>
       *
       * <code>optional string client_hardinfo = 1;</code>
       */
      public String getClientHardinfo() {
        Object ref = clientHardinfo_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          clientHardinfo_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <pre>
       *物理信息
       * </pre>
       *
       * <code>optional string client_hardinfo = 1;</code>
       */
      public com.google.protobuf.ByteString
          getClientHardinfoBytes() {
        Object ref = clientHardinfo_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          clientHardinfo_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *物理信息
       * </pre>
       *
       * <code>optional string client_hardinfo = 1;</code>
       */
      public Builder setClientHardinfo(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        clientHardinfo_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *物理信息
       * </pre>
       *
       * <code>optional string client_hardinfo = 1;</code>
       */
      public Builder clearClientHardinfo() {
        
        clientHardinfo_ = getDefaultInstance().getClientHardinfo();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *物理信息
       * </pre>
       *
       * <code>optional string client_hardinfo = 1;</code>
       */
      public Builder setClientHardinfoBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        clientHardinfo_ = value;
        onChanged();
        return this;
      }

      private Object licJson_ = "";
      /**
       * <pre>
       *授权细节
       * </pre>
       *
       * <code>optional string lic_json = 2;</code>
       */
      public String getLicJson() {
        Object ref = licJson_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          licJson_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <pre>
       *授权细节
       * </pre>
       *
       * <code>optional string lic_json = 2;</code>
       */
      public com.google.protobuf.ByteString
          getLicJsonBytes() {
        Object ref = licJson_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          licJson_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *授权细节
       * </pre>
       *
       * <code>optional string lic_json = 2;</code>
       */
      public Builder setLicJson(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        licJson_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *授权细节
       * </pre>
       *
       * <code>optional string lic_json = 2;</code>
       */
      public Builder clearLicJson() {
        
        licJson_ = getDefaultInstance().getLicJson();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *授权细节
       * </pre>
       *
       * <code>optional string lic_json = 2;</code>
       */
      public Builder setLicJsonBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        licJson_ = value;
        onChanged();
        return this;
      }

      private Object licHardinfo_ = "";
      /**
       * <pre>
       *授权硬件码
       * </pre>
       *
       * <code>optional string lic_hardinfo = 3;</code>
       */
      public String getLicHardinfo() {
        Object ref = licHardinfo_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          licHardinfo_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <pre>
       *授权硬件码
       * </pre>
       *
       * <code>optional string lic_hardinfo = 3;</code>
       */
      public com.google.protobuf.ByteString
          getLicHardinfoBytes() {
        Object ref = licHardinfo_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          licHardinfo_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *授权硬件码
       * </pre>
       *
       * <code>optional string lic_hardinfo = 3;</code>
       */
      public Builder setLicHardinfo(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        licHardinfo_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *授权硬件码
       * </pre>
       *
       * <code>optional string lic_hardinfo = 3;</code>
       */
      public Builder clearLicHardinfo() {
        
        licHardinfo_ = getDefaultInstance().getLicHardinfo();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *授权硬件码
       * </pre>
       *
       * <code>optional string lic_hardinfo = 3;</code>
       */
      public Builder setLicHardinfoBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        licHardinfo_ = value;
        onChanged();
        return this;
      }

      private Object licOutpath_ = "";
      /**
       * <pre>
       *生成路
       * </pre>
       *
       * <code>optional string lic_outpath = 4;</code>
       */
      public String getLicOutpath() {
        Object ref = licOutpath_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          licOutpath_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <pre>
       *生成路
       * </pre>
       *
       * <code>optional string lic_outpath = 4;</code>
       */
      public com.google.protobuf.ByteString
          getLicOutpathBytes() {
        Object ref = licOutpath_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          licOutpath_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *生成路
       * </pre>
       *
       * <code>optional string lic_outpath = 4;</code>
       */
      public Builder setLicOutpath(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        licOutpath_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *生成路
       * </pre>
       *
       * <code>optional string lic_outpath = 4;</code>
       */
      public Builder clearLicOutpath() {
        
        licOutpath_ = getDefaultInstance().getLicOutpath();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *生成路
       * </pre>
       *
       * <code>optional string lic_outpath = 4;</code>
       */
      public Builder setLicOutpathBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        licOutpath_ = value;
        onChanged();
        return this;
      }

      private com.google.protobuf.ByteString byteLicJson_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <pre>
       * 实际授权信息
       * </pre>
       *
       * <code>optional bytes byte_lic_json = 5;</code>
       */
      public com.google.protobuf.ByteString getByteLicJson() {
        return byteLicJson_;
      }
      /**
       * <pre>
       * 实际授权信息
       * </pre>
       *
       * <code>optional bytes byte_lic_json = 5;</code>
       */
      public Builder setByteLicJson(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        byteLicJson_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 实际授权信息
       * </pre>
       *
       * <code>optional bytes byte_lic_json = 5;</code>
       */
      public Builder clearByteLicJson() {
        
        byteLicJson_ = getDefaultInstance().getByteLicJson();
        onChanged();
        return this;
      }

      private com.google.protobuf.ByteString byteLicHardinfo_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <pre>
       * 实际物理信息
       * </pre>
       *
       * <code>optional bytes byte_lic_hardinfo = 6;</code>
       */
      public com.google.protobuf.ByteString getByteLicHardinfo() {
        return byteLicHardinfo_;
      }
      /**
       * <pre>
       * 实际物理信息
       * </pre>
       *
       * <code>optional bytes byte_lic_hardinfo = 6;</code>
       */
      public Builder setByteLicHardinfo(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        byteLicHardinfo_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 实际物理信息
       * </pre>
       *
       * <code>optional bytes byte_lic_hardinfo = 6;</code>
       */
      public Builder clearByteLicHardinfo() {
        
        byteLicHardinfo_ = getDefaultInstance().getByteLicHardinfo();
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:one2data.rbtmqmsgcli.auth.AcquireLicense)
    }

    // @@protoc_insertion_point(class_scope:one2data.rbtmqmsgcli.auth.AcquireLicense)
    private static final cn.keptdata.one2data.header.message.protobuf.auth.Auth.AcquireLicense DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new cn.keptdata.one2data.header.message.protobuf.auth.Auth.AcquireLicense();
    }

    public static cn.keptdata.one2data.header.message.protobuf.auth.Auth.AcquireLicense getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<AcquireLicense>
        PARSER = new com.google.protobuf.AbstractParser<AcquireLicense>() {
      public AcquireLicense parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new AcquireLicense(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<AcquireLicense> parser() {
      return PARSER;
    }

    @Override
    public com.google.protobuf.Parser<AcquireLicense> getParserForType() {
      return PARSER;
    }

    public cn.keptdata.one2data.header.message.protobuf.auth.Auth.AcquireLicense getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface AcquireLicenseackOrBuilder extends
      // @@protoc_insertion_point(interface_extends:one2data.rbtmqmsgcli.auth.AcquireLicenseack)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     *获取文件结果
     * </pre>
     *
     * <code>optional .one2data.rbtmqmsgcli.common.BaseAck base_ack = 1;</code>
     */
    boolean hasBaseAck();
    /**
     * <pre>
     *获取文件结果
     * </pre>
     *
     * <code>optional .one2data.rbtmqmsgcli.common.BaseAck base_ack = 1;</code>
     */
    cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck getBaseAck();
    /**
     * <pre>
     *获取文件结果
     * </pre>
     *
     * <code>optional .one2data.rbtmqmsgcli.common.BaseAck base_ack = 1;</code>
     */
    cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAckOrBuilder getBaseAckOrBuilder();

    /**
     * <pre>
     *授权文件信息
     * </pre>
     *
     * <code>optional bytes byte_lic = 2;</code>
     */
    com.google.protobuf.ByteString getByteLic();
  }
  /**
   * Protobuf type {@code one2data.rbtmqmsgcli.auth.AcquireLicenseack}
   */
  public  static final class AcquireLicenseack extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:one2data.rbtmqmsgcli.auth.AcquireLicenseack)
      AcquireLicenseackOrBuilder {
    // Use AcquireLicenseack.newBuilder() to construct.
    private AcquireLicenseack(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private AcquireLicenseack() {
      byteLic_ = com.google.protobuf.ByteString.EMPTY;
    }

    @Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private AcquireLicenseack(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck.Builder subBuilder = null;
              if (baseAck_ != null) {
                subBuilder = baseAck_.toBuilder();
              }
              baseAck_ = input.readMessage(cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(baseAck_);
                baseAck_ = subBuilder.buildPartial();
              }

              break;
            }
            case 18: {

              byteLic_ = input.readBytes();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return cn.keptdata.one2data.header.message.protobuf.auth.Auth.internal_static_one2data_rbtmqmsgcli_auth_AcquireLicenseack_descriptor;
    }

    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return cn.keptdata.one2data.header.message.protobuf.auth.Auth.internal_static_one2data_rbtmqmsgcli_auth_AcquireLicenseack_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              cn.keptdata.one2data.header.message.protobuf.auth.Auth.AcquireLicenseack.class, cn.keptdata.one2data.header.message.protobuf.auth.Auth.AcquireLicenseack.Builder.class);
    }

    public static final int BASE_ACK_FIELD_NUMBER = 1;
    private cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck baseAck_;
    /**
     * <pre>
     *获取文件结果
     * </pre>
     *
     * <code>optional .one2data.rbtmqmsgcli.common.BaseAck base_ack = 1;</code>
     */
    public boolean hasBaseAck() {
      return baseAck_ != null;
    }
    /**
     * <pre>
     *获取文件结果
     * </pre>
     *
     * <code>optional .one2data.rbtmqmsgcli.common.BaseAck base_ack = 1;</code>
     */
    public cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck getBaseAck() {
      return baseAck_ == null ? cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck.getDefaultInstance() : baseAck_;
    }
    /**
     * <pre>
     *获取文件结果
     * </pre>
     *
     * <code>optional .one2data.rbtmqmsgcli.common.BaseAck base_ack = 1;</code>
     */
    public cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAckOrBuilder getBaseAckOrBuilder() {
      return getBaseAck();
    }

    public static final int BYTE_LIC_FIELD_NUMBER = 2;
    private com.google.protobuf.ByteString byteLic_;
    /**
     * <pre>
     *授权文件信息
     * </pre>
     *
     * <code>optional bytes byte_lic = 2;</code>
     */
    public com.google.protobuf.ByteString getByteLic() {
      return byteLic_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (baseAck_ != null) {
        output.writeMessage(1, getBaseAck());
      }
      if (!byteLic_.isEmpty()) {
        output.writeBytes(2, byteLic_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (baseAck_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getBaseAck());
      }
      if (!byteLic_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, byteLic_);
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @Override
    public boolean equals(final Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof cn.keptdata.one2data.header.message.protobuf.auth.Auth.AcquireLicenseack)) {
        return super.equals(obj);
      }
      cn.keptdata.one2data.header.message.protobuf.auth.Auth.AcquireLicenseack other = (cn.keptdata.one2data.header.message.protobuf.auth.Auth.AcquireLicenseack) obj;

      boolean result = true;
      result = result && (hasBaseAck() == other.hasBaseAck());
      if (hasBaseAck()) {
        result = result && getBaseAck()
            .equals(other.getBaseAck());
      }
      result = result && getByteLic()
          .equals(other.getByteLic());
      return result;
    }

    @Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptorForType().hashCode();
      if (hasBaseAck()) {
        hash = (37 * hash) + BASE_ACK_FIELD_NUMBER;
        hash = (53 * hash) + getBaseAck().hashCode();
      }
      hash = (37 * hash) + BYTE_LIC_FIELD_NUMBER;
      hash = (53 * hash) + getByteLic().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static cn.keptdata.one2data.header.message.protobuf.auth.Auth.AcquireLicenseack parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static cn.keptdata.one2data.header.message.protobuf.auth.Auth.AcquireLicenseack parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static cn.keptdata.one2data.header.message.protobuf.auth.Auth.AcquireLicenseack parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static cn.keptdata.one2data.header.message.protobuf.auth.Auth.AcquireLicenseack parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static cn.keptdata.one2data.header.message.protobuf.auth.Auth.AcquireLicenseack parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static cn.keptdata.one2data.header.message.protobuf.auth.Auth.AcquireLicenseack parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static cn.keptdata.one2data.header.message.protobuf.auth.Auth.AcquireLicenseack parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static cn.keptdata.one2data.header.message.protobuf.auth.Auth.AcquireLicenseack parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static cn.keptdata.one2data.header.message.protobuf.auth.Auth.AcquireLicenseack parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static cn.keptdata.one2data.header.message.protobuf.auth.Auth.AcquireLicenseack parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(cn.keptdata.one2data.header.message.protobuf.auth.Auth.AcquireLicenseack prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code one2data.rbtmqmsgcli.auth.AcquireLicenseack}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:one2data.rbtmqmsgcli.auth.AcquireLicenseack)
        cn.keptdata.one2data.header.message.protobuf.auth.Auth.AcquireLicenseackOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return cn.keptdata.one2data.header.message.protobuf.auth.Auth.internal_static_one2data_rbtmqmsgcli_auth_AcquireLicenseack_descriptor;
      }

      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return cn.keptdata.one2data.header.message.protobuf.auth.Auth.internal_static_one2data_rbtmqmsgcli_auth_AcquireLicenseack_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                cn.keptdata.one2data.header.message.protobuf.auth.Auth.AcquireLicenseack.class, cn.keptdata.one2data.header.message.protobuf.auth.Auth.AcquireLicenseack.Builder.class);
      }

      // Construct using cn.keptdata.one2data.header.message.protobuf.auth.Auth.AcquireLicenseack.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        if (baseAckBuilder_ == null) {
          baseAck_ = null;
        } else {
          baseAck_ = null;
          baseAckBuilder_ = null;
        }
        byteLic_ = com.google.protobuf.ByteString.EMPTY;

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return cn.keptdata.one2data.header.message.protobuf.auth.Auth.internal_static_one2data_rbtmqmsgcli_auth_AcquireLicenseack_descriptor;
      }

      public cn.keptdata.one2data.header.message.protobuf.auth.Auth.AcquireLicenseack getDefaultInstanceForType() {
        return cn.keptdata.one2data.header.message.protobuf.auth.Auth.AcquireLicenseack.getDefaultInstance();
      }

      public cn.keptdata.one2data.header.message.protobuf.auth.Auth.AcquireLicenseack build() {
        cn.keptdata.one2data.header.message.protobuf.auth.Auth.AcquireLicenseack result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public cn.keptdata.one2data.header.message.protobuf.auth.Auth.AcquireLicenseack buildPartial() {
        cn.keptdata.one2data.header.message.protobuf.auth.Auth.AcquireLicenseack result = new cn.keptdata.one2data.header.message.protobuf.auth.Auth.AcquireLicenseack(this);
        if (baseAckBuilder_ == null) {
          result.baseAck_ = baseAck_;
        } else {
          result.baseAck_ = baseAckBuilder_.build();
        }
        result.byteLic_ = byteLic_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof cn.keptdata.one2data.header.message.protobuf.auth.Auth.AcquireLicenseack) {
          return mergeFrom((cn.keptdata.one2data.header.message.protobuf.auth.Auth.AcquireLicenseack)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(cn.keptdata.one2data.header.message.protobuf.auth.Auth.AcquireLicenseack other) {
        if (other == cn.keptdata.one2data.header.message.protobuf.auth.Auth.AcquireLicenseack.getDefaultInstance()) return this;
        if (other.hasBaseAck()) {
          mergeBaseAck(other.getBaseAck());
        }
        if (other.getByteLic() != com.google.protobuf.ByteString.EMPTY) {
          setByteLic(other.getByteLic());
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        cn.keptdata.one2data.header.message.protobuf.auth.Auth.AcquireLicenseack parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (cn.keptdata.one2data.header.message.protobuf.auth.Auth.AcquireLicenseack) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck baseAck_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck, cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck.Builder, cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAckOrBuilder> baseAckBuilder_;
      /**
       * <pre>
       *获取文件结果
       * </pre>
       *
       * <code>optional .one2data.rbtmqmsgcli.common.BaseAck base_ack = 1;</code>
       */
      public boolean hasBaseAck() {
        return baseAckBuilder_ != null || baseAck_ != null;
      }
      /**
       * <pre>
       *获取文件结果
       * </pre>
       *
       * <code>optional .one2data.rbtmqmsgcli.common.BaseAck base_ack = 1;</code>
       */
      public cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck getBaseAck() {
        if (baseAckBuilder_ == null) {
          return baseAck_ == null ? cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck.getDefaultInstance() : baseAck_;
        } else {
          return baseAckBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       *获取文件结果
       * </pre>
       *
       * <code>optional .one2data.rbtmqmsgcli.common.BaseAck base_ack = 1;</code>
       */
      public Builder setBaseAck(cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck value) {
        if (baseAckBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          baseAck_ = value;
          onChanged();
        } else {
          baseAckBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       *获取文件结果
       * </pre>
       *
       * <code>optional .one2data.rbtmqmsgcli.common.BaseAck base_ack = 1;</code>
       */
      public Builder setBaseAck(
          cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck.Builder builderForValue) {
        if (baseAckBuilder_ == null) {
          baseAck_ = builderForValue.build();
          onChanged();
        } else {
          baseAckBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       *获取文件结果
       * </pre>
       *
       * <code>optional .one2data.rbtmqmsgcli.common.BaseAck base_ack = 1;</code>
       */
      public Builder mergeBaseAck(cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck value) {
        if (baseAckBuilder_ == null) {
          if (baseAck_ != null) {
            baseAck_ =
              cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck.newBuilder(baseAck_).mergeFrom(value).buildPartial();
          } else {
            baseAck_ = value;
          }
          onChanged();
        } else {
          baseAckBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       *获取文件结果
       * </pre>
       *
       * <code>optional .one2data.rbtmqmsgcli.common.BaseAck base_ack = 1;</code>
       */
      public Builder clearBaseAck() {
        if (baseAckBuilder_ == null) {
          baseAck_ = null;
          onChanged();
        } else {
          baseAck_ = null;
          baseAckBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       *获取文件结果
       * </pre>
       *
       * <code>optional .one2data.rbtmqmsgcli.common.BaseAck base_ack = 1;</code>
       */
      public cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck.Builder getBaseAckBuilder() {
        
        onChanged();
        return getBaseAckFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       *获取文件结果
       * </pre>
       *
       * <code>optional .one2data.rbtmqmsgcli.common.BaseAck base_ack = 1;</code>
       */
      public cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAckOrBuilder getBaseAckOrBuilder() {
        if (baseAckBuilder_ != null) {
          return baseAckBuilder_.getMessageOrBuilder();
        } else {
          return baseAck_ == null ?
              cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck.getDefaultInstance() : baseAck_;
        }
      }
      /**
       * <pre>
       *获取文件结果
       * </pre>
       *
       * <code>optional .one2data.rbtmqmsgcli.common.BaseAck base_ack = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck, cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck.Builder, cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAckOrBuilder> 
          getBaseAckFieldBuilder() {
        if (baseAckBuilder_ == null) {
          baseAckBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck, cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAck.Builder, cn.keptdata.one2data.header.message.protobuf.common.Common.BaseAckOrBuilder>(
                  getBaseAck(),
                  getParentForChildren(),
                  isClean());
          baseAck_ = null;
        }
        return baseAckBuilder_;
      }

      private com.google.protobuf.ByteString byteLic_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <pre>
       *授权文件信息
       * </pre>
       *
       * <code>optional bytes byte_lic = 2;</code>
       */
      public com.google.protobuf.ByteString getByteLic() {
        return byteLic_;
      }
      /**
       * <pre>
       *授权文件信息
       * </pre>
       *
       * <code>optional bytes byte_lic = 2;</code>
       */
      public Builder setByteLic(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        byteLic_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *授权文件信息
       * </pre>
       *
       * <code>optional bytes byte_lic = 2;</code>
       */
      public Builder clearByteLic() {
        
        byteLic_ = getDefaultInstance().getByteLic();
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:one2data.rbtmqmsgcli.auth.AcquireLicenseack)
    }

    // @@protoc_insertion_point(class_scope:one2data.rbtmqmsgcli.auth.AcquireLicenseack)
    private static final cn.keptdata.one2data.header.message.protobuf.auth.Auth.AcquireLicenseack DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new cn.keptdata.one2data.header.message.protobuf.auth.Auth.AcquireLicenseack();
    }

    public static cn.keptdata.one2data.header.message.protobuf.auth.Auth.AcquireLicenseack getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<AcquireLicenseack>
        PARSER = new com.google.protobuf.AbstractParser<AcquireLicenseack>() {
      public AcquireLicenseack parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new AcquireLicenseack(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<AcquireLicenseack> parser() {
      return PARSER;
    }

    @Override
    public com.google.protobuf.Parser<AcquireLicenseack> getParserForType() {
      return PARSER;
    }

    public cn.keptdata.one2data.header.message.protobuf.auth.Auth.AcquireLicenseack getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_one2data_rbtmqmsgcli_auth_ImportLicense_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_one2data_rbtmqmsgcli_auth_ImportLicense_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_one2data_rbtmqmsgcli_auth_ImportLicenseAck_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_one2data_rbtmqmsgcli_auth_ImportLicenseAck_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_one2data_rbtmqmsgcli_auth_CheckLicense_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_one2data_rbtmqmsgcli_auth_CheckLicense_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_one2data_rbtmqmsgcli_auth_CheckLicenseAck_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_one2data_rbtmqmsgcli_auth_CheckLicenseAck_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_one2data_rbtmqmsgcli_auth_QueryLicenseDetail_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_one2data_rbtmqmsgcli_auth_QueryLicenseDetail_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_one2data_rbtmqmsgcli_auth_QueryLicenseDetailAck_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_one2data_rbtmqmsgcli_auth_QueryLicenseDetailAck_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_one2data_rbtmqmsgcli_auth_ApplyNodeLicense_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_one2data_rbtmqmsgcli_auth_ApplyNodeLicense_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_one2data_rbtmqmsgcli_auth_ApplyNodeLicenseAck_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_one2data_rbtmqmsgcli_auth_ApplyNodeLicenseAck_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_one2data_rbtmqmsgcli_auth_ApplyFunctionLicense_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_one2data_rbtmqmsgcli_auth_ApplyFunctionLicense_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_one2data_rbtmqmsgcli_auth_ApplyFunctionLicenseAck_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_one2data_rbtmqmsgcli_auth_ApplyFunctionLicenseAck_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_one2data_rbtmqmsgcli_auth_RevokeNodeLicense_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_one2data_rbtmqmsgcli_auth_RevokeNodeLicense_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_one2data_rbtmqmsgcli_auth_RevokeNodeLicenseAck_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_one2data_rbtmqmsgcli_auth_RevokeNodeLicenseAck_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_one2data_rbtmqmsgcli_auth_RevokeFunctionLicense_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_one2data_rbtmqmsgcli_auth_RevokeFunctionLicense_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_one2data_rbtmqmsgcli_auth_RevokeFunctionLicenseAck_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_one2data_rbtmqmsgcli_auth_RevokeFunctionLicenseAck_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_one2data_rbtmqmsgcli_auth_CorrectNodeLicense_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_one2data_rbtmqmsgcli_auth_CorrectNodeLicense_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_one2data_rbtmqmsgcli_auth_CorrectNodeLicenseAck_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_one2data_rbtmqmsgcli_auth_CorrectNodeLicenseAck_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_one2data_rbtmqmsgcli_auth_VerifyLicense_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_one2data_rbtmqmsgcli_auth_VerifyLicense_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_one2data_rbtmqmsgcli_auth_VerifyLicenseAck_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_one2data_rbtmqmsgcli_auth_VerifyLicenseAck_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_one2data_rbtmqmsgcli_auth_ReportLicenseExpire_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_one2data_rbtmqmsgcli_auth_ReportLicenseExpire_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_one2data_rbtmqmsgcli_auth_AcquireLicense_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_one2data_rbtmqmsgcli_auth_AcquireLicense_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_one2data_rbtmqmsgcli_auth_AcquireLicenseack_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_one2data_rbtmqmsgcli_auth_AcquireLicenseack_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    String[] descriptorData = {
      "\n\017auth/auth.proto\022\031one2data.rbtmqmsgcli." +
      "auth\032\023common/Common.proto\032\021common/Node.p" +
      "roto\" \n\rImportLicense\022\017\n\007license\030\001 \001(\014\"b" +
      "\n\020ImportLicenseAck\0226\n\010base_ack\030\001 \001(\0132$.o" +
      "ne2data.rbtmqmsgcli.common.BaseAck\022\026\n\016li" +
      "cense_detail\030\002 \001(\014\"\037\n\014CheckLicense\022\017\n\007li" +
      "cense\030\001 \001(\014\"a\n\017CheckLicenseAck\0226\n\010base_a" +
      "ck\030\001 \001(\0132$.one2data.rbtmqmsgcli.common.B" +
      "aseAck\022\026\n\016license_detail\030\002 \001(\014\"\024\n\022QueryL" +
      "icenseDetail\"g\n\025QueryLicenseDetailAck\0226\n",
      "\010base_ack\030\001 \001(\0132$.one2data.rbtmqmsgcli.c" +
      "ommon.BaseAck\022\026\n\016license_detail\030\002 \001(\014\"^\n" +
      "\020ApplyNodeLicense\0228\n\tnode_type\030\001 \001(\0162%.o" +
      "ne2data.rbtmqmsgcli.common.NodeType\022\020\n\010u" +
      "uid_key\030\002 \001(\t\"\256\001\n\023ApplyNodeLicenseAck\0226\n" +
      "\010base_ack\030\001 \001(\0132$.one2data.rbtmqmsgcli.c" +
      "ommon.BaseAck\0228\n\tnode_type\030\002 \001(\0162%.one2d" +
      "ata.rbtmqmsgcli.common.NodeType\022\020\n\010uuid_" +
      "key\030\003 \001(\t\022\023\n\013auth_digest\030\004 \001(\t\"v\n\024ApplyF" +
      "unctionLicense\022>\n\rfunction_type\030\001 \001(\0162\'.",
      "one2data.rbtmqmsgcli.auth.FunctionType\022\036" +
      "\n\026business_resource_uuid\030\002 \001(\t\"\261\001\n\027Apply" +
      "FunctionLicenseAck\0226\n\010base_ack\030\001 \001(\0132$.o" +
      "ne2data.rbtmqmsgcli.common.BaseAck\022>\n\rfu" +
      "nction_type\030\002 \001(\0162\'.one2data.rbtmqmsgcli" +
      ".auth.FunctionType\022\036\n\026business_resource_" +
      "uuid\030\003 \001(\t\"_\n\021RevokeNodeLicense\0228\n\tnode_" +
      "type\030\001 \001(\0162%.one2data.rbtmqmsgcli.common" +
      ".NodeType\022\020\n\010uuid_key\030\002 \001(\t\"\232\001\n\024RevokeNo" +
      "deLicenseAck\0226\n\010base_ack\030\001 \001(\0132$.one2dat",
      "a.rbtmqmsgcli.common.BaseAck\0228\n\tnode_typ" +
      "e\030\002 \001(\0162%.one2data.rbtmqmsgcli.common.No" +
      "deType\022\020\n\010uuid_key\030\003 \001(\t\"w\n\025RevokeFuncti" +
      "onLicense\022>\n\rfunction_type\030\001 \001(\0162\'.one2d" +
      "ata.rbtmqmsgcli.auth.FunctionType\022\036\n\026bus" +
      "iness_resource_uuid\030\002 \001(\t\"\262\001\n\030RevokeFunc" +
      "tionLicenseAck\0226\n\010base_ack\030\001 \001(\0132$.one2d" +
      "ata.rbtmqmsgcli.common.BaseAck\022>\n\rfuncti" +
      "on_type\030\002 \001(\0162\'.one2data.rbtmqmsgcli.aut" +
      "h.FunctionType\022\036\n\026business_resource_uuid",
      "\030\003 \001(\t\"]\n\022CorrectNodeLicense\022\027\n\017client_u" +
      "uid_key\030\001 \003(\t\022\024\n\014ecs_uuid_key\030\002 \003(\t\022\030\n\020s" +
      "torage_uuid_key\030\003 \003(\t\"O\n\025CorrectNodeLice" +
      "nseAck\0226\n\010base_ack\030\001 \001(\0132$.one2data.rbtm" +
      "qmsgcli.common.BaseAck\"t\n\rVerifyLicense\022" +
      "8\n\tnode_type\030\001 \001(\0162%.one2data.rbtmqmsgcl" +
      "i.common.NodeType\022\020\n\010uuid_key\030\002 \001(\t\022\027\n\017l" +
      "icense_content\030\003 \001(\t\"`\n\020VerifyLicenseAck" +
      "\0226\n\010base_ack\030\001 \001(\0132$.one2data.rbtmqmsgcl" +
      "i.common.BaseAck\022\024\n\014access_token\030\002 \001(\t\"<",
      "\n\023ReportLicenseExpire\022\021\n\tis_expire\030\001 \001(\010" +
      "\022\022\n\nerror_code\030\002 \001(\r\"\230\001\n\016AcquireLicense\022" +
      "\027\n\017client_hardinfo\030\001 \001(\t\022\020\n\010lic_json\030\002 \001" +
      "(\t\022\024\n\014lic_hardinfo\030\003 \001(\t\022\023\n\013lic_outpath\030" +
      "\004 \001(\t\022\025\n\rbyte_lic_json\030\005 \001(\014\022\031\n\021byte_lic" +
      "_hardinfo\030\006 \001(\014\"]\n\021AcquireLicenseack\0226\n\010" +
      "base_ack\030\001 \001(\0132$.one2data.rbtmqmsgcli.co" +
      "mmon.BaseAck\022\020\n\010byte_lic\030\002 \001(\014*\177\n\014Functi" +
      "onType\022\016\n\nFT_DEFAULT\020\000\022\031\n\025FT_BACKUPDATAR" +
      "ECOVERY\020\001\022\030\n\024FT_TAKEOVERVMECOVERY\020\002\022\027\n\023F",
      "T_REALTIMERECOVERY\020\003\022\021\n\rFT_REMOTECOPY\020\004B" +
      "9\n1cn.keptdata.one2data.header.message.p" +
      "rotobuf.authB\004Authb\006proto3"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          cn.keptdata.one2data.header.message.protobuf.common.Common.getDescriptor(),
          cn.keptdata.one2data.header.message.protobuf.common.Node.getDescriptor(),
        }, assigner);
    internal_static_one2data_rbtmqmsgcli_auth_ImportLicense_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_one2data_rbtmqmsgcli_auth_ImportLicense_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_one2data_rbtmqmsgcli_auth_ImportLicense_descriptor,
        new String[] { "License", });
    internal_static_one2data_rbtmqmsgcli_auth_ImportLicenseAck_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_one2data_rbtmqmsgcli_auth_ImportLicenseAck_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_one2data_rbtmqmsgcli_auth_ImportLicenseAck_descriptor,
        new String[] { "BaseAck", "LicenseDetail", });
    internal_static_one2data_rbtmqmsgcli_auth_CheckLicense_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_one2data_rbtmqmsgcli_auth_CheckLicense_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_one2data_rbtmqmsgcli_auth_CheckLicense_descriptor,
        new String[] { "License", });
    internal_static_one2data_rbtmqmsgcli_auth_CheckLicenseAck_descriptor =
      getDescriptor().getMessageTypes().get(3);
    internal_static_one2data_rbtmqmsgcli_auth_CheckLicenseAck_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_one2data_rbtmqmsgcli_auth_CheckLicenseAck_descriptor,
        new String[] { "BaseAck", "LicenseDetail", });
    internal_static_one2data_rbtmqmsgcli_auth_QueryLicenseDetail_descriptor =
      getDescriptor().getMessageTypes().get(4);
    internal_static_one2data_rbtmqmsgcli_auth_QueryLicenseDetail_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_one2data_rbtmqmsgcli_auth_QueryLicenseDetail_descriptor,
        new String[] { });
    internal_static_one2data_rbtmqmsgcli_auth_QueryLicenseDetailAck_descriptor =
      getDescriptor().getMessageTypes().get(5);
    internal_static_one2data_rbtmqmsgcli_auth_QueryLicenseDetailAck_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_one2data_rbtmqmsgcli_auth_QueryLicenseDetailAck_descriptor,
        new String[] { "BaseAck", "LicenseDetail", });
    internal_static_one2data_rbtmqmsgcli_auth_ApplyNodeLicense_descriptor =
      getDescriptor().getMessageTypes().get(6);
    internal_static_one2data_rbtmqmsgcli_auth_ApplyNodeLicense_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_one2data_rbtmqmsgcli_auth_ApplyNodeLicense_descriptor,
        new String[] { "NodeType", "UuidKey", });
    internal_static_one2data_rbtmqmsgcli_auth_ApplyNodeLicenseAck_descriptor =
      getDescriptor().getMessageTypes().get(7);
    internal_static_one2data_rbtmqmsgcli_auth_ApplyNodeLicenseAck_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_one2data_rbtmqmsgcli_auth_ApplyNodeLicenseAck_descriptor,
        new String[] { "BaseAck", "NodeType", "UuidKey", "AuthDigest", });
    internal_static_one2data_rbtmqmsgcli_auth_ApplyFunctionLicense_descriptor =
      getDescriptor().getMessageTypes().get(8);
    internal_static_one2data_rbtmqmsgcli_auth_ApplyFunctionLicense_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_one2data_rbtmqmsgcli_auth_ApplyFunctionLicense_descriptor,
        new String[] { "FunctionType", "BusinessResourceUuid", });
    internal_static_one2data_rbtmqmsgcli_auth_ApplyFunctionLicenseAck_descriptor =
      getDescriptor().getMessageTypes().get(9);
    internal_static_one2data_rbtmqmsgcli_auth_ApplyFunctionLicenseAck_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_one2data_rbtmqmsgcli_auth_ApplyFunctionLicenseAck_descriptor,
        new String[] { "BaseAck", "FunctionType", "BusinessResourceUuid", });
    internal_static_one2data_rbtmqmsgcli_auth_RevokeNodeLicense_descriptor =
      getDescriptor().getMessageTypes().get(10);
    internal_static_one2data_rbtmqmsgcli_auth_RevokeNodeLicense_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_one2data_rbtmqmsgcli_auth_RevokeNodeLicense_descriptor,
        new String[] { "NodeType", "UuidKey", });
    internal_static_one2data_rbtmqmsgcli_auth_RevokeNodeLicenseAck_descriptor =
      getDescriptor().getMessageTypes().get(11);
    internal_static_one2data_rbtmqmsgcli_auth_RevokeNodeLicenseAck_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_one2data_rbtmqmsgcli_auth_RevokeNodeLicenseAck_descriptor,
        new String[] { "BaseAck", "NodeType", "UuidKey", });
    internal_static_one2data_rbtmqmsgcli_auth_RevokeFunctionLicense_descriptor =
      getDescriptor().getMessageTypes().get(12);
    internal_static_one2data_rbtmqmsgcli_auth_RevokeFunctionLicense_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_one2data_rbtmqmsgcli_auth_RevokeFunctionLicense_descriptor,
        new String[] { "FunctionType", "BusinessResourceUuid", });
    internal_static_one2data_rbtmqmsgcli_auth_RevokeFunctionLicenseAck_descriptor =
      getDescriptor().getMessageTypes().get(13);
    internal_static_one2data_rbtmqmsgcli_auth_RevokeFunctionLicenseAck_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_one2data_rbtmqmsgcli_auth_RevokeFunctionLicenseAck_descriptor,
        new String[] { "BaseAck", "FunctionType", "BusinessResourceUuid", });
    internal_static_one2data_rbtmqmsgcli_auth_CorrectNodeLicense_descriptor =
      getDescriptor().getMessageTypes().get(14);
    internal_static_one2data_rbtmqmsgcli_auth_CorrectNodeLicense_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_one2data_rbtmqmsgcli_auth_CorrectNodeLicense_descriptor,
        new String[] { "ClientUuidKey", "EcsUuidKey", "StorageUuidKey", });
    internal_static_one2data_rbtmqmsgcli_auth_CorrectNodeLicenseAck_descriptor =
      getDescriptor().getMessageTypes().get(15);
    internal_static_one2data_rbtmqmsgcli_auth_CorrectNodeLicenseAck_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_one2data_rbtmqmsgcli_auth_CorrectNodeLicenseAck_descriptor,
        new String[] { "BaseAck", });
    internal_static_one2data_rbtmqmsgcli_auth_VerifyLicense_descriptor =
      getDescriptor().getMessageTypes().get(16);
    internal_static_one2data_rbtmqmsgcli_auth_VerifyLicense_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_one2data_rbtmqmsgcli_auth_VerifyLicense_descriptor,
        new String[] { "NodeType", "UuidKey", "LicenseContent", });
    internal_static_one2data_rbtmqmsgcli_auth_VerifyLicenseAck_descriptor =
      getDescriptor().getMessageTypes().get(17);
    internal_static_one2data_rbtmqmsgcli_auth_VerifyLicenseAck_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_one2data_rbtmqmsgcli_auth_VerifyLicenseAck_descriptor,
        new String[] { "BaseAck", "AccessToken", });
    internal_static_one2data_rbtmqmsgcli_auth_ReportLicenseExpire_descriptor =
      getDescriptor().getMessageTypes().get(18);
    internal_static_one2data_rbtmqmsgcli_auth_ReportLicenseExpire_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_one2data_rbtmqmsgcli_auth_ReportLicenseExpire_descriptor,
        new String[] { "IsExpire", "ErrorCode", });
    internal_static_one2data_rbtmqmsgcli_auth_AcquireLicense_descriptor =
      getDescriptor().getMessageTypes().get(19);
    internal_static_one2data_rbtmqmsgcli_auth_AcquireLicense_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_one2data_rbtmqmsgcli_auth_AcquireLicense_descriptor,
        new String[] { "ClientHardinfo", "LicJson", "LicHardinfo", "LicOutpath", "ByteLicJson", "ByteLicHardinfo", });
    internal_static_one2data_rbtmqmsgcli_auth_AcquireLicenseack_descriptor =
      getDescriptor().getMessageTypes().get(20);
    internal_static_one2data_rbtmqmsgcli_auth_AcquireLicenseack_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_one2data_rbtmqmsgcli_auth_AcquireLicenseack_descriptor,
        new String[] { "BaseAck", "ByteLic", });
    cn.keptdata.one2data.header.message.protobuf.common.Common.getDescriptor();
    cn.keptdata.one2data.header.message.protobuf.common.Node.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
